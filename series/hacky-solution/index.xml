<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hacky Solution on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/series/hacky-solution/</link>
    <description>Recent content in Hacky Solution on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 18 Aug 2021 04:02:44 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/series/hacky-solution/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get rid of the Gtk-WARNING on gedit</title>
      <link>https://fahmifj.github.io/articles/hide-gtk-warning-gedit/</link>
      <pubDate>Wed, 18 Aug 2021 04:02:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/hide-gtk-warning-gedit/</guid>
      <description>Actually, I hide it</description>
      <content:encoded><![CDATA[<p>Recently, I noticed that whenever I try to edit something using gedit, the following warning always appears.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">(gedit:10160): Gtk-WARNING **: 17:22:36.887: Calling org.xfce.Session.Manager.Inhibit failed: GDBus.Error:org.freedesktop.DBus.Error.UnknownMethod: No such method ‚ÄúInhibit‚Äù
</span></span></code></pre></div><p>The warning message only appears on my Ubuntu and Kali Linux. I&rsquo;ve tried several solutions I could find, but the warning persists.</p>
<p>So, I came up with a solution that uses error redirection to suppress the warning message.</p>
<ol>
<li><strong>Prepare a wrapper</strong></li>
</ol>
<p>First, let&rsquo;s create a <code>gedit</code> &ldquo;wrapper&rdquo; in a resolvable path such as <code>/usr/bin</code> or <code>/usr/local/bin</code>. Its job is to surpress any warning or error messages that gedit might produce.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat /usr/bin/gedit-null 
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/usr/bin/gedit <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span> 2&gt;/dev/null
</span></span></code></pre></div><p>Command explanations:</p>
<ul>
<li><code>$@</code> will take all the arguments passed to the wrapper and the wrapper will pass them to the <code>gedit</code> executable/binary.</li>
<li><code>2&gt;/dev/null</code> redirect error (stderr) to <code>/dev/null</code>.</li>
</ul>
<ol start="2">
<li><strong>Make an alias</strong></li>
</ol>
<p>Now we add alias for <code>gedit</code> that points to the wrapper in <code>.bashrc</code> or <code>.zshrc</code> or whatever shell you use.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;alias gedit=&#34;gedit-null&#34;&#39;</span>  &gt;&gt; ~/.zshrc
</span></span><span class="line"><span class="cl">$ <span class="nb">source</span> ~/.zshrc
</span></span></code></pre></div><p>Well that&rsquo;s it.</p>
<p><strong>[Update]</strong></p>
<p>One of readers messed up his/her shell prompt because I put the wrong symbol on this command üòÖ. Sorry about that.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;alias gedit=&#34;gedit-null&#34;&#39;</span> &gt; ~/.zshrc
</span></span><span class="line"><span class="cl"><span class="c1">#instead of </span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;alias gedit=&#34;gedit-null&#34;&#39;</span>  &gt;&gt; ~/.zshrc
</span></span></code></pre></div><p>In case some of you have the same problem, I made a <a href="https://gist.githubusercontent.com/fahmifj/a01d5f2b804478223279392eb2cc78ad/raw/f45c976d4f2772f5f3fc114b316ecdbe18d80d00/.zshrc"target="_blank" rel="noopener noreferrer"
>gist</a> that contains the default content of the <code>.zshrc</code> file so you can restore your shell prompt back to its default.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Install jarsigner without Java SDK in Kali Linux</title>
      <link>https://fahmifj.github.io/articles/install-jar-signer-without-java-sdk/</link>
      <pubDate>Mon, 14 Jun 2021 14:41:04 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/install-jar-signer-without-java-sdk/</guid>
      <description>You can use Google dork for good things!</description>
      <content:encoded><![CDATA[<p>The PoC exploit of <a href="https://fahmifj.github.io/writeups/hackthebox/htb-scriptkiddie/"target="_blank" rel="noopener noreferrer"
>ScriptKiddie</a> from HackTheBox actually requires a binary known as <code>jarsigner</code> . The binary itself is bundled with the Java SDK. Since I use Kali Linux, which has a few of Java applications, I should have that binary installed.  However, I was unable to locate this <code>jarsigner</code>.</p>
<h2 id="the-problem">The Problem</h2>
<p>As it could potentially mess up the whole system, I didn&rsquo;t want to reinstall the Java SDK on my Kali just to obtain this single binary file. So I started looking for the binary online. Sadly, most of the search results showed up were just a bunch of documentation about how to use <code>jarsigner</code>. Great!</p>
<h2 id="finding-solutions">Finding Solutions</h2>
<h3 id="in-search-of-the-missing-binary---google-dork">In search of the missing binary - Google dork</h3>
<p>Luckily, we can utilize Google dork for this! Here&rsquo;s my dork:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">intitle:&#34;index of /&#34; bin jarsigner
</span></span></code></pre></div><p>After wandering google&rsquo;s page by page, I found this <a href="http://www.citrucoop.es/jdk-11.0.6/bin/"target="_blank" rel="noopener noreferrer"
>site</a> hosting the whole JDK folder.</p>
<p><div class="img-container"><img src="imgs/image-20210614151715867.png" alt="image-20210614151715867"  /></div>
</p>
<p>Now I can just pull that jarsigner from the web. Unfortunately, it can not be used yet by just simply putting the binary into the Java PATH.</p>
<h3 id="installing-jarsigner">Installing jarsigner</h3>
<p>This <a href="https://discuss.getsol.us/d/4656-java-command-unknown-after-update"target="_blank" rel="noopener noreferrer"
>Java binary</a> needs to be &lsquo;symlinked&rsquo;. Okay, so we&rsquo;ll have to locate where is the whole Java binaries located.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ls -l <span class="k">$(</span>which java<span class="k">)</span>
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">22</span> Nov <span class="m">25</span>  <span class="m">2019</span> /usr/bin/java -&gt; /etc/alternatives/java
</span></span><span class="line"><span class="cl">$ ls -l /etc/alternatives/java
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">43</span> Nov <span class="m">25</span>  <span class="m">2019</span> /etc/alternatives/java -&gt; /usr/lib/jvm/java-11-openjdk-amd64/bin/java
</span></span></code></pre></div><p>From here, we can grab the <code>jarsigner</code> binary from the previous site and drop it directly under <code>/usr/lib/jvm/java-11-openjdk-amd64/bin/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ curl -s http://www.citrucoop.es/jdk-11.0.6/bin/jarsigner &gt; /usr/lib/jvm/java-11-openjdk-amd64/bin/jarsigner
</span></span></code></pre></div><p>Lastly, I&rsquo;ll make a symlink of <code>jarsigner</code> at <code>/usr/bin/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ln -sf /usr/lib/jvm/java-11-openjdk-amd64/bin/jarsigner /usr/bin/jarsigner
</span></span></code></pre></div><p>The exploit for ScriptKiddie should be working now!</p>
<p><em>Hold up.. isn&rsquo;t it unsafe?</em> ü§î</p>
<p>Absolutely! üòÖ so don&rsquo;t ever do this if you don&rsquo;t trust the site or don&rsquo;t know what you are doing!</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Font Smoothing in Firefox</title>
      <link>https://fahmifj.github.io/articles/firefox-font-smoothing/</link>
      <pubDate>Sun, 06 Jun 2021 22:08:49 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/firefox-font-smoothing/</guid>
      <description>Smoothen font rendering in Firefox</description>
      <content:encoded><![CDATA[<p>Recently, I noticed Firefox renders the font as if it&rsquo;s in high contrast mode or without anti-alias, especially for Japanese font face like <a href="https://fonts.google.com/specimen/Noto&#43;Sans"target="_blank" rel="noopener noreferrer"
>Noto Sans</a>. After googling around, I found a workaround to make it a bit smoother.</p>
<p>Open firefox and type <code>about:config</code> in the address bar (just accept the warning).</p>
<p><div class="img-container"><img src="imgs/image-20210606221033823.png" alt="image-20210606221033823"  /></div>
</p>
<p>In the search bar, type the following and hit enter.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">gfx.font_rendering.cleartype_params.enhanced_contrast
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20220910145307949.png" alt="image-20220910145307949"  /></div>
</p>
<p>Change the value from <code>-1</code>  to <code>0</code> and we&rsquo;re done here.</p>
<p><div class="img-container"><img src="imgs/image-20220910145357101.png" alt="image-20220910145357101"  /></div>
</p>
<p>See the difference below</p>
<p><div class="img-container"><img src="imgs/image-20210607074639032.png" alt="image-20210607074639032"  /></div>
</p>
<p>It&rsquo;s not as smooth as in Chrome, but it much better.</p>
<p>`</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
