<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hugo on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/hugo/</link>
    <description>Recent content in Hugo on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 13 Jun 2021 11:12:48 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo Setup and Deployment</title>
      <link>https://fahmifj.github.io/blog/hugo-setup-and-deployment/</link>
      <pubDate>Sun, 13 Jun 2021 11:12:48 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/hugo-setup-and-deployment/</guid>
      <description>A quick tutorial about setting up a site using Hugo</description>
      <content:encoded><![CDATA[<p>Looking back at my first post, I&rsquo;ve been talking that I was using Hugo to build this blog. This time I&rsquo;ll share how to create your own blog using Hugo and this is based on my experience.</p>
<h2 id="00---goals">00 - Goals</h2>
<p>Below are the main goals on this post:</p>
<ul>
<li>Installing Hugo</li>
<li>Using Hugo theme</li>
<li>Deploying Hugo site with Github.</li>
</ul>
<h2 id="01---prerequisites">01 - Prerequisites</h2>
<p>There are some prerequisites to accomplish the previous goals:</p>
<ul>
<li>A GitHub account</li>
<li>Git Bash for Windows users</li>
<li>Basics Git knowledge</li>
<li>Basics of CLI</li>
</ul>
<h2 id="02---download-hugo">02 - Download Hugo</h2>
<p>Download Hugo executable binary at:</p>
<ul>
<li><a href="https://github.com/gohugoio/hugo/releases">https://github.com/gohugoio/hugo/releases</a></li>
</ul>
<p>Pick your Hugo version according to what OS you&rsquo;re on.</p>
<p>For example, If you&rsquo;re on a 64-bit Windows OS, you should choose <code>hugo_0.83.1_Windows-64bit.zip</code>.</p>
<p>There is also the extended version, which you should use if you&rsquo;re build your own theme/picking the theme that uses Sass/SCSS (fyi, I&rsquo;m using the extended version).</p>
<h2 id="03---installing-hugo">03 - Installing Hugo</h2>
<p>I&rsquo;ll assume that you&rsquo;ve downloaded the binary (with <code>.exe</code> for Windows or without <code>.exe</code> if it&rsquo;s Linux) .</p>
<p><div class="img-container"><img src="imgs/image-20210613075148632.png" alt="image-20210613075148632"  /></div>
</p>
<p>Let&rsquo;s test it on terminal by typing <code>hugo.exe version</code> or just  <code>hugo version</code>. You should see something like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">hugo v0.82.0-9D960784+extended windows/amd64 BuildDate=2021-03-21T17:28:04Z VendorInfo=gohugoio
</code></pre></div><p>At this time, the Hugo&rsquo;s binary is not available in a system-wide (it&rsquo;s not callable outside current directory).  So, in order to make it callable/accessible from anywhere, we must add the binary location to what is known as PATH variable.</p>
<p>Here&rsquo;s how to:</p>
<h3 id="0301-windows">03.01 Windows</h3>
<p>For Windows users, create a folder at <code>C:/</code> and name it <code>bin</code></p>
<pre><code>C:\&gt;mkdir bin
</code></pre><p>Once the folder is created, move your Hugo binary into it.</p>
<pre><code>C:\&gt;dir bin
 Volume in drive C is Windows
 Volume Serial Number is AC06-7D93

 Directory of C:\bin

13/06/2021  08:07    &lt;DIR&gt;          .
13/06/2021  08:07    &lt;DIR&gt;          ..
22/03/2021  01:04        48.599.040 hugo.exe
               1 File(s)     48.599.040 bytes
               2 Dir(s)  57.909.837.824 bytes free
</code></pre><p>After that, type <code>env</code> in Windows Search and select <code>Edit the system environment variables</code></p>
<p><div class="img-container"><img src="imgs/image-20210613080940838.png" alt="image-20210613080940838"  /></div>
</p>
<p>You should see a window with &ldquo;System Properties&rdquo; in the title, then click on <strong>Environment Variables</strong> button.</p>
<p><div class="img-container"><img src="imgs/image-20210613081250953.png" alt="image-20210613081250953"  /></div>
</p>
<p>We&rsquo;re going to edit <code>Path</code> variable, select that <code>Path</code> variable and click on <strong>Edit</strong> button.</p>
<p><div class="img-container"><img src="imgs/image-20210613081626397.png" alt="image-20210613081626397"  /></div>
</p>
<p>On the new window, click on <strong>New</strong> button and add <code>C:\bin</code> into that field.</p>
<p><div class="img-container"><img src="imgs/image-20210613082450289.png" alt="image-20210613082450289"  /></div>
</p>
<p>Then hit all the <strong>OK</strong> button.</p>
<p>Open your Windows terminal and type the same command <code>hugo version</code>. If it returns the same output something like this, we can continue.</p>
<p><div class="img-container"><img src="imgs/image-20210613084019124.png" alt="image-20210613084019124"  /></div>
</p>
<h3 id="0302-linux">03.02 Linux</h3>
<blockquote>
<p>I know those who uses Linux probably already know how to üòÅ.</p>
</blockquote>
<p>For Linux users, I would create it under <code>/home/username/.local/[here]</code>. Open up your terminal and type:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$ mkdir -p ~/.local/bin
</code></pre></div><p>Open your <code>.bashrc</code> or <code>.zshrc</code> file (it&rsquo;s located at <code>/home/username/.[zsh|bash]rc</code>) with your favorite text editor, such as vim and simply add this line at the top of your <code>.bashrc/.zshrc</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PATH_HUGO=&#39;/home/username/.local/bin&#39;
export PATH=$PATH_HUGO:$PATH
</code></pre></div><p>Reopen your terminal and try run <code>hugo version</code> from any directory and see if it&rsquo;s returns the version.</p>
<p><div class="img-container"><img src="imgs/image-20210613084155383.png" alt="image-20210613084155383"  /></div>
</p>
<h2 id="04---creating-your-first-site">04 - Creating Your First Site</h2>
<p>To create a site you can type this command on your terminal</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$ hugo new site [site-name]
</code></pre></div><blockquote>
<p>I recommend you to create a site in a specific folder such as <code>workspace</code>.</p>
</blockquote>
<p>For example:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$ hugo new site my-blog
Congratulations! Your new Hugo site is created in C:\Users\fahmi\Desktop\test\my-blog.

Just a few more steps and you&#39;re ready to go:

1. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/ or
   create your own with the &#34;hugo new theme &lt;THEMENAME&gt;&#34; command.
2. Perhaps you want to add some content. You can add single files
   with &#34;hugo new &lt;SECTIONNAME&gt;\&lt;FILENAME&gt;.&lt;FORMAT&gt;&#34;.
3. Start the built-in live server via &#34;hugo server&#34;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
</code></pre></div><p>We can see in Hugo create a new folder called  <code>my-blog</code> at <code>C:\Users\fahmi\Desktop\test\my-blog</code>.</p>
<p><code>my-blog</code> has the following directory structure:</p>
<pre><code>my-blog
‚îú‚îÄ‚îÄ archetypes
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ default.md
‚îú‚îÄ‚îÄ config.toml
‚îú‚îÄ‚îÄ content
‚îú‚îÄ‚îÄ data
‚îú‚îÄ‚îÄ layouts
‚îú‚îÄ‚îÄ static
‚îî‚îÄ‚îÄ themes
</code></pre><h2 id="05---run-your-site">05 - Run Your Site</h2>
<p>We can host the site in localhost simply by typing <code>hugo server</code> in the site directory</p>
<pre><code>$ cd my-blog
(my-blog) $ hugo server
Start building sites ‚Ä¶
...&lt;SNIP&gt;...
Built in 36 ms
Watching for changes in C:\Users\fahmi\Desktop\test\my-blog{archetypes,content,data,layouts,static}
Watching for config changes in C:\Users\fahmi\Desktop\test\my-blog\config.yml
Environment: &quot;development&quot;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
</code></pre><p>If you visit it on the browser, it&rsquo;s empty because we don&rsquo;t have any content in the site right now.</p>
<h2 id="06---installing-hugo-theme">06 - Installing Hugo Theme</h2>
<p>My blog use a theme called <a href="https://themes.gohugo.io/hugo-papermod/">PaperMod</a>, so l&rsquo;ll be using that too here.</p>
<p>But, first, let&rsquo;s delete the previous <code>my-blog</code>  and recreate it with</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$ hugo new site my-blog -f yml
</code></pre></div><p>Enter the directory and initialize a git repository inside it</p>
<pre><code>$ cd my-blog(my-blog) $ git init
</code></pre><p>Now go to the <code>themes</code> folder and clone PaperMod theme there.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ cd themes
(my-blog/themes) $ git clone https://github.com/adityatelange/hugo-PaperMod PaperMod --depth=1
</code></pre></div><p>Add the theme as submodule.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$ git submodule add https://github.com/adityatelange/hugo-PaperMod.git PaperMod
</code></pre></div><p>At the site root directory, replace/overwrite your <code>config.yml</code> with <a href="https://raw.githubusercontent.com/adityatelange/hugo-PaperMod/exampleSite/config.yml">this</a> but change the value of <code>baseUrl</code> and theme to this</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">baseURL</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">theme</span>: <span style="color:#ae81ff">PaperMod</span>
</code></pre></div><p>Test it by typing <code>hugo server</code> on your site root directory:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ hugo server
</code></pre></div><p>Then go check your site at <code>http://localhost:1313</code>.</p>
<h2 id="07---creating-your-first-post">07 - Creating Your First Post</h2>
<p>Create your first post with this command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ hugo new post/new-post.md
</code></pre></div><p>You can edit <code>new-post.md</code> after that, the file should be under <code>my-blog/content/post/</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ ls -l content/post/
total 1
-rw-r--r-- 1 Fahmi FJ 197121 70 Jun 13 09:34 my-post.md
</code></pre></div><p>To see your post in the site, change the value <code>draft</code> from <code>true</code> to <code>false</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">---
title: &#34;My Post&#34;
date: 2021-06-13T09:34:43+07:00
draft: false
---

My first post
</code></pre></div><p>It should gets rendered now in your site.</p>
<p><div class="img-container"><img src="imgs/image-20210613094120463.png" alt="image-20210613094120463"  /></div>
</p>
<h2 id="08---deploying-site-on-github">08 - Deploying Site on GitHub</h2>
<p>First, you need to now that when you run <code>hugo server</code>, the site resources are served from memory. But, if you just type <code>hugo</code>, Hugo generates all your web files inside <code>my-blog/public</code> folder. With that, you can simply upload all the files in the public folder into a GitHub repository.</p>
<p>Let&rsquo;s do that in action.</p>
<p>Before that, change your site base URL in <code>config.yml</code> to:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">baseURL: &#34;https://yourusername.github.io/my-blog/&#34;
</code></pre></div><p>Run <code>hugo</code> at the site root directory to let Hugo re-generate the web source files at the <code>public</code></p>
<pre><code>(my-blog) $ hugo
Start building sites ‚Ä¶

                   | EN | FR | FA
-------------------+----+----+-----
  Pages            | 14 | 10 | 10
  Paginator pages  |  0 |  0 |  0
  Non-page files   |  0 |  0 |  0
  Static files     |  0 |  0 |  0
  Processed images |  0 |  0 |  0
  Aliases          |  3 |  0 |  1
  Sitemaps         |  2 |  1 |  1
  Cleaned          |  0 |  0 |  0

Total in 147 ms
</code></pre><p>By assuming you know GitHub and have a GitHub account, create a new repository called <code>my-blog</code>.</p>
<p>Once the repo is created, click on <strong>Upload an existing file</strong>.</p>
<p><div class="img-container"><img src="imgs/image-20210613095820873.png" alt="image-20210613095820873"  /></div>
</p>
<p>Then simply drag all the public files.</p>
<p><div class="img-container"><img src="imgs/image-20210613095945135.png" alt="image-20210613095945135"  /></div>
</p>
<p>Once all the files is uploaded, commit the changes.</p>
<p><div class="img-container"><img src="imgs/image-20210613101009392.png" alt="image-20210613101009392"  /></div>
</p>
<p>Go to repo&rsquo;s the GitHub pages settings at <code>https://github.com/your-username/my-blog/settings/pages</code> to host your site.</p>
<p><div class="img-container"><img src="imgs/image-20210613101748114.png" alt="image-20210613101748114"  /></div>
</p>
<p>There you go!</p>
<p><div class="img-container"><img src="imgs/image-20210613101715896.png" alt="image-20210613101715896"  /></div>
</p>
<p>If you don&rsquo;t see your site there or it returns 404, just wait for a few minutes more.</p>
<p>From here, you basically know how to deploy/host your site on GitHub.  But, this is not an effective way to update your site, so let&rsquo;s script it.</p>
<h2 id="09---deployment-script">09 - Deployment Script</h2>
<p>First, go to public directory, do a clean up then initialize a git repository there.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ cd public
(my-blog/public) $ rm -rf *
(my-blog/public) $ git init
</code></pre></div><p>Add the previously created <code>my-blog</code> repository as the remote repository, and run <code>git pull</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog/public) $ git remote add origin https://github.com/your-username/my-blog.git
(my-blog/public) $ git pull origin main
</code></pre></div><p>Return to the site root directory then add the <code>public</code> folder as git submodule.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog/public) $ cd ../
(my-blog) $ git submodule add https://github.com/your-username/my-blog.git public
</code></pre></div><p>Now let&rsquo;s create a deploy script at the site root directory and name it as <code>deploy.sh</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
echo -e <span style="color:#e6db74">&#34;\033[0;32mDeploying blog to GitHub...\033[0m&#34;</span>

<span style="color:#75715e"># Clean public folder</span>
hugo --cleanDestinationDir

<span style="color:#75715e"># Go to to public folder</span>
cd public/

<span style="color:#75715e"># Add untracked files, hide output</span>
git add -A &gt; /dev/null

<span style="color:#75715e"># Generate a fixed commit message with date and time</span>
msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;[`date &#34;</span>+%R %d-%h-%Y<span style="color:#e6db74">&#34;]` Site update&#34;</span>
	
<span style="color:#75715e"># Check for additional commit message</span>
read -p <span style="color:#e6db74">&#34;Add commit message: &#34;</span> add_msg
<span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> <span style="color:#e6db74">&#34;</span>$add_msg<span style="color:#e6db74">&#34;</span> !<span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span> <span style="color:#f92672">]</span>
	<span style="color:#66d9ef">then</span> 
	msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$msg<span style="color:#e6db74"> - </span>$add_msg<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

git commit -m <span style="color:#e6db74">&#34;</span>$msg<span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># Deploy</span>
git push -u origin main

<span style="color:#75715e"># Go back to the root directory</span>
cd ../
</code></pre></div><p>Let&rsquo;s test it by creating a new post.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">(my-blog) $ hugo new post/second-post.md
(my-blog) $ echo &#39;This is second post&#39; &gt;&gt; content/post/second-post.md
</code></pre></div><p>Don&rsquo;t forget to change the <code>draft</code> value to <code>false</code>.</p>
<p>Now run the script, the output should looks something like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">(</span>my-blog<span style="color:#f92672">)</span> $ ./deploy.sh
Deploying blog to GitHub...
Start building sites ‚Ä¶

                   | EN | FR | FA
-------------------+----+----+-----
  Pages            | <span style="color:#ae81ff">15</span> | <span style="color:#ae81ff">10</span> | <span style="color:#ae81ff">10</span>
  Paginator pages  |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span>
  Non-page files   |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span>
  Static files     |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span>
  Processed images |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span>
  Aliases          |  <span style="color:#ae81ff">3</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">1</span>
  Sitemaps         |  <span style="color:#ae81ff">2</span> |  <span style="color:#ae81ff">1</span> |  <span style="color:#ae81ff">1</span>
  Cleaned          |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span> |  <span style="color:#ae81ff">0</span>

Total in <span style="color:#ae81ff">155</span> ms
Add commit message:
<span style="color:#f92672">[</span>main af4c483<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>11:00 13-Jun-2021<span style="color:#f92672">]</span> Site update
 <span style="color:#ae81ff">9</span> files changed, <span style="color:#ae81ff">459</span> insertions<span style="color:#f92672">(</span>+<span style="color:#f92672">)</span>, <span style="color:#ae81ff">8</span> deletions<span style="color:#f92672">(</span>-<span style="color:#f92672">)</span>
 create mode <span style="color:#ae81ff">100644</span> post/second-post/index.html
Enumerating objects: 27, <span style="color:#66d9ef">done</span>.
Counting objects: 100% <span style="color:#f92672">(</span>27/27<span style="color:#f92672">)</span>, <span style="color:#66d9ef">done</span>.
Delta compression using up to <span style="color:#ae81ff">8</span> threads
Compressing objects: 100% <span style="color:#f92672">(</span>13/13<span style="color:#f92672">)</span>, <span style="color:#66d9ef">done</span>.
Writing objects: 100% <span style="color:#f92672">(</span>15/15<span style="color:#f92672">)</span>, 3.54 KiB | 1.77 MiB/s, <span style="color:#66d9ef">done</span>.
Total <span style="color:#ae81ff">15</span> <span style="color:#f92672">(</span>delta 9<span style="color:#f92672">)</span>, reused <span style="color:#ae81ff">0</span> <span style="color:#f92672">(</span>delta 0<span style="color:#f92672">)</span>, pack-reused <span style="color:#ae81ff">0</span>
remote: Resolving deltas: 100% <span style="color:#f92672">(</span>9/9<span style="color:#f92672">)</span>, completed with <span style="color:#ae81ff">7</span> local objects.
To https://github.com/fahmifj/my-blog.git
   f7141a3..af4c483  main -&gt; main
Branch <span style="color:#e6db74">&#39;main&#39;</span> set up to track remote branch <span style="color:#e6db74">&#39;main&#39;</span> from <span style="color:#e6db74">&#39;origin&#39;</span>.
</code></pre></div><p>It gets updated.</p>
<p><div class="img-container"><img src="imgs/image-20210613110105343.png" alt="image-20210613110105343"  /></div>
</p>
<p>And that&rsquo;s how I setup my blog at the first time.</p>
<p>This is still not an effective way because it&rsquo;s a waste of bandwidth, so in the next post, l&rsquo;ll introduce you to GitHub action üòº (Continuous Deployment).</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
