<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Orbstack on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/orbstack/</link>
    <description>Recent content in Orbstack on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 29 Jan 2025 20:36:34 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/orbstack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running GNS3 server on Apple M2 with Orbstack</title>
      <link>https://fahmifj.github.io/articles/running-gns3-on-apple-m2-orbstack/</link>
      <pubDate>Wed, 29 Jan 2025 20:36:34 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/running-gns3-on-apple-m2-orbstack/</guid>
      <description>Lately, I&amp;rsquo;ve been switching from my Windows laptop to MacBook M2 for daily driver. It was smooth until I needed to migrate my virtual networking lab that relies on GNS3. It&amp;rsquo;s for my preparation before taking another Mikrotik&amp;rsquo;s certification. I was initially hesitant about whether I could run GNS3 on my M2 machine. After some research, I discovered that the GNS3 client is indeed available for macOS. To host the GNS3 server, I learned that I could set it up from scratch on a Linux machine using Orbstack.</description>
      <content:encoded><![CDATA[<p>Lately, I&rsquo;ve been switching from my Windows laptop to MacBook M2 for daily driver. It was smooth until I needed to migrate my virtual networking lab that relies on GNS3. It&rsquo;s for my preparation before taking another Mikrotik&rsquo;s certification. I was initially hesitant about whether I could run GNS3 on my M2 machine. After some <a href="https://www.gns3.com/community/featured/gns3-on-apple-silicon"target="_blank" rel="noopener noreferrer"
>research</a>, I discovered that the GNS3 client is indeed available for macOS. To host the GNS3 server, I learned that I could set it up from scratch on a Linux machine using Orbstack.</p>
<h4 id="goals">Goals</h4>
<ul>
<li>Get GNS3 server running on M2 Apple Silicon CPU.</li>
<li>Get GNS3 appliance installed on the GNS3 server.</li>
</ul>
<h4 id="prerequisites">Prerequisites</h4>
<ul>
<li><a href="https://orbstack.dev/"target="_blank" rel="noopener noreferrer"
>Orbstack</a> installed.</li>
<li><a href="https://github.com/gns3/gns3-gui/releases"target="_blank" rel="noopener noreferrer"
>GNS3 GUI/client</a> installed.</li>
</ul>
<h4 id="diagram">Diagram</h4>
<p>I drew a diagram to give you an overview of what we are going to do here.</p>
<img src="./imgs/image-20250129212031966.png" alt="image-20250129212031966" style="zoom: 50%;" />
<h2 id="on-mac">On Mac</h2>
<h3 id="deploy-a-linux-machine">Deploy A Linux Machine</h3>
<p>With Orbstack, create a new Linux machine with the latest Ubuntu distro.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb create --arch amd64 ubuntu gns3-host
</span></span></code></pre></div><p>Then verify the machine is running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb list
</span></span><span class="line"><span class="cl">NAME       STATE    DISTRO  VERSION   ARCH
</span></span><span class="line"><span class="cl">----       -----    ------  -------   ----
</span></span><span class="line"><span class="cl">gns3-host  running  ubuntu  oracular  amd64
</span></span></code></pre></div><p>The Linux machine we just installed will act as the GNS3 server host.</p>
<h3 id="resources-allocation">Resources Allocation</h3>
<p>We can allocate CPU and memory resources to limit how much Orbstack machine can use with:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">#Show current configuration</span>
</span></span><span class="line"><span class="cl">$ orb config show
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Set maximum CPU cores for Orbstack to 4 cores</span>
</span></span><span class="line"><span class="cl">$ orb config <span class="nb">set</span> cpu <span class="m">4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Set maximum memory for Orbstack to 8 GB</span>
</span></span><span class="line"><span class="cl">$ orb config <span class="nb">set</span> memory_mib <span class="m">8000</span>
</span></span></code></pre></div><h2 id="on-the-linux-machine">On the Linux machine</h2>
<h3 id="hosting-gns3-server">Hosting GNS3 Server</h3>
<p>From Mac, login into the machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb -m gns3-host -u root
</span></span></code></pre></div><p>Add the GNS3 repository and install some necessary tools.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@gns3 $ sudo add-apt-repository ppa:gns3/ppa
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt update
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install software-properties-common
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install qemu-system-x86
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install telnet
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install gns3-server
</span></span></code></pre></div><p>In the middle way, select &ldquo;yes&rdquo; when you prompted with something like this.</p>
<img src="./imgs/image-20250129214423431.png" alt="image-20250129214423431" style="zoom:50%;" />
<p>If you missed the prompt, run the following.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">#Add ubridge group to the gns3 user</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo usermod -aG ubridge gns3
</span></span></code></pre></div><p>Verify the GNS3 server installation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@gns3 $ systemctl status gns3-server
</span></span></code></pre></div><p>Or by visiting &ldquo;http://localhost:3080&rdquo;.</p>
<h3 id="change-working-directory">Change Working Directory</h3>
<p>This is optional. I would like to move the default working directory of GNS3 at <code>/var/lib/gns3-server/GNS3/</code> to <code>/opt/gns3/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">#Create new dir config</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo mkdir /opt/gns3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Copy old dir config to new dir config</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo cp -r /var/lib/gns3-server/GNS3/* /opt/gns3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Change ownership </span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo chown -R gns3:gns3 /opt/gns3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Change default home directory</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo usermod -d /opt/gns3 gns3
</span></span></code></pre></div><h3 id="configure-gns3-server">Configure GNS3 Server</h3>
<p>Since KVM is not supported inside the orbstack machine, we need to make some adjustments for GNS3 server config. Edit the config at <code>/opt/gns3/.config/GNS3/2.2/gns3_server.conf</code> as follows:</p>
<pre tabindex="0"><code>[Server]
host = 0.0.0.0
port = 3080
images_path = /opt/gns3/images
appliances_path = /opt/gns3/appliances
configs_path = /opt/gns3/configs
projects_path = /opt/gns3/projects
symbols_path = /opt/gns3/symbols

report_errors = True

; First console port of the range allocated to devices
console_start_port_range = 5000
; Last console port of the range allocated to devices
console_end_port_range = 10000

; First VNC console port of the range allocated to devices.
; The value MUST BE &gt;= 5900 and &lt;= 65535
vnc_console_start_port_range = 5900
; Last VNC console port of the range allocated to devices
; The value MUST BE &gt;= 5900 and &lt;= 65535
vnc_console_end_port_range = 10000

; First port of the range allocated for inter-device communication. Two ports are allocated per link.
udp_start_port_range = 10000
; Last port of the range allocated for inter-device communication. Two ports are allocated per link
udp_end_port_range = 20000

; Only allow these interfaces to be used by GNS3, for the Cloud node for example (Linux/OSX only)
; Do not forget to allow virbr0 in order for the NAT node to work
allowed_interfaces = virbr0

; Enable the built-in templates
enable_builtin_templates = True

; check if hardware virtualization is used by other emulators (KVM, VMware or VirtualBox)
hardware_virtualization_check = False

[Dynamips]
allocate_aux_console_ports = False
mmap_support = True
sparse_memory_support = True
ghost_ios_support = True

[IOU]
iourc_path = /opt/gns3/iourc
license_check = True

[Qemu]
enable_kvm = False
require_kvm = False
enable_hardware_acceleration = False
require_hardware_acceleration = False
</code></pre><p>If the config directory don&rsquo;t exist do the following (inside the orbstack VM):</p>
<ol>
<li>Run <code>systemctl stop gns3-server</code>.</li>
<li>Run <code>gns3server</code> manually for a minute and stop it.</li>
<li>Start again with <code>systemctl start gns3-server</code>.</li>
<li>Look up again under <code>/var/lib/gns3-server/GNS3/.config</code> or <code>/opt/gns3/.config</code> if you follow the step 3.</li>
</ol>
<p>We&rsquo;re done with the server here.</p>
<h2 id="setting-up-gns3-client">Setting Up GNS3 Client</h2>
<h3 id="gns3-client">GNS3 Client</h3>
<p>GNS3 Client should detect the server automatically, if not, try open <strong>the GNS3 Client &gt; Settings &gt; Server</strong> and point the GNS3 server to the Linux machine.</p>
<p><div class="img-container"><img src="./imgs/image-20250129223723294.png" alt="image-20250129223723294"  /></div>
</p>
<p>Verify the connection.</p>
<h3 id="appliances-installation">Appliances Installation</h3>
<p>The network appliances now can be installed normally.</p>
<h2 id="the-results">The results</h2>
<h3 id="testing-initial-setup">Testing Initial Setup</h3>
<p>So far, excluding the ATM and Frame relay switches, I&rsquo;ve tested the basic appliances and everything works as it should except for the Cloud appliance.</p>
<img src="./imgs/image-20250129230112734.png" alt="image-20250129230112734" style="zoom:50%;" />
<h3 id="performances">Performances</h3>
<p>I allocated 4 CPUs and 4 GB of memory to Orbstack for the initial lab setup. Despite adding two more routers, everything runs smoothly and fast, with no choppy performance at all.</p>
<img src="./imgs/image-20250130222443482.png" alt="image-20250130222443482" style="zoom:50%;" />
<h2 id="conclusion">Conclusion</h2>
<p>At this point, GNS3 hosted within Orbstack Linux machine ran seamlessly on my M2 Mac. This should be enough for creating or simulating networking projects. However, I still wanted my network appliances could communicate with the LAN on my Mac, which I will dig into it in the next section.</p>
<h2 id="dig-into-network-limitation">Dig into Network Limitation</h2>
<p><strong>Accessing GNS3 Appliances from Mac LAN</strong></p>
<p>According to <a href="https://docs.orbstack.dev/machines/network"target="_blank" rel="noopener noreferrer"
>the documentation</a>, all Orbstack Linux machines are connected to the same network bridge with a fixed IPv4 address of <code>198.19.249.0/24</code>. On Mac, this network bridge displayed as <code>bridge100</code> and the Linux machines connected to that bridge via its <code>eth0</code>.</p>
<p>My goal is, let&rsquo;s say Winbox on Mac, will able to communicate with the GNS3 Mikrotik through the Cloud appliance via <code>eth0</code> of GNS3 server. Here&rsquo;s the diagram.</p>
<img src="./imgs/image-20250201125922492.png" alt="image-20250201125922492" style="zoom: 33%;" />
<p>Unfortunately, the Cloud appliance here did not list the <code>eth0</code> interface.</p>
<img src="./imgs/image-20250130225807891.png" alt="image-20250130225807891" style="zoom: 25%;" />
<p>In the image above,  <code>virbr0</code>  and <code>gns3tap0-0</code> are the interfaces that GNS3 use for the NAT appliances (<a href="https://gns3.com/how-the-nat-node-in-gns3-works"target="_blank" rel="noopener noreferrer"
>source</a>). When I ran the script that populates the interfaces on the GNS3 server manually, the output states that <code>eth0</code> cannot be used on this server.</p>
<img src="./imgs/image-20250131005043784.png" alt="image-20250131005043784" style="zoom:50%;" />
<p>After taking another look at the code, I figured out where the issue was. You guys probably have noticed it. 😂</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="ow">not</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;win&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">allowed_interfaces</span> <span class="o">=</span> <span class="n">Config</span><span class="o">.</span><span class="n">instance</span><span class="p">()</span><span class="o">.</span><span class="n">get_section_config</span><span class="p">(</span><span class="s2">&#34;Server&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;allowed_interfaces&#34;</span><span class="p">,</span> <span class="kc">None</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">allowed_interfaces</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">allowed_interfaces</span> <span class="o">=</span> <span class="n">allowed_interfaces</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">net_if_addrs</span> <span class="o">=</span> <span class="n">psutil</span><span class="o">.</span><span class="n">net_if_addrs</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">interface</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">net_if_addrs</span><span class="o">.</span><span class="n">keys</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">allowed_interfaces</span> <span class="ow">and</span> <span class="n">interface</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">allowed_interfaces</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">interface</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;gns3tap&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">log</span><span class="o">.</span><span class="n">warning</span><span class="p">(</span><span class="s2">&#34;Interface &#39;</span><span class="si">{}</span><span class="s2">&#39; is not allowed to be used on this server&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">interface</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="k">continue</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span></code></pre></div><p>Yeah, it&rsquo;s on the step 3, about the server config! I just need to add the interface I want to be allowed there. Haha.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="c1">; Only allow these interfaces to be used by GNS3, for the Cloud node for example (Linux/OSX only)</span>
</span></span><span class="line"><span class="cl"><span class="c1">; Do not forget to allow virbr0 in order for the NAT node to work</span>
</span></span><span class="line"><span class="cl"><span class="na">allowed_interfaces</span> <span class="o">=</span> <span class="s">virbr0,eth0 </span>
</span></span><span class="line"><span class="cl"><span class="c1">; ^ I added eth0</span>
</span></span></code></pre></div><p>After that, pinging from Mac to GNS3 Mikrotik is reachable, but it&rsquo;s not over yet!</p>
<img src="./imgs/image-20250201140538579.png" alt="image-20250201140538579" style="zoom: 33%;" />
<p>I&rsquo;m still unable to access the services like for example Mikrotik Winbox on port 8291 or WebFig on port 80. It results the same with the GNS3 server.</p>
<img src="./imgs/image-20250202135153641.png" alt="image-20250202135153641" style="zoom: 33%;" />
<p>Inspecting the traffic with Wireshark, I saw that no TCP handshake was performed. I gave up! Orbstack network implementation is beyond my understanding, so I don&rsquo;t know what exactly it does under the hood.</p>
<img src="./imgs/image-20250201163513432.png" alt="image-20250201163513432" style="zoom: 33%;" />
<p>It seems I have to wait for Orbstack to fully support bridged networking. 	In the meantime, I will take a look for other options like UTM, or even move to PNET Lab. Personally, I liked Orbstack more, it almost similar to WSL but on Mac.</p>
<p>That&rsquo;s all, see you in the next post!</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
