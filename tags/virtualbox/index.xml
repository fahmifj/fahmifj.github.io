<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>VirtualBox on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/virtualbox/</link>
    <description>Recent content in VirtualBox on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 31 May 2021 03:56:18 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/virtualbox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup VulnHub Machines</title>
      <link>https://fahmifj.github.io/articles/setup-vulnhub-machines/</link>
      <pubDate>Mon, 31 May 2021 03:56:18 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/setup-vulnhub-machines/</guid>
      <description>Geting started with boot2root using VulnHub machines. It&amp;#39;s free and explorable!</description>
      <content:encoded><![CDATA[<p>Hello!</p>
<p>You may have seen that most of my posts are writeups/solutions for Hack The Box machines, but have you ever heard about Vulnhub?</p>
<p>VulnHub is platform that provides you vulnerable machines, in the form of VM images, that you can download and deploy locally for those who wants to get a hands-on experience in penetration testing. Unlike HackTheBox and TryHackMe, which require a VPN connection, VulnHub allows you to work entirely offline. But, since Windows machine requires a license, most VulnHub machines are Linux-based servers.</p>
<p>There are a lot of things you can do with VulnHub machines after you get the root access, such as:</p>
<ul>
<li>Analyzing the vulnerability, if it involves an insecure code, you can try to patch it.</li>
<li>Learning how the authors configure the machines.</li>
<li>Building a pentest lab that consists of VulnHub machines to practice network pivoting.</li>
<li>DFIR</li>
<li>Implements a detection rule in your SIEM</li>
<li>Many more!</li>
</ul>
<p>In this post, I would like to share a quick tutorial on how to setup a VulnHub machine on your local network. I’ll assume that you are already familiar with virtualization and some basics of networking. If you’re not, just follow along !</p>
<h2 id="install-virtualization-software">Install Virtualization Software</h2>
<p>First thing first, you need a virtualization software such as VirtualBox or VMWare. Here is the links for both software:</p>
<ul>
<li>VirtualBox - <a href="https://www.virtualbox.org/wiki/Downloads"target="_blank" rel="noopener noreferrer"
>https://www.virtualbox.org/wiki/Downloads</a></li>
<li>VMWare - <a href="https://www.vmware.com/products/workstation-player.html"target="_blank" rel="noopener noreferrer"
>https://www.vmware.com/products/workstation-player.html</a></li>
</ul>
<p>I personally use VirtualBox (Windows) because it&rsquo;s easy to use (and of course, it&rsquo;s free).</p>
<h2 id="download-vm-images">Download VM Images</h2>
<p>Now get your VulnHub machines/VM images at VulnHub’s official site: <a href="https://www.vulnhub.com/"target="_blank" rel="noopener noreferrer"
>https://www.vulnhub.com/</a>. In this post, I&rsquo;ll be using <strong>symfonos: 2</strong>.</p>
<p><div class="img-container"><img src="imgs/image-20210531055642315.png" alt="image-20210531055642315"  /></div>
</p>
<h2 id="import-the-vm-image">Import the VM image</h2>
<p>If the image is a <code>7z</code> or  <code>zip</code> format make sure to decompress it first. In my case, <strong>symfonos: 2</strong> is on <code>7z</code> format, therefor I have to decompress it.</p>
<p>Here&rsquo;s what I have after decompressing it.</p>
<p><div class="img-container"><img src="imgs/image-20210531060413952.png" alt="image-20210531060413952"  /></div>
</p>
<p>If you use VirtualBox, any <code>.ovf</code> file should already be associated with the app so we can just double click on that file and it will take us straight to the import menu.</p>
<p><div class="img-container"><img src="imgs/image-20210531060734397.png" alt="image-20210531060734397"  /></div>
</p>
<p>If that&rsquo;s not the case, just open up your VirtualBox then click on <code>File -&gt; select &quot;Import Appliance...&quot;</code>. It will pop a new window.</p>
<p><div class="img-container"><img src="imgs/image-20210531061142323.png" alt="image-20210531061142323"  /></div>
</p>
<p>Next, click on the icon that I marked with a red box to browse your VM image.</p>
<p><div class="img-container"><img src="imgs/image-20210531061327937.png" alt="image-20210531061327937"  /></div>
</p>
<p>Locate your VM image and then click on the <strong>Open</strong> button.</p>
<p><div class="img-container"><img src="imgs/image-20210531061601700.png" alt="image-20210531061601700"  /></div>
</p>
<p>For now let&rsquo;s leave all the settings to its default.</p>
<p><div class="img-container"><img src="imgs/image-20210531061941128.png" alt="image-20210531061941128"  /></div>
</p>
<p>Click on the <strong>Import</strong> button and wait until it completed.</p>
<p><div class="img-container"><img src="imgs/image-20210531062110160.png" alt="image-20210531062110160"  /></div>
</p>
<p>When the import is done, you will see the machine on the VM list section</p>
<p><div class="img-container"><img src="imgs/image-20210531062327615.png" alt="image-20210531062327615"  /></div>
</p>
<h2 id="setting-up-the-network">Setting up the Network</h2>
<p>In this section, we&rsquo;ll be putting the VM in isolated network.</p>
<p>Open the VM&rsquo;s settings by <code>Right Click -&gt; &quot;Settings&quot;</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210531062432466.png" alt="image-20210531062432466"  /></div>
</p>
<p>Go to the <strong>Network</strong> section, and set the &ldquo;Attached to&rdquo; to <code>Host-only Adapter</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210531062849952.png" alt="image-20210531062849952"  /></div>
</p>
<p>Click <strong>OK</strong> button.</p>
<p>Now open the adapter configuration on <code>File  -&gt; select &quot;Host Network Manager...&quot;</code></p>
<p><div class="img-container"><img src="imgs/image-20210531065114863.png" alt="image-20210531065114863"  /></div>
</p>
<p>In the image below, the “VirtualBox Host-Only Ethernet Adapter” will be using a network range of <code>192.168.2.0/24</code> and has DHCP server enabled which is needed by VulnHub machines to obtain IP address automatically on boot.</p>
<p><div class="img-container"><img src="imgs/image-20210531065555859.png" alt="image-20210531065555859"  /></div>
</p>
<p><code>192.168.2.2</code> is the IP address of the virtual adapter on the host side while <code>192.168.2.1</code> is the IP address of the built-in DHCP server from VirtualBox.</p>
<p>Below is the configuration for the DHCP server.</p>
<p><div class="img-container"><img src="imgs/image-20210531065945260.png" alt="image-20210531065945260"  /></div>
</p>
<p>I set my <code>Lower Address Bound</code>  to <code>192.168.2.100</code> and <code>Upper Address Bound</code> to <code>192.168.2.254</code>, so that all machines will be assigned with an IP started from <code>.100-254</code>, and no one gets <code>192.168.2.3-99</code>.</p>
<p><em>Can I configure it to <code>10.10.10.0/24</code>?</em></p>
<p>Yes you can!</p>
<p>If we want to create a <code>10.10.10.0/24</code> network, it&rsquo;s better to create another adapter by clicking the <strong>Create</strong> menu (you don&rsquo;t say) then set the adapter&rsquo;s settings with</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>IPv4 Address</td>
<td><code>10.10.10.2</code> (Adapter on the host side)</td>
</tr>
<tr>
<td>IPv4 Network Mask</td>
<td><code>255.255.255.0</code></td>
</tr>
</tbody>
</table>
</div>
<p><div class="img-container"><img src="imgs/image-20210531072801277.png" alt="image-20210531072801277"  /></div>
</p>
<p>Next, configure the DHCP server to:</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Server Address</td>
<td><code>10.10.10.1</code> (VirtualBox&rsquo;s built-in DHCP server)</td>
</tr>
<tr>
<td>Server Mask</td>
<td><code>255.255.255.0 </code></td>
</tr>
<tr>
<td>Lower Address Bound</td>
<td><code>10.10.10.100</code></td>
</tr>
<tr>
<td>Upper Address Bound</td>
<td><code>10.10.10.254</code></td>
</tr>
</tbody>
</table>
</div>
<p><div class="img-container"><img src="imgs/image-20210531072833605.png" alt="image-20210531072833605"  /></div>
</p>
<p>Then, on the VM settings (<strong>symfonos: 2</strong>), change the adapter name with the new one we created before</p>
<p><div class="img-container"><img src="imgs/image-20210531072939206.png" alt="image-20210531072939206"  /></div>
</p>
<p>Lastly, we should also configure the attacking machine, in my case it’s Kali Linux, to use the same network adapter.</p>
<p><div class="img-container"><img src="imgs/image-20210531075306992.png" alt="image-20210531075306992"  /></div>
</p>
<h2 id="boot-it">Boot it!</h2>
<p>Boot your machines and we&rsquo;re done!</p>
<p><div class="img-container"><img src="imgs/image-20210531075144142.png" alt="image-20210531075144142"  /></div>
</p>
<p>Happy hacking!</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
