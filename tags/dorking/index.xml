<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dorking on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/dorking/</link>
    <description>Recent content in dorking on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 14 Jun 2021 14:41:04 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/dorking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install jarsigner without Java SDK in Kali Linux</title>
      <link>https://fahmifj.github.io/blog/install-jar-signer-without-java-sdk/</link>
      <pubDate>Mon, 14 Jun 2021 14:41:04 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/install-jar-signer-without-java-sdk/</guid>
      <description>The PoC exploit of ScriptKiddie from HackTheBox actually requires a binary known as jarsigner . The binary itself is bundled with the Java SDK, and my Kali Linux definitely has it, so I should have that binary installed. However, I was unable to locate this jarsigner on my machine.
I started to look for it on the internet, simply because I didn&amp;rsquo;t want to reinstall the Java SDK on my machine just to obtain this single binary file, which could potentially mess up the current system/installed apps.</description>
      <content:encoded><![CDATA[<p>The PoC exploit of <a href="https://fahmifj.github.io/writeups/hackthebox/htb-scriptkiddie/">ScriptKiddie</a> from HackTheBox actually requires a binary known as <code>jarsigner</code> . The binary itself is bundled with the Java SDK, and my Kali Linux definitely has it, so I should have that binary installed.  However, I was unable to locate this <code>jarsigner</code> on my machine.</p>
<p>I started to look for it on the internet, simply because I didn&rsquo;t want to reinstall the Java SDK on my machine just to obtain this single binary file, which could potentially mess up the current system/installed apps. But, most of the search results that showed up was a bunch of documentations about how to use the binary ðŸ™ƒ.</p>
<h3 id="in-search-of-the-missing-binary---google-dork">In search of the missing binary - Google dork</h3>
<p>Fortunately, I discovered some sites that provided the single <code>jarsigner</code> binary using Google dorks.</p>
<pre tabindex="0"><code>intitle:&quot;index of /&quot; bin jarsigner
</code></pre><p>I end up with this <a href="http://www.citrucoop.es/jdk-11.0.6/bin/">site</a>:</p>
<p><div class="img-container"><img src="imgs/image-20210614151715867.png" alt="image-20210614151715867"  /></div>
</p>
<p>I have the binary, but it can not be used yet by just simply putting the binary into the Java PATH.</p>
<h3 id="installing-jarsigner">Installing jarsigner</h3>
<p>It turns out that <a href="https://discuss.getsol.us/d/4656-java-command-unknown-after-update">Java binary</a> needs to be &lsquo;symlinked&rsquo;.</p>
<p>So, first, I&rsquo;ll have to find where is my Java binary located.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ls -l <span class="k">$(</span>which java<span class="k">)</span>
lrwxrwxrwx <span class="m">1</span> root root <span class="m">22</span> Nov <span class="m">25</span>  <span class="m">2019</span> /usr/bin/java -&gt; /etc/alternatives/java
$ ls -l /etc/alternatives/java
lrwxrwxrwx <span class="m">1</span> root root <span class="m">43</span> Nov <span class="m">25</span>  <span class="m">2019</span> /etc/alternatives/java -&gt; /usr/lib/jvm/java-11-openjdk-amd64/bin/java
</code></pre></div><p>I&rsquo;ll grab the <code>jarsigner</code> binary from the site and drop it directly under <code>/usr/lib/jvm/java-11-openjdk-amd64/bin/</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ curl -s http://www.citrucoop.es/jdk-11.0.6/bin/jarsigner &gt; /usr/lib/jvm/java-11-openjdk-amd64/bin/jarsigner
</code></pre></div><p>Then, I&rsquo;ll make a symlink of <code>jarsigner</code> at <code>/usr/bin/</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ <span class="nb">cd</span> /usr/bin
$ ln -sf /usr/lib/jvm/java-11-openjdk-amd64/bin/jarsigner jarsigner
</code></pre></div><p>It&rsquo;s working fine now.</p>
<p><em>Hold up.. isn&rsquo;t it unsafe?</em> ðŸ¤”</p>
<p>Absolutely! ðŸ˜… so don&rsquo;t ever do this if you don&rsquo;t trust the site.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
