<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Proxy on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/proxy/</link>
    <description>Recent content in Proxy on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Nov 2021 16:40:44 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DNS, DNS over HTTPS dan SSH SOCKS Proxy [ID]</title>
      <link>https://fahmifj.github.io/blog/dns-over-https-and-ssh-socks-proxy/</link>
      <pubDate>Thu, 04 Nov 2021 16:40:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/dns-over-https-and-ssh-socks-proxy/</guid>
      <description>Can we use these to bypass DNS filters and conceal ourselves from ISPs? Let&amp;#39;s try it anyway</description>
      <content:encoded><![CDATA[<p>Saat ini sebagian besar browser-browser populer sudah memiliki fitur DNS over HTTPS (DoH). Tapi meskipun begitu, ternyata masih banyak yang belum tau tentang adanya fitur ini.</p>
<p><em><strong>Loh tau dari mana?</strong></em></p>
<p><em>Flashback</em> sedikit, ada beberapa teman yang setiap kali mau mengakses reddit atau web streaming anime <del>i</del>legal, mereka harus pakai VPN untuk bypass blokirannya ISP. Karena VPN-nya ini gratisan (baca: dipakai berjamaah dan di limit), sudah pasti jatuhnya lemot.</p>
<p>Setelah mereka tau soal fitur DoH, salah satunya memberi respon berikut:</p>
<p><div class="img-container"><img src="imgs/image-20211103210137432.png" alt="image-20211103210137432"  /></div>
</p>
<p>Agak risih juga sih ISP di negara ini sukanya main bloc-bloc-an.</p>
<p>Nah di postingan ini saya akan coba bahas kenapa DoH bisa dipakai untuk mem-<em>bypass</em> website yang diblokir. Saya juga bakal cari tau apakah DoH dan SSH SOCKS Proxy sudah cukup untuk menyembunyikan kita dari ISP.</p>
<h2 id="how-do-isps-block-websites">How do ISPs block websites?</h2>
<p>Normalnya ketika kita mengakses sebuah situs, misal <code>www.reddit.com</code>, komputer kita akan mengirimkan sebuah kueri DNS ke sebuah DNS server (milik ISP/operator seluler yang kalian pakai) untuk menanyakan alamat IP dari domain <code>www.reddit.com</code> agar halaman situs tersebut bisa dimuat kemudian.</p>
<p>Saat kita mengakses situs yang terdaftar di <em>blacklist</em> DNS, maka DNS tersebut memberikan alamat IP palsu dari halaman blokir milik si ISP seperti merconsuar, ipo, dll.</p>
<p>Kita bisa liat alur-nya secara detail dengan WireShark, tetapi agar lebih simple, kita juga bisa menggunakan <code>tracert</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ tracert -4 -d -h <span class="m">5</span> www.reddit.com

Tracing route to blockpage.****.id <span class="o">[</span>***.215.197.131<span class="o">]</span> 
over a maximum of <span class="m">5</span> hops:

  <span class="m">1</span>     <span class="m">2</span> ms     <span class="m">2</span> ms     <span class="m">2</span> ms  192.168.1.1 
  <span class="m">2</span>     *        *        *     Request timed out.
  <span class="m">3</span>    <span class="m">38</span> ms    <span class="m">32</span> ms    <span class="m">24</span> ms  10.***.44.1 
  <span class="m">4</span>    <span class="m">26</span> ms    <span class="m">31</span> ms    <span class="m">22</span> ms  ***.215.248.78 
  <span class="m">5</span>    <span class="m">33</span> ms    <span class="m">25</span> ms    <span class="m">27</span> ms  ***.215.248.82 

Trace complete.
</code></pre></div><blockquote>
<p>Di hop kedua saya kurang yakin apakah modem punya Hop count juga seperti router, yang akhirnya ditampilkan  * * *.</p>
</blockquote>
<p>Berdasarkan hal diatas <code>www.reddit.com</code> di <em>resolve</em> ke <code>blockpage.sensor.id</code> yang alamat IPnya <code>***.215.248.131</code>. Kita bisa validasi apakah <code>***.215.248.78</code> merupakan alamat IP asli dari reddit dengan menggunakan <a href="https://toolbox.googleapps.com/apps/dig/#A/">Google Toolbox Dig</a>, dan hasilnya:</p>
<p><div class="img-container"><img src="imgs/image-20211104095424598.png" alt="image-20211104095424598"  /></div>
</p>
<p>Ternyata alamat dari <code>www.reddit.com</code> adalah <code>151.101.X.140</code>, bukan <code>112.***.197.131</code>! Yah komputernya kena penipuan :/</p>
<p>Anyway, alur <em>request</em>-nya bisa diilustrasikan seperti berikut.</p>
<p><div class="img-container"><img src="imgs/image-20211103163418666.png" alt="image-20211103163418666"  /></div>
</p>
<p><em><strong>Darimana saya tau 10.19*.44.1 itu router ISP?</strong></em></p>
<p>Nope, saya gak tau itu router atau bukan, tapi perangkat ini punya port SSH dan SNMP, jadi kemungkinan perangkat ini di monitor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ nc -vn 10.***.44.1 <span class="m">22</span>
Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
Ncat: Connected to 10.19*.44.1:22.
SSH-2.0-OpenSSH_7.5
$ nc -u -vn 10.***.44.1 <span class="m">161</span>
Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
Ncat: Connected to 10.19*.44.1:161
</code></pre></div><p><em><strong>Tapi kan HTTPS?</strong></em></p>
<p>Enkripsi HTTPS/TLS itu ada di bagian kontennya. Jadi paket-paket DNS kueri yang dikirimkan untuk me-<em>resolve</em> nama domain ke sebuah alamat IP tidak masuk ke dalam enkripsi tersebut.</p>
<blockquote>
<p>Kueri DNS itu mendahului trafik HTTP/S</p>
</blockquote>
<p>Jadi misalnya ketika kita melakukan login di suatu HTTPS website, ISP gak akan tau username dan password yang kita masukkan, bentukan login page tersebut, dan bahkan sampai ke <em>endpoint</em> URLnya (<code>website.com/api/v1/login/?username=admin&amp;password=admin123</code>).</p>
<figure>
    <img src="imgs/image-20211104092043412.png"
         alt="Contoh konten yang dienkripsi"/> <figcaption>
            <p>Contoh konten yang dienkripsi
            </p>
        </figcaption>
</figure>

<p>Dengan kata lain, ISP hanya tau tujuan kita mau kemana, tapi dia (seharusnya) gak bisa lihat apa yang kita lakukan di tempat tujuan itu.</p>
<p>Sampai disini, tentunya kita bisa menyimpulkan sendiri kenapa DoH bisa membuat komputer kita menghindari &ldquo;penipuan&rdquo; yang dilakukan DNS server ISP tersebut.</p>
<p>Yap, karena kueri DNSnya dibungkus HTTPS. Jadi yang awalnya kueri DNS dikirimkan ke DNS server ISP pada port 53, sekarang kueri DNS di <em>deliver</em> melalui HTTPS ke <em>endpoint</em> DoH yang juga HTTPS, misalnya Cloudflare: <a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a>.</p>
<p><em><strong>Terus cloudflare-dns.com di resolve siapa?</strong></em></p>
<p>DNSnya ISP wkwkw. Yah ketauan kan pakai DoH.</p>
<h2 id="thou-shalt-bypass">Thou Shalt (By)Pass</h2>
<h3 id="the-primivite-dns">The Primivite DNS</h3>
<p>Tanpa DoH pun, sebenarnya kita bisa menghindari &ldquo;penipuan&rdquo; alamat tersebut di level cache.</p>
<p>Sederhananya, alasan komputer kita membuat DNS kueri terlebih dahulu ke DNS server saat akan mengakses sebuah website adalah karena si komputer belum tau alamat IP dari website yang kita maksud.</p>
<p>Setelah komputer tahu, alamat IP dan domain ini akan di simpan pada DNS resolver cache. Jadi ketika kita mengakses website yang sama, komputer kita akan mencarinya pada daftar cache terlebih dulu.</p>
<blockquote>
<p>Sebenarnya ada cache juga di level aplikasi/browser, tapi yasudahlah.</p>
</blockquote>
<p>Pada Windows, kita bisa lihat daftar DNS cache yang ada dengan menjalankan perintah:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\&gt;</span>ifconfig /displaydns
</code></pre></div><p>Pada dasarnya DNS server itu hanyalah sekumpulan entry yang me-<em>mapping</em> alamat IP dengan nama domain secara dinamik. Di level OS sendiri terdapat sebuah file yang merupakan bentuk primivite dari DNS bersifat statik, yaitu file <code>hosts</code>.</p>
<p>File <code>hosts</code> Windows bisa ditemukan di <code>C:\Windows\System32\drivers\etc\hosts</code> sedangkan untuk Unix-like, file <code>hosts</code> terdapat di <code>/etc/hosts</code>. Karena saya pengguna Windows sebagai main OS, yang akan di bahas disini adalah <code>hosts</code> file Windows saja.</p>
<figure>
    <img src="imgs/image-20211104123812239.png"
         alt="Windows hosts file"/> <figcaption>
            <p>Windows hosts file
            </p>
        </figcaption>
</figure>

<p>Pada Windows, file <code>hosts</code> ini akan selalu di-<em>load</em> ke DNS cache, dan kita bisa memanfaatkan ini untuk memberi &lsquo;tau&rsquo; langsung komputer bahwa alamat IP <code>www.reddit.com</code> adalah <code>151.101.129.140</code> dengan menambahkan entry berikut ke dalam file <code>hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">151.101.129.140 reddit.com www.reddit.com
</code></pre></div><p><div class="img-container"><img src="imgs/image-20211104131236469.png" alt="image-20211104131236469"  /></div>
</p>
<p>Jalankan perintah yang sama untuk menampilkan DNS cache.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\&gt;</span>ipconfig /flushdns <span class="c1"># clear cache untuk menghilangkan brainwash dari DNS server ISP</span>
C:<span class="se">\&gt;</span>ipconfig /displaydns
</code></pre></div><p>Seharusnya saat ini <code>www.reddit.com</code> dan <code>reddit.com</code> berada di entry paling atas.</p>
<p>Karena si komputer sudah tau alamat IP dari <code>www.reddit.com</code>, maka dia tidak perlu  lagi &ldquo;bertanya&rdquo; ke DNS server ISP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ tracert -d www.reddit.com

Tracing route to reddit.com <span class="o">[</span>151.101.129.140<span class="o">]</span>
over a maximum of <span class="m">30</span> hops:

  <span class="m">1</span>   <span class="m">120</span> ms     <span class="m">2</span> ms     <span class="m">3</span> ms  192.168.43.1
  <span class="m">2</span>     *        *        *     Request timed out.
  <span class="m">3</span>   <span class="m">162</span> ms    <span class="m">26</span> ms    <span class="m">26</span> ms  10.***.44.2
  <span class="m">4</span>   <span class="m">160</span> ms    <span class="m">25</span> ms    <span class="m">30</span> ms  ***.215.36.238 
  <span class="m">5</span>   <span class="m">187</span> ms    <span class="m">46</span> ms    <span class="m">46</span> ms  180.87.12.233
  <span class="m">6</span>   <span class="m">186</span> ms    <span class="m">57</span> ms    <span class="m">50</span> ms  180.87.12.232
  <span class="m">7</span>   <span class="m">191</span> ms    <span class="m">49</span> ms    <span class="m">47</span> ms  180.87.12.250
  <span class="m">8</span>    <span class="m">49</span> ms    <span class="m">49</span> ms    <span class="m">48</span> ms  210.57.30.38
  <span class="m">9</span>   <span class="m">188</span> ms    <span class="m">53</span> ms    <span class="m">52</span> ms  202.84.219.174
 <span class="m">10</span>    <span class="m">70</span> ms    <span class="m">49</span> ms    <span class="m">52</span> ms  202.84.219.174
 <span class="m">11</span>    <span class="m">60</span> ms    <span class="m">54</span> ms    <span class="m">49</span> ms  202.84.224.197
 <span class="m">12</span>    <span class="m">83</span> ms    <span class="m">80</span> ms    <span class="m">85</span> ms  210.57.38.171
 <span class="m">13</span>   <span class="m">205</span> ms   <span class="m">200</span> ms   <span class="m">203</span> ms  151.101.129.140 

Trace complete.
</code></pre></div><p><em><strong>Kalau untuk website lain gimana?</strong></em></p>
<p>Google Toolbox!</p>
<p><div class="img-container"><img src="imgs/image-20211104142819468.png" alt="image-20211104142819468"  /></div>
</p>
<p>Maka di <code>hosts</code> filenya:</p>
<p><div class="img-container"><img src="imgs/image-20211104142858365.png" alt="image-20211104142858365"  /></div>
</p>
<h3 id="ssh-socks-proxy--doh">SSH SOCKS Proxy + DoH</h3>
<p>Penggunaan <code>host</code> file dan DoH memang bisa mem-<em>bypass</em> Website, tapi pihak ISP tetap bisa mengetahui kita mengakses situs dan domain apa.</p>
<p>Untuk menghindari itu, salah satu cara &lsquo;murah&rsquo; yang saya gunakan selain VPN adalah menggunakan <em>private server</em> lalu memanfaatkan fitur SOCK proxy dari SSH (jatuhnya transparan). Private server saya ini pakai Azure compute.</p>
<p>Untuk membuat SSH SOCKS Proxy, perintahnya cukup simple:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ssh -i az_vm.key fproxy-user@20.109.***.213 -D <span class="m">1080</span> -N
</code></pre></div><ul>
<li><code>-D 1080</code>: Buka SOCKS proxy di port 1080 (listen)</li>
<li><code>-N</code>: Tanpa SSH interactive shell.</li>
</ul>
<p>Saat ini SOCKS proxy via SSH sudah tersedia di 127.0.0.1:1080. Konfigurasinya di browser:</p>
<p><div class="img-container"><img src="imgs/image-20211104161049841.png" alt="image-20211104161049841"  /></div>
</p>
<p>Mudah kan?</p>
<p>Btw saya pakai ekstensi browser <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">FoxyProxy</a>, supaya saat <em>switch on/off</em>-nya mudah dan gak harus buka-buka settingan browser, berikut tampilannya.</p>
<p><div class="img-container"><img src="imgs/image-20211104160902204.png" alt="image-20211104160902204"  /></div>
</p>
<p>Konfigurasinya? sama dengan settingan browser!</p>
<p><div class="img-container"><img src="imgs/image-20211104090204141.png" alt="image-20211104090204141"  /></div>
</p>
<p>Dengan mengirimkan <em>request</em> ke <code>ifconfig.co/json</code>, saat ini IP saya adalah IP dari si private server.</p>
<p><div class="img-container"><img src="imgs/image-20211104090145368.png" alt="image-20211104090145368"  /></div>
</p>
<p>Lalu ditambah dengan DoH dan di test lewat <a href="https://dnsleaktest.com/">https://dnsleaktest.com/</a>.</p>
<p><div class="img-container"><img src="imgs/image-20211104090533201.png" alt="image-20211104090533201"  /></div>
</p>
<p>Sampai sini seharusnya ISP kurang lebih hanya melihat komputer saya yang mengakses si private server dengan trafik seperti berikut.</p>
<p><div class="img-container"><img src="imgs/image-20211104152555436.png" alt="image-20211104152555436"  /></div>
</p>
<h2 id="conclusion">Conclusion</h2>
<p>Jadi setidaknya ada 3 solusi di post ini yang bisa kamu coba untuk bypass filters yang diterapkan oleh ISP langganan kamu:</p>
<ul>
<li>Hosts file,</li>
<li>DoH,</li>
<li>DoH+SSH SOCKS Proxy.</li>
</ul>
<p>Menggunakan hosts file dan DoH hanya sebatas menghindari komputer kita dari &ldquo;penipuan&rdquo; alamat palsu oleh DNS server ISP. Sedangkan DoH+SSH SOCKS Proxy selain menghindari &ldquo;penipuan&rdquo;, tunnel yang dibuat juga mengenkripsi keseluruhan trafik web kita.</p>
<p>Hasil <em>testing</em> ketiganya, bukan <em>testing</em> sih, bisa ditabelkan(?) seperti berikut.</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th>Bypass DNS filters</th>
<th>Hide the domain we visit ?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hosts file</td>
<td>Probably yes</td>
<td>No</td>
</tr>
<tr>
<td>DoH</td>
<td>Yes, mostly</td>
<td>No</td>
</tr>
<tr>
<td>DoH + SSH SOCKS Proxy</td>
<td>Yes, mostly, but it depends.</td>
<td>Yes</td>
</tr>
</tbody>
</table>
</div>
<p><em><strong>Apakah dengan ini saya sudah <del>bisa menjadi anggota</del> anonymous?</strong></em></p>
<p>Nope, karena private server yang saya pakai pun milik sesuatu yang lebih besar dari ISP dan dua-duanya mengumpulkan data juga.</p>
<p>Baiklah, sekian untuk postingan ini~</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
