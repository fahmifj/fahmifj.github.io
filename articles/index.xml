<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Articles on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/articles/</link>
    <description>Recent content in Articles on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 29 Jan 2025 20:36:34 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running GNS3 server on Apple M2 with Orbstack</title>
      <link>https://fahmifj.github.io/articles/running-gns3-on-apple-m2-orbstack/</link>
      <pubDate>Wed, 29 Jan 2025 20:36:34 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/running-gns3-on-apple-m2-orbstack/</guid>
      <description>Lately, I&amp;rsquo;ve been switching from my Windows laptop to MacBook M2 for daily driver. It was smooth until I needed to migrate my virtual networking lab that relies on GNS3. It&amp;rsquo;s for my preparation before taking another Mikrotik&amp;rsquo;s certification. I was initially hesitant about whether I could run GNS3 on my M2 machine. After some research, I discovered that the GNS3 client is indeed available for macOS. To host the GNS3 server, I learned that I could set it up from scratch on a Linux machine using Orbstack.</description>
      <content:encoded><![CDATA[<p>Lately, I&rsquo;ve been switching from my Windows laptop to MacBook M2 for daily driver. It was smooth until I needed to migrate my virtual networking lab that relies on GNS3. It&rsquo;s for my preparation before taking another Mikrotik&rsquo;s certification. I was initially hesitant about whether I could run GNS3 on my M2 machine. After some <a href="https://www.gns3.com/community/featured/gns3-on-apple-silicon">research</a>, I discovered that the GNS3 client is indeed available for macOS. To host the GNS3 server, I learned that I could set it up from scratch on a Linux machine using Orbstack.</p>
<h4 id="goals">Goals</h4>
<ul>
<li>Get GNS3 server running on M2 Apple Silicon CPU.</li>
<li>Get GNS3 appliance installed on the GNS3 server.</li>
</ul>
<h4 id="prerequisites">Prerequisites</h4>
<ul>
<li><a href="https://orbstack.dev/">Orbstack</a>.</li>
<li><a href="https://github.com/gns3/gns3-gui/releases">GNS3 GUI/client</a> installed.</li>
</ul>
<h4 id="diagram">Diagram</h4>
<p>I drew a diagram to give you an overview of what we are going to do here.</p>
<img src="./imgs/image-20250129212031966.png" alt="image-20250129212031966" style="zoom: 50%;" />
<h2 id="on-mac">On Mac</h2>
<h3 id="deploy-a-linux-machine">Deploy A Linux Machine</h3>
<p>After Orbstack is installed, create a new Linux machine with the latest Ubuntu distro.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb create --arch amd64 ubuntu gns3-host
</span></span></code></pre></div><p>Then verify the machine is running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb list
</span></span><span class="line"><span class="cl">NAME       STATE    DISTRO  VERSION   ARCH
</span></span><span class="line"><span class="cl">----       -----    ------  -------   ----
</span></span><span class="line"><span class="cl">gns3-host  running  ubuntu  oracular  amd64
</span></span></code></pre></div><p>The Linux machine we just installed will act as the GNS3 server host.</p>
<h2 id="on-the-linux-machine">On the Linux machine</h2>
<h3 id="1-hosting-gns3-on-the-linux-machine">1. Hosting GNS3 on the Linux machine</h3>
<p>From Mac, login into the machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ orb -m gns3-host -u root
</span></span></code></pre></div><p>Add the GNS3 repository and install some necessary tools.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@gns3 $ sudo add-apt-repository ppa:gns3/ppa
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt update
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install software-properties-common
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install qemu-system-x86
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install telnet
</span></span><span class="line"><span class="cl">user@gns3 $ sudo apt install gns3-server
</span></span></code></pre></div><p>In the middle way, select &ldquo;yes&rdquo; when you prompted with something like this.</p>
<img src="./imgs/image-20250129214423431.png" alt="image-20250129214423431" style="zoom:50%;" />
<p>If you missed the prompt, run the following.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># add ubridge group to the gns3 user</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo usermod -aG ubridge gns3
</span></span></code></pre></div><p>Verify the GNS3 server installation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@gns3 $ systemctl status gns3-server
</span></span></code></pre></div><p>Or by visiting &ldquo;http://localhost:3080&rdquo;.</p>
<h3 id="2-moving-gns3-workspace">2. Moving GNS3 Workspace</h3>
<p>I would like to move the default working directory of GNS3 at <code>/var/lib/gns3-server/GNS3/</code> to <code>/opt/gns3/</code>. So this is optional.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># create new dir config</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo mkdir /opt/gns3
</span></span><span class="line"><span class="cl"><span class="c1"># copy old dir config to new dir config</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo cp -r /var/lib/gns3-server/GNS3/* /opt/gns3
</span></span><span class="line"><span class="cl"><span class="c1"># change ownership </span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo chown -R gns3:gns3 /opt/gns3
</span></span><span class="line"><span class="cl"><span class="c1"># change default home directory</span>
</span></span><span class="line"><span class="cl">user@gns3 $ sudo usermod -d /opt/gns3 gns3
</span></span></code></pre></div><h3 id="3-setting-up-gns3-server">3. Setting Up GNS3 Server</h3>
<p>Since KVM is not supported inside the orbstack machine, we need to make some adjustments for GNS3 server config. Edit the config at <code>/opt/gns3/.config/GNS3/2.2/gns3_server.conf</code> as follows:</p>
<pre tabindex="0"><code>[Server]
host = 0.0.0.0
port = 3080
images_path = /opt/gns3/images
appliances_path = /opt/gns3/appliances
configs_path = /opt/gns3/configs
projects_path = /opt/gns3/projects
symbols_path = /opt/gns3/symbols

report_errors = True

; First console port of the range allocated to devices
console_start_port_range = 5000
; Last console port of the range allocated to devices
console_end_port_range = 10000

; First VNC console port of the range allocated to devices.
; The value MUST BE &gt;= 5900 and &lt;= 65535
vnc_console_start_port_range = 5900
; Last VNC console port of the range allocated to devices
; The value MUST BE &gt;= 5900 and &lt;= 65535
vnc_console_end_port_range = 10000

; First port of the range allocated for inter-device communication. Two ports are allocated per link.
udp_start_port_range = 10000
; Last port of the range allocated for inter-device communication. Two ports are allocated per link
udp_end_port_range = 20000

; Only allow these interfaces to be used by GNS3, for the Cloud node for example (Linux/OSX only)
; Do not forget to allow virbr0 in order for the NAT node to work
allowed_interfaces = virbr0

; Enable the built-in templates
enable_builtin_templates = True

; check if hardware virtualization is used by other emulators (KVM, VMware or VirtualBox)
hardware_virtualization_check = False

[Dynamips]
allocate_aux_console_ports = False
mmap_support = True
sparse_memory_support = True
ghost_ios_support = True

[IOU]
iourc_path = /opt/gns3/iourc
license_check = True

[Qemu]
enable_kvm = False
require_kvm = False
enable_hardware_acceleration = False
require_hardware_acceleration = False
</code></pre><p>If the config directory don&rsquo;t exist do the following (inside the orbstack VM):</p>
<ol>
<li>Run <code>systemctl stop gns3-server</code>.</li>
<li>Run <code>gns3server</code> manually for a minute and stop it.</li>
<li>Start again with <code>systemctl start gns3-server</code>.</li>
<li>Look up again under <code>/var/lib/gns3-server/GNS3/.config</code> or <code>/opt/gns3/.config</code> if you follow the step 3.</li>
</ol>
<p>We&rsquo;re done with the server here.</p>
<h2 id="connecting-gns3-client-and-server">Connecting GNS3 Client and Server</h2>
<h3 id="1-gns3-client">1. GNS3 Client</h3>
<p>GNS3 Client should detect the server automatically, if not, try open <strong>the GNS3 Client &gt; Settings &gt; Server</strong> and point the GNS3 server to the Linux machine.</p>
<p><div class="img-container"><img src="./imgs/image-20250129223723294.png" alt="image-20250129223723294"  /></div>
</p>
<p>Verify the connection.</p>
<h3 id="2-install-appliances">2. Install Appliances</h3>
<p>The network appliances now can be installed normally.</p>
<h2 id="the-results">The results</h2>
<h3 id="testing-initial-setup">Testing Initial Setup</h3>
<p>So far, excluding the ATM and Frame relay switches, I&rsquo;ve tested the basic appliances and everything works as it should except for the Cloud appliance.</p>
<img src="./imgs/image-20250129230112734.png" alt="image-20250129230112734" style="zoom:50%;" />
<h3 id="performances">Performances</h3>
<p>I allocated 4 CPUs and 4 GB of memory to Orbstack for the initial lab setup. Despite adding two more routers, everything runs smoothly and fast, with no choppy performance at all.</p>
<img src="./imgs/image-20250130222443482.png" alt="image-20250130222443482" style="zoom:50%;" />
<h2 id="conclusion">Conclusion</h2>
<p>At this point, GNS3 hosted within Orbstack Linux machine ran seamlessly on my M2 Mac. This should be enough for creating or simulating networking projects. However, I still wanted my network appliances could communicate with the LAN on my Mac, which I will dig into it in the next section.</p>
<hr>
<h2 id="dig-into-network-limitation">Dig into Network Limitation</h2>
<p><strong>Accessing GNS3 Appliances from Mac LAN</strong></p>
<p>According to <a href="https://docs.orbstack.dev/machines/network">the documentation</a>, all Orbstack Linux machines are connected to the same network bridge with a fixed IPv4 address of <code>198.19.249.0/24</code>. On Mac, this network bridge displayed as <code>bridge100</code> and the Linux machines connected to that bridge via its <code>eth0</code>.</p>
<p>My goal is, let&rsquo;s say Winbox on Mac, will able to communicate with the GNS3 Mikrotik through the Cloud appliance via <code>eth0</code> of GNS3 server. Here&rsquo;s the diagram.</p>
<img src="./imgs/image-20250201125922492.png" alt="image-20250201125922492" style="zoom:50%;" />
<p>Unfortunately, the Cloud appliance here did not list the <code>eth0</code> interface.</p>
<img src="./imgs/image-20250130225807891.png" alt="image-20250130225807891" style="zoom:50%;" />
<p>In the image above,  <code>virbr0</code>  and <code>gns3tap0-0</code> are the interfaces that GNS3 use for the NAT appliances (<a href="https://gns3.com/how-the-nat-node-in-gns3-works">source</a>). When I ran the script that populates the interfaces on the GNS3 server manually, the output states that <code>eth0</code> cannot be used on this server.</p>
<img src="./imgs/image-20250131005043784.png" alt="image-20250131005043784" style="zoom:50%;" />
<p>After taking another look at the code, I figured out where the issue was. You guys probably have noticed it. 😂</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="ow">not</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;win&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">allowed_interfaces</span> <span class="o">=</span> <span class="n">Config</span><span class="o">.</span><span class="n">instance</span><span class="p">()</span><span class="o">.</span><span class="n">get_section_config</span><span class="p">(</span><span class="s2">&#34;Server&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;allowed_interfaces&#34;</span><span class="p">,</span> <span class="kc">None</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">allowed_interfaces</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">allowed_interfaces</span> <span class="o">=</span> <span class="n">allowed_interfaces</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">net_if_addrs</span> <span class="o">=</span> <span class="n">psutil</span><span class="o">.</span><span class="n">net_if_addrs</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">interface</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">net_if_addrs</span><span class="o">.</span><span class="n">keys</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">allowed_interfaces</span> <span class="ow">and</span> <span class="n">interface</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">allowed_interfaces</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">interface</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;gns3tap&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">log</span><span class="o">.</span><span class="n">warning</span><span class="p">(</span><span class="s2">&#34;Interface &#39;</span><span class="si">{}</span><span class="s2">&#39; is not allowed to be used on this server&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">interface</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="k">continue</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span></code></pre></div><p>Yeah, it&rsquo;s on the step 3, about the server config! I just need to add the interface I want to be allowed there. Haha.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="c1">; Only allow these interfaces to be used by GNS3, for the Cloud node for example (Linux/OSX only)</span>
</span></span><span class="line"><span class="cl"><span class="c1">; Do not forget to allow virbr0 in order for the NAT node to work</span>
</span></span><span class="line"><span class="cl"><span class="na">allowed_interfaces</span> <span class="o">=</span> <span class="s">virbr0,eth0 </span>
</span></span><span class="line"><span class="cl"><span class="c1">; ^ I added eth0</span>
</span></span></code></pre></div><p>After that, pinging from Mac to GNS3 Mikrotik is reachable, but it&rsquo;s not over yet!</p>
<img src="./imgs/image-20250201140538579.png" alt="image-20250201140538579" style="zoom:50%;" />
<p>I&rsquo;m still unable to access the services like for example Mikrotik Winbox on port 8291 or WebFig on port 80. It results the same with the GNS3 server.</p>
<img src="./imgs/image-20250202135153641.png" alt="image-20250202135153641" style="zoom:50%;" />
<p>Inspecting the traffic with Wireshark, I saw that no TCP handshake was performed.</p>
<img src="./imgs/image-20250201163513432.png" alt="image-20250201163513432" style="zoom:50%;" />
<p>Orbstack network implementation is beyond my understanding, so I don&rsquo;t know what exactly it does under the hood. Seems I need to wait for Orbstack to fully support bridged networking.</p>
<p>In the meantime, I will take a look for other options like UTM, or even move to PNET Lab. Personally, I liked Orbstack more, it almost similar to WSL but on Mac.</p>
<p>That&rsquo;s all, see you in the next post!</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Tplmap Install</title>
      <link>https://fahmifj.github.io/articles/tplmap-install/</link>
      <pubDate>Fri, 05 Nov 2021 20:40:16 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/tplmap-install/</guid>
      <description>Python pip is so weirrd</description>
      <content:encoded><![CDATA[<p>This is a quick note to get <code>tplmap</code> working again!</p>
<p>Previously on <a href="https://fahmifj.github.io/hackthebox/doctor/">HTB: Doctor</a>, this tool was worked fine with Python 2, but just now when I tried using it again on <a href="https://fahmifj.github.io/hackthebox/nunchucks/">HTB: Nunchucks</a>, it didn&rsquo;t work anymore. I got the following error:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «192.168.1.55» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ python tplmap.py 
</span></span><span class="line"><span class="cl">Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span></span><span class="line"><span class="cl">  File <span class="s2">&#34;/opt/tplmap-venv/tplmap/./tplmap.py&#34;</span>, line 2, in &lt;module&gt;
</span></span><span class="line"><span class="cl">    from utils import cliparser
</span></span><span class="line"><span class="cl">  File <span class="s2">&#34;/opt/tplmap-venv/tplmap/utils/cliparser.py&#34;</span>, line 163, in &lt;module&gt;
</span></span><span class="line"><span class="cl">    parser.formatter.format_option_strings <span class="o">=</span> type<span class="o">(</span>parser.formatter.format_option_strings<span class="o">)(</span>_, parser, type<span class="o">(</span>parser<span class="o">))</span>
</span></span><span class="line"><span class="cl">TypeError: method expected <span class="m">2</span> arguments, got <span class="m">3</span>
</span></span></code></pre></div><p>After googling around, I found a way to get this tool working again, it&rsquo;s by upgrading the <code>setuptools</code> modul!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ python2 -m pip install --upgrade setuptools
</span></span></code></pre></div><p>But, as a prevention against Python&rsquo;s dependency hell. I will be installing this tool under a virtual environment.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ python2 -m pip install virtualenv 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/epinna/tplmap.git
</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> ./tplmap/
</span></span><span class="line"><span class="cl">$ python2 -m virtualenv tplmap-venv
</span></span><span class="line"><span class="cl">$ <span class="nb">source</span> ./tplmap-venv/bin/activate
</span></span><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> $ python2 -m pip install -r requirements.txt 
</span></span></code></pre></div><p>All the requirements should be listed now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → $ python2 -m pip list                                                      
</span></span><span class="line"><span class="cl">--<span class="o">[</span>snip annoying deprecated message<span class="o">]</span>--
</span></span><span class="line"><span class="cl">Package    Version
</span></span><span class="line"><span class="cl">---------- ----------
</span></span><span class="line"><span class="cl">certifi    2018.10.15
</span></span><span class="line"><span class="cl">chardet    3.0.4
</span></span><span class="line"><span class="cl">idna       2.8
</span></span><span class="line"><span class="cl">pip        20.3.4
</span></span><span class="line"><span class="cl">PyYAML     5.1.2
</span></span><span class="line"><span class="cl">requests   2.22.0
</span></span><span class="line"><span class="cl">setuptools 44.1.1
</span></span><span class="line"><span class="cl">urllib3    1.24.1
</span></span><span class="line"><span class="cl">wheel      0.37.0
</span></span></code></pre></div><p>It&rsquo;s working now</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «192.168.1.55» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python2 tplmap.py 
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Usage: python tplmap.py <span class="o">[</span>options<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tplmap.py: error: URL is required. Run with -h <span class="k">for</span> help.
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>A Personal Take on Bypassing ISP Blocks</title>
      <link>https://fahmifj.github.io/articles/unblock-isp-blocked-sites/</link>
      <pubDate>Thu, 04 Nov 2021 16:40:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/unblock-isp-blocked-sites/</guid>
      <description>Finding ways around digital roadblocks</description>
      <content:encoded><![CDATA[<p>Di waktu yang lalu, beberapa teman gw mengalami kesulitan saat akan mengakses situs seperti reddit atau situs streaming anime <del>ilegal</del> legal yang tidak lain dan tidak bukan ini karena situs-situs tersebut diblokir oleh ISP. Solusi mereka saat itu tentu saja pakai VPN, tapi sayangnya muncul problem lain, yaitu speed internet yang turun drastis. Yap! Karena VPN yang digunakan ini gratisan (baca: berjamaah).</p>
<p>Akhirnya, gw kasih tahu solusi lain yang mudah dan murah, yaitu mengaktifkan fitur <a href="https://developers.cloudflare.com/1.1.1.1/encrypted-dns">DNS over HTTPS (DoH)</a> pada browsernya. Beberapa saat kemudian, salah satunya memberi respon berikut.</p>
<figure>
    <img src="imgs/image-20211103210137432.png"
         alt="Sebuah testimoni"/> <figcaption>
            <p>Sebuah testimoni
            </p>
        </figcaption>
</figure>

<p>Saat ini sebagian besar browser-browser populer sudah memiliki fitur <strong>DoH</strong>. Meskipun begitu, ternyata masih banyak orang yang belum tahu tentang adanya fitur ini.</p>
<figure>
    <img src="imgs/image-20211104224726768.png"
         alt="Settingan DoH pada Chrome dan Firefox"/> <figcaption>
            <p>Settingan DoH pada Chrome dan Firefox
            </p>
        </figcaption>
</figure>

<p>Dengan mengaktifkan fitur DoH, hampir semua situs yang diblokir oleh ISP bisa dibuka kembali, loh.</p>
<p><em><strong>Kok bisa?</strong></em></p>
<p>Nah, dipostingan ini gw akan coba bahas kenapa DoH bisa dipakai untuk mem-<em>bypass</em> website yang diblokir*. Selanjutnya gw juga akan menggunakan dua cara alternatif untuk melakukan bypass tanpa DoH ataupun VPN dan mencari tahu apakah cara-cara tersebut bisa menjadikan kita sebagai anonymous 🎭, setidaknya untuk ISP.</p>
<blockquote>
<p>*Aslinya cuma dasar kerja DNS, but let me try to explain it.</p>
</blockquote>
<h2 id="how-do-isps-block-websites">How do ISPs block websites?</h2>
<h3 id="dns-request-flow">DNS Request Flow</h3>
<p>Pertama-tama, kita perlu tahu dulu alur tentang bagaimana sebuah website itu akhirnya bisa terbuka oleh browser kita.</p>
<p>Ketika kita mengakses sebuah situs, sebut misal <code>www.reddit.com</code>, komputer kita akan mengirimkan sebuah <a href="https://www.cloudns.net/wiki/article/254/">kueri DNS</a> ke server DNS. Secara default, kueri tadi akan sampai ke server DNS milik penyedia jasa internet (ISP) atau operator seluler yang kita pakai. Tujuannya supaya  <code>www.reddit.com</code> bisa diterjemahkan ke alamat IP sehingga laman situs tersebut bisa dimuat kemudian.</p>
<img src="./imgs/image-20250128220902286.png" alt="image-20250128220902286" style="zoom:50%;" />
<p>Jadi, server DNS ini simplenya berisi informasi/mapping nama-nama domain dan menerjemahkannya ke alamat IP.</p>
<h3 id="dns-filtering">DNS Filtering</h3>
<p>Jika alur DNS sudah kita pahami, selanjutnya adalah alur tentang proses pemblokiran sebuah website.</p>
<p>Ketika kita mengakses situs yang ternyata nama domain-nya tercatat di &ldquo;daftar hitam&rdquo; dari server DNS, maka domain yang sedang kita tuju akan diganti alamat IP dan domainnya menjadi halaman blokir milik si ISP, seperti merconsuar, IPO chan, dll. Metode yang digunakan ISP ini lebih dikenal dengan sebutan <a href="https://en.wikipedia.org/wiki/DNS_hijacking">DNS hijack/poisoning</a>.</p>
<p>Kita bisa melihat hasil hijack oleh server DNS ISP untuk <code>www.reddit.com</code> menggunakan Wireshark. Dari hasil inspeksi, kueri DNS untuk <code>www.reddit.com</code> telah diarahkan ke <code>internetpositif.id</code> yang beralamat di <code>36.86.63.185</code>.</p>
<img src="./imgs//image-20241226140545496.png" alt="image-20241226140545496" style="zoom:50%;" />
<p>Hasil <em>tracing</em> (pelacakan) paket data yang ditujukan ke <code>www.reddit.com</code> dengan tool bawaan Windows, yaitu: <code>tracert</code> pun menunjukkan hal yang kurang lebih sama. Tapi kali ini, gw menggunakan koneksi operator seluler yang di tethering oleh smartphone. Alamat IP dari situs <code>www.reddit.com</code> diterjemahkan menjadi alamat IP <code>***.215.248.131</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -4 -d -h <span class="m">5</span> www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to blockpage.****.id <span class="o">[</span>***.215.197.131<span class="o">]</span> 
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">5</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>     <span class="m">2</span> ms     <span class="m">2</span> ms     <span class="m">2</span> ms  192.168.1.1 
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>    <span class="m">38</span> ms    <span class="m">32</span> ms    <span class="m">24</span> ms  10.***.44.1 
</span></span><span class="line"><span class="cl">  <span class="m">4</span>    <span class="m">26</span> ms    <span class="m">31</span> ms    <span class="m">22</span> ms  ***.215.248.78 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>    <span class="m">33</span> ms    <span class="m">25</span> ms    <span class="m">27</span> ms  ***.215.248.82 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><p>Jadi, manakah alamat IP dari <code>www.reddit.com</code>?</p>
<p>Kita bisa validasi hal ini menggunakan tool seperti <a href="https://toolbox.googleapps.com/apps/dig/#A/">Dig Google</a> atau <a href="https://digwebinterface.com/?hostnames=www.reddit.com&amp;type=&amp;ns=resolver&amp;useresolver=9.9.9.10&amp;nameservers=">Dig Web Interface</a>. Ibaratnya, kita membuat kueri DNS langsung di komputer dan ISP pihak penyedia tool tersebut. Hasilnya adalah berikut.</p>
<figure>
    <img src="imgs/image-20211104095424598.png"
         alt="Hasil dig www.reddit.com"/> <figcaption>
            <p>Hasil dig <a href="https://www.reddit.com">www.reddit.com</a>
            </p>
        </figcaption>
</figure>

<p>Yap, ternyata alamat IP dari <code>www.reddit.com</code> menurut Google dan Dig Web adalah <code>151.101.X.140</code>, bukan <code>36.86.63.185</code> ataupun <code>***.215.197.131</code>. Yah, komputernya kena penipuan :/</p>
<p>Alur pemblokiran website ini bisa diilustrasikan sebagai berikut.</p>
<figure>
    <img src="imgs/image-20211103163418666.png"
         alt="Ilustrasi(nya)"/> <figcaption>
            <p>Ilustrasi(nya)
            </p>
        </figcaption>
</figure>

<p><em><strong>Darimana gw tau 10.***.44.1 itu router ISP?</strong></em></p>
<p>Setiap alamat IP yang dijajaki atau menjadi <em>hop</em> ini tentunya sebuah perangkat router/modem. Perangkat ini juga punya port SSH yang terbuka, jadi kemungkinan memang milik ISP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ nc -vn 10.***.44.1 <span class="m">22</span>
</span></span><span class="line"><span class="cl">Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
</span></span><span class="line"><span class="cl">Ncat: Connected to 10.***.44.1:22.
</span></span><span class="line"><span class="cl">SSH-2.0-OpenSSH_7.5
</span></span></code></pre></div><p><em><strong>Tapi kan HTTPS, S-nya secure, kok bisa ISP tahu dan di-hijack?</strong></em></p>
<p>Perlu diingat, kueri DNS itu mendahului trafik HTTP/S dan isi kuerinya tidak terenkripsi alias plain text. Lalu proses enkripsi dari HTTPS itu hanya bagian kontennya<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p>Tanpa DoH, paket-paket dan kueri DNS untuk me-<em>resolve</em> nama domain ke sebuah alamat IP dikirimkan secara <em>plain-text</em> (tanpa enkripsi).</p>
<p>Saat kita mengunjungi sebuah situs, ISP hanya dapat melihat nama domain dan alamat IP dari situs tersebut. Informasi seperti username, password, dan bahkan URL endpoint/path beserta kuerynya tidak dapat diketahui oleh ISP. Misal, jika  URL-nya adalah:</p>
<p><code>https://website.com/api/v1/login?username=admin&amp;password=admin</code></p>
<p>Maka, yang terlihat oleh ISP saat paket data kita transit di router mereka hanya nama domain, yaitu: <code>website.com</code>. Sedangkan sisanya, akan terenkripsi seperti berikut.</p>
<figure>
    <img src="imgs/image-20211104092043412.png"
         alt="Contoh konten yang dienkripsi"/> <figcaption>
            <p>Contoh konten yang dienkripsi
            </p>
        </figcaption>
</figure>

<p>Dengan DoH, kueri DNS ikut &ldquo;dibungkus&rdquo; HTTPS sebagai bagian dari konten aplikasi yang dikirim ke <em>endpoint</em> DoH seperti Cloudflare di <a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a>.</p>
<p>Sebenarnya, baik dengan atau tanpa DoH, ISP tetap tahu tujuan kita mau kemana. Namun, dengan DoH ini, ISP tidak dapat lagi mencegat dan membongkar kueri DNS yang kita kirimkan, sehingga komputer kita terhindar dari &ldquo;penipuan&rdquo; alamat yang dilakukan server DNS ISP pada kasus <code>reddit.com</code> diatas.</p>
<p><em><strong>Lalu, endpoint cloudflare-dns.com di-resolve siapa?</strong></em></p>
<p>Ya, itu DNSnya ISP, sih. Wkwkw.</p>
<p>Yah, ISP tahu nih kita pakai DoH. But tenang, kita bisa pakai versi IP 1^4-nya*</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;accept: application/dns-json&#39;</span> <span class="s2">&#34;https://1.1.1.1/dns-query?name=www.reddit.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;Status&#34;</span>:0,<span class="s2">&#34;TC&#34;</span>:false,<span class="s2">&#34;RD&#34;</span>:true,<span class="s2">&#34;RA&#34;</span>:true,<span class="s2">&#34;AD&#34;</span>:false,<span class="s2">&#34;CD&#34;</span>:false,<span class="s2">&#34;Question&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:1<span class="o">}]</span>,<span class="s2">&#34;Answer&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:5,<span class="s2">&#34;TTL&#34;</span>:288,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net.&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.65.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.129.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.193.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.1.140&#34;</span><span class="o">}]}</span>
</span></span></code></pre></div><blockquote>
<p>*Tetap ketahuan sih, karena dari alamat IPnya ya punya cloudflare :))</p>
</blockquote>
<h2 id="thou-shalt-bypass">Thou Shalt (By)Pass</h2>
<h3 id="hosts-file-the-primivite-dns">Hosts file: The Primivite DNS</h3>
<p>Sebenarnya, tanpa DoH, kita bisa menghindari &ldquo;penipuan&rdquo; alamat IP tadi di level <em>cache</em>, alias melakukan bypass dengan cara yang mirip dengan tekniknya ISP untuk memblokir situs web.</p>
<p>Kita tahu bahwa alasan komputer kita mengirimkan kueri DNS terlebih dahulu ke server DNS saat akan mengakses sebuah situs web adalah karena komputer belum tahu alamat IP dari domain situs web yang dimaksud. Setelah si komputer tahu, alamat IP dan domain situs web ini akan di simpan pada <a href="https://www.cloudns.net/blog/dns-cache-explained/">cache</a>. Di <em>request</em> selanjutnya, komputer akan mengandalkan entri alamat yang ada pada <em>cache</em>, selama entri tersebut belum kadaluarsa, umumnya dalam jangka waktu 24 jam.</p>
<p>Pada Windows, kita bisa melihat daftar IP dan nama domain yang sudah di <em>cache</em> dengan menjalankan perintah berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ifconfig /displaydns
</span></span></code></pre></div><p>Informasi nama-nama domain pada server DNS milik ISP memiliki sifat dinamis. Informasi tersebut akan selalu up to date secara periodik alias bersifat dinamis. Nah, di sistem operasi sendiri, terdapat sebuah file yang merupakan bagian dari sistem DNS, namun bersifat statis, yaitu file <code>hosts</code>.</p>
<p>File <code>hosts</code> Windows bisa ditemukan di <code>C:\Windows\System32\drivers\etc\hosts</code>, sedangkan untuk Linux/Unix, file ini terdapat berlokasi di <code>/etc/hosts</code>. Karena gw pengguna Windows, yang akan dibahas disini adalah <code>hosts</code> file Windows saja, tetapi secara fungsi, keduanya sama (pengguna Linux rata-rata udah suhu soalnya).</p>
<figure>
    <img src="imgs/image-20211104123812239.png"
         alt="Windows hosts file"/> <figcaption>
            <p>Windows hosts file
            </p>
        </figcaption>
</figure>

<p>Isi dari file <code>hosts</code> ini akan selalu masuk ke dalam entri <em>cache</em> dari DNS. Maka dari itu, kita bisa memanfaatkan hal ini untuk memberi tahu komputer secara langsung (<em>bypass</em>) bahwa alamat IP, misalnya <code>www.reddit.com</code>, adalah <code>151.101.129.140</code>. Caranya adalah dengan menambahkan sebuah entri ke dalam file hosts dengan format berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># [Alamat IP] [domain name 1] [domain name 2] [domain name N]
</span></span><span class="line"><span class="cl">151.101.129.140 reddit.com www.reddit.com
</span></span></code></pre></div><img src="imgs/image-20211104131236469.png" alt="image-20211104131236469" style="zoom:50%;" />
<p>Sekarang kita bisa jalankan kembali perintah yang sama untuk menampilkan DNS cache, tapi sebelum itu ada baiknya DNS cache ini di-<em>flush</em> terlebih dulu.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /flushdns <span class="c1"># clear cache dulu untuk menghilangkan &#34;brainwash&#34; dari Server DNS ISP</span>
</span></span><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /displaydns
</span></span></code></pre></div><p>Seharusnya saat ini <code>www.reddit.com</code> dan <code>reddit.com</code> berada di entry paling atas.</p>
<p>Karena si komputer sudah tahu alamat IP dari <code>www.reddit.com</code>, maka dia tidak perlu lagi &ldquo;bertanya&rdquo; ke server DNS milik ISP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -d www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to reddit.com <span class="o">[</span>151.101.129.140<span class="o">]</span>
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">30</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>   <span class="m">120</span> ms     <span class="m">2</span> ms     <span class="m">3</span> ms  192.168.43.1
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>   <span class="m">162</span> ms    <span class="m">26</span> ms    <span class="m">26</span> ms  10.***.44.2
</span></span><span class="line"><span class="cl">  <span class="m">4</span>   <span class="m">160</span> ms    <span class="m">25</span> ms    <span class="m">30</span> ms  ***.215.36.238 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>   <span class="m">187</span> ms    <span class="m">46</span> ms    <span class="m">46</span> ms  180.87.12.233
</span></span><span class="line"><span class="cl">  <span class="m">6</span>   <span class="m">186</span> ms    <span class="m">57</span> ms    <span class="m">50</span> ms  180.87.12.232
</span></span><span class="line"><span class="cl">  <span class="m">7</span>   <span class="m">191</span> ms    <span class="m">49</span> ms    <span class="m">47</span> ms  180.87.12.250
</span></span><span class="line"><span class="cl">  <span class="m">8</span>    <span class="m">49</span> ms    <span class="m">49</span> ms    <span class="m">48</span> ms  210.57.30.38
</span></span><span class="line"><span class="cl">  <span class="m">9</span>   <span class="m">188</span> ms    <span class="m">53</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">10</span>    <span class="m">70</span> ms    <span class="m">49</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">11</span>    <span class="m">60</span> ms    <span class="m">54</span> ms    <span class="m">49</span> ms  202.84.224.197
</span></span><span class="line"><span class="cl"> <span class="m">12</span>    <span class="m">83</span> ms    <span class="m">80</span> ms    <span class="m">85</span> ms  210.57.38.171
</span></span><span class="line"><span class="cl"> <span class="m">13</span>   <span class="m">205</span> ms   <span class="m">200</span> ms   <span class="m">203</span> ms  151.101.129.140 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><p>Tekniknya bisa diilustrasikan seperti berikut.</p>
<img src="./imgs/image-20250128224915710.png" alt="image-20250128224915710" style="zoom:50%;" />
<p><em><strong>Kalau untuk situs lain gimana?</strong></em></p>
<p>Caranya, kamu bisa <em>resolve</em> dulu IPnya menggunakan tool dig DNS, misalnya dengan dig milik Google.</p>
<img src="imgs/image-20211104142819468.png" alt="image-20211104142819468" style="zoom: 50%;" />
<p>Lalu tambahkan hasil record yang di dapat ke dalam <code>hosts</code> file:</p>
<img src="imgs/image-20211104142858365.png" alt="image-20211104142858365" style="zoom:50%;" />
<h3 id="ssh-socks-proxy">SSH SOCKS Proxy</h3>
<p>Penggunaan <code>host</code> file dan DoH memang bisa mem-<em>bypass</em> Website, tapi pihak ISP masih bisa mengetahui situs apa yang kita akses berdasarkan kepemilikan IP dan nama domain. Untuk menghindari ini, salah satu cara &lsquo;murah&rsquo; dan mudah yang gw rekomendasikan adalah menggunakan <em>virtual private server</em> dan memanfaatkan fitur SOCKS <a href="https://en.wikipedia.org/wiki/Proxy_server">proxy</a> bawaan OpenSSH. VPS ini bisa kalian beli atau deploy sendiri di platform cloud seperti Microsoft Azure.</p>
<blockquote>
<p>Jika dari pembaca ada yang masih berstatus pelajar, silahkan cek <a href="https://azure.microsoft.com/en-us/free/students/">tautan ini</a>.</p>
</blockquote>
<p>Untuk memanfaatkan proxy SOCKS dari SSH, perintahnya cukup simple:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ssh user@vps-ip -D <span class="m">1080</span> -N
</span></span></code></pre></div><ul>
<li><code>-D 1080</code>: Buka SOCKS proxy di port 1080</li>
<li><code>-N</code>: Tanpa interactive shell.</li>
</ul>
<p>Saat ini proxy SOCKS sudah tersedia pada local interface,  <code>127.0.0.1:1080</code>. Kita tinggal mengkonfigurasikan browser untuk menggunakan proxy tersebut.</p>
<figure>
    <img src="imgs/image-20211104161049841.png"
         alt="Firefox proxy settings"/> <figcaption>
            <p>Firefox proxy settings
            </p>
        </figcaption>
</figure>

<p>Mudah kan?</p>
<p>Untuk memudahkan proses switching proxy-unproxy, gw pakai ekstensi browser bernama <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">FoxyProxy</a>. Jadi, gw gak perlu buka-buka settingan browser lagi. Berikut tampilannya.</p>
<figure>
    <img src="imgs/image-20211104160902204.png"
         alt="FoxyProxy Toogle"/> <figcaption>
            <p>FoxyProxy Toogle
            </p>
        </figcaption>
</figure>

<p>Konfigurasinya? sama dengan settingan browser tadi!</p>
<figure>
    <img src="imgs/image-20211104090204141.png"
         alt="Konfigurasi SOCKS Proxy di Foxy Proxy"/> <figcaption>
            <p>Konfigurasi SOCKS Proxy di Foxy Proxy
            </p>
        </figcaption>
</figure>

<p>Untuk mengecek apakah proxy tersebut berjalan, cukup kunjungi situs: <code>ifconfig.co/json</code>. Sebagai contoh, hasil berikut menunjukkan IP publik gw sekarang adalah IP publik si VPS dan terdeteksi berada di US.</p>
<figure>
    <img src="imgs/image-20211104090145368.png"
         alt="Akses ifconfig.co dengan proxy"/> <figcaption>
            <p>Akses ifconfig.co dengan proxy
            </p>
        </figcaption>
</figure>

<p>Sampai sini seharusnya ISP hanya lihat komputer gw yang mengakses VPS dengan trafik seperti berikut.</p>
<figure>
    <img src="imgs/image-20211104152555436.png"
         alt="Web trafic yang terenkripsi melalui SSH tunnel"/> <figcaption>
            <p>Web trafic yang terenkripsi melalui SSH tunnel
            </p>
        </figcaption>
</figure>

<h2 id="conclusion">Conclusion</h2>
<p>Selain menggunakan VPN, setidaknya ada 3 metode yang bisa kamu coba untuk melakukan bypass web filter yang diterapkan oleh ISP langganan kamu,:</p>
<ul>
<li>Hosts file,</li>
<li>DoH,</li>
<li>SSH SOCKS Proxy.</li>
</ul>
<p>Menggunakan <code>hosts</code> file dan DoH hanya sebatas menghindari komputer kita dari &ldquo;penipuan&rdquo; alamat palsu oleh server DNS ISP. Sedangkan untuk &ldquo;SSH SOCKS Proxy + Doh&rdquo;, selain menghindari &ldquo;penipuan&rdquo;, tunnel yang dibuat juga mengenkripsi keseluruhan trafik web kita.</p>
<p>Hasil <em>testing</em> ketiganya, bukan <em>testing</em> sih tapi kesimpulannya bisa di-&ldquo;tabel&rdquo;-kan seperti berikut.</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th>Bypass Web filters</th>
<th>Hide the domain we visit from ISP?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hosts file</td>
<td>Probably yes</td>
<td>No</td>
</tr>
<tr>
<td>DoH</td>
<td>Yes, mostly</td>
<td>No</td>
</tr>
<tr>
<td>SSH SOCKS Proxy</td>
<td>Yes, mostly, but it depends.</td>
<td>Yes</td>
</tr>
</tbody>
</table>
</div>
<p><em><strong>Gimana kalau IP DoH resolvernya diblokir ISP/Kom*nfo?</strong></em></p>
<p>Kembali ke VPN deh. Hahaha.</p>
<p>Tapi sejauh ini sepertinya teknik blokir situs yang dipakai Kom*nfo dan ISP hanya sebatas di DNS hijack/redirection. Mungkin alasannya, jika yang diblokir sudah sampai IP, kemungkinan service-service internal mereka juga akan bermasalah, entah down atau semacamnya.</p>
<p>Ya, jadi gak perlu khawatir deh!</p>
<blockquote>
<p>Karena sudah kejadian di 2024. Lol.</p>
</blockquote>
<p><em><strong>Apakah dengan ini gw sudah bisa menjadi <del>seperti  bjoorka</del> anonymous user?</strong></em></p>
<p>Nope, karena private server yang gw pakai pun milik sesuatu yang lebih besar dari ISP dan dua-duanya mengumpulkan data juga.</p>
<p>Baiklah, sekian untuk postingan ini semoga bermanfaat. See you in the next post.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://https.cio.gov/faq/#what-does-https-do">https://https.cio.gov/faq/#what-does-https-do</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Deploy a Hugo site with Github Actions</title>
      <link>https://fahmifj.github.io/articles/hugo-github-actions/</link>
      <pubDate>Mon, 01 Nov 2021 14:51:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/hugo-github-actions/</guid>
      <description>Applying a small part of Continuous Deployment to your Hugo site</description>
      <content:encoded><![CDATA[<p>This is a continuation post from <a href="/blog/hugo-setup-and-deployment/">Hugo Setup and Deployment</a> in Hugo series.</p>
<p>In the previous post, we covered the basics of using Hugo. Not only the basics, we also learnt behind the scenes of SSG, getting your site published with GitHub Pages, and finally, we wrote a deployment script written in bash which is used to automatically update the blog&rsquo;s contents.</p>
<p>In this post, we&rsquo;ll focus more on the deployment side.</p>
<p>Actually, the deployment script we wrote is not an effective way to deploy our site. The script will generate lots of new HTML files on our machine, and instead of uploading only the files we modified, all these files will be uploaded to the Internet each time we wish to update our site. Now if you care about network bandwidth or things like SSD endurance, that&rsquo;s probably not a good thing.</p>
<p>Luckily, we can tackle that with GitHub Actions.</p>
<p>GitHub Actions basically does the same thing as our deployment script, but, instead of using our own machine to generate and push the HTML files, we&rsquo;ll let GitHub VM orDocker instances do it for us.</p>
<p>I know that there are a lot of similar tutorials out there, but let me finish what I&rsquo;ve started!</p>
<h4 id="goals">Goals</h4>
<p>The only goal of this post is:</p>
<ul>
<li>Automate Site Deployment using GitHub Actions (I&rsquo;ll try my best to explain about it!)</li>
</ul>
<h4 id="prerequisites">Prerequisites</h4>
<p>Prerequisites are still the same, they are:</p>
<ul>
<li>A GitHub account</li>
<li>Familiarity with CLI</li>
<li>Familiarity with Git.</li>
</ul>
<h2 id="a-little-clean-up">A Little Clean Up</h2>
<p>Let&rsquo;s start by reviewing the previous site structure, here&rsquo;s where we left it:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tree -a -L <span class="m">2</span> -I <span class="s2">&#34;\.git&#34;</span>
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── .gitmodules
</span></span><span class="line"><span class="cl">├── archetypes
</span></span><span class="line"><span class="cl">│   └── default.md
</span></span><span class="line"><span class="cl">├── config.yml
</span></span><span class="line"><span class="cl">├── content
</span></span><span class="line"><span class="cl">│   └── post
</span></span><span class="line"><span class="cl">├── data
</span></span><span class="line"><span class="cl">├── deploy.sh
</span></span><span class="line"><span class="cl">├── layouts
</span></span><span class="line"><span class="cl">├── public <span class="c1"># &lt;-- All files under this folder are hosted using GitHub Pages,</span>
</span></span><span class="line"><span class="cl">│   ├── 404.html
</span></span><span class="line"><span class="cl">│   ├── assets
</span></span><span class="line"><span class="cl">│   ├── categories
</span></span><span class="line"><span class="cl">│   ├── en
</span></span><span class="line"><span class="cl">│   ├── fa
</span></span><span class="line"><span class="cl">│   ├── fr
</span></span><span class="line"><span class="cl">│   ├── index.html
</span></span><span class="line"><span class="cl">│   ├── index.json
</span></span><span class="line"><span class="cl">│   ├── index.xml
</span></span><span class="line"><span class="cl">│   ├── page
</span></span><span class="line"><span class="cl">│   ├── post
</span></span><span class="line"><span class="cl">│   ├── robots.txt
</span></span><span class="line"><span class="cl">│   ├── series
</span></span><span class="line"><span class="cl">│   ├── sitemap.xml
</span></span><span class="line"><span class="cl">│   └── tags
</span></span><span class="line"><span class="cl">├── resources
</span></span><span class="line"><span class="cl">│   └── _gen
</span></span><span class="line"><span class="cl">├── static
</span></span><span class="line"><span class="cl">└── themes
</span></span><span class="line"><span class="cl">    └── PaperMod
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">20</span> directories, <span class="m">10</span> files
</span></span></code></pre></div><p>We&rsquo;ll now ignore the public folder and remove all of its content including the git repository inside it because this will be handled by GitHub Actions later.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ rm ./public/* -r f
</span></span><span class="line"><span class="cl">$ rm ./public/.git -rf
</span></span></code></pre></div><p>If you happen to use the <code>public</code> folder as a submodule, remove the following lines from <code>.git/config</code> and  <code>.gitmodules</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[submodule &#34;public&#34;]
</span></span><span class="line"><span class="cl">        url = https://github.com/your-username/my-blog.git
</span></span><span class="line"><span class="cl">        active = true
</span></span></code></pre></div><p>Clean any cached content from the <code>public</code> folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git rm --cached ./public -f
</span></span></code></pre></div><p>Then let&rsquo;s create another GitHub repository with the format <code>your-username.github.io</code>, because we&rsquo;re going to use this repo as the remote repository of our site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git remote add origin https://github.com/your-username/your-username.github.io.git
</span></span></code></pre></div><p>For the <code>config.yaml</code>, change the baseURL value with:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">baseURL</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://your-username.github.io/&#34;</span><span class="w">
</span></span></span></code></pre></div><h2 id="add-the-theme-as-submodule">Add the Theme as Submodule</h2>
<p>If you happen to not using theme as submodule previously, this time we will.</p>
<p>Run the following command to add the PaperMod theme we cloned previously as a submodule of our site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
</span></span></code></pre></div><p>If you don&rsquo;t use the same theme, simply replace the url and directory parts to match yours.</p>
<h2 id="add-github-actions">Add GitHub Actions</h2>
<p>In the deployment script, we&rsquo;ve automated several things: site build, commit, and push our site to GitHub. We can call the execution of this script as a <strong>workflow</strong> that runs a single <strong>job</strong>, it is to deploy our site. Each command executed within the deployment script (build, commit, push) can be referred as a <strong>step</strong>.</p>
<p>GitHub Actions are basically the advanced version of the deployment script we created. It&rsquo;s event-driven, which means we can set a specific event to trigger the workflow. In this case, we&rsquo;ll create an event that will trigger the site deployment each time we push a new commit to the main branch.</p>
<p>A workflow file for GitHub Actions must be written in YAML syntax, and it&rsquo;s placed under a special directory called <code>.github/workflows/[here].yml</code>, so let&rsquo;s create the folder first inside our site repository.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ mkdir -p ./.github/workflows
</span></span></code></pre></div><p>We&rsquo;ll save the following codes under the workflow directory with a name <code>gh-pages.yml</code> (<code>./.github/workflows/gh-pages.yml</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">github pages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># the event</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">main </span><span class="w"> </span><span class="c"># Set a branch to deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-18.04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  </span><span class="c"># Fetch Hugo themes (true OR recursive)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    </span><span class="c"># Fetch all history for .GitInfo and .Lastmod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2 </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;latest&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify --cleanDestinationDir</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">github_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.GITHUB_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span></code></pre></div><p>You can study the code yourself, because I&rsquo;m not the one who created it 😅. But, to make sure that the public folder always get cleaned first before build, I added the <code>--cleanDestinationDir</code> option.</p>
<p>Let&rsquo;s commit this workflow and push it to GitHub.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git add ./.github/workflows/gh-pages.yml
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Add gh-pages.yml&#34;</span>
</span></span><span class="line"><span class="cl">$ git push -u origin main
</span></span></code></pre></div><h2 id="trigger-the-workflow">Trigger the Workflow!</h2>
<p>We can create a new post, then add some text to it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hugo new post/test-gh-actions.md
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;Test GH Action&#39;</span> &gt;&gt; content/post/test-gh-actions.md
</span></span></code></pre></div><p>Finally, commit the change and push it to your repository to trigger the workflow</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Trigger build&#34;</span>
</span></span><span class="line"><span class="cl">$ git push -u origin main
</span></span></code></pre></div><p>To observe the deployment process/workflow, we can navigate to the site repository and click on the Actions menu (<code>https://github.com/your-username/your-username.github.io/actions</code>).</p>
<p>That&rsquo;s it!</p>
<h2 id="my-current-deployment">My Current Deployment</h2>
<p>A bit off topic, but I&rsquo;ll show you my current deployment process.</p>
<p>My deployment process is a little bit different. This is because I&rsquo;ve separated my blog into two: blog-core (raw markdown) and the full static HTML site (this site). The blog-core is a private repo whereas the full static HTML is a public repository. The blog-core repo contains my draft, notes, and other (a lot of them), which is only available for me locally because of <code>.gitignore</code>.</p>
<p>When a new commit is pushed to the blog-core, GitHub Actions will be triggered to generate the static HTML files. The newly generated HTML files are then pushed to the public repo. I had to include my secret token in the blog-core so that GitHub Actions could use the token to authenticate itself to do some modification on the public repo.</p>
<p><div class="img-container"><img src="imgs/image-20211102111943965.png" alt="image-20211102111943965"  /></div>
</p>
<p>Note: these are not the actual commands.</p>
<p><del>I&rsquo;ll separate this section in a dedicated post later! nevermind lol</del></p>
<p>Well, it&rsquo;s not in detail, but it should give you an idea of how it works. See you in another post.</p>
<blockquote>
<p>I found the blog post that explains about this: <a href="https://victoria.dev/blog/two-ways-to-deploy-a-public-github-pages-site-from-a-private-hugo-repository/">Deploy a Public Github Pages site from a Private Hugo Repository</a>. And here&rsquo;s the Github Actions that I use <a href="https://github.com/victoriadrake/hugo-remote">Hugo Remote</a>.</p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Get rid of the Gtk-WARNING on gedit</title>
      <link>https://fahmifj.github.io/articles/hide-gtk-warning-gedit/</link>
      <pubDate>Wed, 18 Aug 2021 04:02:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/articles/hide-gtk-warning-gedit/</guid>
      <description>Actually, I hide it</description>
      <content:encoded><![CDATA[<p>Recently, I noticed if I try to edit something using gedit, the following warning always arises.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">(gedit:10160): Gtk-WARNING **: 17:22:36.887: Calling org.xfce.Session.Manager.Inhibit failed: GDBus.Error:org.freedesktop.DBus.Error.UnknownMethod: No such method “Inhibit”
</span></span></code></pre></div><p>The warning message only appears on my Ubuntu and Kali Linux. I&rsquo;ve tried several solutions I could find, but the warning persists.</p>
<p>So I came up with a solution where I use the error redirection to suppress the warning message.</p>
<p>First, I&rsquo;ll create a <code>gedit</code> &ldquo;wrapper&rdquo; in a resolvable path such as <code>/usr/bin</code> or <code>/usr/local/bin</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat /usr/bin/gedit-null 
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/usr/bin/gedit <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span> 2&gt;/dev/null
</span></span></code></pre></div><p>Command explanations:</p>
<ul>
<li><code>$@</code> will take all the parameters passed to the wrapper (<code>/usr/bin/gedit-null</code>), and the wrapper will pass them to the <code>gedit</code> executable/binary.</li>
<li><code>2&gt;/dev/null</code> hide the warning message.</li>
</ul>
<p>And then, just add alias for <code>gedit</code> that points to the wrapper (<code>gedit-null</code>) in <code>.bashrc</code> or <code>.zshrc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;alias gedit=&#34;gedit-null&#34;&#39;</span>  &gt;&gt; ~/.zshrc
</span></span><span class="line"><span class="cl">$ <span class="nb">source</span> ~/.zshrc
</span></span></code></pre></div><p>Well that&rsquo;s it.</p>
<p><strong>[Update]</strong></p>
<p>One of my visitors messed up his/her shell prompt because I put the wrong symbol on this command 😅</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;alias gedit=&#34;gedit-null&#34;&#39;</span>  &gt; ~/.zshrc
</span></span></code></pre></div><p>where it should be.</p>
<pre tabindex="0"><code>echo &#39;alias gedit=&#34;gedit-null&#34;&#39;  &gt;&gt; ~/.zshrc
</code></pre><p>In case some you have the same problem, I made a <a href="https://gist.githubusercontent.com/fahmifj/a01d5f2b804478223279392eb2cc78ad/raw/f45c976d4f2772f5f3fc114b316ecdbe18d80d00/.zshrc">gist</a> that contains the default content of <code>.zshrc</code> file so you can restore your shell prompt back to its default.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
